<?xml version="1.0" encoding="UTF-8"?>
<System>
   <enumeration id="d1e520">
      <enum description="Disabled. Asynchronous APB bridge is disabled." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Asynchronous APB bridge is enabled." name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e1850">
      <enum description="No POR detected" name="NO_POR_DETECTED" value="0"/>
      <enum description="POR detected. Writing a one clears this reset."
            name="POR_DETECTED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e1896">
      <enum description="No reset event detected." name="NO_RESET_DETECTED" value="0"/>
      <enum description="Reset detected. Writing a one clears this reset."
            name="RESET_DETECTED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e1942">
      <enum description="No WDT reset detected" name="NO_WDT_RESET_DETECTED" value="0"/>
      <enum description="WDT reset detected. Writing a one clears this reset."
            name="WDT_RESET_DETECTED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e1988">
      <enum description="No BOD reset detected" name="NO_BOD_RESET_DETECTED" value="0"/>
      <enum description="BOD reset detected. Writing a one clears this reset."
            name="BOD_RESET_DETECTED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e2034">
      <enum description="No System reset detected" name="NO_SYSTEM_RESET_DETECTED"
            value="0"/>
      <enum description="System reset detected. Writing a one clears this reset."
            name="SYSTEM_RESET_DETECTED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e3368">
      <enum description="FRO 12 MHz (fro_12m)" name="FRO_12_MHZ" value="0"/>
      <enum description="CLKIN (clk_in)" name="CLKIN" value="0x1"/>
      <enum description="Watchdog oscillator (wdt_clk)" name="WATCHDOG_OSCILLATOR"
            value="0x2"/>
      <enum description="FRO 96 or 48 MHz (fro_hf)" name="FRO_HF" value="0x3"/>
   </enumeration>
   <enumeration id="d1e3466">
      <enum description="MAINCLKSELA. Use the clock source selected in MAINCLKSELA register."
            name="MAINCLKSELA"
            value="0"/>
      <enum description="System PLL output (pll_clk)" name="SYSTEM_PLL_OUTPUT" value="0x2"/>
      <enum description="RTC oscillator 32 kHz output (32k_clk)" name="RTC_OSC_OUTPUT"
            value="0x3"/>
   </enumeration>
   <enumeration id="d1e3552">
      <enum description="Main clock (main_clk)" name="MAIN_CLOCK" value="0"/>
      <enum description="CLKIN (clk_in)" name="CLKIN" value="0x1"/>
      <enum description="Watchdog oscillator (wdt_clk)" name="WATCHDOG_OSCILLATOR"
            value="0x2"/>
      <enum description="FRO 96 or 48 MHz (fro_hf)" name="FRO_HF" value="0x3"/>
      <enum description="PLL output (pll_clk)" name="SYSTEM_PLL_OUTPUT" value="0x4"/>
      <enum description="USB PLL clock (usb_pll_clk)" name="USB_PLL_CLOCK" value="0x5"/>
      <enum description="Audio PLL clock (audio_pll_clk)" name="AUDIO_PLL_OUTPUT"
            value="0x6"/>
      <enum description="RTC oscillator 32 kHz output (32k_clk)" name="RTC_OSC_OUTPUT"
            value="0x7"/>
   </enumeration>
   <enumeration id="d1e3699">
      <enum description="FRO 12 MHz (fro_12m)" name="FRO_12_MHZ" value="0"/>
      <enum description="CLKIN (clk_in)" name="CLKIN" value="0x1"/>
      <enum description="Watchdog oscillator (wdt_clk)" name="WATCHDOG_OSCILLATOR"
            value="0x2"/>
      <enum description="RTC oscillator 32 kHz output (32k_clk)" name="RTC_OSC_OUTPUT"
            value="0x3"/>
      <enum description="None, this may be selected in order to reduce power when no output is needed."
            name="NONE"
            value="0x7"/>
   </enumeration>
   <enumeration id="d1e3809">
      <enum description="FRO 12 MHz (fro_12m)" name="FRO_12_MHZ" value="0"/>
      <enum description="CLKIN (clk_in)" name="CLKIN" value="0x1"/>
      <enum description="None, this may be selected in order to reduce power when no output is needed."
            name="NONE"
            value="0x7"/>
   </enumeration>
   <enumeration id="d1e3895">
      <enum description="Main clock (main_clk)" name="MAIN_CLOCK" value="0"/>
      <enum description="System PLL output (pll_clk)" name="SYSTEM_PLL_OUTPUT" value="0x1"/>
      <enum description="USB PLL clock (usb_pll_clk)" name="USB_PLL_OUTPUT" value="0x2"/>
      <enum description="FRO 96 or 48 MHz (fro_hf)" name="FRO_HF" value="0x3"/>
      <enum description="Audio PLL clock (audio_pll_clk)" name="AUDIO_PLL_OUTPUT"
            value="0x4"/>
      <enum description="None, this may be selected in order to reduce power when no output is needed."
            name="NONE"
            value="0x7"/>
   </enumeration>
   <enumeration id="d1e4019">
      <enum description="FRO 96 or 48 MHz (fro_hf)" name="FRO_HF" value="0"/>
      <enum description="System PLL output (pll_clk)" name="SYSTEM_PLL_OUTPUT" value="0x1"/>
      <enum description="USB PLL clock (usb_pll_clk)" name="USB_PLL_CLOCK" value="0x2"/>
      <enum description="Audio PLL clock (audio_pll_clk)" name="AUDIO_PLL_CLOCK"
            value="0x3"/>
      <enum description="None, this may be selected in order to reduce power when no output is needed."
            name="NONE"
            value="0x7"/>
   </enumeration>
   <enumeration id="d1e4129">
      <enum description="FRO 96 or 48 MHz (fro_hf)" name="FRO_HF" value="0"/>
      <enum description="System PLL output (pll_clk)" name="SYSTEM_PLL_OUTPUT" value="0x1"/>
      <enum description="USB PLL clock (usb_pll_clk)" name="USB_PLL_CLOCK" value="0x2"/>
      <enum description="None, this may be selected in order to reduce power when no output is needed."
            name="NONE"
            value="0x7"/>
   </enumeration>
   <enumeration id="d1e4227">
      <enum description="Main clock (main_clk)" name="MAIN_CLOCK" value="0"/>
      <enum description="System PLL output (pll_clk)" name="SYSTEM_PLL_OUTPUT" value="0x1"/>
      <enum description="USB PLL clock (usb_pll_clk)" name="USB_PLL_CLOCK" value="0x2"/>
      <enum description="None, this may be selected in order to reduce power when no output is needed."
            name="NONE"
            value="0x7"/>
   </enumeration>
   <enumeration id="d1e4331">
      <enum description="FRO 12 MHz (fro_12m)" name="FRO_12_MHZ" value="0"/>
      <enum description="FRO HF DIV (fro_hf_div)" name="FRO_HF_DIV" value="0x1"/>
      <enum description="Audio PLL clock (audio_pll_clk)" name="AUDIO_PLL_OUTPUT"
            value="0x2"/>
      <enum description="MCLK pin input, when selected in IOCON (mclk_in)"
            name="MCLK_INPUT"
            value="0x3"/>
      <enum description="FRG clock, the output of the fractional rate generator (frg_clk)"
            name="FRG_CLOCK_OUTPUT"
            value="0x4"/>
      <enum description="None, this may be selected in order to reduce power when no output is needed."
            name="NONE"
            value="0x7"/>
   </enumeration>
   <enumeration id="d1e4454">
      <enum description="FRO HF DIV (fro_hf_div)" name="FRO_HF_DIV" value="0"/>
      <enum description="Audio PLL clock (audio_pll_clk)" name="AUDIO_PLL_OUTPUT"
            value="0x1"/>
      <enum description="None, this may be selected in order to reduce power when no output is needed."
            name="NONE"
            value="0x7"/>
   </enumeration>
   <enumeration id="d1e4540">
      <enum description="Main clock (main_clk)" name="MAIN_CLOCK" value="0"/>
      <enum description="System PLL output (pll_clk)" name="SYSTEM_PLL_OUTPUT" value="0x1"/>
      <enum description="FRO 12 MHz (fro_12m)" name="FRO_12_MHZ" value="0x2"/>
      <enum description="FRO 96 or 48 MHz (fro_hf)" name="FRO_HF" value="0x3"/>
      <enum description="None, this may be selected in order to reduce power when no output is needed."
            name="NONE"
            value="0x7"/>
   </enumeration>
   <enumeration id="d1e4651">
      <enum description="FRO 12 MHz (fro_12m)" name="FRO_12_MHZ" value="0"/>
      <enum description="FRO HF DIV (fro_hf_div)" name="FRO_HF_DIV" value="0x1"/>
      <enum description="Audio PLL clock (audio_pll_clk)" name="AUDIO_PLL_OUTPUT"
            value="0x2"/>
      <enum description="MCLK pin input, when selected in IOCON (mclk_in)"
            name="MCLK_INPUT"
            value="0x3"/>
      <enum description="None, this may be selected in order to reduce power when no output is needed."
            name="NONE"
            value="0x7"/>
   </enumeration>
   <enumeration id="d1e4761">
      <enum description="Main clock (main_clk)" name="MAIN_CLOCK" value="0"/>
      <enum description="System PLL output (pll_clk)" name="SYSTEM_PLL_OUTPUT" value="0x1"/>
      <enum description="FRO 96 or 48 MHz (fro_hf)" name="FRO_HF" value="0x2"/>
      <enum description="Audio PLL clock (audio_pll_clk)" name="AUDIO_PLL_OUTPUT"
            value="0x3"/>
      <enum description="None, this may be selected in order to reduce power when no output is needed."
            name="NONE"
            value="0x7"/>
   </enumeration>
   <enumeration id="d1e4871">
      <enum description="Main clock (main_clk)" name="MAIN_CLOCK" value="0"/>
      <enum description="LCDCLKIN (LCDCLK_EXT)" name="LCDCLKIN" value="0x1"/>
      <enum description="FRO 96 or 48 MHz (fro_hf)" name="FRO_HF" value="0x2"/>
      <enum description="None, this may be selected in order to reduce power when no output is needed."
            name="NONE"
            value="0x3"/>
   </enumeration>
   <enumeration id="d1e4969">
      <enum description="Main clock (main_clk)" name="MAIN_CLOCK" value="0"/>
      <enum description="System PLL output (pll_clk)" name="SYSTEM_PLL_OUTPUT" value="0x1"/>
      <enum description="USB PLL clock (usb_pll_clk)" name="USB_PLL_CLOCK" value="0x2"/>
      <enum description="FRO 96 or 48 MHz (fro_hf)" name="FRO_HF" value="0x3"/>
      <enum description="Audio PLL clock (audio_pll_clk)" name="AUDIO_PLL_OUTPUT"
            value="0x4"/>
      <enum description="None, this may be selected in order to reduce power when no output is needed."
            name="NONE"
            value="0x7"/>
   </enumeration>
   <enumeration id="d1e7024">
      <enum description="Instruction fetches from flash are not buffered. Every fetch request from the CPU results in a read of the flash memory. This setting may use significantly more power than when buffering is enabled."
            name="NO_BUFFER"
            value="0"/>
      <enum description="One buffer is used for all instruction fetches." name="ONE_BUFFER"
            value="0x1"/>
      <enum description="All buffers may be used for instruction fetches."
            name="ALL_BUFFERS"
            value="0x2"/>
   </enumeration>
   <enumeration id="d1e7082">
      <enum description="Data accesses from flash are not buffered. Every data access from the CPU results in a read of the flash memory."
            name="NOT_BUFFERED"
            value="0"/>
      <enum description="One buffer is used for all data accesses." name="ONE_BUFFER"
            value="0x1"/>
      <enum description="All buffers may be used for data accesses." name="ALL_BUFFERS"
            value="0x2"/>
   </enumeration>
   <enumeration id="d1e7140">
      <enum description="Flash acceleration is disabled. Every flash read (including those fulfilled from a buffer) takes FLASHTIM + 1 system clocks. This allows more determinism at a cost of performance."
            name="DISABLED"
            value="0"/>
      <enum description="Flash acceleration is enabled. Performance is enhanced, dependent on other FLASHCFG settings."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e7186">
      <enum description="No instruction prefetch is performed." name="NO_PREFETCH"
            value="0"/>
      <enum description="If the FETCHCFG field is not 0, the next flash line following the current execution address is automatically prefetched if it is not already buffered."
            name="PREFETCH"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e7232">
      <enum description="Any previously initiated prefetch will be completed."
            name="PREFETCH_COMPLETED"
            value="0"/>
      <enum description="Any previously initiated prefetch will be aborted, and the next flash line following the current execution address will be prefetched if not already buffered."
            name="PREFETCH_ABORT"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e7279">
      <enum description="1 system clock flash access time (for system clock rates up to 12 MHz)."
            name="N_1_CLOCK_CYCLE"
            value="0"/>
      <enum description="2 system clocks flash access time (for system clock rates up to 30 MHz)."
            name="N_2_CLOCK_CYCLES"
            value="0x1"/>
      <enum description="3 system clocks flash access time (for system clock rates up to 60 MHz)."
            name="N_3_CLOCK_CYCLES"
            value="0x2"/>
      <enum description="4 system clocks flash access time (for system clock rates up to 85 MHz)."
            name="N_4_CLOCK_CYCLES"
            value="0x3"/>
      <enum description="5 system clocks flash access time (for system clock rates up to 100 MHz)."
            name="N_5_CLOCK_CYCLES"
            value="0x4"/>
   </enumeration>
   <enumeration id="d1e8741">
      <enum description="CCO Clock signal goes through post divider." name="DISABLED"
            value="0"/>
      <enum description="CCO Clock signal goes directly to output(s).." name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e8787">
      <enum description="CCO clock is sent to post dividers.." name="DISABLED" value="0"/>
      <enum description="PLL input clock is sent to post dividers.." name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e8981">
      <enum description="Bypass disabled. PLL CCO is sent to the PLL post-dividers."
            name="DISABLED"
            value="0"/>
      <enum description="Bypass enabled. PLL input clock is sent directly to the PLL output (default)."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e9064">
      <enum description="Disabled. The PLL output divider (P divider) is used to create the PLL output."
            name="DISABLED"
            value="0"/>
      <enum description="Enabled. The PLL output divider (P divider) is bypassed, the PLL CCO output is used as the PLL output."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e9431">
      <enum description="Bypass disabled. PLL CCO is sent to the PLL post-dividers."
            name="DISABLED"
            value="0"/>
      <enum description="Bypass enabled. PLL input clock is sent directly to the PLL output (default)."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e9514">
      <enum description="Disabled. The PLL output divider (P divider) is used to create the PLL output."
            name="DISABLED"
            value="0"/>
      <enum description="Enabled. The PLL output divider (P divider) is bypassed, the PLL CCO output is used as the PLL output."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e13356">
      <enum description="Level 0: 1.5 V" name="LEVEL0" value="0"/>
      <enum description="Level 1: 1.85 V" name="LEVEL1" value="0x1"/>
      <enum description="Level 2: 2.0 V" name="LEVEL2" value="0x2"/>
      <enum description="Level 3: 2.3 V" name="LEVEL3" value="0x3"/>
   </enumeration>
   <enumeration id="d1e13426">
      <enum description="Disable reset function." name="DISABLE" value="0"/>
      <enum description="Enable reset function." name="ENABLE" value="0x1"/>
   </enumeration>
   <enumeration id="d1e13472">
      <enum description="Level 0: 2.05 V" name="LEVEL0" value="0"/>
      <enum description="Level 1: 2.45 V" name="LEVEL1" value="0x1"/>
      <enum description="Level 2: 2.75 V" name="LEVEL2" value="0x2"/>
      <enum description="Level 3: 3.05 V" name="LEVEL3" value="0x3"/>
   </enumeration>
   <enumeration id="d1e13542">
      <enum description="Disable interrupt function." name="DISABLE" value="0"/>
      <enum description="Enable interrupt function." name="ENABLE" value="0x1"/>
   </enumeration>
   <enumeration id="d1e13684">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e13803">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e13873">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e13919">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e13965">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e14012">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e14058">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e14132">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e14251">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e14321">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e14367">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e14413">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e14460">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e14506">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e14580">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e14699">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e14769">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e14815">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e14861">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e14908">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e14954">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e15028">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e15147">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e15217">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e15263">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e15309">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e15356">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e15402">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e15476">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e15595">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e15665">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e15711">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e15757">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e15804">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e15850">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e15925">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e16044">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e16114">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e16160">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e16206">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e16253">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e16299">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e16373">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e16492">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e16562">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e16608">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e16654">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e16701">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e16747">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e16821">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e16940">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e17010">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e17056">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e17102">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e17149">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e17195">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e17269">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e17388">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e17458">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e17504">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e17550">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e17597">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e17643">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e17717">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e17836">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e17906">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e17952">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e17998">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e18045">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e18091">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e18165">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e18284">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e18354">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e18400">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e18446">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e18493">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e18568">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e18687">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e18757">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e18803">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e18849">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e18896">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e18942">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e19016">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e19135">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e19205">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e19251">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e19297">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e19344">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e19390">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e19464">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e19583">
      <enum description="I2C mode." name="I2C_MODE" value="0"/>
      <enum description="GPIO mode." name="GPIO_MODE" value="0x1"/>
   </enumeration>
   <enumeration id="d1e19629">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e19675">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e19721">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e19768">
      <enum description="Low drive. Output drive sink is 4 mA. This is sufficient for standard and fast mode I2C."
            name="LOW"
            value="0"/>
      <enum description="High drive. Output drive sink is 20 mA. This is needed for Fast Mode Plus I 2C. Refer to the appropriate specific device data sheet for details."
            name="HIGH"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e19814">
      <enum description="Enabled. I2C 50 ns glitch filter enabled." name="ENABLED"
            value="0"/>
      <enum description="Disabled. I2C 50 ns glitch filter disabled." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e19888">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e20007">
      <enum description="I2C mode." name="I2C_MODE" value="0"/>
      <enum description="GPIO mode." name="GPIO_MODE" value="0x1"/>
   </enumeration>
   <enumeration id="d1e20053">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e20099">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e20145">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e20192">
      <enum description="Low drive. Output drive sink is 4 mA. This is sufficient for standard and fast mode I2C."
            name="LOW"
            value="0"/>
      <enum description="High drive. Output drive sink is 20 mA. This is needed for Fast Mode Plus I 2C. Refer to the appropriate specific device data sheet for details."
            name="HIGH"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e20238">
      <enum description="Enabled. I2C 50 ns glitch filter enabled." name="ENABLED"
            value="0"/>
      <enum description="Disabled. I2C 50 ns glitch filter disabled." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e20312">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e20431">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e20501">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e20547">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e20593">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e20640">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e20714">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e20833">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e20903">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e20949">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e20995">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e21042">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e21117">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e21236">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e21306">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e21352">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e21398">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e21445">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e21491">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e21565">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e21684">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e21754">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e21800">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e21846">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e21893">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e21939">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e22013">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e22132">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e22202">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e22248">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e22294">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e22341">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e22387">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e22461">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e22580">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e22650">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e22696">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e22742">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e22789">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e22835">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e22909">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e23028">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e23098">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e23144">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e23190">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e23237">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e23283">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e23357">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e23476">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e23546">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e23592">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e23638">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e23685">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e23731">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e23806">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e23925">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e23995">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e24041">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e24087">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e24134">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e24208">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e24327">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e24397">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e24443">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e24489">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e24536">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e24582">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e24656">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e24775">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e24845">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e24891">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e24937">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e24984">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e25030">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e25104">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e25223">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e25293">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e25339">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e25385">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e25432">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e25478">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e25552">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e25671">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e25741">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e25787">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e25833">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e25880">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e25926">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e26000">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e26119">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e26189">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e26235">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e26281">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e26328">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e26374">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e26449">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e26568">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e26638">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e26684">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e26730">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e26777">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e26823">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e26897">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e27016">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e27086">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e27132">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e27178">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e27225">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e27271">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e27345">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e27464">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e27534">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e27580">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e27626">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e27673">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e27747">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e27866">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e27936">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e27982">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e28028">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e28075">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e28149">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e28268">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e28338">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e28384">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e28430">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e28477">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e28523">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e28597">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e28716">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e28786">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e28832">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e28878">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e28925">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e28971">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e29046">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e29165">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e29235">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e29281">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e29327">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e29374">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e29420">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e29494">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e29613">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e29683">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e29729">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e29775">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e29822">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e29868">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e29942">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e30061">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e30131">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e30177">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e30223">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e30270">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e30316">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e30390">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e30509">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e30579">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e30625">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e30671">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e30718">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e30764">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e30838">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e30957">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e31027">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e31073">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e31119">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e31166">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e31212">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e31286">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e31405">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e31475">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e31521">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e31567">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e31614">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e31660">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e31735">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e31854">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e31924">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e31970">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e32016">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e32063">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e32109">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e32183">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e32302">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e32372">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e32418">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e32464">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e32511">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e32557">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e32631">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e32750">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e32820">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e32866">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e32912">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e32959">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e33005">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e33079">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e33198">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e33268">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e33314">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e33360">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e33407">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e33453">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e33527">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e33646">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e33716">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e33762">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e33808">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e33855">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e33901">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e33975">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e34094">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e34164">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e34210">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e34256">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e34303">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e34349">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e34424">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e34543">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e34613">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e34659">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e34705">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e34752">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e34798">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e34872">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e34991">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e35061">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e35107">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e35153">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e35200">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e35246">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e35320">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e35439">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e35509">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e35555">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e35601">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e35648">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e35694">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e35768">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e35887">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e35957">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e36003">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e36049">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e36096">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e36142">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e36216">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e36335">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e36405">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e36451">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e36497">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e36544">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e36590">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e36664">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e36783">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e36853">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e36899">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e36945">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e36992">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e37038">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e37113">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e37232">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e37302">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e37348">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e37394">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e37441">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e37487">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e37561">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e37680">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e37750">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e37796">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e37842">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e37889">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e37935">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e38009">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e38128">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e38198">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e38244">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e38290">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e38337">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e38383">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e38457">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e38576">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e38646">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e38692">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e38738">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e38785">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e38831">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e38905">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e39024">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e39094">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e39140">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e39186">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e39233">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e39279">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e39353">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e39472">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e39542">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e39588">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e39634">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e39681">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e39727">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e39802">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e39921">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e39991">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e40037">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e40083">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e40130">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e40176">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e40250">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e40369">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e40439">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e40485">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e40531">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e40578">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e40624">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e40698">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e40817">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e40887">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e40933">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e40979">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e41026">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e41072">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e41146">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e41265">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e41335">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e41381">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e41427">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e41474">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e41520">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e41594">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e41713">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e41783">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e41829">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e41875">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e41922">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e41968">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e42042">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e42161">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e42231">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e42277">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e42323">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e42370">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e42445">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e42564">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e42634">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e42680">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e42726">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e42773">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e42847">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e42966">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e43036">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e43082">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e43128">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e43175">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e43221">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e43295">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e43414">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e43484">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e43530">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e43576">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e43623">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e43669">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e43743">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e43862">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e43932">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e43978">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e44024">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e44071">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e44117">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e44191">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e44310">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e44380">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e44426">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e44472">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e44519">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e44565">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e44639">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e44758">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e44828">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e44874">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e44920">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e44967">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e45013">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e45088">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e45207">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e45277">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e45323">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e45369">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e45416">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e45462">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e45536">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e45655">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e45725">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e45771">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e45817">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e45864">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e45910">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e45984">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e46103">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e46173">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e46219">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e46265">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e46312">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e46358">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e46432">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e46551">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e46621">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e46667">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e46713">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e46760">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e46806">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e46880">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e46999">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e47069">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e47115">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e47161">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e47208">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e47254">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e47328">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e47447">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e47517">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e47563">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e47609">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e47656">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e47702">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e47777">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e47896">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e47966">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e48012">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e48058">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e48105">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e48151">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e48225">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e48344">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e48414">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e48460">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e48506">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e48553">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e48599">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e48673">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e48792">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e48862">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e48908">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e48954">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e49001">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e49047">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e49121">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e49240">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e49310">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e49356">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e49402">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e49449">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e49495">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e49569">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e49688">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e49758">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e49804">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e49850">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e49897">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e49943">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e50017">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e50136">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e50206">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e50252">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e50298">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e50345">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e50391">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e50466">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e50585">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e50655">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e50701">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e50747">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e50794">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e50840">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e50914">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e51033">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e51103">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e51149">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e51195">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e51242">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e51288">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e51362">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e51481">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e51551">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e51597">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e51643">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e51690">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e51736">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e51810">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e51929">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e51999">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e52045">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e52091">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e52138">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e52184">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e52258">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e52377">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e52447">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e52493">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e52539">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e52586">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e52632">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e52706">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e52825">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e52895">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e52941">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e52987">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e53034">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e53080">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e53155">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e53274">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e53344">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e53390">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e53436">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e53483">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e53529">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e53603">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e53722">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e53792">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e53838">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e53884">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e53931">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e53977">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e54051">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e54170">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e54240">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e54286">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e54332">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e54379">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e54425">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e54499">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e54618">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e54688">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e54734">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e54780">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e54827">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e54873">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e54947">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e55066">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e55136">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e55182">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e55228">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e55275">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e55321">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e55395">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e55514">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e55584">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e55630">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e55676">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e55723">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e55769">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e55844">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e55963">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e56033">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e56079">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e56125">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e56172">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e56218">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e56292">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e56411">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e56481">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e56527">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e56573">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e56620">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e56666">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e56740">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e56859">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e56929">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e56975">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e57021">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e57068">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e57114">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e57188">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e57307">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e57377">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e57423">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e57469">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e57516">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e57562">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e57636">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e57755">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e57825">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e57871">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e57917">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e57964">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e58010">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e58084">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e58203">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e58273">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e58319">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e58365">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e58412">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e58458">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e58533">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e58652">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e58722">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e58768">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e58814">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e58861">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e58907">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e58981">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e59100">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e59170">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e59216">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e59262">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e59309">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e59355">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e59429">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e59548">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e59618">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e59664">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e59710">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e59757">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e59803">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e59877">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e59996">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e60066">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e60112">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e60158">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e60205">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e60251">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e60325">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e60444">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e60514">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e60560">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e60606">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e60653">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e60699">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e60773">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e60892">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e60962">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e61008">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e61054">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e61101">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e61147">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e61222">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e61341">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e61411">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e61457">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e61503">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e61550">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e61596">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e61670">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e61789">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e61859">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e61905">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e61951">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e61998">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e62044">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e62118">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e62237">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e62307">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e62353">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e62399">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e62446">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e62492">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e62566">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e62685">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e62755">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e62801">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e62847">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e62894">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e62940">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e63014">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e63133">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e63203">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e63249">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e63295">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e63342">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e63388">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e63462">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e63581">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e63651">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e63697">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e63743">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e63790">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e63836">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e63911">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e64030">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e64100">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e64146">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e64192">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e64239">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e64285">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e64359">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e64478">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e64548">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e64594">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e64640">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e64687">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e64733">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e64807">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e64926">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e64996">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e65042">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e65088">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e65135">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e65181">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e65255">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e65374">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e65444">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e65490">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e65536">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e65583">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e65629">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e65703">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e65822">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e65892">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e65938">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e65984">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e66031">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e66105">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e66224">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e66294">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e66340">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e66386">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e66433">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e66508">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e66627">
      <enum description="I2C mode." name="I2C_MODE" value="0"/>
      <enum description="GPIO mode." name="GPIO_MODE" value="0x1"/>
   </enumeration>
   <enumeration id="d1e66673">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e66719">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e66765">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e66812">
      <enum description="Low drive. Output drive sink is 4 mA. This is sufficient for standard and fast mode I2C."
            name="LOW"
            value="0"/>
      <enum description="High drive. Output drive sink is 20 mA. This is needed for Fast Mode Plus I 2C. Refer to the appropriate specific device data sheet for details."
            name="HIGH"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e66858">
      <enum description="Enabled. I2C 50 ns glitch filter enabled." name="ENABLED"
            value="0"/>
      <enum description="Disabled. I2C 50 ns glitch filter disabled." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e66932">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e67051">
      <enum description="I2C mode." name="I2C_MODE" value="0"/>
      <enum description="GPIO mode." name="GPIO_MODE" value="0x1"/>
   </enumeration>
   <enumeration id="d1e67097">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e67143">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e67189">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e67236">
      <enum description="Low drive. Output drive sink is 4 mA. This is sufficient for standard and fast mode I2C."
            name="LOW"
            value="0"/>
      <enum description="High drive. Output drive sink is 20 mA. This is needed for Fast Mode Plus I 2C. Refer to the appropriate specific device data sheet for details."
            name="HIGH"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e67282">
      <enum description="Enabled. I2C 50 ns glitch filter enabled." name="ENABLED"
            value="0"/>
      <enum description="Disabled. I2C 50 ns glitch filter disabled." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e67356">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e67475">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e67545">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e67591">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e67637">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e67684">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e67730">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e67804">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e67923">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e67993">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e68039">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e68085">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e68132">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e68178">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e68252">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e68371">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e68441">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e68487">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e68533">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e68580">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e68626">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e68700">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e68819">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e68889">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e68935">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e68981">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e69028">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e69074">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e69149">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e69268">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e69338">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e69384">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e69430">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e69477">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e69523">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e69597">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e69716">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e69786">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e69832">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e69878">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e69925">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e69971">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e70045">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e70164">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e70234">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e70280">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e70326">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e70373">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e70419">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e70493">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e70612">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e70682">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e70728">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e70774">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e70821">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e70867">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e70941">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e71060">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e71130">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e71176">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e71222">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e71269">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e71315">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e71389">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e71508">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e71578">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e71624">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e71670">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e71717">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e71763">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e71838">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e71957">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e72027">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e72073">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e72119">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e72166">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e72212">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e72286">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e72405">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e72475">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e72521">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e72567">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e72614">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e72660">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e72734">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e72853">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e72923">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e72969">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e73015">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e73062">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e73108">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e73182">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e73301">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e73371">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e73417">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e73463">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e73510">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e73556">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e73630">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e73749">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e73819">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e73865">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e73911">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e73958">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e74004">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e74078">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e74197">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e74267">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e74313">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e74359">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e74406">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e74452">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e74527">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e74646">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e74716">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e74762">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e74808">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e74855">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e74901">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e74975">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e75094">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e75164">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e75210">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e75256">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e75303">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e75349">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e75423">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e75542">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e75612">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e75658">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e75704">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e75751">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e75797">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e75871">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e75990">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e76060">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e76106">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e76152">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e76199">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e76245">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e76319">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e76438">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e76508">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e76554">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e76600">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e76647">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e76693">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e76767">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e76886">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e76956">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e77002">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e77048">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e77095">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e77141">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e77216">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e77335">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e77405">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e77451">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e77497">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e77544">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e77590">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e77664">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e77783">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e77853">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e77899">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e77945">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e77992">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e78038">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e78112">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e78231">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e78301">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e78347">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e78393">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e78440">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e78486">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e78560">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e78679">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e78749">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e78795">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e78841">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e78888">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e78934">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e79008">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e79127">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e79197">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e79243">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e79289">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e79336">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e79382">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e79456">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e79575">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e79645">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e79691">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e79737">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e79784">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e79830">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e79905">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e80024">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e80094">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e80140">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e80186">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e80233">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e80279">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e80353">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e80472">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e80542">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e80588">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e80634">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e80681">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e80727">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e80801">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e80920">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e80990">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e81036">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e81082">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e81129">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e81175">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e81249">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e81368">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e81438">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e81484">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e81530">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e81577">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e81623">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e81697">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e81816">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e81886">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e81932">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e81978">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e82025">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e82071">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e82145">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e82264">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e82334">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e82380">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e82426">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e82473">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e82519">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e82594">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e82713">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e82783">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e82829">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e82875">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e82922">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e82968">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e83042">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e83161">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e83231">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e83277">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e83323">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e83370">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e83416">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e83490">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e83609">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e83679">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e83725">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e83771">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e83818">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e83864">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e83938">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e84057">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e84127">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e84173">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e84219">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e84266">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e84312">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e84386">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e84505">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e84575">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e84621">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e84667">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e84714">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e84760">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e84834">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e84953">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e85023">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e85069">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e85115">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e85162">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e85208">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e85283">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e85402">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e85472">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e85518">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e85564">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e85611">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e85657">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e85731">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e85850">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e85920">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e85966">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e86012">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e86059">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e86105">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e86179">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e86298">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e86368">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e86414">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e86460">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e86507">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e86553">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e86627">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e86746">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e86816">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e86862">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e86908">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e86955">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e87001">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e87075">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e87194">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e87264">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e87310">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e87356">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e87403">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e87449">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e87523">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e87642">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e87712">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e87758">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e87804">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e87851">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e87897">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e87972">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e88091">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e88161">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e88207">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e88253">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e88300">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e88346">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e88420">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e88539">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e88609">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e88655">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e88701">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e88748">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e88794">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e88868">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e88987">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e89057">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e89103">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e89149">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e89196">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e89242">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e89316">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e89435">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e89505">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e89551">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e89597">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e89644">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e89690">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e89764">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e89883">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e89953">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e89999">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e90045">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e90092">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e90138">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e90212">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e90331">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e90401">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e90447">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e90493">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e90540">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e90586">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e90661">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e90780">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e90850">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e90896">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e90942">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e90989">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e91035">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e91109">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e91228">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e91298">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e91344">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e91390">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e91437">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e91483">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e91557">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e91676">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e91746">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e91792">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e91838">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e91885">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e91931">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e92005">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e92124">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e92194">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e92240">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e92286">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e92333">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e92379">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e92453">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e92572">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e92642">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e92688">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e92734">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e92781">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e92827">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e92901">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e93020">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e93090">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e93136">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e93182">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e93229">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e93275">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e93350">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e93469">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e93539">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e93585">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e93631">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e93678">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e93724">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e93798">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e93917">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e93987">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e94033">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e94079">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e94126">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e94172">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e94246">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e94365">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e94435">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e94481">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e94527">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e94574">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e94620">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e94694">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e94813">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e94883">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e94929">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e94975">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e95022">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e95068">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e95142">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e95261">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e95331">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e95377">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e95423">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e95470">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e95516">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e95590">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e95709">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e95779">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e95825">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e95871">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e95918">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e95964">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e96039">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e96158">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e96228">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e96274">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e96320">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e96367">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e96413">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e96487">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e96606">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e96676">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e96722">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e96768">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e96815">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e96861">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e96935">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e97054">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e97124">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e97170">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e97216">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e97263">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e97309">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e97383">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e97502">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e97572">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e97618">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e97664">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e97711">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e97757">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e97831">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e97950">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e98020">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e98066">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e98112">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e98159">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e98205">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e98279">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e98398">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e98468">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e98514">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e98560">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e98607">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e98653">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e98728">
      <enum description="Alternative connection 0." name="ALT0" value="0"/>
      <enum description="Alternative connection 1." name="ALT1" value="0x1"/>
      <enum description="Alternative connection 2." name="ALT2" value="0x2"/>
      <enum description="Alternative connection 3." name="ALT3" value="0x3"/>
      <enum description="Alternative connection 4." name="ALT4" value="0x4"/>
      <enum description="Alternative connection 5." name="ALT5" value="0x5"/>
      <enum description="Alternative connection 6." name="ALT6" value="0x6"/>
      <enum description="Alternative connection 7." name="ALT7" value="0x7"/>
   </enumeration>
   <enumeration id="d1e98847">
      <enum description="Inactive. Inactive (no pull-down/pull-up resistor enabled)."
            name="INACTIVE"
            value="0"/>
      <enum description="Pull-down. Pull-down resistor enabled." name="PULL_DOWN"
            value="0x1"/>
      <enum description="Pull-up. Pull-up resistor enabled." name="PULL_UP" value="0x2"/>
      <enum description="Repeater. Repeater mode." name="REPEATER" value="0x3"/>
   </enumeration>
   <enumeration id="d1e98917">
      <enum description="Disabled. Input function is not inverted." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Input is function inverted." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e98963">
      <enum description="Analog mode." name="ANALOG" value="0"/>
      <enum description="Digital mode." name="DIGITAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e99009">
      <enum description="Filter enabled. Noise pulses below approximately 10 ns are filtered out."
            name="ENABLED"
            value="0"/>
      <enum description="Filter disabled. No input filtering is done." name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e99056">
      <enum description="Standard mode, output slew rate control is enabled. More outputs can be switched simultaneously."
            name="STANDARD"
            value="0"/>
      <enum description="Fast mode, slew rate control is disabled. Refer to the appropriate specific device data sheet for details."
            name="FAST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e99102">
      <enum description="Normal. Normal push-pull output" name="NORMAL" value="0"/>
      <enum description="Open-drain. Simulated open-drain output (high drive disabled)."
            name="OPEN_DRAIN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e99219">
      <enum description="No request. No interrupt request is pending." name="NO_REQUEST"
            value="0"/>
      <enum description="Request active. Interrupt request is active."
            name="REQUEST_ACTIVE"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e99265">
      <enum description="Or. OR functionality: A grouped interrupt is generated when any one of the enabled inputs is active (based on its programmed polarity)."
            name="OR"
            value="0"/>
      <enum description="And. AND functionality: An interrupt is generated when all enabled bits are active (based on their programmed polarity)."
            name="AND"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e99311">
      <enum description="Edge-triggered." name="EDGE_TRIGGERED" value="0"/>
      <enum description="Level-triggered." name="LEVEL_TRIGGERED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e100091">
      <enum description="Pin interrupt. Interrupts are driven in response to the standard pin interrupt function."
            name="PIN_INTERRUPT"
            value="0"/>
      <enum description="Pattern match. Interrupts are driven in response to pattern matches."
            name="PATTERN_MATCH"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e100137">
      <enum description="Disabled. RXEV output to the CPU is disabled." name="DISABLED"
            value="0"/>
      <enum description="Enabled. RXEV output to the CPU is enabled." name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e100230">
      <enum description="Input 0. Selects the pin selected in the PINTSEL0 register as the source to bit slice 0."
            name="INPUT0"
            value="0"/>
      <enum description="Input 1. Selects the pin selected in the PINTSEL1 register as the source to bit slice 0."
            name="INPUT1"
            value="0x1"/>
      <enum description="Input 2. Selects the pin selected in the PINTSEL2 register as the source to bit slice 0."
            name="INPUT2"
            value="0x2"/>
      <enum description="Input 3. Selects the pin selected in the PINTSEL3 register as the source to bit slice 0."
            name="INPUT3"
            value="0x3"/>
      <enum description="Input 4. Selects the pin selected in the PINTSEL4 register as the source to bit slice 0."
            name="INPUT4"
            value="0x4"/>
      <enum description="Input 5. Selects the pin selected in the PINTSEL5 register as the source to bit slice 0."
            name="INPUT5"
            value="0x5"/>
      <enum description="Input 6. Selects the pin selected in the PINTSEL6 register as the source to bit slice 0."
            name="INPUT6"
            value="0x6"/>
      <enum description="Input 7. Selects the pin selected in the PINTSEL7 register as the source to bit slice 0."
            name="INPUT7"
            value="0x7"/>
   </enumeration>
   <enumeration id="d1e100349">
      <enum description="Input 0. Selects the pin selected in the PINTSEL0 register as the source to bit slice 1."
            name="INPUT0"
            value="0"/>
      <enum description="Input 1. Selects the pin selected in the PINTSEL1 register as the source to bit slice 1."
            name="INPUT1"
            value="0x1"/>
      <enum description="Input 2. Selects the pin selected in the PINTSEL2 register as the source to bit slice 1."
            name="INPUT2"
            value="0x2"/>
      <enum description="Input 3. Selects the pin selected in the PINTSEL3 register as the source to bit slice 1."
            name="INPUT3"
            value="0x3"/>
      <enum description="Input 4. Selects the pin selected in the PINTSEL4 register as the source to bit slice 1."
            name="INPUT4"
            value="0x4"/>
      <enum description="Input 5. Selects the pin selected in the PINTSEL5 register as the source to bit slice 1."
            name="INPUT5"
            value="0x5"/>
      <enum description="Input 6. Selects the pin selected in the PINTSEL6 register as the source to bit slice 1."
            name="INPUT6"
            value="0x6"/>
      <enum description="Input 7. Selects the pin selected in the PINTSEL7 register as the source to bit slice 1."
            name="INPUT7"
            value="0x7"/>
   </enumeration>
   <enumeration id="d1e100468">
      <enum description="Input 0. Selects the pin selected in the PINTSEL0 register as the source to bit slice 2."
            name="INPUT0"
            value="0"/>
      <enum description="Input 1. Selects the pin selected in the PINTSEL1 register as the source to bit slice 2."
            name="INPUT1"
            value="0x1"/>
      <enum description="Input 2. Selects the pin selected in the PINTSEL2 register as the source to bit slice 2."
            name="INPUT2"
            value="0x2"/>
      <enum description="Input 3. Selects the pin selected in the PINTSEL3 register as the source to bit slice 2."
            name="INPUT3"
            value="0x3"/>
      <enum description="Input 4. Selects the pin selected in the PINTSEL4 register as the source to bit slice 2."
            name="INPUT4"
            value="0x4"/>
      <enum description="Input 5. Selects the pin selected in the PINTSEL5 register as the source to bit slice 2."
            name="INPUT5"
            value="0x5"/>
      <enum description="Input 6. Selects the pin selected in the PINTSEL6 register as the source to bit slice 2."
            name="INPUT6"
            value="0x6"/>
      <enum description="Input 7. Selects the pin selected in the PINTSEL7 register as the source to bit slice 2."
            name="INPUT7"
            value="0x7"/>
   </enumeration>
   <enumeration id="d1e100587">
      <enum description="Input 0. Selects the pin selected in the PINTSEL0 register as the source to bit slice 3."
            name="INPUT0"
            value="0"/>
      <enum description="Input 1. Selects the pin selected in the PINTSEL1 register as the source to bit slice 3."
            name="INPUT1"
            value="0x1"/>
      <enum description="Input 2. Selects the pin selected in the PINTSEL2 register as the source to bit slice 3."
            name="INPUT2"
            value="0x2"/>
      <enum description="Input 3. Selects the pin selected in the PINTSEL3 register as the source to bit slice 3."
            name="INPUT3"
            value="0x3"/>
      <enum description="Input 4. Selects the pin selected in the PINTSEL4 register as the source to bit slice 3."
            name="INPUT4"
            value="0x4"/>
      <enum description="Input 5. Selects the pin selected in the PINTSEL5 register as the source to bit slice 3."
            name="INPUT5"
            value="0x5"/>
      <enum description="Input 6. Selects the pin selected in the PINTSEL6 register as the source to bit slice 3."
            name="INPUT6"
            value="0x6"/>
      <enum description="Input 7. Selects the pin selected in the PINTSEL7 register as the source to bit slice 3."
            name="INPUT7"
            value="0x7"/>
   </enumeration>
   <enumeration id="d1e100706">
      <enum description="Input 0. Selects the pin selected in the PINTSEL0 register as the source to bit slice 4."
            name="INPUT0"
            value="0"/>
      <enum description="Input 1. Selects the pin selected in the PINTSEL1 register as the source to bit slice 4."
            name="INPUT1"
            value="0x1"/>
      <enum description="Input 2. Selects the pin selected in the PINTSEL2 register as the source to bit slice 4."
            name="INPUT2"
            value="0x2"/>
      <enum description="Input 3. Selects the pin selected in the PINTSEL3 register as the source to bit slice 4."
            name="INPUT3"
            value="0x3"/>
      <enum description="Input 4. Selects the pin selected in the PINTSEL4 register as the source to bit slice 4."
            name="INPUT4"
            value="0x4"/>
      <enum description="Input 5. Selects the pin selected in the PINTSEL5 register as the source to bit slice 4."
            name="INPUT5"
            value="0x5"/>
      <enum description="Input 6. Selects the pin selected in the PINTSEL6 register as the source to bit slice 4."
            name="INPUT6"
            value="0x6"/>
      <enum description="Input 7. Selects the pin selected in the PINTSEL7 register as the source to bit slice 4."
            name="INPUT7"
            value="0x7"/>
   </enumeration>
   <enumeration id="d1e100826">
      <enum description="Input 0. Selects the pin selected in the PINTSEL0 register as the source to bit slice 5."
            name="INPUT0"
            value="0"/>
      <enum description="Input 1. Selects the pin selected in the PINTSEL1 register as the source to bit slice 5."
            name="INPUT1"
            value="0x1"/>
      <enum description="Input 2. Selects the pin selected in the PINTSEL2 register as the source to bit slice 5."
            name="INPUT2"
            value="0x2"/>
      <enum description="Input 3. Selects the pin selected in the PINTSEL3 register as the source to bit slice 5."
            name="INPUT3"
            value="0x3"/>
      <enum description="Input 4. Selects the pin selected in the PINTSEL4 register as the source to bit slice 5."
            name="INPUT4"
            value="0x4"/>
      <enum description="Input 5. Selects the pin selected in the PINTSEL5 register as the source to bit slice 5."
            name="INPUT5"
            value="0x5"/>
      <enum description="Input 6. Selects the pin selected in the PINTSEL6 register as the source to bit slice 5."
            name="INPUT6"
            value="0x6"/>
      <enum description="Input 7. Selects the pin selected in the PINTSEL7 register as the source to bit slice 5."
            name="INPUT7"
            value="0x7"/>
   </enumeration>
   <enumeration id="d1e100945">
      <enum description="Input 0. Selects the pin selected in the PINTSEL0 register as the source to bit slice 6."
            name="INPUT0"
            value="0"/>
      <enum description="Input 1. Selects the pin selected in the PINTSEL1 register as the source to bit slice 6."
            name="INPUT1"
            value="0x1"/>
      <enum description="Input 2. Selects the pin selected in the PINTSEL2 register as the source to bit slice 6."
            name="INPUT2"
            value="0x2"/>
      <enum description="Input 3. Selects the pin selected in the PINTSEL3 register as the source to bit slice 6."
            name="INPUT3"
            value="0x3"/>
      <enum description="Input 4. Selects the pin selected in the PINTSEL4 register as the source to bit slice 6."
            name="INPUT4"
            value="0x4"/>
      <enum description="Input 5. Selects the pin selected in the PINTSEL5 register as the source to bit slice 6."
            name="INPUT5"
            value="0x5"/>
      <enum description="Input 6. Selects the pin selected in the PINTSEL6 register as the source to bit slice 6."
            name="INPUT6"
            value="0x6"/>
      <enum description="Input 7. Selects the pin selected in the PINTSEL7 register as the source to bit slice 6."
            name="INPUT7"
            value="0x7"/>
   </enumeration>
   <enumeration id="d1e101064">
      <enum description="Input 0. Selects the pin selected in the PINTSEL0 register as the source to bit slice 7."
            name="INPUT0"
            value="0"/>
      <enum description="Input 1. Selects the pin selected in the PINTSEL1 register as the source to bit slice 7."
            name="INPUT1"
            value="0x1"/>
      <enum description="Input 2. Selects the pin selected in the PINTSEL2 register as the source to bit slice 7."
            name="INPUT2"
            value="0x2"/>
      <enum description="Input 3. Selects the pin selected in the PINTSEL3 register as the source to bit slice 7."
            name="INPUT3"
            value="0x3"/>
      <enum description="Input 4. Selects the pin selected in the PINTSEL4 register as the source to bit slice 7."
            name="INPUT4"
            value="0x4"/>
      <enum description="Input 5. Selects the pin selected in the PINTSEL5 register as the source to bit slice 7."
            name="INPUT5"
            value="0x5"/>
      <enum description="Input 6. Selects the pin selected in the PINTSEL6 register as the source to bit slice 7."
            name="INPUT6"
            value="0x6"/>
      <enum description="Input 7. Selects the pin selected in the PINTSEL7 register as the source to bit slice 7."
            name="INPUT7"
            value="0x7"/>
   </enumeration>
   <enumeration id="d1e101211">
      <enum description="No effect. Slice 0 is not an endpoint." name="NO_EFFECT" value="0"/>
      <enum description="endpoint. Slice 0 is the endpoint of a product term (minterm). Pin interrupt 0 in the NVIC is raised if the minterm evaluates as true."
            name="ENDPOINT"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e101257">
      <enum description="No effect. Slice 1 is not an endpoint." name="NO_EFFECT" value="0"/>
      <enum description="endpoint. Slice 1 is the endpoint of a product term (minterm). Pin interrupt 1 in the NVIC is raised if the minterm evaluates as true."
            name="ENDPOINT"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e101303">
      <enum description="No effect. Slice 2 is not an endpoint." name="NO_EFFECT" value="0"/>
      <enum description="endpoint. Slice 2 is the endpoint of a product term (minterm). Pin interrupt 2 in the NVIC is raised if the minterm evaluates as true."
            name="ENDPOINT"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e101349">
      <enum description="No effect. Slice 3 is not an endpoint." name="NO_EFFECT" value="0"/>
      <enum description="endpoint. Slice 3 is the endpoint of a product term (minterm). Pin interrupt 3 in the NVIC is raised if the minterm evaluates as true."
            name="ENDPOINT"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e101395">
      <enum description="No effect. Slice 4 is not an endpoint." name="NO_EFFECT" value="0"/>
      <enum description="endpoint. Slice 4 is the endpoint of a product term (minterm). Pin interrupt 4 in the NVIC is raised if the minterm evaluates as true."
            name="ENDPOINT"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e101442">
      <enum description="No effect. Slice 5 is not an endpoint." name="NO_EFFECT" value="0"/>
      <enum description="endpoint. Slice 5 is the endpoint of a product term (minterm). Pin interrupt 5 in the NVIC is raised if the minterm evaluates as true."
            name="ENDPOINT"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e101488">
      <enum description="No effect. Slice 6 is not an endpoint." name="NO_EFFECT" value="0"/>
      <enum description="endpoint. Slice 6 is the endpoint of a product term (minterm). Pin interrupt 6 in the NVIC is raised if the minterm evaluates as true."
            name="ENDPOINT"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e101534">
      <enum description="Constant HIGH. This bit slice always contributes to a product term match."
            name="CONSTANT_HIGH"
            value="0"/>
      <enum description="Sticky rising edge. Match occurs if a rising edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to."
            name="STICKY_RISING_EDGE"
            value="0x1"/>
      <enum description="Sticky falling edge. Match occurs if a falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to."
            name="STICKY_FALLING_EDGE"
            value="0x2"/>
      <enum description="Sticky rising or falling edge. Match occurs if either a rising or falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to."
            name="STICKY_RISING_FALLING_EDGE"
            value="0x3"/>
      <enum description="High level. Match (for this bit slice) occurs when there is a high level on the input specified for this bit slice in the PMSRC register."
            name="HIGH_LEVEL"
            value="0x4"/>
      <enum description="Low level. Match occurs when there is a low level on the specified input."
            name="LOW_LEVEL"
            value="0x5"/>
      <enum description="Constant 0. This bit slice never contributes to a match (should be used to disable any unused bit slices)."
            name="CONSTANT_ZERO"
            value="0x6"/>
      <enum description="Event. Non-sticky rising or falling edge. Match occurs on an event - i.e. when either a rising or falling edge is first detected on the specified input (this is a non-sticky version of value 0x3) . This bit is cleared after one clock cycle."
            name="EVENT"
            value="0x7"/>
   </enumeration>
   <enumeration id="d1e101653">
      <enum description="Constant HIGH. This bit slice always contributes to a product term match."
            name="CONSTANT_HIGH"
            value="0"/>
      <enum description="Sticky rising edge. Match occurs if a rising edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to."
            name="STICKY_RISING_EDGE"
            value="0x1"/>
      <enum description="Sticky falling edge. Match occurs if a falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to."
            name="STICKY_FALLING_EDGE"
            value="0x2"/>
      <enum description="Sticky rising or falling edge. Match occurs if either a rising or falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to."
            name="STICKY_RISING_FALLING_EDGE"
            value="0x3"/>
      <enum description="High level. Match (for this bit slice) occurs when there is a high level on the input specified for this bit slice in the PMSRC register."
            name="HIGH_LEVEL"
            value="0x4"/>
      <enum description="Low level. Match occurs when there is a low level on the specified input."
            name="LOW_LEVEL"
            value="0x5"/>
      <enum description="Constant 0. This bit slice never contributes to a match (should be used to disable any unused bit slices)."
            name="CONSTANT_ZERO"
            value="0x6"/>
      <enum description="Event. Non-sticky rising or falling edge. Match occurs on an event - i.e. when either a rising or falling edge is first detected on the specified input (this is a non-sticky version of value 0x3) . This bit is cleared after one clock cycle."
            name="EVENT"
            value="0x7"/>
   </enumeration>
   <enumeration id="d1e101772">
      <enum description="Constant HIGH. This bit slice always contributes to a product term match."
            name="CONSTANT_HIGH"
            value="0"/>
      <enum description="Sticky rising edge. Match occurs if a rising edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to."
            name="STICKY_RISING_EDGE"
            value="0x1"/>
      <enum description="Sticky falling edge. Match occurs if a falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to."
            name="STICKY_FALLING_EDGE"
            value="0x2"/>
      <enum description="Sticky rising or falling edge. Match occurs if either a rising or falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to."
            name="STICKY_RISING_FALLING_EDGE"
            value="0x3"/>
      <enum description="High level. Match (for this bit slice) occurs when there is a high level on the input specified for this bit slice in the PMSRC register."
            name="HIGH_LEVEL"
            value="0x4"/>
      <enum description="Low level. Match occurs when there is a low level on the specified input."
            name="LOW_LEVEL"
            value="0x5"/>
      <enum description="Constant 0. This bit slice never contributes to a match (should be used to disable any unused bit slices)."
            name="CONSTANT_ZERO"
            value="0x6"/>
      <enum description="Event. Non-sticky rising or falling edge. Match occurs on an event - i.e. when either a rising or falling edge is first detected on the specified input (this is a non-sticky version of value 0x3) . This bit is cleared after one clock cycle."
            name="EVENT"
            value="0x7"/>
   </enumeration>
   <enumeration id="d1e101891">
      <enum description="Constant HIGH. This bit slice always contributes to a product term match."
            name="CONSTANT_HIGH"
            value="0"/>
      <enum description="Sticky rising edge. Match occurs if a rising edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to."
            name="STICKY_RISING_EDGE"
            value="0x1"/>
      <enum description="Sticky falling edge. Match occurs if a falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to."
            name="STICKY_FALLING_EDGE"
            value="0x2"/>
      <enum description="Sticky rising or falling edge. Match occurs if either a rising or falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to."
            name="STICKY_RISING_FALLING_EDGE"
            value="0x3"/>
      <enum description="High level. Match (for this bit slice) occurs when there is a high level on the input specified for this bit slice in the PMSRC register."
            name="HIGH_LEVEL"
            value="0x4"/>
      <enum description="Low level. Match occurs when there is a low level on the specified input."
            name="LOW_LEVEL"
            value="0x5"/>
      <enum description="Constant 0. This bit slice never contributes to a match (should be used to disable any unused bit slices)."
            name="CONSTANT_ZERO"
            value="0x6"/>
      <enum description="Event. Non-sticky rising or falling edge. Match occurs on an event - i.e. when either a rising or falling edge is first detected on the specified input (this is a non-sticky version of value 0x3) . This bit is cleared after one clock cycle."
            name="EVENT"
            value="0x7"/>
   </enumeration>
   <enumeration id="d1e102011">
      <enum description="Constant HIGH. This bit slice always contributes to a product term match."
            name="CONSTANT_HIGH"
            value="0"/>
      <enum description="Sticky rising edge. Match occurs if a rising edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to."
            name="STICKY_RISING_EDGE"
            value="0x1"/>
      <enum description="Sticky falling edge. Match occurs if a falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to."
            name="STICKY_FALLING_EDGE"
            value="0x2"/>
      <enum description="Sticky rising or falling edge. Match occurs if either a rising or falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to."
            name="STICKY_RISING_FALLING_EDGE"
            value="0x3"/>
      <enum description="High level. Match (for this bit slice) occurs when there is a high level on the input specified for this bit slice in the PMSRC register."
            name="HIGH_LEVEL"
            value="0x4"/>
      <enum description="Low level. Match occurs when there is a low level on the specified input."
            name="LOW_LEVEL"
            value="0x5"/>
      <enum description="Constant 0. This bit slice never contributes to a match (should be used to disable any unused bit slices)."
            name="CONSTANT_ZERO"
            value="0x6"/>
      <enum description="Event. Non-sticky rising or falling edge. Match occurs on an event - i.e. when either a rising or falling edge is first detected on the specified input (this is a non-sticky version of value 0x3) . This bit is cleared after one clock cycle."
            name="EVENT"
            value="0x7"/>
   </enumeration>
   <enumeration id="d1e102130">
      <enum description="Constant HIGH. This bit slice always contributes to a product term match."
            name="CONSTANT_HIGH"
            value="0"/>
      <enum description="Sticky rising edge. Match occurs if a rising edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to."
            name="STICKY_RISING_EDGE"
            value="0x1"/>
      <enum description="Sticky falling edge. Match occurs if a falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to."
            name="STICKY_FALLING_EDGE"
            value="0x2"/>
      <enum description="Sticky rising or falling edge. Match occurs if either a rising or falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to."
            name="STICKY_RISING_FALLING_EDGE"
            value="0x3"/>
      <enum description="High level. Match (for this bit slice) occurs when there is a high level on the input specified for this bit slice in the PMSRC register."
            name="HIGH_LEVEL"
            value="0x4"/>
      <enum description="Low level. Match occurs when there is a low level on the specified input."
            name="LOW_LEVEL"
            value="0x5"/>
      <enum description="Constant 0. This bit slice never contributes to a match (should be used to disable any unused bit slices)."
            name="CONSTANT_ZERO"
            value="0x6"/>
      <enum description="Event. Non-sticky rising or falling edge. Match occurs on an event - i.e. when either a rising or falling edge is first detected on the specified input (this is a non-sticky version of value 0x3) . This bit is cleared after one clock cycle."
            name="EVENT"
            value="0x7"/>
   </enumeration>
   <enumeration id="d1e102249">
      <enum description="Constant HIGH. This bit slice always contributes to a product term match."
            name="CONSTANT_HIGH"
            value="0"/>
      <enum description="Sticky rising edge. Match occurs if a rising edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to."
            name="STICKY_RISING_EDGE"
            value="0x1"/>
      <enum description="Sticky falling edge. Match occurs if a falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to."
            name="STICKY_FALLING_EDGE"
            value="0x2"/>
      <enum description="Sticky rising or falling edge. Match occurs if either a rising or falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to."
            name="STICKY_RISING_FALLING_EDGE"
            value="0x3"/>
      <enum description="High level. Match (for this bit slice) occurs when there is a high level on the input specified for this bit slice in the PMSRC register."
            name="HIGH_LEVEL"
            value="0x4"/>
      <enum description="Low level. Match occurs when there is a low level on the specified input."
            name="LOW_LEVEL"
            value="0x5"/>
      <enum description="Constant 0. This bit slice never contributes to a match (should be used to disable any unused bit slices)."
            name="CONSTANT_ZERO"
            value="0x6"/>
      <enum description="Event. Non-sticky rising or falling edge. Match occurs on an event - i.e. when either a rising or falling edge is first detected on the specified input (this is a non-sticky version of value 0x3) . This bit is cleared after one clock cycle."
            name="EVENT"
            value="0x7"/>
   </enumeration>
   <enumeration id="d1e102368">
      <enum description="Constant HIGH. This bit slice always contributes to a product term match."
            name="CONSTANT_HIGH"
            value="0"/>
      <enum description="Sticky rising edge. Match occurs if a rising edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to."
            name="STICKY_RISING_EDGE"
            value="0x1"/>
      <enum description="Sticky falling edge. Match occurs if a falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to."
            name="STICKY_FALLING_EDGE"
            value="0x2"/>
      <enum description="Sticky rising or falling edge. Match occurs if either a rising or falling edge on the specified input has occurred since the last time the edge detection for this bit slice was cleared. This bit is only cleared when the PMCFG or the PMSRC registers are written to."
            name="STICKY_RISING_FALLING_EDGE"
            value="0x3"/>
      <enum description="High level. Match (for this bit slice) occurs when there is a high level on the input specified for this bit slice in the PMSRC register."
            name="HIGH_LEVEL"
            value="0x4"/>
      <enum description="Low level. Match occurs when there is a low level on the specified input."
            name="LOW_LEVEL"
            value="0x5"/>
      <enum description="Constant 0. This bit slice never contributes to a match (should be used to disable any unused bit slices)."
            name="CONSTANT_ZERO"
            value="0x6"/>
      <enum description="Event. Non-sticky rising or falling edge. Match occurs on an event - i.e. when either a rising or falling edge is first detected on the specified input (this is a non-sticky version of value 0x3) . This bit is cleared after one clock cycle."
            name="EVENT"
            value="0x7"/>
   </enumeration>
   <enumeration id="d1e103064">
      <enum description="Disabled.The counters are disabled." name="DISABLED" value="0"/>
      <enum description="Enabled. The Timer Counter and Prescale Counter are enabled."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e103110">
      <enum description="Disabled. Do nothing." name="DISABLED" value="0"/>
      <enum description="Enabled. The Timer Counter and the Prescale Counter are synchronously reset on the next positive edge of the APB bus clock. The counters remain reset until TCR[1] is returned to zero."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e104063">
      <enum description="Do Nothing." name="DO_NOTHING" value="0"/>
      <enum description="Clear. Clear the corresponding External Match bit/output to 0 (MAT0 pin is LOW if pinned out)."
            name="CLEAR"
            value="0x1"/>
      <enum description="Set. Set the corresponding External Match bit/output to 1 (MAT0 pin is HIGH if pinned out)."
            name="SET"
            value="0x2"/>
      <enum description="Toggle. Toggle the corresponding External Match bit/output."
            name="TOGGLE"
            value="0x3"/>
   </enumeration>
   <enumeration id="d1e104134">
      <enum description="Do Nothing." name="DO_NOTHING" value="0"/>
      <enum description="Clear. Clear the corresponding External Match bit/output to 0 (MAT1 pin is LOW if pinned out)."
            name="CLEAR"
            value="0x1"/>
      <enum description="Set. Set the corresponding External Match bit/output to 1 (MAT1 pin is HIGH if pinned out)."
            name="SET"
            value="0x2"/>
      <enum description="Toggle. Toggle the corresponding External Match bit/output."
            name="TOGGLE"
            value="0x3"/>
   </enumeration>
   <enumeration id="d1e104204">
      <enum description="Do Nothing." name="DO_NOTHING" value="0"/>
      <enum description="Clear. Clear the corresponding External Match bit/output to 0 (MAT2 pin is LOW if pinned out)."
            name="CLEAR"
            value="0x1"/>
      <enum description="Set. Set the corresponding External Match bit/output to 1 (MAT2 pin is HIGH if pinned out)."
            name="SET"
            value="0x2"/>
      <enum description="Toggle. Toggle the corresponding External Match bit/output."
            name="TOGGLE"
            value="0x3"/>
   </enumeration>
   <enumeration id="d1e104274">
      <enum description="Do Nothing." name="DO_NOTHING" value="0"/>
      <enum description="Clear. Clear the corresponding External Match bit/output to 0 (MAT3 pin is LOW if pinned out)."
            name="CLEAR"
            value="0x1"/>
      <enum description="Set. Set the corresponding External Match bit/output to 1 (MAT3 pin is HIGH if pinned out)."
            name="SET"
            value="0x2"/>
      <enum description="Toggle. Toggle the corresponding External Match bit/output."
            name="TOGGLE"
            value="0x3"/>
   </enumeration>
   <enumeration id="d1e104372">
      <enum description="Timer Mode. Incremented every rising APB bus clock edge."
            name="TIMER"
            value="0"/>
      <enum description="Counter Mode rising edge. TC is incremented on rising edges on the CAP input selected by bits 3:2."
            name="COUNTER_RISING_EDGE"
            value="0x1"/>
      <enum description="Counter Mode falling edge. TC is incremented on falling edges on the CAP input selected by bits 3:2."
            name="COUNTER_FALLING_EDGE"
            value="0x2"/>
      <enum description="Counter Mode dual edge. TC is incremented on both edges on the CAP input selected by bits 3:2."
            name="COUNTER_DUAL_EDGE"
            value="0x3"/>
   </enumeration>
   <enumeration id="d1e104442">
      <enum description="Channel 0. CAPn.0 for CTIMERn" name="CHANNEL_0" value="0"/>
      <enum description="Channel 1. CAPn.1 for CTIMERn" name="CHANNEL_1" value="0x1"/>
      <enum description="Channel 2. CAPn.2 for CTIMERn" name="CHANNEL_2" value="0x2"/>
      <enum description="Channel 3. CAPn.3 for CTIMERn" name="CHANNEL_3" value="0x3"/>
   </enumeration>
   <enumeration id="d1e104530">
      <enum description="Channel 0 Rising Edge. Rising edge of the signal on capture channel 0 clears the timer (if bit 4 is set)."
            name="CHANNEL_0_RISING"
            value="0"/>
      <enum description="Channel 0 Falling Edge. Falling edge of the signal on capture channel 0 clears the timer (if bit 4 is set)."
            name="CHANNEL_0_FALLING"
            value="0x1"/>
      <enum description="Channel 1 Rising Edge. Rising edge of the signal on capture channel 1 clears the timer (if bit 4 is set)."
            name="CHANNEL_1_RISING"
            value="0x2"/>
      <enum description="Channel 1 Falling Edge. Falling edge of the signal on capture channel 1 clears the timer (if bit 4 is set)."
            name="CHANNEL_1_FALLING"
            value="0x3"/>
      <enum description="Channel 2 Rising Edge. Rising edge of the signal on capture channel 2 clears the timer (if bit 4 is set)."
            name="CHANNEL_2_RISING"
            value="0x4"/>
      <enum description="Channel 2 Falling Edge. Falling edge of the signal on capture channel 2 clears the timer (if bit 4 is set)."
            name="CHANNEL_2_FALLING"
            value="0x5"/>
   </enumeration>
   <enumeration id="d1e104654">
      <enum description="Match. CTIMERn_MAT0 is controlled by EM0." name="MATCH" value="0"/>
      <enum description="PWM. PWM mode is enabled for CTIMERn_MAT0." name="PWM" value="0x1"/>
   </enumeration>
   <enumeration id="d1e104700">
      <enum description="Match. CTIMERn_MAT01 is controlled by EM1." name="MATCH" value="0"/>
      <enum description="PWM. PWM mode is enabled for CTIMERn_MAT1." name="PWM" value="0x1"/>
   </enumeration>
   <enumeration id="d1e104746">
      <enum description="Match. CTIMERn_MAT2 is controlled by EM2." name="MATCH" value="0"/>
      <enum description="PWM. PWM mode is enabled for CTIMERn_MAT2." name="PWM" value="0x1"/>
   </enumeration>
   <enumeration id="d1e104792">
      <enum description="Match. CTIMERn_MAT3 is controlled by EM3." name="MATCH" value="0"/>
      <enum description="PWM. PWM mode is enabled for CT132Bn_MAT3." name="PWM" value="0x1"/>
   </enumeration>
   <enumeration id="d1e105107">
      <enum description="Stop. The watchdog timer is stopped." name="STOP" value="0"/>
      <enum description="Run. The watchdog timer is running." name="RUN" value="0x1"/>
   </enumeration>
   <enumeration id="d1e105153">
      <enum description="Interrupt. A watchdog time-out will not cause a chip reset."
            name="INTERRUPT"
            value="0"/>
      <enum description="Reset. A watchdog time-out will cause a chip reset." name="RESET"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e105235">
      <enum description="Flexible. The watchdog time-out value (TC) can be changed at any time."
            name="FLEXIBLE"
            value="0"/>
      <enum description="Threshold. The watchdog time-out value (TC) can be changed only after the counter is below the value of WDWARNINT and WDWINDOW."
            name="THRESHOLD"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e105635">
      <enum description="No force load. The load from the INTVALn register to the TIMERn register is processed at the end of the time interval if the repeat mode is selected."
            name="NO_FORCE_LOAD"
            value="0"/>
      <enum description="Force load. The INTVALn interval value IVALUE -1 is immediately loaded into the TIMERn register while TIMERn is running."
            name="FORCE_LOAD"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e105755">
      <enum description="Disabled. TIMERn interrupt is disabled." name="DISABLED" value="0"/>
      <enum description="Enabled. TIMERn interrupt is enabled." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e105801">
      <enum description="Repeat interrupt mode." name="REPEAT_INTERRUPT_MODE" value="0"/>
      <enum description="One-shot interrupt mode." name="ONE_SHOT_INTERRUPT_MODE"
            value="0x1"/>
      <enum description="One-shot stall mode." name="ONE_SHOT_STALL_MODE" value="0x2"/>
   </enumeration>
   <enumeration id="d1e105887">
      <enum description="No pending interrupt. Writing a zero is equivalent to no operation."
            name="NO_PENDING_INTERRUPT"
            value="0"/>
      <enum description="Pending interrupt. The interrupt is pending because TIMERn has reached the end of the time interval. If the INTEN bit in the CONTROLn is also set to 1, the interrupt for timer channel n and the global interrupt are raised. Writing a 1 to this bit clears the interrupt request."
            name="PENDING_INTERRUPT"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e105933">
      <enum description="Idle state. TIMERn is stopped." name="IDLE_STATE" value="0"/>
      <enum description="Running. TIMERn is running." name="RUNNING" value="0x1"/>
   </enumeration>
   <enumeration id="d1e105979">
      <enum description="This channel is not in use." name="NO" value="0"/>
      <enum description="This channel is in use." name="YES" value="0x1"/>
   </enumeration>
   <enumeration id="d1e106090">
      <enum description="Hardware status mode. In this mode, the INUSE(n) flags for all channels are reset."
            name="HARDWARE_STATUS_MODE"
            value="0"/>
      <enum description="Multi-task mode." name="MULTI_TASK_MODE" value="0x1"/>
   </enumeration>
   <enumeration id="d1e106210">
      <enum description="No pending interrupt. Writing a zero is equivalent to no operation."
            name="NO_PENDING_INTERRUPT"
            value="0"/>
      <enum description="Pending interrupt. The interrupt is pending because TIMER0 has reached the end of the time interval. If the INTEN bit in the CONTROL0 register is also set to 1, the interrupt for timer channel 0 and the global interrupt are raised. Writing a 1 to this bit clears the interrupt request."
            name="PENDING_INTERRUPT"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e107867">
      <enum description="Not in reset. The RTC is not held in reset. This bit must be cleared prior to configuring or initiating any operation of the RTC."
            name="NOT_IN_RESET"
            value="0"/>
      <enum description="In reset. The RTC is held in reset. All register bits within the RTC will be forced to their reset value except the OFD bit. This bit must be cleared before writing to any register in the RTC - including writes to set any of the other bits within this register. Do not attempt to write to any bits of this register at the same time that the reset bit is being cleared."
            name="IN_RESET"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e107913">
      <enum description="No match. No match has occurred on the 1 Hz RTC timer. Writing a 0 has no effect."
            name="NO_MATCH"
            value="0"/>
      <enum description="Match. A match condition has occurred on the 1 Hz RTC timer. This flag generates an RTC alarm interrupt request RTC_ALARM which can also wake up the part from any low power mode. Writing a 1 clears this bit."
            name="MATCH"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e107959">
      <enum description="Run. The RTC 1 kHz timer is running. Writing a 0 has no effect."
            name="RUN"
            value="0"/>
      <enum description="Time-out. The 1 kHz high-resolution/wake-up timer has timed out. This flag generates an RTC wake-up interrupt request RTC-WAKE which can also wake up the part from any low power mode. Writing a 1 clears this bit."
            name="TIMEOUT"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e108005">
      <enum description="Disable. A match on the 1 Hz RTC timer will not bring the part out of Deep power-down mode."
            name="DISABLE"
            value="0"/>
      <enum description="Enable. A match on the 1 Hz RTC timer bring the part out of Deep power-down mode."
            name="ENABLE"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e108051">
      <enum description="Disable. A match on the 1 kHz RTC timer will not bring the part out of Deep power-down mode."
            name="DISABLE"
            value="0"/>
      <enum description="Enable. A match on the 1 kHz RTC timer bring the part out of Deep power-down mode."
            name="ENABLE"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e108098">
      <enum description="Disable. A match on the 1 kHz RTC timer will not bring the part out of Deep power-down mode."
            name="DISABLE"
            value="0"/>
      <enum description="Enable. The 1 kHz RTC timer is enabled." name="ENABLE" value="0x1"/>
   </enumeration>
   <enumeration id="d1e108144">
      <enum description="Disable. The RTC 1 Hz and 1 kHz clocks are shut down and the RTC operation is disabled. This bit should be 0 when writing to load a value in the RTC counter register."
            name="DISABLE"
            value="0"/>
      <enum description="Enable. The 1 Hz RTC clock is running and RTC operation is enabled. This bit must be set to initiate operation of the RTC. The first clock to the RTC counter occurs 1 s after this bit is set. To also enable the high-resolution, 1 kHz clock, set bit 6 in this register."
            name="ENABLE"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e108190">
      <enum description="See RTC_OSC_BYPASS" name="POWER_UP" value="0"/>
      <enum description="RTC oscillator is powered-down." name="POWERED_DOWN" value="0x1"/>
   </enumeration>
   <enumeration id="d1e110700">
      <enum description="Main clock (main_clk)" name="MAIN_CLOCK" value="0"/>
      <enum description="FRO 12 MHz (fro_12m)" name="FRO_12_MHZ" value="0x1"/>
      <enum description="Audio PLL clock.(AUDPLL_BYPASS)" name="AUDIO_PLL_CLOCK"
            value="0x2"/>
      <enum description="fc6 fclk (fc6_fclk)" name="FC6_FCLK" value="0x3"/>
   </enumeration>
   <enumeration id="d1e110910">
      <enum description="SCK LOW. The SPIFI drives SCK low after the rising edge at which the last bit of each command is captured, and keeps it low while CS is HIGH."
            name="SCK_LOW"
            value="0"/>
      <enum description="SCK HIGH. the SPIFI keeps SCK high after the rising edge for the last bit of each command and while CS is HIGH, and drives it low after it drives CS LOW. (Known serial flash devices can handle either mode, but some devices may require a particular mode for proper operation.) MODE3, RFCLK, and FBCLK should not all be 1, because in this case there is no final falling edge on SCK on which to sample the last data bit of the frame."
            name="SCK_HIGH"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e110957">
      <enum description="Enable. Cache prefetching enabled." name="ENABLE" value="0"/>
      <enum description="Disable. Disables prefetching of cache lines." name="DISABLE"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e111003">
      <enum description="Quad protocol. This protocol uses IO3:0." name="QUAD" value="0"/>
      <enum description="Dual protocol. This protocol uses IO1:0." name="DUAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e111049">
      <enum description="Rising edge. Read data is sampled on rising edges on the clock, as in classic SPI operation."
            name="RISING_EDGE"
            value="0"/>
      <enum description="Falling edge. Read data is sampled on falling edges of the clock, allowing a full serial clock of of time in order to maximize the serial clock frequency. MODE3, RFCLK, and FBCLK should not all be 1, because in this case there is no final falling edge on SCK on which to sample the last data bit of the frame."
            name="FALLING_EDGE"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e111095">
      <enum description="Internal clock. The SPIFI samples read data using an internal clock."
            name="INTERNAL_CLOCK"
            value="0"/>
      <enum description="Feedback clock. Read data is sampled using a feedback clock from the SCK pin. This allows slightly more time for each received bit. MODE3, RFCLK, and FBCLK should not all be 1, because in this case there is no final falling edge on SCK on which to sample the last data bit of the frame."
            name="FEEDBACK_CLOCK"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e111223">
      <enum description="Input from serial flash." name="INPUT" value="0"/>
      <enum description="Output to serial flash." name="OUTPUT" value="0x1"/>
   </enumeration>
   <enumeration id="d1e111287">
      <enum description="All serial. All fields of the command are serial."
            name="ALL_SERIAL"
            value="0"/>
      <enum description="Quad/dual data. Data field is quad/dual, other fields are serial."
            name="QUAD_DUAL_DATA"
            value="0x1"/>
      <enum description="Serial opcode. Opcode field is serial. Other fields are quad/dual."
            name="SERIAL_OPCODE"
            value="0x2"/>
      <enum description="All quad/dual. All fields of the command are in quad/dual format."
            name="ALL_QUAD_DUAL"
            value="0x3"/>
   </enumeration>
   <enumeration id="d1e111358">
      <enum description="Opcode. Opcode only, no address." name="OPCODE" value="0x1"/>
      <enum description="Opcode one byte. Opcode, least significant byte of address."
            name="OPCODE_1_BYTE"
            value="0x2"/>
      <enum description="Opcode two bytes. Opcode, two least significant bytes of address."
            name="OPCODE_2_BYTES"
            value="0x3"/>
      <enum description="Opcode three bytes. Opcode, three least significant bytes of address."
            name="OPCODE_3_BYTES"
            value="0x4"/>
      <enum description="Opcode four bytes. Opcode, 4 bytes of address."
            name="OPCODE_4_BYTES"
            value="0x5"/>
      <enum description="No opcode three bytes. No opcode, 3 least significant bytes of address."
            name="NO_OPCODE_3_BYTES"
            value="0x6"/>
      <enum description="No opcode four bytes. No opcode, 4 bytes of address."
            name="NO_OPCODE_4_BYTES"
            value="0x7"/>
   </enumeration>
   <enumeration id="d1e111750">
      <enum description="All serial. All fields of the command are serial."
            name="ALL_SERIAL"
            value="0"/>
      <enum description="Quad/dual data. Data field is quad/dual, other fields are serial."
            name="QUAD_DUAL_DATA"
            value="0x1"/>
      <enum description="Serial opcode. Opcode field is serial. Other fields are quad/dual."
            name="SERIAL_OPCODE"
            value="0x2"/>
      <enum description="All quad/dual. All fields of the command are in quad/dual format."
            name="ALL_QUAD_DUAL"
            value="0x3"/>
   </enumeration>
   <enumeration id="d1e111820">
      <enum description="Opcode. Opcode only, no address." name="OPCODE" value="0x1"/>
      <enum description="Opcode one byte. Opcode, least-significant byte of address."
            name="OPCODE_1_BYTE"
            value="0x2"/>
      <enum description="Opcode two bytes. Opcode, 2 least-significant bytes of address."
            name="OPCODE_2_BYTES"
            value="0x3"/>
      <enum description="Opcode three bytes. Opcode, 3 least-significant bytes of address."
            name="OPCODE_3_BYTES"
            value="0x4"/>
      <enum description="Opcode four bytes. Opcode, 4 bytes of address."
            name="OPCODE_4_BYTES"
            value="0x5"/>
      <enum description="No opcode three bytes. No opcode, 3 least-significant bytes of address."
            name="NO_OPCODE_3_BYTES"
            value="0x6"/>
      <enum description="No opcode, 4 bytes of address." name="NO_OPCODE_4_BYTES"
            value="0x7"/>
   </enumeration>
   <enumeration id="d1e113791">
      <enum description="Disabled. The DMA controller is disabled. This clears any triggers that were asserted at the point when disabled, but does not prevent re-triggering when the DMA controller is re-enabled."
            name="DISABLED"
            value="0"/>
      <enum description="Enabled. The DMA controller is enabled." name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e113865">
      <enum description="Not pending. No enabled interrupts are pending."
            name="NOT_PENDING"
            value="0"/>
      <enum description="Pending. At least one enabled interrupt is pending."
            name="PENDING"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e113911">
      <enum description="Not pending. No error interrupts are pending." name="NOT_PENDING"
            value="0"/>
      <enum description="Pending. At least one error interrupt is pending." name="PENDING"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e114603">
      <enum description="Disabled. Peripheral DMA requests are disabled." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Peripheral DMA requests are enabled." name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e114649">
      <enum description="Disabled. Hardware triggering is not used." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Use hardware triggering." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e114695">
      <enum description="Active low - falling edge. Hardware trigger is active low or falling edge triggered, based on TRIGTYPE."
            name="ACTIVE_LOW_FALLING"
            value="0"/>
      <enum description="Active high - rising edge. Hardware trigger is active high or rising edge triggered, based on TRIGTYPE."
            name="ACTIVE_HIGH_RISING"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e114741">
      <enum description="Edge. Hardware trigger is edge triggered. Transfers will be initiated and completed, as specified for a single trigger."
            name="EDGE"
            value="0"/>
      <enum description="Level. Hardware trigger is level triggered. Note that when level triggering without burst (BURSTPOWER = 0) is selected, only hardware triggers should be used on that channel. Transfers continue as long as the trigger level is asserted. Once the trigger is de-asserted, the transfer will be paused until the trigger is, again, asserted. However, the transfer will not be paused until any remaining transfers within the current BURSTPOWER length are completed."
            name="LEVEL"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e114787">
      <enum description="Single transfer. Hardware trigger causes a single transfer."
            name="SINGLE"
            value="0"/>
      <enum description="Burst transfer. When the trigger for this channel is set to edge triggered, a hardware trigger causes a burst transfer, as defined by BURSTPOWER. When the trigger for this channel is set to level triggered, a hardware trigger causes transfers to continue as long as the trigger is asserted, unless the transfer is complete."
            name="BURST"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e114852">
      <enum description="Disabled. Source burst wrapping is not enabled for this DMA channel."
            name="DISABLED"
            value="0"/>
      <enum description="Enabled. Source burst wrapping is enabled for this DMA channel."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e114898">
      <enum description="Disabled. Destination burst wrapping is not enabled for this DMA channel."
            name="DISABLED"
            value="0"/>
      <enum description="Enabled. Destination burst wrapping is enabled for this DMA channel."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e114990">
      <enum description="No effect. No effect on DMA operation." name="NO_EFFECT" value="0"/>
      <enum description="Valid pending." name="VALID_PENDING" value="0x1"/>
   </enumeration>
   <enumeration id="d1e115036">
      <enum description="Not triggered. The trigger for this DMA channel is not set. DMA operations will not be carried out."
            name="NOT_TRIGGERED"
            value="0"/>
      <enum description="Triggered. The trigger for this DMA channel is set. DMA operations will be carried out."
            name="TRIGGERED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e115110">
      <enum description="Not valid. The channel descriptor is not considered valid until validated by an associated SETVALID0 setting."
            name="NOT_VALID"
            value="0"/>
      <enum description="Valid. The current channel descriptor is considered valid."
            name="VALID"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e115156">
      <enum description="Disabled. Do not reload the channels' control structure when the current descriptor is exhausted."
            name="DISABLED"
            value="0"/>
      <enum description="Enabled. Reload the channels' control structure when the current descriptor is exhausted."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e115202">
      <enum description="Not set. When written by software, the trigger for this channel is not set. A new trigger, as defined by the HWTRIGEN, TRIGPOL, and TRIGTYPE will be needed to start the channel."
            name="NOT_SET"
            value="0"/>
      <enum description="Set. When written by software, the trigger for this channel is set immediately. This feature should not be used with level triggering when TRIGBURST = 0."
            name="SET"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e115248">
      <enum description="Not cleared. The trigger is not cleared when this descriptor is exhausted. If there is a reload, the next descriptor will be started."
            name="NOT_CLEARED"
            value="0"/>
      <enum description="Cleared. The trigger is cleared when this descriptor is exhausted"
            name="CLEARED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e115294">
      <enum description="No effect." name="NO_EFFECT" value="0"/>
      <enum description="Set. The INTA flag for this channel will be set when the current descriptor is exhausted."
            name="SET"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e115341">
      <enum description="No effect." name="NO_EFFECT" value="0"/>
      <enum description="Set. The INTB flag for this channel will be set when the current descriptor is exhausted."
            name="SET"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e115387">
      <enum description="8-bit. 8-bit transfers are performed (8-bit source reads and destination writes)."
            name="BIT_8"
            value="0"/>
      <enum description="16-bit. 6-bit transfers are performed (16-bit source reads and destination writes)."
            name="BIT_16"
            value="0x1"/>
      <enum description="32-bit. 32-bit transfers are performed (32-bit source reads and destination writes)."
            name="BIT_32"
            value="0x2"/>
   </enumeration>
   <enumeration id="d1e115445">
      <enum description="No increment. The source address is not incremented for each transfer. This is the usual case when the source is a peripheral device."
            name="NO_INCREMENT"
            value="0"/>
      <enum description="1 x width. The source address is incremented by the amount specified by Width for each transfer. This is the usual case when the source is memory."
            name="WIDTH_X_1"
            value="0x1"/>
      <enum description="2 x width. The source address is incremented by 2 times the amount specified by Width for each transfer."
            name="WIDTH_X_2"
            value="0x2"/>
      <enum description="4 x width. The source address is incremented by 4 times the amount specified by Width for each transfer."
            name="WIDTH_X_4"
            value="0x3"/>
   </enumeration>
   <enumeration id="d1e115515">
      <enum description="No increment. The destination address is not incremented for each transfer. This is the usual case when the destination is a peripheral device."
            name="NO_INCREMENT"
            value="0"/>
      <enum description="1 x width. The destination address is incremented by the amount specified by Width for each transfer. This is the usual case when the destination is memory."
            name="WIDTH_X_1"
            value="0x1"/>
      <enum description="2 x width. The destination address is incremented by 2 times the amount specified by Width for each transfer."
            name="WIDTH_X_2"
            value="0x2"/>
      <enum description="4 x width. The destination address is incremented by 4 times the amount specified by Width for each transfer."
            name="WIDTH_X_4"
            value="0x3"/>
   </enumeration>
   <enumeration id="d1e117899">
      <enum description="USB_NEEDCLK has normal function." name="NORMAL" value="0"/>
      <enum description="USB_NEEDCLK always 1. Clock will not be stopped in case of suspend."
            name="ALWAYS_ON"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e117945">
      <enum description="LPM not supported." name="NO" value="0"/>
      <enum description="LPM supported." name="YES" value="0x1"/>
   </enumeration>
   <enumeration id="d1e117992">
      <enum description="Only acknowledged packets generate an interrupt" name="DISABLED"
            value="0"/>
      <enum description="Both acknowledged and NAKed packets generate interrupts."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e118038">
      <enum description="Only acknowledged packets generate an interrupt" name="DISABLED"
            value="0"/>
      <enum description="Both acknowledged and NAKed packets generate interrupts."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e118084">
      <enum description="Only acknowledged packets generate an interrupt" name="DISABLED"
            value="0"/>
      <enum description="Both acknowledged and NAKed packets generate interrupts."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e118130">
      <enum description="Only acknowledged packets generate an interrupt" name="DISABLED"
            value="0"/>
      <enum description="Both acknowledged and NAKed packets generate interrupts."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e118367">
      <enum description="No error" name="NO_ERROR" value="0"/>
      <enum description="PID encoding error" name="PID_ENCODING_ERROR" value="0x1"/>
      <enum description="PID unknown" name="PID_UNKNOWN" value="0x2"/>
      <enum description="Packet unexpected" name="PACKET_UNEXPECTED" value="0x3"/>
      <enum description="Token CRC error" name="TOKEN_CRC_ERROR" value="0x4"/>
      <enum description="Data CRC error" name="DATA_CRC_ERROR" value="0x5"/>
      <enum description="Time out" name="TIMEOUT" value="0x6"/>
      <enum description="Babble" name="BABBLE" value="0x7"/>
      <enum description="Truncated EOP" name="TRUNCATED_EOP" value="0x8"/>
      <enum description="Sent/Received NAK" name="SENT_RECEIVED_NAK" value="0x9"/>
      <enum description="Sent Stall" name="SENT_STALL" value="0xa"/>
      <enum description="Overrun" name="OVERRUN" value="0xb"/>
      <enum description="Sent empty packet" name="SENT_EMPTY_PACKET" value="0xc"/>
      <enum description="Bitstuff error" name="BITSTUFF_ERROR" value="0xd"/>
      <enum description="Sync error" name="SYNC_ERROR" value="0xe"/>
      <enum description="Wrong data toggle" name="WRONG_DATA_TOGGLE" value="0xf"/>
   </enumeration>
   <enumeration id="d1e119457">
      <enum description="The SCT operates as two 16-bit counters named COUNTER_L and COUNTER_H."
            name="DUAL_COUNTER"
            value="0"/>
      <enum description="The SCT operates as a unified 32-bit counter."
            name="UNIFIED_COUNTER"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e119503">
      <enum description="System Clock Mode. The system clock clocks the entire SCT module including the counter(s) and counter prescalers."
            name="SYSTEM_CLOCK_MODE"
            value="0"/>
      <enum description="Sampled System Clock Mode. The system clock clocks the SCT module, but the counter and prescalers are only enabled to count when the designated edge is detected on the input selected by the CKSEL field. The minimum pulse width on the selected clock-gate input is 1 bus clock period. This mode is the high-performance, sampled-clock mode."
            name="SAMPLED_SYSTEM_CLOCK_MODE"
            value="0x1"/>
      <enum description="SCT Input Clock Mode. The input/edge selected by the CKSEL field clocks the SCT module, including the counters and prescalers, after first being synchronized to the system clock. The minimum pulse width on the clock input is 1 bus clock period. This mode is the low-power, sampled-clock mode."
            name="SCT_INPUT_CLOCK_MODE"
            value="0x2"/>
      <enum description="Asynchronous Mode. The entire SCT module is clocked directly by the input/edge selected by the CKSEL field. In this mode, the SCT outputs are switched synchronously to the SCT input clock - not the system clock. The input clock rate must be at least half the system clock rate and can be the same or faster than the system clock."
            name="ASYNCHRONOUS_MODE"
            value="0x3"/>
   </enumeration>
   <enumeration id="d1e119573">
      <enum description="Rising edges on input 0." name="INPUT_0_RISING_EDGES" value="0"/>
      <enum description="Falling edges on input 0." name="INPUT_0_FALLING_EDGE" value="0x1"/>
      <enum description="Rising edges on input 1." name="INPUT_1_RISING_EDGES" value="0x2"/>
      <enum description="Falling edges on input 1." name="INPUT_1_FALLING_EDGE" value="0x3"/>
      <enum description="Rising edges on input 2." name="INPUT_2_RISING_EDGES" value="0x4"/>
      <enum description="Falling edges on input 2." name="INPUT_2_FALLING_EDGE" value="0x5"/>
      <enum description="Rising edges on input 3." name="INPUT_3_RISING_EDGES" value="0x6"/>
      <enum description="Falling edges on input 3." name="INPUT_3_FALLING_EDGE" value="0x7"/>
   </enumeration>
   <enumeration id="d1e119883">
      <enum description="Up. The counter counts up to a limit condition, then is cleared to zero."
            name="UP"
            value="0"/>
      <enum description="Up-down. The counter counts up to a limit, then counts down to a limit condition or to 0."
            name="UP_DOWN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e120020">
      <enum description="The H counter counts up to its limit condition, then is cleared to zero."
            name="UP"
            value="0"/>
      <enum description="The H counter counts up to its limit, then counts down to a limit condition or to 0."
            name="UP_DOWN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e121218">
      <enum description="Set and clear do not depend on the direction of any counter."
            name="INDEPENDENT"
            value="0"/>
      <enum description="Set and clear are reversed when counter L or the unified counter is counting down."
            name="L_REVERSED"
            value="0x1"/>
      <enum description="Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1."
            name="H_REVERSED"
            value="0x2"/>
   </enumeration>
   <enumeration id="d1e121276">
      <enum description="Set and clear do not depend on the direction of any counter."
            name="INDEPENDENT"
            value="0"/>
      <enum description="Set and clear are reversed when counter L or the unified counter is counting down."
            name="L_REVERSED"
            value="0x1"/>
      <enum description="Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1."
            name="H_REVERSED"
            value="0x2"/>
   </enumeration>
   <enumeration id="d1e121334">
      <enum description="Set and clear do not depend on the direction of any counter."
            name="INDEPENDENT"
            value="0"/>
      <enum description="Set and clear are reversed when counter L or the unified counter is counting down."
            name="L_REVERSED"
            value="0x1"/>
      <enum description="Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1."
            name="H_REVERSED"
            value="0x2"/>
   </enumeration>
   <enumeration id="d1e121392">
      <enum description="Set and clear do not depend on the direction of any counter."
            name="INDEPENDENT"
            value="0"/>
      <enum description="Set and clear are reversed when counter L or the unified counter is counting down."
            name="L_REVERSED"
            value="0x1"/>
      <enum description="Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1."
            name="H_REVERSED"
            value="0x2"/>
   </enumeration>
   <enumeration id="d1e121450">
      <enum description="Set and clear do not depend on the direction of any counter."
            name="INDEPENDENT"
            value="0"/>
      <enum description="Set and clear are reversed when counter L or the unified counter is counting down."
            name="L_REVERSED"
            value="0x1"/>
      <enum description="Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1."
            name="H_REVERSED"
            value="0x2"/>
   </enumeration>
   <enumeration id="d1e121509">
      <enum description="Set and clear do not depend on the direction of any counter."
            name="INDEPENDENT"
            value="0"/>
      <enum description="Set and clear are reversed when counter L or the unified counter is counting down."
            name="L_REVERSED"
            value="0x1"/>
      <enum description="Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1."
            name="H_REVERSED"
            value="0x2"/>
   </enumeration>
   <enumeration id="d1e121567">
      <enum description="Set and clear do not depend on the direction of any counter."
            name="INDEPENDENT"
            value="0"/>
      <enum description="Set and clear are reversed when counter L or the unified counter is counting down."
            name="L_REVERSED"
            value="0x1"/>
      <enum description="Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1."
            name="H_REVERSED"
            value="0x2"/>
   </enumeration>
   <enumeration id="d1e121625">
      <enum description="Set and clear do not depend on the direction of any counter."
            name="INDEPENDENT"
            value="0"/>
      <enum description="Set and clear are reversed when counter L or the unified counter is counting down."
            name="L_REVERSED"
            value="0x1"/>
      <enum description="Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1."
            name="H_REVERSED"
            value="0x2"/>
   </enumeration>
   <enumeration id="d1e121683">
      <enum description="Set and clear do not depend on the direction of any counter."
            name="INDEPENDENT"
            value="0"/>
      <enum description="Set and clear are reversed when counter L or the unified counter is counting down."
            name="L_REVERSED"
            value="0x1"/>
      <enum description="Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1."
            name="H_REVERSED"
            value="0x2"/>
   </enumeration>
   <enumeration id="d1e121741">
      <enum description="Set and clear do not depend on the direction of any counter."
            name="INDEPENDENT"
            value="0"/>
      <enum description="Set and clear are reversed when counter L or the unified counter is counting down."
            name="L_REVERSED"
            value="0x1"/>
      <enum description="Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1."
            name="H_REVERSED"
            value="0x2"/>
   </enumeration>
   <enumeration id="d1e121799">
      <enum description="Set and clear do not depend on the direction of any counter."
            name="INDEPENDENT"
            value="0"/>
      <enum description="Set and clear are reversed when counter L or the unified counter is counting down."
            name="L_REVERSED"
            value="0x1"/>
      <enum description="Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1."
            name="H_REVERSED"
            value="0x2"/>
   </enumeration>
   <enumeration id="d1e121858">
      <enum description="Set and clear do not depend on the direction of any counter."
            name="INDEPENDENT"
            value="0"/>
      <enum description="Set and clear are reversed when counter L or the unified counter is counting down."
            name="L_REVERSED"
            value="0x1"/>
      <enum description="Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1."
            name="H_REVERSED"
            value="0x2"/>
   </enumeration>
   <enumeration id="d1e121916">
      <enum description="Set and clear do not depend on the direction of any counter."
            name="INDEPENDENT"
            value="0"/>
      <enum description="Set and clear are reversed when counter L or the unified counter is counting down."
            name="L_REVERSED"
            value="0x1"/>
      <enum description="Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1."
            name="H_REVERSED"
            value="0x2"/>
   </enumeration>
   <enumeration id="d1e121974">
      <enum description="Set and clear do not depend on the direction of any counter."
            name="INDEPENDENT"
            value="0"/>
      <enum description="Set and clear are reversed when counter L or the unified counter is counting down."
            name="L_REVERSED"
            value="0x1"/>
      <enum description="Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1."
            name="H_REVERSED"
            value="0x2"/>
   </enumeration>
   <enumeration id="d1e122032">
      <enum description="Set and clear do not depend on the direction of any counter."
            name="INDEPENDENT"
            value="0"/>
      <enum description="Set and clear are reversed when counter L or the unified counter is counting down."
            name="L_REVERSED"
            value="0x1"/>
      <enum description="Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1."
            name="H_REVERSED"
            value="0x2"/>
   </enumeration>
   <enumeration id="d1e122090">
      <enum description="Set and clear do not depend on the direction of any counter."
            name="INDEPENDENT"
            value="0"/>
      <enum description="Set and clear are reversed when counter L or the unified counter is counting down."
            name="L_REVERSED"
            value="0x1"/>
      <enum description="Set and clear are reversed when counter H is counting down. Do not use if UNIFY = 1."
            name="H_REVERSED"
            value="0x2"/>
   </enumeration>
   <enumeration id="d1e122176">
      <enum description="No change." name="NO_CHANGE" value="0"/>
      <enum description="Set output (or clear based on the SETCLR0 field in the OUTPUTDIRCTRL register)."
            name="SET"
            value="0x1"/>
      <enum description="Clear output (or set based on the SETCLR0 field)." name="CLEAR"
            value="0x2"/>
      <enum description="Toggle output." name="TOGGLE_OUTPUT" value="0x3"/>
   </enumeration>
   <enumeration id="d1e122246">
      <enum description="No change." name="NO_CHANGE" value="0"/>
      <enum description="Set output (or clear based on the SETCLR1 field in the OUTPUTDIRCTRL register)."
            name="SET"
            value="0x1"/>
      <enum description="Clear output (or set based on the SETCLR1 field)." name="CLEAR"
            value="0x2"/>
      <enum description="Toggle output." name="TOGGLE_OUTPUT" value="0x3"/>
   </enumeration>
   <enumeration id="d1e122316">
      <enum description="No change." name="NO_CHANGE" value="0"/>
      <enum description="Set output (or clear based on the SETCLR2 field in the OUTPUTDIRCTRL register)."
            name="SET"
            value="0x1"/>
      <enum description="Clear output n (or set based on the SETCLR2 field)." name="CLEAR"
            value="0x2"/>
      <enum description="Toggle output." name="TOGGLE_OUTPUT" value="0x3"/>
   </enumeration>
   <enumeration id="d1e122386">
      <enum description="No change." name="NO_CHANGE" value="0"/>
      <enum description="Set output (or clear based on the SETCLR3 field in the OUTPUTDIRCTRL register)."
            name="SET"
            value="0x1"/>
      <enum description="Clear output (or set based on the SETCLR3 field)." name="CLEAR"
            value="0x2"/>
      <enum description="Toggle output." name="TOGGLE_OUTPUT" value="0x3"/>
   </enumeration>
   <enumeration id="d1e122456">
      <enum description="No change." name="NO_CHANGE" value="0"/>
      <enum description="Set output (or clear based on the SETCLR4 field in the OUTPUTDIRCTRL register)."
            name="SET"
            value="0x1"/>
      <enum description="Clear output (or set based on the SETCLR4 field)." name="CLEAR"
            value="0x2"/>
      <enum description="Toggle output." name="TOGGLE_OUTPUT" value="0x3"/>
   </enumeration>
   <enumeration id="d1e122527">
      <enum description="No change." name="NO_CHANGE" value="0"/>
      <enum description="Set output (or clear based on the SETCLR5 field in the OUTPUTDIRCTRL register)."
            name="SET"
            value="0x1"/>
      <enum description="Clear output (or set based on the SETCLR5 field)." name="CLEAR"
            value="0x2"/>
      <enum description="Toggle output." name="TOGGLE_OUTPUT" value="0x3"/>
   </enumeration>
   <enumeration id="d1e122597">
      <enum description="No change." name="NO_CHANGE" value="0"/>
      <enum description="Set output (or clear based on the SETCLR6 field in the OUTPUTDIRCTRL register)."
            name="SET"
            value="0x1"/>
      <enum description="Clear output (or set based on the SETCLR6 field)." name="CLEAR"
            value="0x2"/>
      <enum description="Toggle output." name="TOGGLE_OUTPUT" value="0x3"/>
   </enumeration>
   <enumeration id="d1e122667">
      <enum description="No change." name="NO_CHANGE" value="0"/>
      <enum description="Set output (or clear based on the SETCLR7 field in the OUTPUTDIRCTRL register)."
            name="SET"
            value="0x1"/>
      <enum description="Clear output n (or set based on the SETCLR7 field)." name="CLEAR"
            value="0x2"/>
      <enum description="Toggle output." name="TOGGLE_OUTPUT" value="0x3"/>
   </enumeration>
   <enumeration id="d1e122737">
      <enum description="No change." name="NO_CHANGE" value="0"/>
      <enum description="Set output (or clear based on the SETCLR8 field in the OUTPUTDIRCTRL register)."
            name="SET"
            value="0x1"/>
      <enum description="Clear output (or set based on the SETCLR8 field)." name="CLEAR"
            value="0x2"/>
      <enum description="Toggle output." name="TOGGLE_OUTPUT" value="0x3"/>
   </enumeration>
   <enumeration id="d1e122807">
      <enum description="No change." name="NO_CHANGE" value="0"/>
      <enum description="Set output (or clear based on the SETCLR9 field in the OUTPUTDIRCTRL register)."
            name="SET"
            value="0x1"/>
      <enum description="Clear output (or set based on the SETCLR9 field)." name="CLEAR"
            value="0x2"/>
      <enum description="Toggle output." name="TOGGLE_OUTPUT" value="0x3"/>
   </enumeration>
   <enumeration id="d1e122877">
      <enum description="No change." name="NO_CHANGE" value="0"/>
      <enum description="Set output (or clear based on the SETCLR10 field in the OUTPUTDIRCTRL register)."
            name="SET"
            value="0x1"/>
      <enum description="Clear output (or set based on the SETCLR10 field)." name="CLEAR"
            value="0x2"/>
      <enum description="Toggle output." name="TOGGLE_OUTPUT" value="0x3"/>
   </enumeration>
   <enumeration id="d1e122948">
      <enum description="No change." name="NO_CHANGE" value="0"/>
      <enum description="Set output (or clear based on the SETCLR11 field in the OUTPUTDIRCTRL register)."
            name="SET"
            value="0x1"/>
      <enum description="Clear output (or set based on the SETCLR11 field)." name="CLEAR"
            value="0x2"/>
      <enum description="Toggle output." name="TOGGLE_OUTPUT" value="0x3"/>
   </enumeration>
   <enumeration id="d1e123018">
      <enum description="No change." name="NO_CHANGE" value="0"/>
      <enum description="Set output (or clear based on the SETCLR12 field in the OUTPUTDIRCTRL register)."
            name="SET"
            value="0x1"/>
      <enum description="Clear output (or set based on the SETCLR12 field)." name="CLEAR"
            value="0x2"/>
      <enum description="Toggle output." name="TOGGLE_OUTPUT" value="0x3"/>
   </enumeration>
   <enumeration id="d1e123088">
      <enum description="No change." name="NO_CHANGE" value="0"/>
      <enum description="Set output (or clear based on the SETCLR13 field in the OUTPUTDIRCTRL register)."
            name="SET"
            value="0x1"/>
      <enum description="Clear output (or set based on the SETCLR13 field)." name="CLEAR"
            value="0x2"/>
      <enum description="Toggle output." name="TOGGLE_OUTPUT" value="0x3"/>
   </enumeration>
   <enumeration id="d1e123158">
      <enum description="No change." name="NO_CHANGE" value="0"/>
      <enum description="Set output (or clear based on the SETCLR14 field in the OUTPUTDIRCTRL register)."
            name="SET"
            value="0x1"/>
      <enum description="Clear output (or set based on the SETCLR14 field)." name="CLEAR"
            value="0x2"/>
      <enum description="Toggle output." name="TOGGLE_OUTPUT" value="0x3"/>
   </enumeration>
   <enumeration id="d1e123228">
      <enum description="No change." name="NO_CHANGE" value="0"/>
      <enum description="Set output (or clear based on the SETCLR15 field in the OUTPUTDIRCTRL register)."
            name="SET"
            value="0x1"/>
      <enum description="Clear output (or set based on the SETCLR15 field)." name="CLEAR"
            value="0x2"/>
      <enum description="Toggle output." name="TOGGLE_OUTPUT" value="0x3"/>
   </enumeration>
   <enumeration id="d1e126480">
      <enum description="Selects the L state and the L match register selected by MATCHSEL."
            name="L_COUNTER"
            value="0"/>
      <enum description="Selects the H state and the H match register selected by MATCHSEL."
            name="H_COUNTER"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e126526">
      <enum description="Selects the inputs selected by IOSEL." name="INPUT" value="0"/>
      <enum description="Selects the outputs selected by IOSEL." name="OUTPUT" value="0x1"/>
   </enumeration>
   <enumeration id="d1e126590">
      <enum description="LOW" name="LOW" value="0"/>
      <enum description="Rise" name="RISE" value="0x1"/>
      <enum description="Fall" name="FALL" value="0x2"/>
      <enum description="HIGH" name="HIGH" value="0x3"/>
   </enumeration>
   <enumeration id="d1e126661">
      <enum description="OR. The event occurs when either the specified match or I/O condition occurs."
            name="OR"
            value="0"/>
      <enum description="MATCH. Uses the specified match only." name="MATCH" value="0x1"/>
      <enum description="IO. Uses the specified I/O condition only." name="IO" value="0x2"/>
      <enum description="AND. The event occurs when the specified match and I/O condition occur simultaneously."
            name="AND"
            value="0x3"/>
   </enumeration>
   <enumeration id="d1e126731">
      <enum description="STATEV value is added into STATE (the carry-out is ignored)."
            name="ADD"
            value="0"/>
      <enum description="STATEV value is loaded into STATE." name="LOAD" value="0x1"/>
   </enumeration>
   <enumeration id="d1e126813">
      <enum description="Direction independent. This event is triggered regardless of the count direction."
            name="DIRECTION_INDEPENDENT"
            value="0"/>
      <enum description="Counting up. This event is triggered only during up-counting when BIDIR = 1."
            name="COUNTING_UP"
            value="0x1"/>
      <enum description="Counting down. This event is triggered only during down-counting when BIDIR = 1."
            name="COUNTING_DOWN"
            value="0x2"/>
   </enumeration>
   <enumeration id="d1e127054">
      <enum description="No peripheral selected." name="NO_PERIPH_SELECTED" value="0"/>
      <enum description="USART function selected." name="USART" value="0x1"/>
      <enum description="SPI function selected." name="SPI" value="0x2"/>
      <enum description="I2C function selected." name="I2C" value="0x3"/>
      <enum description="I2S transmit function selected." name="I2S_TRANSMIT" value="0x4"/>
      <enum description="I2S receive function selected." name="I2S_RECEIVE" value="0x5"/>
   </enumeration>
   <enumeration id="d1e127149">
      <enum description="Peripheral select can be changed by software." name="UNLOCKED"
            value="0"/>
      <enum description="Peripheral select is locked and cannot be changed until this Flexcomm or the entire device is reset."
            name="LOCKED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e127195">
      <enum description="This Flexcomm does not include the USART function."
            name="NOT_PRESENT"
            value="0"/>
      <enum description="This Flexcomm includes the USART function." name="PRESENT"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e127241">
      <enum description="This Flexcomm does not include the SPI function."
            name="NOT_PRESENT"
            value="0"/>
      <enum description="This Flexcomm includes the SPI function." name="PRESENT"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e127287">
      <enum description="This Flexcomm does not include the I2C function."
            name="NOT_PRESENT"
            value="0"/>
      <enum description="This Flexcomm includes the I2C function." name="PRESENT"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e127334">
      <enum description="This Flexcomm does not include the I2S function."
            name="NOT_PRESENT"
            value="0"/>
      <enum description="This Flexcomm includes the I2S function." name="PRESENT"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e127889">
      <enum description="Disabled. The I2C Master function is disabled." name="DISABLED"
            value="0"/>
      <enum description="Enabled. The I2C Master function is enabled." name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e127935">
      <enum description="Disabled. The I2C slave function is disabled." name="DISABLED"
            value="0"/>
      <enum description="Enabled. The I2C slave function is enabled." name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e127981">
      <enum description="Disabled. The I2C Monitor function is disabled." name="DISABLED"
            value="0"/>
      <enum description="Enabled. The I2C Monitor function is enabled." name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e128027">
      <enum description="Disabled. Time-out function is disabled." name="DISABLED"
            value="0"/>
      <enum description="Enabled. Time-out function is enabled. Both types of time-out flags will be generated and will cause interrupts if they are enabled. Typically, only one time-out will be used in a system."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e128073">
      <enum description="Disabled. The Monitor function will not perform clock stretching. Software or DMA may not always be able to read data provided by the Monitor function before it is overwritten. This mode may be used when non-invasive monitoring is critical."
            name="DISABLED"
            value="0"/>
      <enum description="Enabled. The Monitor function will perform clock stretching in order to ensure that software or DMA can read all incoming data supplied by the Monitor function."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e128120">
      <enum description="Fast-mode plus. The I 2C interface will support Standard-mode, Fast-mode, and Fast-mode Plus, to the extent that the pin electronics support these modes. Any changes that need to be made to the pin controls, such as changing the drive strength or filtering, must be made by software via the IOCON register associated with each I2C pin,"
            name="FAST_MODE_PLUS"
            value="0"/>
      <enum description="High-speed. In addition to Standard-mode, Fast-mode, and Fast-mode Plus, the I 2C interface will support High-speed mode to the extent that the pin electronics support these modes. See Section 25.7.2.2 for more information."
            name="HIGH_SPEED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e128194">
      <enum description="In progress. Communication is in progress and the Master function is busy and cannot currently accept a command."
            name="IN_PROGRESS"
            value="0"/>
      <enum description="Pending. The Master function needs software service or is in the idle state. If the master is not in the idle state, it is waiting to receive or transmit data or the NACK bit."
            name="PENDING"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e128240">
      <enum description="Idle. The Master function is available to be used for a new transaction."
            name="IDLE"
            value="0"/>
      <enum description="Receive ready. Received data available (Master Receiver mode). Address plus Read was previously sent and Acknowledged by slave."
            name="RECEIVE_READY"
            value="0x1"/>
      <enum description="Transmit ready. Data can be transmitted (Master Transmitter mode). Address plus Write was previously sent and Acknowledged by slave."
            name="TRANSMIT_READY"
            value="0x2"/>
      <enum description="NACK Address. Slave NACKed address." name="NACK_ADDRESS"
            value="0x3"/>
      <enum description="NACK Data. Slave NACKed transmitted data." name="NACK_DATA"
            value="0x4"/>
   </enumeration>
   <enumeration id="d1e128322">
      <enum description="No Arbitration Loss has occurred." name="NO_LOSS" value="0"/>
      <enum description="Arbitration loss. The Master function has experienced an Arbitration Loss. At this point, the Master function has already stopped driving the bus and gone to an idle state. Software can respond by doing nothing, or by sending a Start in order to attempt to gain control of the bus when it next becomes idle."
            name="ARBITRATION_LOSS"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e128368">
      <enum description="No Start/Stop Error has occurred." name="NO_ERROR" value="0"/>
      <enum description="The Master function has experienced a Start/Stop Error. A Start or Stop was detected at a time when it is not allowed by the I2C specification. The Master interface has stopped driving the bus and gone to an idle state, no action is required. A request for a Start could be made, or software could attempt to insure that the bus has not stalled."
            name="ERROR"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e128414">
      <enum description="In progress. The Slave function does not currently need service."
            name="IN_PROGRESS"
            value="0"/>
      <enum description="Pending. The Slave function needs service. Information on what is needed can be found in the adjacent SLVSTATE field."
            name="PENDING"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e128461">
      <enum description="Slave address. Address plus R/W received. At least one of the four slave addresses has been matched by hardware."
            name="SLAVE_ADDRESS"
            value="0"/>
      <enum description="Slave receive. Received data is available (Slave Receiver mode)."
            name="SLAVE_RECEIVE"
            value="0x1"/>
      <enum description="Slave transmit. Data can be transmitted (Slave Transmitter mode)."
            name="SLAVE_TRANSMIT"
            value="0x2"/>
   </enumeration>
   <enumeration id="d1e128519">
      <enum description="Stretching. The slave function is currently stretching the I2C bus clock. Deep-Sleep or Power-down mode cannot be entered at this time."
            name="STRETCHING"
            value="0"/>
      <enum description="Not stretching. The slave function is not currently stretching the I 2C bus clock. Deep-sleep or Power-down mode could be entered at this time."
            name="NOT_STRETCHING"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e128565">
      <enum description="Address 0. Slave address 0 was matched." name="ADDRESS0" value="0"/>
      <enum description="Address 1. Slave address 1 was matched." name="ADDRESS1"
            value="0x1"/>
      <enum description="Address 2. Slave address 2 was matched." name="ADDRESS2"
            value="0x2"/>
      <enum description="Address 3. Slave address 3 was matched." name="ADDRESS3"
            value="0x3"/>
   </enumeration>
   <enumeration id="d1e128635">
      <enum description="Not selected. The Slave function is not currently selected."
            name="NOT_SELECTED"
            value="0"/>
      <enum description="Selected. The Slave function is currently selected."
            name="SELECTED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e128681">
      <enum description="Not deselected. The Slave function has not become deselected. This does not mean that it is currently selected. That information can be found in the SLVSEL flag."
            name="NOT_DESELECTED"
            value="0"/>
      <enum description="Deselected. The Slave function has become deselected. This is specifically caused by the SLVSEL flag changing from 1 to 0. See the description of SLVSEL for details on when that event occurs."
            name="DESELECTED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e128727">
      <enum description="No data. The Monitor function does not currently have data available."
            name="NO_DATA"
            value="0"/>
      <enum description="Data waiting. The Monitor function has data waiting to be read."
            name="DATA_WAITING"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e128774">
      <enum description="No overrun. Monitor data has not overrun." name="NO_OVERRUN"
            value="0"/>
      <enum description="Overrun. A Monitor data overrun has occurred. This can only happen when Monitor clock stretching not enabled via the MONCLKSTR bit in the CFG register. Writing 1 to this bit clears the flag."
            name="OVERRUN"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e128820">
      <enum description="Inactive. The Monitor function considers the I2C bus to be inactive."
            name="INACTIVE"
            value="0"/>
      <enum description="Active. The Monitor function considers the I2C bus to be active."
            name="ACTIVE"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e128866">
      <enum description="Not idle. The I2C bus is not idle, or this flag has been cleared by software."
            name="NOT_IDLE"
            value="0"/>
      <enum description="Idle. The I2C bus has gone idle at least once since the last time this flag was cleared by software."
            name="IDLE"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e128912">
      <enum description="No time-out. I2C bus events have not caused a time-out."
            name="NO_TIMEOUT"
            value="0"/>
      <enum description="Event time-out. The time between I2C bus events has been longer than the time specified by the TIMEOUT register."
            name="EVEN_TIMEOUT"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e128958">
      <enum description="No time-out. SCL low time has not caused a time-out."
            name="NO_TIMEOUT"
            value="0"/>
      <enum description="Time-out. SCL low time has caused a time-out." name="TIMEOUT"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e129032">
      <enum description="Disabled. The MstPending interrupt is disabled." name="DISABLED"
            value="0"/>
      <enum description="Enabled. The MstPending interrupt is enabled." name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e129078">
      <enum description="Disabled. The MstArbLoss interrupt is disabled." name="DISABLED"
            value="0"/>
      <enum description="Enabled. The MstArbLoss interrupt is enabled." name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e129124">
      <enum description="Disabled. The MstStStpErr interrupt is disabled." name="DISABLED"
            value="0"/>
      <enum description="Enabled. The MstStStpErr interrupt is enabled." name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e129170">
      <enum description="Disabled. The SlvPending interrupt is disabled." name="DISABLED"
            value="0"/>
      <enum description="Enabled. The SlvPending interrupt is enabled." name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e129216">
      <enum description="Disabled. The SlvNotStr interrupt is disabled." name="DISABLED"
            value="0"/>
      <enum description="Enabled. The SlvNotStr interrupt is enabled." name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e129263">
      <enum description="Disabled. The SlvDeSel interrupt is disabled." name="DISABLED"
            value="0"/>
      <enum description="Enabled. The SlvDeSel interrupt is enabled." name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e129309">
      <enum description="Disabled. The MonRdy interrupt is disabled." name="DISABLED"
            value="0"/>
      <enum description="Enabled. The MonRdy interrupt is enabled." name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e129355">
      <enum description="Disabled. The MonOv interrupt is disabled." name="DISABLED"
            value="0"/>
      <enum description="Enabled. The MonOv interrupt is enabled." name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e129401">
      <enum description="Disabled. The MonIdle interrupt is disabled." name="DISABLED"
            value="0"/>
      <enum description="Enabled. The MonIdle interrupt is enabled." name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e129447">
      <enum description="Disabled. The Event time-out interrupt is disabled."
            name="DISABLED"
            value="0"/>
      <enum description="Enabled. The Event time-out interrupt is enabled." name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e129493">
      <enum description="Disabled. The SCL time-out interrupt is disabled." name="DISABLED"
            value="0"/>
      <enum description="Enabled. The SCL time-out interrupt is enabled." name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e130132">
      <enum description="No effect." name="NO_EFFECT" value="0"/>
      <enum description="Continue. Informs the Master function to continue to the next operation. This must done after writing transmit data, reading received data, or any other housekeeping related to the next bus operation."
            name="CONTINUE"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e130178">
      <enum description="No effect." name="NO_EFFECT" value="0"/>
      <enum description="Start. A Start will be generated on the I2C bus at the next allowed time."
            name="START"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e130224">
      <enum description="No effect." name="NO_EFFECT" value="0"/>
      <enum description="Stop. A Stop will be generated on the I2C bus at the next allowed time, preceded by a NACK to the slave if the master is receiving data from the slave (Master Receiver mode)."
            name="STOP"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e130270">
      <enum description="Disable. No DMA requests are generated for master operation."
            name="DISABLED"
            value="0"/>
      <enum description="Enable. A DMA request is generated for I2C master data operations. When this I2C master is generating Acknowledge bits in Master Receiver mode, the acknowledge is generated automatically."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e130344">
      <enum description="2 clocks. Minimum SCL low time is 2 clocks of the I2C clock pre-divider."
            name="CLOCKS_2"
            value="0"/>
      <enum description="3 clocks. Minimum SCL low time is 3 clocks of the I2C clock pre-divider."
            name="CLOCKS_3"
            value="0x1"/>
      <enum description="4 clocks. Minimum SCL low time is 4 clocks of the I2C clock pre-divider."
            name="CLOCKS_4"
            value="0x2"/>
      <enum description="5 clocks. Minimum SCL low time is 5 clocks of the I2C clock pre-divider."
            name="CLOCKS_5"
            value="0x3"/>
      <enum description="6 clocks. Minimum SCL low time is 6 clocks of the I2C clock pre-divider."
            name="CLOCKS_6"
            value="0x4"/>
      <enum description="7 clocks. Minimum SCL low time is 7 clocks of the I2C clock pre-divider."
            name="CLOCKS_7"
            value="0x5"/>
      <enum description="8 clocks. Minimum SCL low time is 8 clocks of the I2C clock pre-divider."
            name="CLOCKS_8"
            value="0x6"/>
      <enum description="9 clocks. Minimum SCL low time is 9 clocks of the I2C clock pre-divider."
            name="CLOCKS_9"
            value="0x7"/>
   </enumeration>
   <enumeration id="d1e130463">
      <enum description="2 clocks. Minimum SCL high time is 2 clock of the I2C clock pre-divider."
            name="CLOCKS_2"
            value="0"/>
      <enum description="3 clocks. Minimum SCL high time is 3 clocks of the I2C clock pre-divider ."
            name="CLOCKS_3"
            value="0x1"/>
      <enum description="4 clocks. Minimum SCL high time is 4 clock of the I2C clock pre-divider."
            name="CLOCKS_4"
            value="0x2"/>
      <enum description="5 clocks. Minimum SCL high time is 5 clock of the I2C clock pre-divider."
            name="CLOCKS_5"
            value="0x3"/>
      <enum description="6 clocks. Minimum SCL high time is 6 clock of the I2C clock pre-divider."
            name="CLOCKS_6"
            value="0x4"/>
      <enum description="7 clocks. Minimum SCL high time is 7 clock of the I2C clock pre-divider."
            name="CLOCKS_7"
            value="0x5"/>
      <enum description="8 clocks. Minimum SCL high time is 8 clock of the I2C clock pre-divider."
            name="CLOCKS_8"
            value="0x6"/>
      <enum description="9 clocks. Minimum SCL high time is 9 clocks of the I2C clock pre-divider."
            name="CLOCKS_9"
            value="0x7"/>
   </enumeration>
   <enumeration id="d1e130656">
      <enum description="No effect." name="NO_EFFECT" value="0"/>
      <enum description="Continue. Informs the Slave function to continue to the next operation, by clearing the SLVPENDING flag in the STAT register. This must be done after writing transmit data, reading received data, or any other housekeeping related to the next bus operation. Automatic Operation has different requirements. SLVCONTINUE should not be set unless SLVPENDING = 1."
            name="CONTINUE"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e130702">
      <enum description="No effect." name="NO_EFFECT" value="0"/>
      <enum description="NACK. Causes the Slave function to NACK the master when the slave is receiving data from the master (Slave Receiver mode)."
            name="NACK"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e130748">
      <enum description="Disabled. No DMA requests are issued for Slave mode operation."
            name="DISABLED"
            value="0"/>
      <enum description="Enabled. DMA requests are issued for I2C slave data transmission and reception."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e130794">
      <enum description="Normal, non-automatic operation. If AUTONACK = 0, an SlvPending interrupt is generated when a matching address is received. If AUTONACK = 1, received addresses are NACKed (ignored)."
            name="NORMAL"
            value="0"/>
      <enum description="A header with matching SLVADR0 and matching direction as set by AUTOMATCHREAD will be ACKed immediately, allowing the master to move on to the data bytes. If the address matches SLVADR0, but the direction does not match AUTOMATCHREAD, the behavior will depend on the AUTONACK bit in the SLVADR0 register: if AUTONACK is set, then it will be Nacked; else if AUTONACK is clear, then a SlvPending interrupt is generated."
            name="AUTOMATIC_ACK"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e130840">
      <enum description="The expected next operation in Automatic Mode is an I2C write."
            name="I2C_WRITE"
            value="0"/>
      <enum description="The expected next operation in Automatic Mode is an I2C read."
            name="I2C_READ"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e130967">
      <enum description="Enabled. Slave Address n is enabled." name="ENABLED" value="0"/>
      <enum description="Ignored Slave Address n is ignored." name="DISABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e131031">
      <enum description="Normal operation, matching I2C addresses are not ignored."
            name="NORMAL"
            value="0"/>
      <enum description="Automatic-only mode. All incoming addresses are ignored (NACKed), unless AUTOACK is set, it matches SLVADRn, and AUTOMATCHREAD matches the direction."
            name="AUTOMATIC"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e131105">
      <enum description="Mask. The SLVQUAL0 field is used as a logical mask for matching address 0."
            name="MASK"
            value="0"/>
      <enum description="Extend. The SLVQUAL0 field is used to extend address 0 matching in a range of addresses."
            name="EXTEND"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e131215">
      <enum description="No start detected. The Monitor function has not detected a Start event on the I2C bus."
            name="NO_START_DETECTED"
            value="0"/>
      <enum description="Start detected. The Monitor function has detected a Start event on the I2C bus."
            name="START_DETECTED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e131261">
      <enum description="No repeated start detected. The Monitor function has not detected a Repeated Start event on the I2C bus."
            name="NOT_DETECTED"
            value="0"/>
      <enum description="Repeated start detected. The Monitor function has detected a Repeated Start event on the I2C bus."
            name="DETECTED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e131307">
      <enum description="Acknowledged. The data currently being provided by the Monitor function was acknowledged by at least one master or slave receiver."
            name="ACKNOWLEDGED"
            value="0"/>
      <enum description="Not acknowledged. The data currently being provided by the Monitor function was not acknowledged by any receiver."
            name="NOT_ACKNOWLEDGED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e131889">
      <enum description="Disabled. The SPI is disabled and the internal state machine and counters are reset."
            name="DISABLED"
            value="0"/>
      <enum description="Enabled. The SPI is enabled for operation." name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e131935">
      <enum description="Slave mode. The SPI will operate in slave mode. SCK, MOSI, and the SSEL signals are inputs, MISO is an output."
            name="SLAVE_MODE"
            value="0"/>
      <enum description="Master mode. The SPI will operate in master mode. SCK, MOSI, and the SSEL signals are outputs, MISO is an input."
            name="MASTER_MODE"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e131981">
      <enum description="Standard. Data is transmitted and received in standard MSB first order."
            name="STANDARD"
            value="0"/>
      <enum description="Reverse. Data is transmitted and received in reverse order (LSB first)."
            name="REVERSE"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e132027">
      <enum description="Change. The SPI captures serial data on the first clock transition of the transfer (when the clock changes away from the rest state). Data is changed on the following edge."
            name="CHANGE"
            value="0"/>
      <enum description="Capture. The SPI changes serial data on the first clock transition of the transfer (when the clock changes away from the rest state). Data is captured on the following edge."
            name="CAPTURE"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e132073">
      <enum description="Low. The rest state of the clock (between transfers) is low."
            name="LOW"
            value="0"/>
      <enum description="High. The rest state of the clock (between transfers) is high."
            name="HIGH"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e132120">
      <enum description="Disabled." name="DISABLED" value="0"/>
      <enum description="Enabled." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e132166">
      <enum description="Low. The SSEL0 pin is active low." name="LOW" value="0"/>
      <enum description="High. The SSEL0 pin is active high." name="HIGH" value="0x1"/>
   </enumeration>
   <enumeration id="d1e132212">
      <enum description="Low. The SSEL1 pin is active low." name="LOW" value="0"/>
      <enum description="High. The SSEL1 pin is active high." name="HIGH" value="0x1"/>
   </enumeration>
   <enumeration id="d1e132258">
      <enum description="Low. The SSEL2 pin is active low." name="LOW" value="0"/>
      <enum description="High. The SSEL2 pin is active high." name="HIGH" value="0x1"/>
   </enumeration>
   <enumeration id="d1e132304">
      <enum description="Low. The SSEL3 pin is active low." name="LOW" value="0"/>
      <enum description="High. The SSEL3 pin is active high." name="HIGH" value="0x1"/>
   </enumeration>
   <enumeration id="d1e132596">
      <enum description="Disabled. No interrupt will be generated when any Slave Select transitions from deasserted to asserted."
            name="DISABLED"
            value="0"/>
      <enum description="Enabled. An interrupt will be generated when any Slave Select transitions from deasserted to asserted."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e132642">
      <enum description="Disabled. No interrupt will be generated when all asserted Slave Selects transition to deasserted."
            name="DISABLED"
            value="0"/>
      <enum description="Enabled. An interrupt will be generated when all asserted Slave Selects transition to deasserted."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e132688">
      <enum description="No interrupt will be generated when the SPI master function is idle."
            name="DISABLED"
            value="0"/>
      <enum description="An interrupt will be generated when the SPI master function is fully idle."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e132973">
      <enum description="The transmit FIFO is not enabled." name="DISABLED" value="0"/>
      <enum description="The transmit FIFO is enabled." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e133019">
      <enum description="The receive FIFO is not enabled." name="DISABLED" value="0"/>
      <enum description="The receive FIFO is enabled." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e133083">
      <enum description="DMA is not used for the transmit function." name="DISABLED"
            value="0"/>
      <enum description="Trigger DMA for the transmit function if the FIFO is not full. Generally, data interrupts would be disabled if DMA is enabled."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e133129">
      <enum description="DMA is not used for the receive function." name="DISABLED"
            value="0"/>
      <enum description="Trigger DMA for the receive function if the FIFO is not empty. Generally, data interrupts would be disabled if DMA is enabled."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e133176">
      <enum description="Only enabled interrupts will wake up the device form reduced power modes."
            name="DISABLED"
            value="0"/>
      <enum description="A device wake-up for DMA will occur if the transmit FIFO level reaches the value specified by TXLVL in FIFOTRIG, even when the TXLVL interrupt is not enabled."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e133222">
      <enum description="Only enabled interrupts will wake up the device form reduced power modes."
            name="DISABLED"
            value="0"/>
      <enum description="A device wake-up for DMA will occur if the receive FIFO level reaches the value specified by RXLVL in FIFOTRIG, even when the RXLVL interrupt is not enabled."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e133304">
      <enum description="Debug reads of the FIFO do not pop the FIFO." name="DO_NOT_POP"
            value="0"/>
      <enum description="A debug read will cause the FIFO to pop." name="POP" value="0x1"/>
   </enumeration>
   <enumeration id="d1e133569">
      <enum description="Transmit FIFO level does not generate a FIFO level trigger."
            name="DISABLED"
            value="0"/>
      <enum description="An trigger will be generated if the transmit FIFO level reaches the value specified by the TXLVL field in this register."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e133615">
      <enum description="Receive FIFO level does not generate a FIFO level trigger."
            name="DISABLED"
            value="0"/>
      <enum description="An trigger will be generated if the receive FIFO level reaches the value specified by the RXLVL field in this register."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e133725">
      <enum description="No interrupt will be generated for a transmit error."
            name="DISABLED"
            value="0"/>
      <enum description="An interrupt will be generated when a transmit error occurs."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e133771">
      <enum description="No interrupt will be generated for a receive error."
            name="DISABLED"
            value="0"/>
      <enum description="An interrupt will be generated when a receive error occurs."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e133817">
      <enum description="No interrupt will be generated based on the TX FIFO level."
            name="DISABLED"
            value="0"/>
      <enum description="If TXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the TX FIFO level decreases to the level specified by TXLVL in the FIFOTRIG register."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e133863">
      <enum description="No interrupt will be generated based on the RX FIFO level."
            name="DISABLED"
            value="0"/>
      <enum description="If RXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the when the RX FIFO level increases to the level specified by RXLVL in the FIFOTRIG register."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e134174">
      <enum description="SSEL0 asserted." name="ASSERTED" value="0"/>
      <enum description="SSEL0 not asserted." name="NOT_ASSERTED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e134220">
      <enum description="SSEL1 asserted." name="ASSERTED" value="0"/>
      <enum description="SSEL1 not asserted." name="NOT_ASSERTED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e134266">
      <enum description="SSEL2 asserted." name="ASSERTED" value="0"/>
      <enum description="SSEL2 not asserted." name="NOT_ASSERTED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e134312">
      <enum description="SSEL3 asserted." name="ASSERTED" value="0"/>
      <enum description="SSEL3 not asserted." name="NOT_ASSERTED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e134359">
      <enum description="SSEL not deasserted. This piece of data is not treated as the end of a transfer. SSEL will not be deasserted at the end of this data."
            name="NOT_DEASSERTED"
            value="0"/>
      <enum description="SSEL deasserted. This piece of data is treated as the end of a transfer. SSEL will be deasserted at the end of this piece of data."
            name="DEASSERTED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e134405">
      <enum description="Data not EOF. This piece of data transmitted is not treated as the end of a frame."
            name="NOT_EOF"
            value="0"/>
      <enum description="Data EOF. This piece of data is treated as the end of a frame, causing the Frame_delay time to be inserted before subsequent data is transmitted."
            name="EOF"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e134451">
      <enum description="Read received data. Received data must be read in order to allow transmission to progress. SPI transmit will halt when the receive data FIFO is full. In slave mode, an overrun error will occur if received data is not read before new data is received."
            name="READ"
            value="0"/>
      <enum description="Ignore received data. Received data is ignored, allowing transmission without reading unneeded received data. No receiver flags are generated."
            name="IGNORE"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e135324">
      <enum description="Disabled. The USART is disabled and the internal state machine and counters are reset. While Enable = 0, all USART interrupts and DMA transfers are disabled. When Enable is set again, CFG and most other control bits remain unchanged. When re-enabled, the USART will immediately be ready to transmit because the transmitter has been reset and is therefore available."
            name="DISABLED"
            value="0"/>
      <enum description="Enabled. The USART is enabled for operation." name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e135370">
      <enum description="7 bit Data length." name="BIT_7" value="0"/>
      <enum description="8 bit Data length." name="BIT_8" value="0x1"/>
      <enum description="9 bit data length. The 9th bit is commonly used for addressing in multidrop mode. See the ADDRDET bit in the CTL register."
            name="BIT_9"
            value="0x2"/>
   </enumeration>
   <enumeration id="d1e135428">
      <enum description="No parity." name="NO_PARITY" value="0"/>
      <enum description="Even parity. Adds a bit to each character such that the number of 1s in a transmitted character is even, and the number of 1s in a received character is expected to be even."
            name="EVEN_PARITY"
            value="0x2"/>
      <enum description="Odd parity. Adds a bit to each character such that the number of 1s in a transmitted character is odd, and the number of 1s in a received character is expected to be odd."
            name="ODD_PARITY"
            value="0x3"/>
   </enumeration>
   <enumeration id="d1e135486">
      <enum description="1 stop bit." name="BIT_1" value="0"/>
      <enum description="2 stop bits. This setting should only be used for asynchronous communication."
            name="BITS_2"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e135532">
      <enum description="Disabled. USART uses standard clocking." name="DISABLED" value="0"/>
      <enum description="Enabled. USART uses the 32 kHz clock from the RTC oscillator as the clock source to the BRG, and uses a special bit clocking scheme."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e135579">
      <enum description="Disabled. Break detect and generate is configured for normal operation."
            name="DISABLED"
            value="0"/>
      <enum description="Enabled. Break detect and generate is configured for LIN bus operation."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e135625">
      <enum description="No flow control. The transmitter does not receive any automatic flow control signal."
            name="DISABLED"
            value="0"/>
      <enum description="Flow control enabled. The transmitter uses the CTS input (or RTS output in loopback mode) for flow control purposes."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e135671">
      <enum description="Asynchronous mode." name="ASYNCHRONOUS_MODE" value="0"/>
      <enum description="Synchronous mode." name="SYNCHRONOUS_MODE" value="0x1"/>
   </enumeration>
   <enumeration id="d1e135717">
      <enum description="Falling edge. Un_RXD is sampled on the falling edge of SCLK."
            name="FALLING_EDGE"
            value="0"/>
      <enum description="Rising edge. Un_RXD is sampled on the rising edge of SCLK."
            name="RISING_EDGE"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e135763">
      <enum description="Slave. When synchronous mode is enabled, the USART is a slave."
            name="SLAVE"
            value="0"/>
      <enum description="Master. When synchronous mode is enabled, the USART is a master."
            name="MASTER"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e135809">
      <enum description="Normal operation." name="NORMAL" value="0"/>
      <enum description="Loopback mode. This provides a mechanism to perform diagnostic loopback testing for USART data. Serial data from the transmitter (Un_TXD) is connected internally to serial input of the receive (Un_RXD). Un_TXD and Un_RTS activity will also appear on external pins if these functions are configured to appear on device pins. The receiver RTS signal is also looped back to CTS and performs flow control if enabled by CTSEN."
            name="LOOPBACK"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e135856">
      <enum description="Disabled. If selected by OESEL, the Output Enable signal deasserted at the end of the last stop bit of a transmission."
            name="DISABLED"
            value="0"/>
      <enum description="Enabled. If selected by OESEL, the Output Enable signal remains asserted for one character time after the end of the last stop bit of a transmission. OE will also remain asserted if another transmit begins before it is deasserted."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e135902">
      <enum description="Disabled. When addressing is enabled by ADDRDET, address matching is done by software. This provides the possibility of versatile addressing (e.g. respond to more than one address)."
            name="DISABLED"
            value="0"/>
      <enum description="Enabled. When addressing is enabled by ADDRDET, address matching is done by hardware, using the value in the ADDR register as the address to match."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e135948">
      <enum description="Standard. The RTS signal is used as the standard flow control function."
            name="STANDARD"
            value="0"/>
      <enum description="RS-485. The RTS signal configured to provide an output enable signal to control an RS-485 transceiver."
            name="RS_485"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e135994">
      <enum description="Low. If selected by OESEL, the output enable is active low."
            name="LOW"
            value="0"/>
      <enum description="High. If selected by OESEL, the output enable is active high."
            name="HIGH"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e136040">
      <enum description="Standard. The RX signal is used as it arrives from the pin. This means that the RX rest value is 1, start bit is 0, data is not inverted, and the stop bit is 1."
            name="STANDARD"
            value="0"/>
      <enum description="Inverted. The RX signal is inverted before being used by the USART. This means that the RX rest value is 0, start bit is 1, data is inverted, and the stop bit is 0."
            name="INVERTED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e136086">
      <enum description="Standard. The TX signal is sent out without change. This means that the TX rest value is 1, start bit is 0, data is not inverted, and the stop bit is 1."
            name="STANDARD"
            value="0"/>
      <enum description="Inverted. The TX signal is inverted by the USART before being sent out. This means that the TX rest value is 0, start bit is 1, data is inverted, and the stop bit is 0."
            name="INVERTED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e136160">
      <enum description="Normal operation." name="NORMAL" value="0"/>
      <enum description="Continuous break. Continuous break is sent immediately when this bit is set, and remains until this bit is cleared. A break may be sent without danger of corrupting any currently transmitting character if the transmitter is first disabled (TXDIS in CTL is set) and then waiting for the transmitter to be disabled (TXDISINT in STAT = 1) before writing 1 to TXBRKEN."
            name="CONTINOUS"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e136206">
      <enum description="Disabled. The USART presents all incoming data." name="DISABLED"
            value="0"/>
      <enum description="Enabled. The USART receiver ignores incoming data that does not have the most significant bit of the data (typically the 9th bit) = 1. When the data MSB bit = 1, the receiver treats the incoming data normally, generating a received data interrupt. Software can then check the data to see if this is an address that should be handled. If it is, the ADDRDET bit is cleared by software and further incoming data is handled normally."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e136252">
      <enum description="Not disabled. USART transmitter is not disabled." name="ENABLED"
            value="0"/>
      <enum description="Disabled. USART transmitter is disabled after any character currently being transmitted is complete. This feature can be used to facilitate software flow control."
            name="DISABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e136298">
      <enum description="Clock on character. In synchronous mode, SCLK cycles only when characters are being sent on Un_TXD or to complete a character that is being received."
            name="CLOCK_ON_CHARACTER"
            value="0"/>
      <enum description="Continuous clock. SCLK runs continuously in synchronous mode, allowing characters to be received on Un_RxD independently from transmission on Un_TXD)."
            name="CONTINOUS_CLOCK"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e136344">
      <enum description="No effect. No effect on the CC bit." name="NO_EFFECT" value="0"/>
      <enum description="Auto-clear. The CC bit is automatically cleared when a complete character has been received. This bit is cleared at the same time."
            name="AUTO_CLEAR"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e136391">
      <enum description="Disabled. USART is in normal operating mode." name="DISABLED"
            value="0"/>
      <enum description="Enabled. USART is in autobaud mode. This bit should only be set when the USART receiver is idle. The first start bit of RX is measured and used the update the BRG register to match the received data rate. AUTOBAUD is cleared once this process is complete, or if there is an AERR."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e137423">
      <enum description="The transmit FIFO is not enabled." name="DISABLED" value="0"/>
      <enum description="The transmit FIFO is enabled." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e137469">
      <enum description="The receive FIFO is not enabled." name="DISABLED" value="0"/>
      <enum description="The receive FIFO is enabled." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e137533">
      <enum description="DMA is not used for the transmit function." name="DISABLED"
            value="0"/>
      <enum description="Trigger DMA for the transmit function if the FIFO is not full. Generally, data interrupts would be disabled if DMA is enabled."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e137579">
      <enum description="DMA is not used for the receive function." name="DISABLED"
            value="0"/>
      <enum description="Trigger DMA for the receive function if the FIFO is not empty. Generally, data interrupts would be disabled if DMA is enabled."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e137626">
      <enum description="Only enabled interrupts will wake up the device form reduced power modes."
            name="DISABLED"
            value="0"/>
      <enum description="A device wake-up for DMA will occur if the transmit FIFO level reaches the value specified by TXLVL in FIFOTRIG, even when the TXLVL interrupt is not enabled."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e137672">
      <enum description="Only enabled interrupts will wake up the device form reduced power modes."
            name="DISABLED"
            value="0"/>
      <enum description="A device wake-up for DMA will occur if the receive FIFO level reaches the value specified by RXLVL in FIFOTRIG, even when the RXLVL interrupt is not enabled."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e137754">
      <enum description="Debug reads of the FIFO do not pop the FIFO." name="DO_NOT_POP"
            value="0"/>
      <enum description="A debug read will cause the FIFO to pop." name="POP" value="0x1"/>
   </enumeration>
   <enumeration id="d1e138020">
      <enum description="Transmit FIFO level does not generate a FIFO level trigger."
            name="DISABLED"
            value="0"/>
      <enum description="An trigger will be generated if the transmit FIFO level reaches the value specified by the TXLVL field in this register."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e138066">
      <enum description="Receive FIFO level does not generate a FIFO level trigger."
            name="DISABLED"
            value="0"/>
      <enum description="An trigger will be generated if the receive FIFO level reaches the value specified by the RXLVL field in this register."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e138176">
      <enum description="No interrupt will be generated for a transmit error."
            name="DISABLED"
            value="0"/>
      <enum description="An interrupt will be generated when a transmit error occurs."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e138222">
      <enum description="No interrupt will be generated for a receive error."
            name="DISABLED"
            value="0"/>
      <enum description="An interrupt will be generated when a receive error occurs."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e138268">
      <enum description="No interrupt will be generated based on the TX FIFO level."
            name="DISABLED"
            value="0"/>
      <enum description="If TXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the TX FIFO level decreases to the level specified by TXLVL in the FIFOTRIG register."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e138314">
      <enum description="No interrupt will be generated based on the RX FIFO level."
            name="DISABLED"
            value="0"/>
      <enum description="If RXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the when the RX FIFO level increases to the level specified by RXLVL in the FIFOTRIG register."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e140307">
      <enum description="FIFO is not enabled. Enabling a DMIC channel with the FIFO disabled could be useful while data is being streamed to the I2S, or in order to avoid a filter settling delay when a channel is re-enabled after a period when the data was not needed."
            name="DISABLED"
            value="0"/>
      <enum description="FIFO is enabled. The FIFO must be enabled in order for the CPU or DMA to read data from the DMIC via the FIFODATA register."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e140353">
      <enum description="Reset the FIFO." name="RESET" value="0"/>
      <enum description="Normal operation" name="NORMAL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e140399">
      <enum description="FIFO level interrupts are not enabled." name="DISABLED" value="0"/>
      <enum description="FIFO level interrupts are enabled." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e140445">
      <enum description="DMA requests are not enabled." name="DISABLED" value="0"/>
      <enum description="DMA requests based on FIFO level are enabled." name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e140666">
      <enum description="Capture PDM_DATA on the rising edge of PDM_CLK."
            name="RISING_EDGE"
            value="0"/>
      <enum description="Capture PDM_DATA on the falling edge of PDM_CLK."
            name="FALLING_EDGE"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e140712">
      <enum description="Standard half rate sampling. The clock to the DMIC is sent at the same rate as the decimator is providing."
            name="STANDARD"
            value="0"/>
      <enum description="Use half rate sampling. The clock to the DMIC is sent at half the rate as the decimator is providing."
            name="HALF_RATE"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e140786">
      <enum description="Flat response, no filter." name="FLAT_RESPONSE" value="0"/>
      <enum description="155 Hz." name="HZ_155" value="0x1"/>
      <enum description="78 Hz." name="HZ_78" value="0x2"/>
      <enum description="39 Hz" name="HZ_39" value="0x3"/>
   </enumeration>
   <enumeration id="d1e140874">
      <enum description="Results roll over if out range and do not saturate."
            name="DO_NOT_SATURATE"
            value="0"/>
      <enum description="If the result overflows, it saturates at 0xFFFF for positive overflow and 0x8000 for negative overflow."
            name="SATURATE"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e141095">
      <enum description="Use 1FS output for PCM data." name="USE_1FS" value="0"/>
      <enum description="Use 2FS output for PCM data." name="USE_2FS" value="0x1"/>
   </enumeration>
   <enumeration id="d1e141216">
      <enum description="First filter by-pass." name="BYPASS" value="0"/>
      <enum description="High pass filter with -3dB cut-off at 1750Hz."
            name="HIGH_PASS_1750HZ"
            value="0x1"/>
      <enum description="High pass filter with -3dB cut-off at 215Hz."
            name="HIGH_PASS_215HZ"
            value="0x2"/>
   </enumeration>
   <enumeration id="d1e141302">
      <enum description="Normal operation, waiting for HWVAD trigger event (stage 0)."
            name="NORMAL"
            value="0"/>
      <enum description="Reset internal interrupt flag by writing a '1' pulse."
            name="RESET"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e151800">
      <enum description="All I 2S channel pairs in this Flexcomm are disabled and the internal state machines, counters, and flags are reset. No other channel pairs can be enabled."
            name="DISABLED"
            value="0"/>
      <enum description="This I 2S channel pair is enabled. Other channel pairs in this Flexcomm may be enabled in their individual PAIRENABLE bits."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e151846">
      <enum description="Normal operation, or resuming normal operation at the next frame if the I2S has already been paused."
            name="NORMAL"
            value="0"/>
      <enum description="A pause in the data flow is being requested. It is in effect when DATAPAUSED in STAT = 1."
            name="PAUSE"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e151892">
      <enum description="1 I2S channel pairs in this flexcomm" name="PAIRS_1" value="0"/>
      <enum description="2 I2S channel pairs in this flexcomm" name="PAIRS_2" value="0x1"/>
      <enum description="3 I2S channel pairs in this flexcomm" name="PAIRS_3" value="0x2"/>
      <enum description="4 I2S channel pairs in this flexcomm" name="PAIRS_4" value="0x3"/>
   </enumeration>
   <enumeration id="d1e151962">
      <enum description="Normal slave mode, the default mode. SCK and WS are received from a master and used to transmit or receive data."
            name="NORMAL_SLAVE_MODE"
            value="0"/>
      <enum description="WS synchronized master. WS is received from another master and used to synchronize the generation of SCK, when divided from the Flexcomm function clock."
            name="WS_SYNC_MASTER"
            value="0x1"/>
      <enum description="Master using an existing SCK. SCK is received and used directly to generate WS, as well as transmitting or receiving data."
            name="MASTER_USING_SCK"
            value="0x2"/>
      <enum description="Normal master mode. SCK and WS are generated so they can be sent to one or more slave devices."
            name="NORMAL_MASTER"
            value="0x3"/>
   </enumeration>
   <enumeration id="d1e152032">
      <enum description="I2S mode a.k.a. 'classic' mode. WS has a 50% duty cycle, with (for each enabled channel pair) one piece of left channel data occurring during the first phase, and one pieces of right channel data occurring during the second phase. In this mode, the data region begins one clock after the leading WS edge for the frame. For a 50% WS duty cycle, FRAMELEN must define an even number of I2S clocks for the frame. If FRAMELEN defines an odd number of clocks per frame, the extra clock will occur on the right."
            name="CLASSIC_MODE"
            value="0"/>
      <enum description="DSP mode where WS has a 50% duty cycle. See remark for mode 0."
            name="DSP_MODE_WS_50_DUTYCYCLE"
            value="0x1"/>
      <enum description="DSP mode where WS has a one clock long pulse at the beginning of each data frame."
            name="DSP_MODE_WS_1_CLOCK"
            value="0x2"/>
      <enum description="DSP mode where WS has a one data slot long pulse at the beginning of each data frame."
            name="DSP_MODE_WS_1_DATA"
            value="0x3"/>
   </enumeration>
   <enumeration id="d1e152103">
      <enum description="The right channel is taken from the high part of the FIFO data. For example, when data is 16 bits, FIFO bits 31:16 are used for the right channel."
            name="RIGHT_HIGH"
            value="0"/>
      <enum description="The right channel is taken from the low part of the FIFO data. For example, when data is 16 bits, FIFO bits 15:0 are used for the right channel."
            name="RIGHT_LOW"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e152149">
      <enum description="Data is transferred between the FIFO and the I2S serializer/deserializer right justified, i.e. starting from bit 0 and continuing to the position defined by DATALEN. This would correspond to right justified data in the stream on the data bus."
            name="RIGHT_JUSTIFIED"
            value="0"/>
      <enum description="Data is transferred between the FIFO and the I2S serializer/deserializer left justified, i.e. starting from the MSB of the FIFO entry and continuing for the number of bits defined by DATALEN. This would correspond to left justified data in the stream on the data bus."
            name="LEFT_JUSTIFIED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e152195">
      <enum description="I2S data for this channel pair is treated as left and right channels."
            name="DUAL_CHANNEL"
            value="0"/>
      <enum description="I2S data for this channel pair is treated as a single channel, functionally the left channel for this pair. In mode 0 only, the right side of the frame begins at POSITION = 0x100. This is because mode 0 makes a clear distinction between the left and right sides of the frame. When ONECHANNEL = 1, the single channel of data may be placed on the right by setting POSITION to 0x100 + the data position within the right side (e.g. 0x108 would place data starting at the 8th clock after the middle of the frame). In other modes, data for the single channel of data is placed at the clock defined by POSITION."
            name="SINGLE_CHANNEL"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e152241">
      <enum description="Normal operation, data is transferred to or from the Flexcomm FIFO."
            name="NORMAL"
            value="0"/>
      <enum description="The data source is the D-Mic subsystem. When PDMDATA = 1, only the primary channel pair can be used in this Flexcomm. If ONECHANNEL = 1, only the PDM left data is used. the WS rate must match the Fs (sample rate) of the D-Mic decimator. A rate mismatch will at some point cause the I2S to overrun or underrun."
            name="DMIC_SUBSYSTEM"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e152287">
      <enum description="Data is launched on SCK falling edges and sampled on SCK rising edges (standard for I2S)."
            name="FALLING_EDGE"
            value="0"/>
      <enum description="Data is launched on SCK rising edges and sampled on SCK falling edges."
            name="RISING_EDGE"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e152333">
      <enum description="Data frames begin at a falling edge of WS (standard for classic I2S)."
            name="NOT_INVERTED"
            value="0"/>
      <enum description="WS is inverted, resulting in a data frame beginning at a rising edge of WS (standard for most 'non-classic' variations of I2S)."
            name="INVERTED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e152490">
      <enum description="The transmitter/receiver for channel pair is currently idle."
            name="IDLE"
            value="0"/>
      <enum description="The transmitter/receiver for channel pair is currently processing data."
            name="BUSY"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e152536">
      <enum description="No error has been recorded." name="NO_ERROR" value="0"/>
      <enum description="An error has been recorded for some channel pair that is operating in slave mode. ERROR is cleared by writing a 1 to this bit position."
            name="ERROR"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e152582">
      <enum description="Left channel." name="LEFT_CHANNEL" value="0"/>
      <enum description="Right channel." name="RIGHT_CHANNEL" value="0x1"/>
   </enumeration>
   <enumeration id="d1e152628">
      <enum description="Data is not currently paused. A data pause may have been requested but is not yet in force, waiting for an allowed pause point. Refer to the description of the DATAPAUSE control bit in the CFG1 register."
            name="NOT_PAUSED"
            value="0"/>
      <enum description="A data pause has been requested and is now in force."
            name="PAUSED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e152749">
      <enum description="The transmit FIFO is not enabled." name="DISABLED" value="0"/>
      <enum description="The transmit FIFO is enabled." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e152795">
      <enum description="The receive FIFO is not enabled." name="DISABLED" value="0"/>
      <enum description="The receive FIFO is enabled." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e152841">
      <enum description="If the TX FIFO becomes empty, the last value is sent. This setting may be used when the data length is 24 bits or less, or when MONO = 1 for this channel pair."
            name="LAST_VALUE"
            value="0"/>
      <enum description="If the TX FIFO becomes empty, 0 is sent. Use if the data length is greater than 24 bits or if zero fill is preferred."
            name="ZERO"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e152887">
      <enum description="48-bit I2S FIFO entries are handled as all 24-bit values."
            name="BIT_24"
            value="0"/>
      <enum description="48-bit I2S FIFO entries are handled as alternating 32-bit and 16-bit values."
            name="BIT_32_16"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e152952">
      <enum description="DMA is not used for the transmit function." name="DISABLED"
            value="0"/>
      <enum description="Trigger DMA for the transmit function if the FIFO is not full. Generally, data interrupts would be disabled if DMA is enabled."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e152998">
      <enum description="DMA is not used for the receive function." name="DISABLED"
            value="0"/>
      <enum description="Trigger DMA for the receive function if the FIFO is not empty. Generally, data interrupts would be disabled if DMA is enabled."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e153044">
      <enum description="Only enabled interrupts will wake up the device form reduced power modes."
            name="DISABLED"
            value="0"/>
      <enum description="A device wake-up for DMA will occur if the transmit FIFO level reaches the value specified by TXLVL in FIFOTRIG, even when the TXLVL interrupt is not enabled."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e153090">
      <enum description="Only enabled interrupts will wake up the device form reduced power modes."
            name="DISABLED"
            value="0"/>
      <enum description="A device wake-up for DMA will occur if the receive FIFO level reaches the value specified by RXLVL in FIFOTRIG, even when the RXLVL interrupt is not enabled."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e153173">
      <enum description="Debug reads of the FIFO do not pop the FIFO." name="DO_NOT_POP"
            value="0"/>
      <enum description="A debug read will cause the FIFO to pop." name="POP" value="0x1"/>
   </enumeration>
   <enumeration id="d1e153438">
      <enum description="Transmit FIFO level does not generate a FIFO level trigger."
            name="DISABLED"
            value="0"/>
      <enum description="An trigger will be generated if the transmit FIFO level reaches the value specified by the TXLVL field in this register."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e153484">
      <enum description="Receive FIFO level does not generate a FIFO level trigger."
            name="DISABLED"
            value="0"/>
      <enum description="An trigger will be generated if the receive FIFO level reaches the value specified by the RXLVL field in this register."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e153594">
      <enum description="No interrupt will be generated for a transmit error."
            name="DISABLED"
            value="0"/>
      <enum description="An interrupt will be generated when a transmit error occurs."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e153640">
      <enum description="No interrupt will be generated for a receive error."
            name="DISABLED"
            value="0"/>
      <enum description="An interrupt will be generated when a receive error occurs."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e153686">
      <enum description="No interrupt will be generated based on the TX FIFO level."
            name="DISABLED"
            value="0"/>
      <enum description="If TXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the TX FIFO level decreases to the level specified by TXLVL in the FIFOTRIG register."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e153732">
      <enum description="No interrupt will be generated based on the RX FIFO level."
            name="DISABLED"
            value="0"/>
      <enum description="If RXLVLENA in the FIFOTRIG register = 1, an interrupt will be generated when the when the RX FIFO level increases to the level specified by RXLVL in the FIFOTRIG register."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e163342">
      <enum description="Synchronous mode. The ADC clock is derived from the system clock based on the divide value selected in the CLKDIV field. The ADC clock will be started in a controlled fashion in response to a trigger to eliminate any uncertainty in the launching of an ADC conversion in response to any synchronous (on-chip) trigger. In Synchronous mode with the SYNCBYPASS bit (in a sequence control register) set, sampling of the ADC input and start of conversion will initiate 2 system clocks after the leading edge of a (synchronous) trigger pulse."
            name="SYNCHRONOUS_MODE"
            value="0"/>
      <enum description="Asynchronous mode. The ADC clock is based on the output of the ADC clock divider ADCCLKSEL in the SYSCON block."
            name="ASYNCHRONOUS_MODE"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e163388">
      <enum description="6-bit resolution. An ADC conversion requires 9 ADC clocks, plus any clocks specified by the TSAMP field."
            name="RESOLUTION_6_BIT"
            value="0"/>
      <enum description="8-bit resolution. An ADC conversion requires 11 ADC clocks, plus any clocks specified by the TSAMP field."
            name="RESOLUTION_8_BIT"
            value="0x1"/>
      <enum description="10-bit resolution. An ADC conversion requires 13 ADC clocks, plus any clocks specified by the TSAMP field."
            name="RESOLUTION_10_BIT"
            value="0x2"/>
      <enum description="12-bit resolution. An ADC conversion requires 15 ADC clocks, plus any clocks specified by the TSAMP field."
            name="RESOLUTION_12_BIT"
            value="0x3"/>
   </enumeration>
   <enumeration id="d1e163458">
      <enum description="Calibrate. The stored calibration value will be applied to the ADC during conversions to compensated for offset error. A calibration cycle must be performed each time the chip is powered-up. Re-calibration may be warranted periodically - especially if operating conditions have changed."
            name="CALIBRATE"
            value="0"/>
      <enum description="Bypass calibration. Calibration is not utilized. Less time is required when enabling the ADC - particularly following chip power-up. Attempts to launch a calibration cycle are blocked when this bit is set."
            name="BYPASS_CALIBRATION"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e163550">
      <enum description="ADC0_IN0 function." name="ADC0_IN0" value="0"/>
      <enum description="Internal temperature sensor." name="TEMPERATURE_SENSOR"
            value="0x3"/>
   </enumeration>
   <enumeration id="d1e163669">
      <enum description="Negative edge. A negative edge launches the conversion sequence on the selected trigger input."
            name="NEGATIVE_EDGE"
            value="0"/>
      <enum description="Positive edge. A positive edge launches the conversion sequence on the selected trigger input."
            name="POSITIVE_EDGE"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e163715">
      <enum description="Enable trigger synchronization. The hardware trigger bypass is not enabled."
            name="ENABLE_TRIGGER_SYNCH"
            value="0"/>
      <enum description="Bypass trigger synchronization. The hardware trigger bypass is enabled."
            name="BYPASS_TRIGGER_SYNCH"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e163816">
      <enum description="Low priority. Any B trigger which occurs while an A conversion sequence is active will be ignored and lost."
            name="LOW_PRIORITY"
            value="0"/>
      <enum description="High priority. Setting this bit to a 1 will permit any enabled B sequence trigger (including a B sequence software start) to immediately interrupt sequence A and launch a B sequence in it's place. The conversion currently in progress will be terminated. The A sequence that was interrupted will automatically resume after the B sequence completes. The channel whose conversion was terminated will be re-sampled and the conversion sequence will resume from that point."
            name="HIGH_PRIORITY"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e163862">
      <enum description="End of conversion. The sequence A interrupt/DMA trigger will be set at the end of each individual ADC conversion performed under sequence A. This flag will mirror the DATAVALID bit in the SEQA_GDAT register. The OVERRUN bit in the SEQA_GDAT register will contribute to generation of an overrun interrupt/DMA trigger if enabled."
            name="END_OF_CONVERSION"
            value="0"/>
      <enum description="End of sequence. The sequence A interrupt/DMA trigger will be set when the entire set of sequence-A conversions completes. This flag will need to be explicitly cleared by software or by the DMA-clear signal in this mode. The OVERRUN bit in the SEQA_GDAT register will NOT contribute to generation of an overrun interrupt/DMA trigger since it is assumed this register may not be utilized in this mode."
            name="END_OF_SEQUENCE"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e163908">
      <enum description="Disabled. Sequence n is disabled. Sequence n triggers are ignored. If this bit is cleared while sequence n is in progress, the sequence will be halted at the end of the current conversion. After the sequence is re-enabled, a new trigger will be required to restart the sequence beginning with the next enabled channel."
            name="DISABLED"
            value="0"/>
      <enum description="Enabled. Sequence n is enabled." name="ENABLED" value="0x1"/>
   </enumeration>
   <enumeration id="d1e164456">
      <enum description="Threshold 0. Results for this channel will be compared against the threshold levels indicated in the THR0_LOW and THR0_HIGH registers."
            name="THRESHOLD0"
            value="0"/>
      <enum description="Threshold 1. Results for this channel will be compared against the threshold levels indicated in the THR1_LOW and THR1_HIGH registers."
            name="THRESHOLD1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e164730">
      <enum description="Disabled. The sequence A interrupt/DMA trigger is disabled."
            name="DISABLED"
            value="0"/>
      <enum description="Enabled. The sequence A interrupt/DMA trigger is enabled and will be asserted either upon completion of each individual conversion performed as part of sequence A, or upon completion of the entire A sequence of conversions, depending on the MODE bit in the SEQA_CTRL register."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e164776">
      <enum description="Disabled. The sequence B interrupt/DMA trigger is disabled."
            name="DISABLED"
            value="0"/>
      <enum description="Enabled. The sequence B interrupt/DMA trigger is enabled and will be asserted either upon completion of each individual conversion performed as part of sequence B, or upon completion of the entire B sequence of conversions, depending on the MODE bit in the SEQB_CTRL register."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e164822">
      <enum description="Disabled. The overrun interrupt is disabled." name="DISABLED"
            value="0"/>
      <enum description="Enabled. The overrun interrupt is enabled. Detection of an overrun condition on any of the 12 channel data registers will cause an overrun interrupt/DMA trigger. In addition, if the MODE bit for a particular sequence is 0, then an overrun in the global data register for that sequence will also cause this interrupt/DMA trigger to be asserted."
            name="ENABLED"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e164868">
      <enum description="Disabled." name="DISABLED" value="0"/>
      <enum description="Outside threshold." name="OUTSIDE_THRESHOLD" value="0x1"/>
      <enum description="Crossing threshold." name="CROSSING_THRESHOLD" value="0x2"/>
   </enumeration>
   <enumeration id="d1e173998">
      <enum description="Disabled." name="ITMENA_0" value="0"/>
      <enum description="Enabled." name="ITMENA_1" value="0x1"/>
   </enumeration>
   <enumeration id="d1e174044">
      <enum description="Disabled." name="TSENA_0" value="0"/>
      <enum description="Enabled." name="TSENA_1" value="0x1"/>
   </enumeration>
   <enumeration id="d1e174090">
      <enum description="Disabled." name="SYNCENA_0" value="0"/>
      <enum description="Enabled." name="SYNCENA_1" value="0x1"/>
   </enumeration>
   <enumeration id="d1e174136">
      <enum description="Disabled." name="TXENA_0" value="0"/>
      <enum description="Enabled." name="TXENA_1" value="0x1"/>
   </enumeration>
   <enumeration id="d1e174182">
      <enum description="Timestamp counter uses the processor system clock."
            name="SWOENA_0"
            value="0"/>
      <enum description="Timestamp counter uses asynchronous clock from the TPIU interface."
            name="SWOENA_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e174229">
      <enum description="No prescaling." name="TSPrescale_0" value="0"/>
      <enum description="Divide by 4." name="TSPrescale_1" value="0x1"/>
      <enum description="Divide by 16." name="TSPrescale_2" value="0x2"/>
      <enum description="Divide by 64." name="TSPrescale_3" value="0x3"/>
   </enumeration>
   <enumeration id="d1e174299">
      <enum description="Disable generation of global timestamps." name="GTSFREQ_0"
            value="0"/>
      <enum description="Generate timestamp request whenever the ITM detects a change in global timestamp counter bits [47:7]. This is approximately every 128 cycles."
            name="GTSFREQ_1"
            value="0x1"/>
      <enum description="Generate timestamp request whenever the ITM detects a change in global timestamp counter bits [47:13]. This is approximately every 8192 cycles."
            name="GTSFREQ_2"
            value="0x2"/>
      <enum description="Generate a timestamp after every packet, if the output FIFO is empty."
            name="GTSFREQ_3"
            value="0x3"/>
   </enumeration>
   <enumeration id="d1e174387">
      <enum description="ITM is not processing any events." name="BUSY_0" value="0"/>
      <enum description="ITM events present and beeing drained." name="BUSY_1" value="0x1"/>
   </enumeration>
   <enumeration id="d1e175032">
      <enum description="ROM table." name="ComponentClass_1" value="0x1"/>
      <enum description="CoreSight component." name="ComponentClass_9" value="0x9"/>
      <enum description="PrimeCell of system component with no standardized register layout, for backward compatibility."
            name="ComponentClass_15"
            value="0xf"/>
   </enumeration>
   <enumeration id="d1e175445">
      <enum description="there are preempted active exceptions to execute"
            name="RETTOBASE_0"
            value="0"/>
      <enum description="there are no active exceptions, or the currently-executing exception is the only active exception"
            name="RETTOBASE_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e175527">
      <enum description="Will not service" name="ISRPREEMPT_0" value="0"/>
      <enum description="Will service a pending exception" name="ISRPREEMPT_1" value="0x1"/>
   </enumeration>
   <enumeration id="d1e175574">
      <enum description="no effect" name="PENDSTCLR_0" value="0"/>
      <enum description="removes the pending state from the SysTick exception"
            name="PENDSTCLR_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e175620">
      <enum description="write: no effect; read: SysTick exception is not pending"
            name="PENDSTSET_0"
            value="0"/>
      <enum description="write: changes SysTick exception state to pending; read: SysTick exception is pending"
            name="PENDSTSET_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e175666">
      <enum description="no effect" name="PENDSVCLR_0" value="0"/>
      <enum description="removes the pending state from the PendSV exception"
            name="PENDSVCLR_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e175712">
      <enum description="write: no effect; read: PendSV exception is not pending"
            name="PENDSVSET_0"
            value="0"/>
      <enum description="write: changes PendSV exception state to pending; read: PendSV exception is pending"
            name="PENDSVSET_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e175758">
      <enum description="write: no effect; read: NMI exception is not pending"
            name="NMIPENDSET_0"
            value="0"/>
      <enum description="write: changes NMI exception state to pending; read: NMI exception is pending"
            name="NMIPENDSET_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e175914">
      <enum description="no system reset request" name="SYSRESETREQ_0" value="0"/>
      <enum description="asserts a signal to the outer system that requests a reset"
            name="SYSRESETREQ_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e175978">
      <enum description="Little-endian" name="ENDIANNESS_0" value="0"/>
      <enum description="Big-endian" name="ENDIANNESS_1" value="0x1"/>
   </enumeration>
   <enumeration id="d1e176072">
      <enum description="o not sleep when returning to Thread mode" name="SLEEPONEXIT_0"
            value="0"/>
      <enum description="enter sleep, or deep sleep, on return from an ISR"
            name="SLEEPONEXIT_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e176118">
      <enum description="sleep" name="SLEEPDEEP_0" value="0"/>
      <enum description="deep sleep" name="SLEEPDEEP_1" value="0x1"/>
   </enumeration>
   <enumeration id="d1e176164">
      <enum description="only enabled interrupts or events can wakeup the processor, disabled interrupts are excluded"
            name="SEVONPEND_0"
            value="0"/>
      <enum description="enabled events and all interrupts, including disabled interrupts, can wakeup the processor"
            name="SEVONPEND_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e176238">
      <enum description="processor can enter Thread mode only when no exception is active"
            name="NONBASETHRDENA_0"
            value="0"/>
      <enum description="processor can enter Thread mode from any level under the control of an EXC_RETURN value"
            name="NONBASETHRDENA_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e176284">
      <enum description="disable" name="USERSETMPEND_0" value="0"/>
      <enum description="enable" name="USERSETMPEND_1" value="0x1"/>
   </enumeration>
   <enumeration id="d1e176330">
      <enum description="do not trap unaligned halfword and word accesses"
            name="UNALIGN_TRP_0"
            value="0"/>
      <enum description="trap unaligned halfword and word accesses" name="UNALIGN_TRP_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e176376">
      <enum description="do not trap divide by 0" name="DIV_0_TRP_0" value="0"/>
      <enum description="trap divide by 0" name="DIV_0_TRP_1" value="0x1"/>
   </enumeration>
   <enumeration id="d1e176422">
      <enum description="data bus faults caused by load and store instructions cause a lock-up"
            name="BFHFNMIGN_0"
            value="0"/>
      <enum description="handlers running at priority -1 and -2 ignore data bus faults caused by load and store instructions"
            name="BFHFNMIGN_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e176469">
      <enum description="4-byte aligned" name="STKALIGN_0" value="0"/>
      <enum description="8-byte aligned" name="STKALIGN_1" value="0x1"/>
   </enumeration>
   <enumeration id="d1e176735">
      <enum description="exception is not active" name="MEMFAULTACT_0" value="0"/>
      <enum description="exception is active" name="MEMFAULTACT_1" value="0x1"/>
   </enumeration>
   <enumeration id="d1e176781">
      <enum description="exception is not active" name="BUSFAULTACT_0" value="0"/>
      <enum description="exception is active" name="BUSFAULTACT_1" value="0x1"/>
   </enumeration>
   <enumeration id="d1e176827">
      <enum description="exception is not active" name="USGFAULTACT_0" value="0"/>
      <enum description="exception is active" name="USGFAULTACT_1" value="0x1"/>
   </enumeration>
   <enumeration id="d1e176873">
      <enum description="exception is not active" name="SVCALLACT_0" value="0"/>
      <enum description="exception is active" name="SVCALLACT_1" value="0x1"/>
   </enumeration>
   <enumeration id="d1e176919">
      <enum description="exception is not active" name="MONITORACT_0" value="0"/>
      <enum description="exception is active" name="MONITORACT_1" value="0x1"/>
   </enumeration>
   <enumeration id="d1e176966">
      <enum description="exception is not active" name="PENDSVACT_0" value="0"/>
      <enum description="exception is active" name="PENDSVACT_1" value="0x1"/>
   </enumeration>
   <enumeration id="d1e177012">
      <enum description="exception is not active" name="SYSTICKACT_0" value="0"/>
      <enum description="exception is active" name="SYSTICKACT_1" value="0x1"/>
   </enumeration>
   <enumeration id="d1e177058">
      <enum description="exception is not pending" name="USGFAULTPENDED_0" value="0"/>
      <enum description="exception is pending" name="USGFAULTPENDED_1" value="0x1"/>
   </enumeration>
   <enumeration id="d1e177104">
      <enum description="exception is not pending" name="MEMFAULTPENDED_0" value="0"/>
      <enum description="exception is pending" name="MEMFAULTPENDED_1" value="0x1"/>
   </enumeration>
   <enumeration id="d1e177150">
      <enum description="exception is not pending" name="BUSFAULTPENDED_0" value="0"/>
      <enum description="exception is pending" name="BUSFAULTPENDED_1" value="0x1"/>
   </enumeration>
   <enumeration id="d1e177196">
      <enum description="exception is not pending" name="SVCALLPENDED_0" value="0"/>
      <enum description="exception is pending" name="SVCALLPENDED_1" value="0x1"/>
   </enumeration>
   <enumeration id="d1e177243">
      <enum description="disable the exception" name="MEMFAULTENA_0" value="0"/>
      <enum description="enable the exception" name="MEMFAULTENA_1" value="0x1"/>
   </enumeration>
   <enumeration id="d1e177289">
      <enum description="disable the exception" name="BUSFAULTENA_0" value="0"/>
      <enum description="enable the exception" name="BUSFAULTENA_1" value="0x1"/>
   </enumeration>
   <enumeration id="d1e177335">
      <enum description="disable the exception" name="USGFAULTENA_0" value="0"/>
      <enum description="enable the exception" name="USGFAULTENA_1" value="0x1"/>
   </enumeration>
   <enumeration id="d1e177410">
      <enum description="no instruction access violation fault" name="IACCVIOL_0" value="0"/>
      <enum description="the processor attempted an instruction fetch from a location that does not permit execution"
            name="IACCVIOL_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e177456">
      <enum description="no data access violation fault" name="DACCVIOL_0" value="0"/>
      <enum description="the processor attempted a load or store at a location that does not permit the operation"
            name="DACCVIOL_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e177502">
      <enum description="no unstacking fault" name="MUNSTKERR_0" value="0"/>
      <enum description="unstack for an exception return has caused one or more access violations"
            name="MUNSTKERR_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e177548">
      <enum description="no stacking fault" name="MSTKERR_0" value="0"/>
      <enum description="stacking for an exception entry has caused one or more access violations"
            name="MSTKERR_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e177594">
      <enum description="No MemManage fault occurred during floating-point lazy state preservation"
            name="MLSPERR_0"
            value="0"/>
      <enum description="A MemManage fault occurred during floating-point lazy state preservation"
            name="MLSPERR_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e177641">
      <enum description="value in MMAR is not a valid fault address" name="MMARVALID_0"
            value="0"/>
      <enum description="MMAR holds a valid fault address" name="MMARVALID_1" value="0x1"/>
   </enumeration>
   <enumeration id="d1e177687">
      <enum description="no instruction bus error" name="IBUSERR_0" value="0"/>
      <enum description="instruction bus error" name="IBUSERR_1" value="0x1"/>
   </enumeration>
   <enumeration id="d1e177733">
      <enum description="no precise data bus error" name="PRECISERR_0" value="0"/>
      <enum description="a data bus error has occurred, and the PC value stacked for the exception return points to the instruction that caused the fault"
            name="PRECISERR_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e177779">
      <enum description="no imprecise data bus error" name="IMPRECISERR_0" value="0"/>
      <enum description="a data bus error has occurred, but the return address in the stack frame is not related to the instruction that caused the error"
            name="IMPRECISERR_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e177825">
      <enum description="no unstacking fault" name="UNSTKERR_0" value="0"/>
      <enum description="unstack for an exception return has caused one or more BusFaults"
            name="UNSTKERR_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e177871">
      <enum description="no stacking fault" name="STKERR_0" value="0"/>
      <enum description="stacking for an exception entry has caused one or more BusFaults"
            name="STKERR_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e177918">
      <enum description="No bus fault occurred during floating-point lazy state preservation"
            name="LSPERR_0"
            value="0"/>
      <enum description="A bus fault occurred during floating-point lazy state preservation"
            name="LSPERR_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e177964">
      <enum description="value in BFAR is not a valid fault address" name="BFARVALID_0"
            value="0"/>
      <enum description="BFAR holds a valid fault address" name="BFARVALID_1" value="0x1"/>
   </enumeration>
   <enumeration id="d1e178010">
      <enum description="no undefined instruction UsageFault" name="UNDEFINSTR_0" value="0"/>
      <enum description="the processor has attempted to execute an undefined instruction"
            name="UNDEFINSTR_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e178056">
      <enum description="no invalid state UsageFault" name="INVSTATE_0" value="0"/>
      <enum description="the processor has attempted to execute an instruction that makes illegal use of the EPSR"
            name="INVSTATE_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e178102">
      <enum description="no invalid PC load UsageFault" name="INVPC_0" value="0"/>
      <enum description="the processor has attempted an illegal load of EXC_RETURN to the PC"
            name="INVPC_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e178148">
      <enum description="no UsageFault caused by attempting to access a coprocessor"
            name="NOCP_0"
            value="0"/>
      <enum description="the processor has attempted to access a coprocessor" name="NOCP_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e178195">
      <enum description="no unaligned access fault, or unaligned access trapping not enabled"
            name="UNALIGNED_0"
            value="0"/>
      <enum description="the processor has made an unaligned memory access"
            name="UNALIGNED_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e178241">
      <enum description="no divide by zero fault, or divide by zero trapping not enabled"
            name="DIVBYZERO_0"
            value="0"/>
      <enum description="the processor has executed an SDIV or UDIV instruction with a divisor of 0"
            name="DIVBYZERO_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e178315">
      <enum description="no BusFault on vector table read" name="VECTTBL_0" value="0"/>
      <enum description="BusFault on vector table read" name="VECTTBL_1" value="0x1"/>
   </enumeration>
   <enumeration id="d1e178361">
      <enum description="no forced HardFault" name="FORCED_0" value="0"/>
      <enum description="forced HardFault" name="FORCED_1" value="0x1"/>
   </enumeration>
   <enumeration id="d1e178453">
      <enum description="No active halt request debug event" name="HALTED_0" value="0"/>
      <enum description="Halt request debug event active" name="HALTED_1" value="0x1"/>
   </enumeration>
   <enumeration id="d1e178499">
      <enum description="No current breakpoint debug event" name="BKPT_0" value="0"/>
      <enum description="At least one current breakpoint debug event" name="BKPT_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e178545">
      <enum description="No current debug events generated by the DWT" name="DWTTRAP_0"
            value="0"/>
      <enum description="At least one current debug event generated by the DWT"
            name="DWTTRAP_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e178591">
      <enum description="No Vector catch triggered" name="VCATCH_0" value="0"/>
      <enum description="Vector catch triggered" name="VCATCH_1" value="0x1"/>
   </enumeration>
   <enumeration id="d1e178637">
      <enum description="No EDBGRQ debug event" name="EXTERNAL_0" value="0"/>
      <enum description="EDBGRQ debug event" name="EXTERNAL_1" value="0x1"/>
   </enumeration>
   <enumeration id="d1e178850">
      <enum description="Access denied. Any attempted access generates a NOCP UsageFault"
            name="CP10_0"
            value="0"/>
      <enum description="Privileged access only. An unprivileged access generates a NOCP fault."
            name="CP10_1"
            value="0x1"/>
      <enum description="Full access." name="CP10_3" value="0x3"/>
   </enumeration>
   <enumeration id="d1e178908">
      <enum description="Access denied. Any attempted access generates a NOCP UsageFault"
            name="CP11_0"
            value="0"/>
      <enum description="Privileged access only. An unprivileged access generates a NOCP fault."
            name="CP11_1"
            value="0x1"/>
      <enum description="Full access." name="CP11_3" value="0x3"/>
   </enumeration>
   <enumeration id="d1e178994">
      <enum description="Lazy state preservation is not active." name="LSPACT_0" value="0"/>
      <enum description="Lazy state preservation is active. floating-point stack frame has been allocated but saving state to it has been deferred."
            name="LSPACT_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e179040">
      <enum description="Privilege level was not user when the floating-point stack frame was allocated."
            name="USER_0"
            value="0"/>
      <enum description="Privilege level was user when the floating-point stack frame was allocated."
            name="USER_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e179086">
      <enum description="Mode was not Thread Mode when the floating-point stack frame was allocated."
            name="THREAD_0"
            value="0"/>
      <enum description="Mode was Thread Mode when the floating-point stack frame was allocated."
            name="THREAD_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e179132">
      <enum description="Priority did not permit setting the HardFault handler to the pending state when the floating-point stack frame was allocated."
            name="HFRDY_0"
            value="0"/>
      <enum description="Priority permitted setting the HardFault handler to the pending state when the floating-point stack frame was allocated."
            name="HFRDY_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e179178">
      <enum description="MemManage is disabled or priority did not permit setting the MemManage handler to the pending state when the floating-point stack frame was allocated."
            name="MMRDY_0"
            value="0"/>
      <enum description="MemManage is enabled and priority permitted setting the MemManage handler to the pending state when the floating-point stack frame was allocated."
            name="MMRDY_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e179225">
      <enum description="BusFault is disabled or priority did not permit setting the BusFault handler to the pending state when the floating-point stack frame was allocated."
            name="BFRDY_0"
            value="0"/>
      <enum description="BusFault is disabled or priority did not permit setting the BusFault handler to the pending state when the floating-point stack frame was allocated."
            name="BFRDY_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e179271">
      <enum description="DebugMonitor is disabled or priority did not permit setting MON_PEND when the floating-point stack frame was allocated."
            name="MONRDY_0"
            value="0"/>
      <enum description="DebugMonitor is enabled and priority permits setting MON_PEND when the floating-point stack frame was allocated."
            name="MONRDY_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e179317">
      <enum description="Disable automatic lazy state preservation for floating-point context."
            name="LSPEN_0"
            value="0"/>
      <enum description="Enable automatic lazy state preservation for floating-point context."
            name="LSPEN_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e179363">
      <enum description="Disable CONTROL2 setting on execution of a floating-point instruction."
            name="ASPEN_0"
            value="0"/>
      <enum description="Enable CONTROL2 setting on execution of a floating-point instruction."
            name="ASPEN_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e179483">
      <enum description="Round to Nearest (RN) mode" name="RMode_0" value="0"/>
      <enum description="Round towards Plus Infinity (RP) mode." name="RMode_1" value="0x1"/>
      <enum description="Round towards Minus Infinity (RM) mode." name="RMode_2"
            value="0x2"/>
      <enum description="Round towards Zero (RZ) mode." name="RMode_3" value="0x3"/>
   </enumeration>
   <enumeration id="d1e179553">
      <enum description="Flush-to-zero mode disabled. Behavior of the floating-point system is fully compliant with the IEEE 754 standard."
            name="FZ_0"
            value="0"/>
      <enum description="Flush-to-zero mode enabled." name="FZ_1" value="0x1"/>
   </enumeration>
   <enumeration id="d1e179599">
      <enum description="NaN operands propagate through to the output of a floating-point operation."
            name="DN_0"
            value="0"/>
      <enum description="Any operation involving one or more NaNs returns the Default NaN."
            name="DN_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e179645">
      <enum description="IEEE half-precision format selected." name="AHP_0" value="0"/>
      <enum description="Alternative half-precision format selected." name="AHP_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e179753">
      <enum description="counter disabled" name="ENABLE_0" value="0"/>
      <enum description="counter enabled" name="ENABLE_1" value="0x1"/>
   </enumeration>
   <enumeration id="d1e179799">
      <enum description="counting down to 0 does not assert the SysTick exception request"
            name="TICKINT_0"
            value="0"/>
      <enum description="counting down to 0 asserts the SysTick exception request"
            name="TICKINT_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e179845">
      <enum description="external clock" name="CLKSOURCE_0" value="0"/>
      <enum description="processor clock" name="CLKSOURCE_1" value="0x1"/>
   </enumeration>
   <enumeration id="d1e180047">
      <enum description="10ms calibration value is exact" name="SKEW_0" value="0"/>
      <enum description="10ms calibration value is inexact, because of the clock frequency"
            name="SKEW_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e180093">
      <enum description="The reference clock is provided" name="NOREF_0" value="0"/>
      <enum description="The reference clock is not provided" name="NOREF_1" value="0x1"/>
   </enumeration>
   <enumeration id="d1e186204">
      <enum description="ETMEN is LOW." name="ETMPS_0" value="0"/>
      <enum description="ETMEN is HIGH." name="ETMPS_1" value="0x1"/>
   </enumeration>
   <enumeration id="d1e186944">
      <enum description="Tracing is unaffected by the trace start/stop logic."
            name="TraceControlEnable_0"
            value="0"/>
      <enum description="Tracing is controlled by the trace on and off addresses configured for the trace start/stop logic."
            name="TraceControlEnable_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e187247">
      <enum description="A 32-bit Thumb instruction is traced as two instructions, and exceptions might occur between these two instructions."
            name="ThumbInstructionTracing_0"
            value="0"/>
      <enum description="A 32-bit Thimb instruction is traced as a single instruction."
            name="ThumbInstructionTracing_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e187293">
      <enum description="The ETM behaves as if the processor is in Secure state at all times."
            name="SecurityExtensionSupport_0"
            value="0"/>
      <enum description="The ARM architecture Security Extensions are implemented by the processor."
            name="SecurityExtensionSupport_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e187339">
      <enum description="The ETM implements the original branch packet encoding."
            name="BranchPacketEncoding_0"
            value="0"/>
      <enum description="The ETM implements the alternative branch packet encoding."
            name="BranchPacketEncoding_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e188311">
      <enum description="Access permitted." name="STATUS_0" value="0"/>
      <enum description="Write access to the component is blocked. All writes to control registers are ignored. Reads are permitted."
            name="STATUS_1"
            value="0x1"/>
   </enumeration>
   <enumeration id="d1e188421">
      <enum description="Non-secure non-invasive debug disabled" name="NSNID_2" value="0x2"/>
      <enum description="Non-secure non-invasive debug enabled" name="NSNID_3" value="0x3"/>
   </enumeration>
   <enumeration id="d1e188531">
      <enum description="Trace source" name="MajorType_3" value="0x3"/>
   </enumeration>
   <enumeration id="d1e188565">
      <enum description="Processor trace" name="SubType_1" value="0x1"/>
   </enumeration>
   <enumeration id="d1e189070">
      <enum description="ROM table." name="ComponentClass_1" value="0x1"/>
      <enum description="CoreSight component." name="ComponentClass_9" value="0x9"/>
      <enum description="PrimeCell of system component with no standardized register layout, for backward compatibility."
            name="ComponentClass_15"
            value="0xf"/>
   </enumeration>
   <peripheral defRegSize="4" description="LPC5460x System configuration (SYSCON)" id="SYSCON"
               size="0x20048">
      <register description="AHB multilayer matrix priority control" format="hex0x"
                id="SYSCON@AHBMATPRIO"
                offset="0x10"
                size="4">
         <field description="I-Code bus priority." format="hex0x"
                id="SYSCON@AHBMATPRIO@PRI-ICODE"
                offset="[1:0]"/>
         <field description="D-Code bus priority." format="hex0x"
                id="SYSCON@AHBMATPRIO@PRI-DCODE"
                offset="[3:2]"/>
         <field description="System bus priority." format="hex0x"
                id="SYSCON@AHBMATPRIO@PRI-SYS"
                offset="[5:4]"/>
         <field description="DMA controller priority." format="hex0x"
                id="SYSCON@AHBMATPRIO@PRI-DMA"
                offset="[9:6]"/>
         <field description="Ethernet DMA priority." format="hex0x"
                id="SYSCON@AHBMATPRIO@PRI-ETH"
                offset="[11:10]"/>
         <field description="LCD DMA priority." format="hex0x" id="SYSCON@AHBMATPRIO@PRI-LCD"
                offset="[13:12]"/>
         <field description="USB0 DMA priority." format="hex0x" id="SYSCON@AHBMATPRIO@PRI-USB0"
                offset="[15:14]"/>
         <field description="USB1 DMA priority." format="hex0x" id="SYSCON@AHBMATPRIO@PRI-USB1"
                offset="[17:16]"/>
         <field description="SDIO priority." format="hex0x" id="SYSCON@AHBMATPRIO@PRI-SDIO"
                offset="[19:18]"/>
         <field description="MCAN1 priority." format="hex0x" id="SYSCON@AHBMATPRIO@PRI-MCAN1"
                offset="[21:20]"/>
         <field description="MCAN2 priority." format="hex0x" id="SYSCON@AHBMATPRIO@PRI-MCAN2"
                offset="[23:22]"/>
         <field description="SHA priority." format="hex0x" id="SYSCON@AHBMATPRIO@PRI-SHA"
                offset="[25:24]"/>
      </register>
      <register description="System tick counter calibration" format="hex0x"
                id="SYSCON@SYSTCKCAL"
                offset="0x40"
                size="4">
         <field description="System tick timer calibration value." format="hex0x"
                id="SYSCON@SYSTCKCAL@CAL"
                offset="[23:0]"/>
         <field description="Initial value for the Systick timer." format="hex0x"
                id="SYSCON@SYSTCKCAL@SKEW"
                offset="[24]"/>
         <field description="Initial value for the Systick timer." format="hex0x"
                id="SYSCON@SYSTCKCAL@NOREF"
                offset="[25]"/>
      </register>
      <register description="NMI Source Select" format="hex0x" id="SYSCON@NMISRC" offset="0x48"
                size="4">
         <field description="The IRQ number of the interrupt that acts as the Non-Maskable Interrupt (NMI) for the Cortex-M4, if enabled by NMIENM4."
                format="hex0x"
                id="SYSCON@NMISRC@IRQM4"
                offset="[5:0]"/>
         <field description="Write a 1 to this bit to enable the Non-Maskable Interrupt (NMI) source selected by IRQM4."
                format="hex0x"
                id="SYSCON@NMISRC@NMIENM4"
                offset="[31]"/>
      </register>
      <register description="Asynchronous APB Control" format="hex0x" id="SYSCON@ASYNCAPBCTRL"
                offset="0x4c"
                size="4">
         <field description="Enables the asynchronous APB bridge and subsystem." format="enum"
                enum="d1e520"
                id="SYSCON@ASYNCAPBCTRL@ENABLE"
                offset="[0]"/>
      </register>
      <register description="POR captured value of port n" format="hex0x"
                id="SYSCON@PIOPORCAP0"
                offset="0xc0"
                readOnly="true"
                size="4">
         <field description="State of PIOn_31 through PIOn_0 at power-on reset" format="hex0x"
                id="SYSCON@PIOPORCAP0@PIOPORCAP"
                offset="[31:0]"/>
      </register>
      <register description="POR captured value of port n" format="hex0x"
                id="SYSCON@PIOPORCAP1"
                offset="0xc4"
                readOnly="true"
                size="4">
         <field description="State of PIOn_31 through PIOn_0 at power-on reset" format="hex0x"
                id="SYSCON@PIOPORCAP1@PIOPORCAP"
                offset="[31:0]"/>
      </register>
      <register description="Reset captured value of port n" format="hex0x"
                id="SYSCON@PIORESCAP0"
                offset="0xd0"
                readOnly="true"
                size="4">
         <field description="State of PIOn_31 through PIOn_0 for resets other than POR."
                format="hex0x"
                id="SYSCON@PIORESCAP0@PIORESCAP"
                offset="[31:0]"/>
      </register>
      <register description="Reset captured value of port n" format="hex0x"
                id="SYSCON@PIORESCAP1"
                offset="0xd4"
                readOnly="true"
                size="4">
         <field description="State of PIOn_31 through PIOn_0 for resets other than POR."
                format="hex0x"
                id="SYSCON@PIORESCAP1@PIORESCAP"
                offset="[31:0]"/>
      </register>
      <register description="Peripheral reset control n" format="hex0x" id="SYSCON@PRESETCTRL0"
                offset="0x100"
                size="4">
         <field description="Flash controller reset control. 0 = Clear reset to this function. 1 = Assert reset to this function."
                format="hex0x"
                id="SYSCON@PRESETCTRL0@FLASH-RST"
                offset="[7]"/>
         <field description="Flash accelerator reset control. Note that the FMC must not be reset while executing from flash, and must be reconfigured after reset. 0 = Clear reset to this function. 1 = Assert reset to this function."
                format="hex0x"
                id="SYSCON@PRESETCTRL0@FMC-RST"
                offset="[8]"/>
         <field description="EEPROM reset control." format="hex0x"
                id="SYSCON@PRESETCTRL0@EEPROM-RST"
                offset="[9]"/>
         <field description="SPIFI reset control." format="hex0x"
                id="SYSCON@PRESETCTRL0@SPIFI-RST"
                offset="[10]"/>
         <field description="Input mux reset control. 0 = Clear reset to this function. 1 = Assert reset to this function."
                format="hex0x"
                id="SYSCON@PRESETCTRL0@MUX-RST"
                offset="[11]"/>
         <field description="IOCON reset control. 0 = Clear reset to this function. 1 = Assert reset to this function."
                format="hex0x"
                id="SYSCON@PRESETCTRL0@IOCON-RST"
                offset="[13]"/>
         <field description="GPIO0 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function."
                format="hex0x"
                id="SYSCON@PRESETCTRL0@GPIO0-RST"
                offset="[14]"/>
         <field description="GPIO1 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function."
                format="hex0x"
                id="SYSCON@PRESETCTRL0@GPIO1-RST"
                offset="[15]"/>
         <field description="GPIO2 reset control." format="hex0x"
                id="SYSCON@PRESETCTRL0@GPIO2-RST"
                offset="[16]"/>
         <field description="GPIO3 reset control." format="hex0x"
                id="SYSCON@PRESETCTRL0@GPIO3-RST"
                offset="[17]"/>
         <field description="Pin interrupt (PINT) reset control. 0 = Clear reset to this function. 1 = Assert reset to this function."
                format="hex0x"
                id="SYSCON@PRESETCTRL0@PINT-RST"
                offset="[18]"/>
         <field description="Grouped interrupt (GINT) reset control. 0 = Clear reset to this function. 1 = Assert reset to this function."
                format="hex0x"
                id="SYSCON@PRESETCTRL0@GINT-RST"
                offset="[19]"/>
         <field description="DMA0 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function."
                format="hex0x"
                id="SYSCON@PRESETCTRL0@DMA0-RST"
                offset="[20]"/>
         <field description="CRC generator reset control. 0 = Clear reset to this function. 1 = Assert reset to this function."
                format="hex0x"
                id="SYSCON@PRESETCTRL0@CRC-RST"
                offset="[21]"/>
         <field description="Watchdog timer reset control. 0 = Clear reset to this function. 1 = Assert reset to this function."
                format="hex0x"
                id="SYSCON@PRESETCTRL0@WWDT-RST"
                offset="[22]"/>
         <field description="ADC0 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function."
                format="hex0x"
                id="SYSCON@PRESETCTRL0@ADC0-RST"
                offset="[27]"/>
      </register>
      <register description="Peripheral reset control n" format="hex0x" id="SYSCON@PRESETCTRL1"
                offset="0x104"
                size="4">
         <field description="Multi-rate timer (MRT) reset control. 0 = Clear reset to this function. 1 = Assert reset to this function."
                format="hex0x"
                id="SYSCON@PRESETCTRL1@MRT-RST"
                offset="[0]"/>
         <field description="State configurable timer 0 (SCT0) reset control. 0 = Clear reset to this function. 1 = Assert reset to this function."
                format="hex0x"
                id="SYSCON@PRESETCTRL1@SCT0-RST"
                offset="[2]"/>
         <field description="0 = Clear reset to this function." format="hex0x"
                id="SYSCON@PRESETCTRL1@MCAN0-RST"
                offset="[7]"/>
         <field description="0 = Clear reset to this function." format="hex0x"
                id="SYSCON@PRESETCTRL1@MCAN1-RST"
                offset="[8]"/>
         <field description="Micro-tick Timer reset control. 0 = Clear reset to this function. 1 = Assert reset to this function."
                format="hex0x"
                id="SYSCON@PRESETCTRL1@UTICK-RST"
                offset="[10]"/>
         <field description="Flexcomm 0 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function."
                format="hex0x"
                id="SYSCON@PRESETCTRL1@FC0-RST"
                offset="[11]"/>
         <field description="Flexcomm 1 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function."
                format="hex0x"
                id="SYSCON@PRESETCTRL1@FC1-RST"
                offset="[12]"/>
         <field description="Flexcomm 2 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function."
                format="hex0x"
                id="SYSCON@PRESETCTRL1@FC2-RST"
                offset="[13]"/>
         <field description="Flexcomm 3 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function."
                format="hex0x"
                id="SYSCON@PRESETCTRL1@FC3-RST"
                offset="[14]"/>
         <field description="Flexcomm 4 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function."
                format="hex0x"
                id="SYSCON@PRESETCTRL1@FC4-RST"
                offset="[15]"/>
         <field description="Flexcomm 5 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function."
                format="hex0x"
                id="SYSCON@PRESETCTRL1@FC5-RST"
                offset="[16]"/>
         <field description="Flexcomm 6 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function."
                format="hex0x"
                id="SYSCON@PRESETCTRL1@FC6-RST"
                offset="[17]"/>
         <field description="Flexcomm 7 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function."
                format="hex0x"
                id="SYSCON@PRESETCTRL1@FC7-RST"
                offset="[18]"/>
         <field description="Digital microphone interface reset control. 0 = Clear reset to this function. 1 = Assert reset to this function."
                format="hex0x"
                id="SYSCON@PRESETCTRL1@DMIC-RST"
                offset="[19]"/>
         <field description="CTIMER2 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function"
                format="hex0x"
                id="SYSCON@PRESETCTRL1@CTIMER2-RST"
                offset="[22]"/>
         <field description="USB0 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function."
                format="hex0x"
                id="SYSCON@PRESETCTRL1@USB0D-RST"
                offset="[25]"/>
         <field description="CTIMER0 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function."
                format="hex0x"
                id="SYSCON@PRESETCTRL1@CTIMER0-RST"
                offset="[26]"/>
         <field description="CTIMER1 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function."
                format="hex0x"
                id="SYSCON@PRESETCTRL1@CTIMER1-RST"
                offset="[27]"/>
      </register>
      <register description="Peripheral reset control n" format="hex0x" id="SYSCON@PRESETCTRL2"
                offset="0x108"
                size="4">
         <field description="LCD reset control." format="hex0x" id="SYSCON@PRESETCTRL2@LCD-RST"
                offset="[2]"/>
         <field description="SDIO reset control." format="hex0x"
                id="SYSCON@PRESETCTRL2@SDIO-RST"
                offset="[3]"/>
         <field description="USB1 Host reset control." format="hex0x"
                id="SYSCON@PRESETCTRL2@USB1H-RST"
                offset="[4]"/>
         <field description="USB1 Device reset control." format="hex0x"
                id="SYSCON@PRESETCTRL2@USB1D-RST"
                offset="[5]"/>
         <field description="USB1 RAM reset control." format="hex0x"
                id="SYSCON@PRESETCTRL2@USB1RAM-RST"
                offset="[6]"/>
         <field description="EMC reset control." format="hex0x"
                id="SYSCON@PRESETCTRL2@EMC-RESET"
                offset="[7]"/>
         <field description="Ethernet reset control." format="hex0x"
                id="SYSCON@PRESETCTRL2@ETH-RST"
                offset="[8]"/>
         <field description="GPIO4 reset control." format="hex0x"
                id="SYSCON@PRESETCTRL2@GPIO4-RST"
                offset="[9]"/>
         <field description="GPIO5 reset control." format="hex0x"
                id="SYSCON@PRESETCTRL2@GPIO5-RST"
                offset="[10]"/>
         <field description="AES reset control." format="hex0x" id="SYSCON@PRESETCTRL2@AES-RST"
                offset="[11]"/>
         <field description="OTP reset control." format="hex0x" id="SYSCON@PRESETCTRL2@OTP-RST"
                offset="[12]"/>
         <field description="RNG reset control." format="hex0x" id="SYSCON@PRESETCTRL2@RNG-RST"
                offset="[13]"/>
         <field description="Flexcomm 8 reset control." format="hex0x"
                id="SYSCON@PRESETCTRL2@FC8-RST"
                offset="[14]"/>
         <field description="Flexcomm 9 reset control." format="hex0x"
                id="SYSCON@PRESETCTRL2@FC9-RST"
                offset="[15]"/>
         <field description="USB0 HOST master reset control." format="hex0x"
                id="SYSCON@PRESETCTRL2@USB0HMR-RST"
                offset="[16]"/>
         <field description="USB0 HOST slave reset control." format="hex0x"
                id="SYSCON@PRESETCTRL2@USB0HSL-RST"
                offset="[17]"/>
         <field description="SHA reset control." format="hex0x" id="SYSCON@PRESETCTRL2@SHA-RST"
                offset="[18]"/>
         <field description="Smart card 0 reset control." format="hex0x"
                id="SYSCON@PRESETCTRL2@SC0-RST"
                offset="[19]"/>
         <field description="Smart card 1 reset control." format="hex0x"
                id="SYSCON@PRESETCTRL2@SC1-RST"
                offset="[20]"/>
      </register>
      <register description="Set bits in PRESETCTRLn" format="hex0x" id="SYSCON@PRESETCTRLSET0"
                offset="0x120"
                writeOnly="true"
                size="4">
         <field description="Writing ones to this register sets the corresponding bit or bits in the PRESETCTRLn register, if they are implemented. Bits that do not correspond to defined bits in PRESETCTRLn are reserved and only zeroes should be written to them."
                format="hex0x"
                id="SYSCON@PRESETCTRLSET0@RST-SET"
                offset="[31:0]"/>
      </register>
      <register description="Set bits in PRESETCTRLn" format="hex0x" id="SYSCON@PRESETCTRLSET1"
                offset="0x124"
                writeOnly="true"
                size="4">
         <field description="Writing ones to this register sets the corresponding bit or bits in the PRESETCTRLn register, if they are implemented. Bits that do not correspond to defined bits in PRESETCTRLn are reserved and only zeroes should be written to them."
                format="hex0x"
                id="SYSCON@PRESETCTRLSET1@RST-SET"
                offset="[31:0]"/>
      </register>
      <register description="Set bits in PRESETCTRLn" format="hex0x" id="SYSCON@PRESETCTRLSET2"
                offset="0x128"
                writeOnly="true"
                size="4">
         <field description="Writing ones to this register sets the corresponding bit or bits in the PRESETCTRLn register, if they are implemented. Bits that do not correspond to defined bits in PRESETCTRLn are reserved and only zeroes should be written to them."
                format="hex0x"
                id="SYSCON@PRESETCTRLSET2@RST-SET"
                offset="[31:0]"/>
      </register>
      <register description="Clear bits in PRESETCTRLn" format="hex0x"
                id="SYSCON@PRESETCTRLCLR0"
                offset="0x140"
                writeOnly="true"
                size="4">
         <field description="Writing ones to this register clears the corresponding bit or bits in the PRESETCTRLn register, if they are implemented. Bits that do not correspond to defined bits in PRESETCTRLn are reserved and only zeroes should be written to them."
                format="hex0x"
                id="SYSCON@PRESETCTRLCLR0@RST-CLR"
                offset="[31:0]"/>
      </register>
      <register description="Clear bits in PRESETCTRLn" format="hex0x"
                id="SYSCON@PRESETCTRLCLR1"
                offset="0x144"
                writeOnly="true"
                size="4">
         <field description="Writing ones to this register clears the corresponding bit or bits in the PRESETCTRLn register, if they are implemented. Bits that do not correspond to defined bits in PRESETCTRLn are reserved and only zeroes should be written to them."
                format="hex0x"
                id="SYSCON@PRESETCTRLCLR1@RST-CLR"
                offset="[31:0]"/>
      </register>
      <register description="Clear bits in PRESETCTRLn" format="hex0x"
                id="SYSCON@PRESETCTRLCLR2"
                offset="0x148"
                writeOnly="true"
                size="4">
         <field description="Writing ones to this register clears the corresponding bit or bits in the PRESETCTRLn register, if they are implemented. Bits that do not correspond to defined bits in PRESETCTRLn are reserved and only zeroes should be written to them."
                format="hex0x"
                id="SYSCON@PRESETCTRLCLR2@RST-CLR"
                offset="[31:0]"/>
      </register>
      <register description="System reset status register" format="hex0x"
                id="SYSCON@SYSRSTSTAT"
                offset="0x1f0"
                size="4">
         <field description="POR reset status" format="enum" enum="d1e1850"
                id="SYSCON@SYSRSTSTAT@POR"
                offset="[0]"/>
         <field description="Status of the external RESET pin. External reset status"
                format="enum"
                enum="d1e1896"
                id="SYSCON@SYSRSTSTAT@EXTRST"
                offset="[1]"/>
         <field description="Status of the Watchdog reset" format="enum" enum="d1e1942"
                id="SYSCON@SYSRSTSTAT@WDT"
                offset="[2]"/>
         <field description="Status of the Brown-out detect reset" format="enum" enum="d1e1988"
                id="SYSCON@SYSRSTSTAT@BOD"
                offset="[3]"/>
         <field description="Status of the software system reset" format="enum" enum="d1e2034"
                id="SYSCON@SYSRSTSTAT@SYSRST"
                offset="[4]"/>
      </register>
      <register description="AHB Clock control n" format="hex0x" id="SYSCON@AHBCLKCTRL0"
                offset="0x200"
                size="4">
         <field description="Enables the clock for the Boot ROM. 0 = Disable; 1 = Enable."
                format="hex0x"
                id="SYSCON@AHBCLKCTRL0@ROM"
                offset="[1]"/>
         <field description="Enables the clock for SRAM1. 0 = Disable; 1 = Enable."
                format="hex0x"
                id="SYSCON@AHBCLKCTRL0@SRAM1"
                offset="[3]"/>
         <field description="Enables the clock for SRAM2. 0 = Disable; 1 = Enable."
                format="hex0x"
                id="SYSCON@AHBCLKCTRL0@SRAM2"
                offset="[4]"/>
         <field description="Enables the clock for SRAM3." format="hex0x"
                id="SYSCON@AHBCLKCTRL0@SRAM3"
                offset="[5]"/>
         <field description="Enables the clock for the flash controller. 0 = Disable; 1 = Enable. This clock is needed for flash programming, not for flash read."
                format="hex0x"
                id="SYSCON@AHBCLKCTRL0@FLASH"
                offset="[7]"/>
         <field description="Enables the clock for the Flash accelerator. 0 = Disable; 1 = Enable. This clock is needed if the flash is being read."
                format="hex0x"
                id="SYSCON@AHBCLKCTRL0@FMC"
                offset="[8]"/>
         <field description="Enables the clock for EEPROM." format="hex0x"
                id="SYSCON@AHBCLKCTRL0@EEPROM"
                offset="[9]"/>
         <field description="Enables the clock for the SPIFI. 0 = Disable; 1 = Enable."
                format="hex0x"
                id="SYSCON@AHBCLKCTRL0@SPIFI"
                offset="[10]"/>
         <field description="Enables the clock for the input muxes. 0 = Disable; 1 = Enable."
                format="hex0x"
                id="SYSCON@AHBCLKCTRL0@INPUTMUX"
                offset="[11]"/>
         <field description="Enables the clock for the IOCON block. 0 = Disable; 1 = Enable."
                format="hex0x"
                id="SYSCON@AHBCLKCTRL0@IOCON"
                offset="[13]"/>
         <field description="Enables the clock for the GPIO0 port registers. 0 = Disable; 1 = Enable."
                format="hex0x"
                id="SYSCON@AHBCLKCTRL0@GPIO0"
                offset="[14]"/>
         <field description="Enables the clock for the GPIO1 port registers. 0 = Disable; 1 = Enable."
                format="hex0x"
                id="SYSCON@AHBCLKCTRL0@GPIO1"
                offset="[15]"/>
         <field description="Enables the clock for the GPIO2 port registers." format="hex0x"
                id="SYSCON@AHBCLKCTRL0@GPIO2"
                offset="[16]"/>
         <field description="Enables the clock for the GPIO3 port registers." format="hex0x"
                id="SYSCON@AHBCLKCTRL0@GPIO3"
                offset="[17]"/>
         <field description="Enables the clock for the pin interrupt block.0 = Disable; 1 = Enable."
                format="hex0x"
                id="SYSCON@AHBCLKCTRL0@PINT"
                offset="[18]"/>
         <field description="Enables the clock for the grouped pin interrupt block. 0 = Disable; 1 = Enable."
                format="hex0x"
                id="SYSCON@AHBCLKCTRL0@GINT"
                offset="[19]"/>
         <field description="Enables the clock for the DMA controller. 0 = Disable; 1 = Enable."
                format="hex0x"
                id="SYSCON@AHBCLKCTRL0@DMA"
                offset="[20]"/>
         <field description="Enables the clock for the CRC engine. 0 = Disable; 1 = Enable."
                format="hex0x"
                id="SYSCON@AHBCLKCTRL0@CRC"
                offset="[21]"/>
         <field description="Enables the clock for the Watchdog Timer. 0 = Disable; 1 = Enable."
                format="hex0x"
                id="SYSCON@AHBCLKCTRL0@WWDT"
                offset="[22]"/>
         <field description="Enables the bus clock for the RTC. 0 = Disable; 1 = Enable."
                format="hex0x"
                id="SYSCON@AHBCLKCTRL0@RTC"
                offset="[23]"/>
         <field description="Enables the clock for the ADC0 register interface." format="hex0x"
                id="SYSCON@AHBCLKCTRL0@ADC0"
                offset="[27]"/>
      </register>
      <register description="AHB Clock control n" format="hex0x" id="SYSCON@AHBCLKCTRL1"
                offset="0x204"
                size="4">
         <field description="Enables the clock for the Multi-Rate Timer." format="hex0x"
                id="SYSCON@AHBCLKCTRL1@MRT"
                offset="[0]"/>
         <field description="Enables the clock for the Repetitive Interrupt Timer."
                format="hex0x"
                id="SYSCON@AHBCLKCTRL1@RIT"
                offset="[1]"/>
         <field description="Enables the clock for SCT0." format="hex0x"
                id="SYSCON@AHBCLKCTRL1@SCT0"
                offset="[2]"/>
         <field description="Enables the clock for MCAN0." format="hex0x"
                id="SYSCON@AHBCLKCTRL1@MCAN0"
                offset="[7]"/>
         <field description="Enables the clock for MCAN1." format="hex0x"
                id="SYSCON@AHBCLKCTRL1@MCAN1"
                offset="[8]"/>
         <field description="Enables the clock for the Micro-tick Timer. 0 = Disable; 1 = Enable."
                format="hex0x"
                id="SYSCON@AHBCLKCTRL1@UTICK"
                offset="[10]"/>
         <field description="Enables the clock for Flexcomm 0. 0 = Disable; 1 = Enable."
                format="hex0x"
                id="SYSCON@AHBCLKCTRL1@FLEXCOMM0"
                offset="[11]"/>
         <field description="Enables the clock for Flexcomm 1. 0 = Disable; 1 = Enable."
                format="hex0x"
                id="SYSCON@AHBCLKCTRL1@FLEXCOMM1"
                offset="[12]"/>
         <field description="Enables the clock for Flexcomm 2. 0 = Disable; 1 = Enable."
                format="hex0x"
                id="SYSCON@AHBCLKCTRL1@FLEXCOMM2"
                offset="[13]"/>
         <field description="Enables the clock for Flexcomm 3. 0 = Disable; 1 = Enable."
                format="hex0x"
                id="SYSCON@AHBCLKCTRL1@FLEXCOMM3"
                offset="[14]"/>
         <field description="Enables the clock for Flexcomm 4. 0 = Disable; 1 = Enable."
                format="hex0x"
                id="SYSCON@AHBCLKCTRL1@FLEXCOMM4"
                offset="[15]"/>
         <field description="Enables the clock for Flexcomm 5. 0 = Disable; 1 = Enable."
                format="hex0x"
                id="SYSCON@AHBCLKCTRL1@FLEXCOMM5"
                offset="[16]"/>
         <field description="Enables the clock for Flexcomm 6. 0 = Disable; 1 = Enable."
                format="hex0x"
                id="SYSCON@AHBCLKCTRL1@FLEXCOMM6"
                offset="[17]"/>
         <field description="Enables the clock for Flexcomm 7. 0 = Disable; 1 = Enable."
                format="hex0x"
                id="SYSCON@AHBCLKCTRL1@FLEXCOMM7"
                offset="[18]"/>
         <field description="Enables the clock for the digital microphone interface. 0 = Disable; 1 = Enable."
                format="hex0x"
                id="SYSCON@AHBCLKCTRL1@DMIC"
                offset="[19]"/>
         <field description="Enables the clock for CTIMER 2. 0 = Disable; 1 = Enable."
                format="hex0x"
                id="SYSCON@AHBCLKCTRL1@CTIMER2"
                offset="[22]"/>
         <field description="Enables the clock for the USB0 device interface. 0 = Disable; 1 = Enable."
                format="hex0x"
                id="SYSCON@AHBCLKCTRL1@USB0D"
                offset="[25]"/>
         <field description="Enables the clock for timer CTIMER0. 0 = Disable; 1 = Enable."
                format="hex0x"
                id="SYSCON@AHBCLKCTRL1@CTIMER0"
                offset="[26]"/>
         <field description="Enables the clock for timer CTIMER1. 0 = Disable; 1 = Enable."
                format="hex0x"
                id="SYSCON@AHBCLKCTRL1@CTIMER1"
                offset="[27]"/>
      </register>
      <register description="AHB Clock control n" format="hex0x" id="SYSCON@AHBCLKCTRL2"
                offset="0x208"
                size="4">
         <field description="Enables the clock for the LCD interface." format="hex0x"
                id="SYSCON@AHBCLKCTRL2@LCD"
                offset="[2]"/>
         <field description="Enables the clock for the SDIO interface." format="hex0x"
                id="SYSCON@AHBCLKCTRL2@SDIO"
                offset="[3]"/>
         <field description="Enables the clock for the USB1 host interface." format="hex0x"
                id="SYSCON@AHBCLKCTRL2@USB1H"
                offset="[4]"/>
         <field description="Enables the clock for the USB1 device interface." format="hex0x"
                id="SYSCON@AHBCLKCTRL2@USB1D"
                offset="[5]"/>
         <field description="Enables the clock for the USB1 RAM interface." format="hex0x"
                id="SYSCON@AHBCLKCTRL2@USB1RAM"
                offset="[6]"/>
         <field description="Enables the clock for the EMC interface." format="hex0x"
                id="SYSCON@AHBCLKCTRL2@EMC"
                offset="[7]"/>
         <field description="Enables the clock for the ethernet interface." format="hex0x"
                id="SYSCON@AHBCLKCTRL2@ETH"
                offset="[8]"/>
         <field description="Enables the clock for the GPIO4 interface." format="hex0x"
                id="SYSCON@AHBCLKCTRL2@GPIO4"
                offset="[9]"/>
         <field description="Enables the clock for the GPIO5 interface." format="hex0x"
                id="SYSCON@AHBCLKCTRL2@GPIO5"
                offset="[10]"/>
         <field description="Enables the clock for the AES interface." format="hex0x"
                id="SYSCON@AHBCLKCTRL2@AES"
                offset="[11]"/>
         <field description="Enables the clock for the OTP interface." format="hex0x"
                id="SYSCON@AHBCLKCTRL2@OTP"
                offset="[12]"/>
         <field description="Enables the clock for the RNG interface." format="hex0x"
                id="SYSCON@AHBCLKCTRL2@RNG"
                offset="[13]"/>
         <field description="Enables the clock for the Flexcomm8 interface." format="hex0x"
                id="SYSCON@AHBCLKCTRL2@FLEXCOMM8"
                offset="[14]"/>
         <field description="Enables the clock for the Flexcomm9 interface." format="hex0x"
                id="SYSCON@AHBCLKCTRL2@FLEXCOMM9"
                offset="[15]"/>
         <field description="Enables the clock for the USB host master interface."
                format="hex0x"
                id="SYSCON@AHBCLKCTRL2@USB0HMR"
                offset="[16]"/>
         <field description="Enables the clock for the USB host slave interface."
                format="hex0x"
                id="SYSCON@AHBCLKCTRL2@USB0HSL"
                offset="[17]"/>
         <field description="Enables the clock for the SHA interface." format="hex0x"
                id="SYSCON@AHBCLKCTRL2@SHA0"
                offset="[18]"/>
         <field description="Enables the clock for the Smart card0 interface." format="hex0x"
                id="SYSCON@AHBCLKCTRL2@SC0"
                offset="[19]"/>
         <field description="Enables the clock for the Smart card1 interface." format="hex0x"
                id="SYSCON@AHBCLKCTRL2@SC1"
                offset="[20]"/>
      </register>
      <register description="Set bits in AHBCLKCTRLn" format="hex0x" id="SYSCON@AHBCLKCTRLSET0"
                offset="0x220"
                writeOnly="true"
                size="4">
         <field description="Writing ones to this register sets the corresponding bit or bits in the AHBCLKCTRLn register, if they are implemented. Bits that do not correspond to defined bits in AHBCLKCTRLn are reserved and only zeroes should be written to them."
                format="hex0x"
                id="SYSCON@AHBCLKCTRLSET0@CLK-SET"
                offset="[31:0]"/>
      </register>
      <register description="Set bits in AHBCLKCTRLn" format="hex0x" id="SYSCON@AHBCLKCTRLSET1"
                offset="0x224"
                writeOnly="true"
                size="4">
         <field description="Writing ones to this register sets the corresponding bit or bits in the AHBCLKCTRLn register, if they are implemented. Bits that do not correspond to defined bits in AHBCLKCTRLn are reserved and only zeroes should be written to them."
                format="hex0x"
                id="SYSCON@AHBCLKCTRLSET1@CLK-SET"
                offset="[31:0]"/>
      </register>
      <register description="Set bits in AHBCLKCTRLn" format="hex0x" id="SYSCON@AHBCLKCTRLSET2"
                offset="0x228"
                writeOnly="true"
                size="4">
         <field description="Writing ones to this register sets the corresponding bit or bits in the AHBCLKCTRLn register, if they are implemented. Bits that do not correspond to defined bits in AHBCLKCTRLn are reserved and only zeroes should be written to them."
                format="hex0x"
                id="SYSCON@AHBCLKCTRLSET2@CLK-SET"
                offset="[31:0]"/>
      </register>
      <register description="Clear bits in AHBCLKCTRLn" format="hex0x"
                id="SYSCON@AHBCLKCTRLCLR0"
                offset="0x240"
                writeOnly="true"
                size="4">
         <field description="Writing ones to this register clears the corresponding bit or bits in the AHBCLKCTRLn register, if they are implemented. Bits that do not correspond to defined bits in AHBCLKCTRLn are reserved and only zeroes should be written to them."
                format="hex0x"
                id="SYSCON@AHBCLKCTRLCLR0@CLK-CLR"
                offset="[31:0]"/>
      </register>
      <register description="Clear bits in AHBCLKCTRLn" format="hex0x"
                id="SYSCON@AHBCLKCTRLCLR1"
                offset="0x244"
                writeOnly="true"
                size="4">
         <field description="Writing ones to this register clears the corresponding bit or bits in the AHBCLKCTRLn register, if they are implemented. Bits that do not correspond to defined bits in AHBCLKCTRLn are reserved and only zeroes should be written to them."
                format="hex0x"
                id="SYSCON@AHBCLKCTRLCLR1@CLK-CLR"
                offset="[31:0]"/>
      </register>
      <register description="Clear bits in AHBCLKCTRLn" format="hex0x"
                id="SYSCON@AHBCLKCTRLCLR2"
                offset="0x248"
                writeOnly="true"
                size="4">
         <field description="Writing ones to this register clears the corresponding bit or bits in the AHBCLKCTRLn register, if they are implemented. Bits that do not correspond to defined bits in AHBCLKCTRLn are reserved and only zeroes should be written to them."
                format="hex0x"
                id="SYSCON@AHBCLKCTRLCLR2@CLK-CLR"
                offset="[31:0]"/>
      </register>
      <register description="Main clock source select A" format="hex0x" id="SYSCON@MAINCLKSELA"
                offset="0x280"
                size="4">
         <field description="Clock source for main clock source selector A" format="enum"
                enum="d1e3368"
                id="SYSCON@MAINCLKSELA@SEL"
                offset="[1:0]"/>
      </register>
      <register description="Main clock source select B" format="hex0x" id="SYSCON@MAINCLKSELB"
                offset="0x284"
                size="4">
         <field description="Clock source for main clock source selector B. Selects the clock source for the main clock."
                format="enum"
                enum="d1e3466"
                id="SYSCON@MAINCLKSELB@SEL"
                offset="[1:0]"/>
      </register>
      <register description="CLKOUT clock source select A" format="hex0x"
                id="SYSCON@CLKOUTSELA"
                offset="0x288"
                size="4">
         <field description="CLKOUT clock source selection" format="enum" enum="d1e3552"
                id="SYSCON@CLKOUTSELA@SEL"
                offset="[2:0]"/>
      </register>
      <register description="PLL clock source select" format="hex0x" id="SYSCON@SYSPLLCLKSEL"
                offset="0x290"
                size="4">
         <field description="System PLL clock source selection." format="enum" enum="d1e3699"
                id="SYSCON@SYSPLLCLKSEL@SEL"
                offset="[2:0]"/>
      </register>
      <register description="Audio PLL clock source select" format="hex0x"
                id="SYSCON@AUDPLLCLKSEL"
                offset="0x298"
                size="4">
         <field description="Audio PLL clock source selection." format="enum" enum="d1e3809"
                id="SYSCON@AUDPLLCLKSEL@SEL"
                offset="[2:0]"/>
      </register>
      <register description="SPIFI clock source select" format="hex0x" id="SYSCON@SPIFICLKSEL"
                offset="0x2a0"
                size="4">
         <field description="System PLL clock source selection" format="enum" enum="d1e3895"
                id="SYSCON@SPIFICLKSEL@SEL"
                offset="[2:0]"/>
      </register>
      <register description="ADC clock source select" format="hex0x" id="SYSCON@ADCCLKSEL"
                offset="0x2a4"
                size="4">
         <field description="ADC clock source selection" format="enum" enum="d1e4019"
                id="SYSCON@ADCCLKSEL@SEL"
                offset="[2:0]"/>
      </register>
      <register description="USB0 clock source select" format="hex0x" id="SYSCON@USB0CLKSEL"
                offset="0x2a8"
                size="4">
         <field description="USB0 device clock source selection." format="enum" enum="d1e4129"
                id="SYSCON@USB0CLKSEL@SEL"
                offset="[2:0]"/>
      </register>
      <register description="USB1 clock source select" format="hex0x" id="SYSCON@USB1CLKSEL"
                offset="0x2ac"
                size="4">
         <field description="USB1 PHY clock source selection." format="enum" enum="d1e4227"
                id="SYSCON@USB1CLKSEL@SEL"
                offset="[2:0]"/>
      </register>
      <register description="Flexcomm 0 clock source select" format="hex0x"
                id="SYSCON@FCLKSEL0"
                offset="0x2b0"
                size="4">
         <field description="Flexcomm clock source selection. One per Flexcomm." format="enum"
                enum="d1e4331"
                id="SYSCON@FCLKSEL0@SEL"
                offset="[2:0]"/>
      </register>
      <register description="Flexcomm 0 clock source select" format="hex0x"
                id="SYSCON@FCLKSEL1"
                offset="0x2b4"
                size="4">
         <field description="Flexcomm clock source selection. One per Flexcomm." format="enum"
                enum="d1e4331"
                id="SYSCON@FCLKSEL1@SEL"
                offset="[2:0]"/>
      </register>
      <register description="Flexcomm 0 clock source select" format="hex0x"
                id="SYSCON@FCLKSEL2"
                offset="0x2b8"
                size="4">
         <field description="Flexcomm clock source selection. One per Flexcomm." format="enum"
                enum="d1e4331"
                id="SYSCON@FCLKSEL2@SEL"
                offset="[2:0]"/>
      </register>
      <register description="Flexcomm 0 clock source select" format="hex0x"
                id="SYSCON@FCLKSEL3"
                offset="0x2bc"
                size="4">
         <field description="Flexcomm clock source selection. One per Flexcomm." format="enum"
                enum="d1e4331"
                id="SYSCON@FCLKSEL3@SEL"
                offset="[2:0]"/>
      </register>
      <register description="Flexcomm 0 clock source select" format="hex0x"
                id="SYSCON@FCLKSEL4"
                offset="0x2c0"
                size="4">
         <field description="Flexcomm clock source selection. One per Flexcomm." format="enum"
                enum="d1e4331"
                id="SYSCON@FCLKSEL4@SEL"
                offset="[2:0]"/>
      </register>
      <register description="Flexcomm 0 clock source select" format="hex0x"
                id="SYSCON@FCLKSEL5"
                offset="0x2c4"
                size="4">
         <field description="Flexcomm clock source selection. One per Flexcomm." format="enum"
                enum="d1e4331"
                id="SYSCON@FCLKSEL5@SEL"
                offset="[2:0]"/>
      </register>
      <register description="Flexcomm 0 clock source select" format="hex0x"
                id="SYSCON@FCLKSEL6"
                offset="0x2c8"
                size="4">
         <field description="Flexcomm clock source selection. One per Flexcomm." format="enum"
                enum="d1e4331"
                id="SYSCON@FCLKSEL6@SEL"
                offset="[2:0]"/>
      </register>
      <register description="Flexcomm 0 clock source select" format="hex0x"
                id="SYSCON@FCLKSEL7"
                offset="0x2cc"
                size="4">
         <field description="Flexcomm clock source selection. One per Flexcomm." format="enum"
                enum="d1e4331"
                id="SYSCON@FCLKSEL7@SEL"
                offset="[2:0]"/>
      </register>
      <register description="Flexcomm 0 clock source select" format="hex0x"
                id="SYSCON@FCLKSEL8"
                offset="0x2d0"
                size="4">
         <field description="Flexcomm clock source selection. One per Flexcomm." format="enum"
                enum="d1e4331"
                id="SYSCON@FCLKSEL8@SEL"
                offset="[2:0]"/>
      </register>
      <register description="Flexcomm 0 clock source select" format="hex0x"
                id="SYSCON@FCLKSEL9"
                offset="0x2d4"
                size="4">
         <field description="Flexcomm clock source selection. One per Flexcomm." format="enum"
                enum="d1e4331"
                id="SYSCON@FCLKSEL9@SEL"
                offset="[2:0]"/>
      </register>
      <register description="MCLK clock source select" format="hex0x" id="SYSCON@MCLKCLKSEL"
                offset="0x2e0"
                size="4">
         <field description="MCLK source select. This may be used by Flexcomms that support I2S, and/or by the digital microphone subsystem."
                format="enum"
                enum="d1e4454"
                id="SYSCON@MCLKCLKSEL@SEL"
                offset="[2:0]"/>
      </register>
      <register description="Fractional Rate Generator clock source select" format="hex0x"
                id="SYSCON@FRGCLKSEL"
                offset="0x2e8"
                size="4">
         <field description="Fractional Rate Generator clock source select." format="enum"
                enum="d1e4540"
                id="SYSCON@FRGCLKSEL@SEL"
                offset="[2:0]"/>
      </register>
      <register description="Digital microphone (DMIC) subsystem clock select" format="hex0x"
                id="SYSCON@DMICCLKSEL"
                offset="0x2ec"
                size="4">
         <field description="DMIC (audio subsystem) clock source select." format="enum"
                enum="d1e4651"
                id="SYSCON@DMICCLKSEL@SEL"
                offset="[2:0]"/>
      </register>
      <register description="SCTimer/PWM clock source select" format="hex0x"
                id="SYSCON@SCTCLKSEL"
                offset="0x2f0"
                size="4">
         <field description="SCT clock source select." format="enum" enum="d1e4761"
                id="SYSCON@SCTCLKSEL@SEL"
                offset="[2:0]"/>
      </register>
      <register description="LCD clock source select" format="hex0x" id="SYSCON@LCDCLKSEL"
                offset="0x2f4"
                size="4">
         <field description="LCD clock source select." format="enum" enum="d1e4871"
                id="SYSCON@LCDCLKSEL@SEL"
                offset="[1:0]"/>
      </register>
      <register description="SDIO clock source select" format="hex0x" id="SYSCON@SDIOCLKSEL"
                offset="0x2f8"
                size="4">
         <field description="SDIO clock source select." format="enum" enum="d1e4969"
                id="SYSCON@SDIOCLKSEL@SEL"
                offset="[2:0]"/>
      </register>
      <register description="SYSTICK clock divider" format="hex0x" id="SYSCON@SYSTICKCLKDIV"
                offset="0x300"
                size="4">
         <field description="Clock divider value. 0: Divide by 1 up to 255: Divide by 256."
                format="hex0x"
                id="SYSCON@SYSTICKCLKDIV@DIV"
                offset="[7:0]"/>
         <field description="Resets the divider counter. Can be used to make sure a new divider value is used right away rather than completing the previous count."
                format="hex0x"
                id="SYSCON@SYSTICKCLKDIV@RESET"
                offset="[29]"/>
         <field description="Halts the divider counter." format="hex0x"
                id="SYSCON@SYSTICKCLKDIV@HALT"
                offset="[30]"/>
         <field description="Divider status flag." format="hex0x"
                id="SYSCON@SYSTICKCLKDIV@REQFLAG"
                offset="[31]"/>
      </register>
      <register description="ARM Trace clock divider" format="hex0x" id="SYSCON@ARMTRACECLKDIV"
                offset="0x304"
                size="4">
         <field description="Clock divider value." format="hex0x"
                id="SYSCON@ARMTRACECLKDIV@DIV"
                offset="[7:0]"/>
         <field description="Resets the divider counter." format="hex0x"
                id="SYSCON@ARMTRACECLKDIV@RESET"
                offset="[29]"/>
         <field description="Halts the divider counter." format="hex0x"
                id="SYSCON@ARMTRACECLKDIV@HALT"
                offset="[30]"/>
         <field description="Divider status flag." format="hex0x"
                id="SYSCON@ARMTRACECLKDIV@REQFLAG"
                offset="[31]"/>
      </register>
      <register description="MCAN0 clock divider" format="hex0x" id="SYSCON@CAN0CLKDIV"
                offset="0x308"
                size="4">
         <field description="Clock divider value." format="hex0x" id="SYSCON@CAN0CLKDIV@DIV"
                offset="[7:0]"/>
         <field description="Resets the divider counter." format="hex0x"
                id="SYSCON@CAN0CLKDIV@RESET"
                offset="[29]"/>
         <field description="Halts the divider counter." format="hex0x"
                id="SYSCON@CAN0CLKDIV@HALT"
                offset="[30]"/>
         <field description="Divider status flag." format="hex0x"
                id="SYSCON@CAN0CLKDIV@REQFLAG"
                offset="[31]"/>
      </register>
      <register description="MCAN1 clock divider" format="hex0x" id="SYSCON@CAN1CLKDIV"
                offset="0x30c"
                size="4">
         <field description="Clock divider value. 0: Divide by 1 up to 255: Divide by 256."
                format="hex0x"
                id="SYSCON@CAN1CLKDIV@DIV"
                offset="[7:0]"/>
         <field description="Resets the divider counter. Can be used to make sure a new divider value is used right away rather than completing the previous count."
                format="hex0x"
                id="SYSCON@CAN1CLKDIV@RESET"
                offset="[29]"/>
         <field description="Halts the divider counter." format="hex0x"
                id="SYSCON@CAN1CLKDIV@HALT"
                offset="[30]"/>
         <field description="Divider status flag." format="hex0x"
                id="SYSCON@CAN1CLKDIV@REQFLAG"
                offset="[31]"/>
      </register>
      <register description="Smartcard0 clock divider" format="hex0x" id="SYSCON@SC0CLKDIV"
                offset="0x310"
                size="4">
         <field description="Clock divider value." format="hex0x" id="SYSCON@SC0CLKDIV@DIV"
                offset="[7:0]"/>
         <field description="Resets the divider counter." format="hex0x"
                id="SYSCON@SC0CLKDIV@RESET"
                offset="[29]"/>
         <field description="Halts the divider counter." format="hex0x"
                id="SYSCON@SC0CLKDIV@HALT"
                offset="[30]"/>
         <field description="Divider status flag." format="hex0x" id="SYSCON@SC0CLKDIV@REQFLAG"
                offset="[31]"/>
      </register>
      <register description="Smartcard1 clock divider" format="hex0x" id="SYSCON@SC1CLKDIV"
                offset="0x314"
                size="4">
         <field description="Clock divider value." format="hex0x" id="SYSCON@SC1CLKDIV@DIV"
                offset="[7:0]"/>
         <field description="Resets the divider counter." format="hex0x"
                id="SYSCON@SC1CLKDIV@RESET"
                offset="[29]"/>
         <field description="Halts the divider counter." format="hex0x"
                id="SYSCON@SC1CLKDIV@HALT"
                offset="[30]"/>
         <field description="Divider status flag." format="hex0x" id="SYSCON@SC1CLKDIV@REQFLAG"
                offset="[31]"/>
      </register>
      <register description="AHB clock divider" format="hex0x" id="SYSCON@AHBCLKDIV"
                offset="0x380"
                size="4">
         <field description="Clock divider value. 0: Divide by 1 up to 255: Divide by 256."
                format="hex0x"
                id="SYSCON@AHBCLKDIV@DIV"
                offset="[7:0]"/>
         <field description="Divider status flag." format="hex0x" id="SYSCON@AHBCLKDIV@REQFLAG"
                offset="[31]"/>
      </register>
      <register description="CLKOUT clock divider" format="hex0x" id="SYSCON@CLKOUTDIV"
                offset="0x384"
                size="4">
         <field description="Clock divider value. 0: Divide by 1 up to 255: Divide by 256."
                format="hex0x"
                id="SYSCON@CLKOUTDIV@DIV"
                offset="[7:0]"/>
         <field description="Resets the divider counter. Can be used to make sure a new divider value is used right away rather than completing the previous count."
                format="hex0x"
                id="SYSCON@CLKOUTDIV@RESET"
                offset="[29]"/>
         <field description="Halts the divider counter. The intent is to allow the divider clock source to be changed without the risk of a glitch at the output."
                format="hex0x"
                id="SYSCON@CLKOUTDIV@HALT"
                offset="[30]"/>
         <field description="Divider status flag." format="hex0x" id="SYSCON@CLKOUTDIV@REQFLAG"
                offset="[31]"/>
      </register>
      <register description="FROHF clock divider" format="hex0x" id="SYSCON@FROHFCLKDIV"
                offset="0x388"
                size="4">
         <field description="Clock divider value." format="hex0x" id="SYSCON@FROHFCLKDIV@DIV"
                offset="[7:0]"/>
         <field description="Resets the divider counter." format="hex0x"
                id="SYSCON@FROHFCLKDIV@RESET"
                offset="[29]"/>
         <field description="Halts the divider counter." format="hex0x"
                id="SYSCON@FROHFCLKDIV@HALT"
                offset="[30]"/>
         <field description="Divider status flag." format="hex0x"
                id="SYSCON@FROHFCLKDIV@REQFLAG"
                offset="[31]"/>
      </register>
      <register description="SPIFI clock divider" format="hex0x" id="SYSCON@SPIFICLKDIV"
                offset="0x390"
                size="4">
         <field description="Clock divider value." format="hex0x" id="SYSCON@SPIFICLKDIV@DIV"
                offset="[7:0]"/>
         <field description="Resets the divider counter. Can be used to make sure a new divider value is used right away rather than completing the previous count."
                format="hex0x"
                id="SYSCON@SPIFICLKDIV@RESET"
                offset="[29]"/>
         <field description="Halts the divider counter. The intent is to allow the divider clock source to be changed without the risk of a glitch at the output."
                format="hex0x"
                id="SYSCON@SPIFICLKDIV@HALT"
                offset="[30]"/>
         <field description="Divider status flag." format="hex0x"
                id="SYSCON@SPIFICLKDIV@REQFLAG"
                offset="[31]"/>
      </register>
      <register description="ADC clock divider" format="hex0x" id="SYSCON@ADCCLKDIV"
                offset="0x394"
                size="4">
         <field description="Clock divider value." format="hex0x" id="SYSCON@ADCCLKDIV@DIV"
                offset="[7:0]"/>
         <field description="Resets the divider counter." format="hex0x"
                id="SYSCON@ADCCLKDIV@RESET"
                offset="[29]"/>
         <field description="Halts the divider counter." format="hex0x"
                id="SYSCON@ADCCLKDIV@HALT"
                offset="[30]"/>
         <field description="Divider status flag." format="hex0x" id="SYSCON@ADCCLKDIV@REQFLAG"
                offset="[31]"/>
      </register>
      <register description="USB0 clock divider" format="hex0x" id="SYSCON@USB0CLKDIV"
                offset="0x398"
                size="4">
         <field description="Clock divider value." format="hex0x" id="SYSCON@USB0CLKDIV@DIV"
                offset="[7:0]"/>
         <field description="Resets the divider counter." format="hex0x"
                id="SYSCON@USB0CLKDIV@RESET"
                offset="[29]"/>
         <field description="Halts the divider counter." format="hex0x"
                id="SYSCON@USB0CLKDIV@HALT"
                offset="[30]"/>
         <field description="Divider status flag." format="hex0x"
                id="SYSCON@USB0CLKDIV@REQFLAG"
                offset="[31]"/>
      </register>
      <register description="USB1 clock divider" format="hex0x" id="SYSCON@USB1CLKDIV"
                offset="0x39c"
                size="4">
         <field description="Clock divider value." format="hex0x" id="SYSCON@USB1CLKDIV@DIV"
                offset="[7:0]"/>
         <field description="Resets the divider counter." format="hex0x"
                id="SYSCON@USB1CLKDIV@RESET"
                offset="[29]"/>
         <field description="Halts the divider counter." format="hex0x"
                id="SYSCON@USB1CLKDIV@HALT"
                offset="[30]"/>
         <field description="Divider status flag." format="hex0x"
                id="SYSCON@USB1CLKDIV@REQFLAG"
                offset="[31]"/>
      </register>
      <register description="Fractional rate divider" format="hex0x" id="SYSCON@FRGCTRL"
                offset="0x3a0"
                size="4">
         <field description="Denominator of the fractional divider. DIV is equal to the programmed value +1. Always set to 0xFF to use with the fractional baud rate generator."
                format="hex0x"
                id="SYSCON@FRGCTRL@DIV"
                offset="[7:0]"/>
         <field description="Numerator of the fractional divider. MULT is equal to the programmed value."
                format="hex0x"
                id="SYSCON@FRGCTRL@MULT"
                offset="[15:8]"/>
      </register>
      <register description="DMIC clock divider" format="hex0x" id="SYSCON@DMICCLKDIV"
                offset="0x3a8"
                size="4">
         <field description="Clock divider value. 0: Divide by 1 up to 255: Divide by 256."
                format="hex0x"
                id="SYSCON@DMICCLKDIV@DIV"
                offset="[7:0]"/>
         <field description="Resets the divider counter. Can be used to make sure a new divider value is used right away rather than completing the previous count."
                format="hex0x"
                id="SYSCON@DMICCLKDIV@RESET"
                offset="[29]"/>
         <field description="Halts the divider counter. The intent is to allow the divider clock source to be changed without the risk of a glitch at the output."
                format="hex0x"
                id="SYSCON@DMICCLKDIV@HALT"
                offset="[30]"/>
         <field description="Divider status flag." format="hex0x"
                id="SYSCON@DMICCLKDIV@REQFLAG"
                offset="[31]"/>
      </register>
      <register description="I2S MCLK clock divider" format="hex0x" id="SYSCON@MCLKDIV"
                offset="0x3ac"
                size="4">
         <field description="Clock divider value. 0: Divide by 1 up to 255: Divide by 256."
                format="hex0x"
                id="SYSCON@MCLKDIV@DIV"
                offset="[7:0]"/>
         <field description="Resets the divider counter." format="hex0x"
                id="SYSCON@MCLKDIV@RESET"
                offset="[29]"/>
         <field description="Halts the divider counter." format="hex0x"
                id="SYSCON@MCLKDIV@HALT"
                offset="[30]"/>
         <field description="Divider status flag." format="hex0x" id="SYSCON@MCLKDIV@REQFLAG"
                offset="[31]"/>
      </register>
      <register description="LCD clock divider" format="hex0x" id="SYSCON@LCDCLKDIV"
                offset="0x3b0"
                size="4">
         <field description="Clock divider value." format="hex0x" id="SYSCON@LCDCLKDIV@DIV"
                offset="[7:0]"/>
         <field description="Resets the divider counter." format="hex0x"
                id="SYSCON@LCDCLKDIV@RESET"
                offset="[29]"/>
         <field description="Halts the divider counter." format="hex0x"
                id="SYSCON@LCDCLKDIV@HALT"
                offset="[30]"/>
         <field description="Divider status flag." format="hex0x" id="SYSCON@LCDCLKDIV@REQFLAG"
                offset="[31]"/>
      </register>
      <register description="SCT/PWM clock divider" format="hex0x" id="SYSCON@SCTCLKDIV"
                offset="0x3b4"
                size="4">
         <field description="Clock divider value." format="hex0x" id="SYSCON@SCTCLKDIV@DIV"
                offset="[7:0]"/>
         <field description="Resets the divider counter." format="hex0x"
                id="SYSCON@SCTCLKDIV@RESET"
                offset="[29]"/>
         <field description="Halts the divider counter." format="hex0x"
                id="SYSCON@SCTCLKDIV@HALT"
                offset="[30]"/>
         <field description="Divider status flag." format="hex0x" id="SYSCON@SCTCLKDIV@REQFLAG"
                offset="[31]"/>
      </register>
      <register description="EMC clock divider" format="hex0x" id="SYSCON@EMCCLKDIV"
                offset="0x3b8"
                size="4">
         <field description="Clock divider value." format="hex0x" id="SYSCON@EMCCLKDIV@DIV"
                offset="[7:0]"/>
         <field description="Resets the divider counter." format="hex0x"
                id="SYSCON@EMCCLKDIV@RESET"
                offset="[29]"/>
         <field description="Halts the divider counter." format="hex0x"
                id="SYSCON@EMCCLKDIV@HALT"
                offset="[30]"/>
         <field description="Divider status flag." format="hex0x" id="SYSCON@EMCCLKDIV@REQFLAG"
                offset="[31]"/>
      </register>
      <register description="SDIO clock divider" format="hex0x" id="SYSCON@SDIOCLKDIV"
                offset="0x3bc"
                size="4">
         <field description="Clock divider value." format="hex0x" id="SYSCON@SDIOCLKDIV@DIV"
                offset="[7:0]"/>
         <field description="Resets the divider counter." format="hex0x"
                id="SYSCON@SDIOCLKDIV@RESET"
                offset="[29]"/>
         <field description="Halts the divider counter." format="hex0x"
                id="SYSCON@SDIOCLKDIV@HALT"
                offset="[30]"/>
         <field description="Divider status flag." format="hex0x"
                id="SYSCON@SDIOCLKDIV@REQFLAG"
                offset="[31]"/>
      </register>
      <register description="Flash wait states configuration" format="hex0x"
                id="SYSCON@FLASHCFG"
                offset="0x400"
                size="4">
         <field description="Instruction fetch configuration. This field determines how flash accelerator buffers are used for instruction fetches."
                format="enum"
                enum="d1e7024"
                id="SYSCON@FLASHCFG@FETCHCFG"
                offset="[1:0]"/>
         <field description="Data read configuration. This field determines how flash accelerator buffers are used for data accesses."
                format="enum"
                enum="d1e7082"
                id="SYSCON@FLASHCFG@DATACFG"
                offset="[3:2]"/>
         <field description="Acceleration enable." format="enum" enum="d1e7140"
                id="SYSCON@FLASHCFG@ACCEL"
                offset="[4]"/>
         <field description="Prefetch enable." format="enum" enum="d1e7186"
                id="SYSCON@FLASHCFG@PREFEN"
                offset="[5]"/>
         <field description="Prefetch override. This bit only applies when PREFEN = 1 and a buffered instruction is completing for which the next flash line is not already buffered or being prefetched."
                format="enum"
                enum="d1e7232"
                id="SYSCON@FLASHCFG@PREFOVR"
                offset="[6]"/>
         <field description="Flash memory access time. The number of system clocks used for flash accesses is equal to FLASHTIM +1."
                format="enum"
                enum="d1e7279"
                id="SYSCON@FLASHCFG@FLASHTIM"
                offset="[15:12]"/>
      </register>
      <register description="USB0 clock control" format="hex0x" id="SYSCON@USB0CLKCTRL"
                offset="0x40c"
                size="4">
         <field description="USB0 Device USB0_NEEDCLK signal control." format="hex0x"
                id="SYSCON@USB0CLKCTRL@AP-FS-DEV-CLK"
                offset="[0]"/>
         <field description="USB0 Device USB0_NEEDCLK polarity for triggering the USB0 wake-up interrupt."
                format="hex0x"
                id="SYSCON@USB0CLKCTRL@POL-FS-DEV-CLK"
                offset="[1]"/>
         <field description="USB0 Host USB0_NEEDCLK signal control." format="hex0x"
                id="SYSCON@USB0CLKCTRL@AP-FS-HOST-CLK"
                offset="[2]"/>
         <field description="USB0 Host USB0_NEEDCLK polarity for triggering the USB0 wake-up interrupt."
                format="hex0x"
                id="SYSCON@USB0CLKCTRL@POL-FS-HOST-CLK"
                offset="[3]"/>
         <field description="Internal pull-up disable control." format="hex0x"
                id="SYSCON@USB0CLKCTRL@PU-DISABLE"
                offset="[4]"/>
      </register>
      <register description="USB0 clock status" format="hex0x" id="SYSCON@USB0CLKSTAT"
                offset="0x410"
                size="4">
         <field description="USB0 Device USB0_NEEDCLK signal status." format="hex0x"
                id="SYSCON@USB0CLKSTAT@DEV-NEED-CLKST"
                offset="[0]"/>
         <field description="USB0 Host USB0_NEEDCLK signal status." format="hex0x"
                id="SYSCON@USB0CLKSTAT@HOST-NEED-CLKST"
                offset="[1]"/>
      </register>
      <register description="Frequency measure register" format="hex0x" id="SYSCON@FREQMECTRL"
                offset="0x418"
                size="4">
         <field description="Stores the capture result which is used to calculate the frequency of the target clock. This field is read-only."
                format="hex0x"
                id="SYSCON@FREQMECTRL@CAPVAL"
                offset="[13:0]"/>
         <field description="Set this bit to one to initiate a frequency measurement cycle. Hardware clears this bit when the measurement cycle has completed and there is valid capture data in the CAPVAL field (bits 13:0)."
                format="hex0x"
                id="SYSCON@FREQMECTRL@PROG"
                offset="[31]"/>
      </register>
      <register description="MCLK input/output control" format="hex0x" id="SYSCON@MCLKIO"
                offset="0x420"
                size="4">
         <field description="MCLK direction control." format="hex0x" id="SYSCON@MCLKIO@DIR"
                offset="[0]"/>
      </register>
      <register description="USB1 clock control" format="hex0x" id="SYSCON@USB1CLKCTRL"
                offset="0x424"
                size="4">
         <field description="USB1 Device need_clock signal control." format="hex0x"
                id="SYSCON@USB1CLKCTRL@AP-FS-DEV-CLK"
                offset="[0]"/>
         <field description="USB1 Device need_clock polarity for triggering the USB1 wake-up interrupt."
                format="hex0x"
                id="SYSCON@USB1CLKCTRL@POL-FS-DEV-CLK"
                offset="[1]"/>
         <field description="USB1 Host need_clock signal control." format="hex0x"
                id="SYSCON@USB1CLKCTRL@AP-FS-HOST-CLK"
                offset="[2]"/>
         <field description="USB1 Host need_clock polarity for triggering the USB1 wake-up interrupt."
                format="hex0x"
                id="SYSCON@USB1CLKCTRL@POL-FS-HOST-CLK"
                offset="[3]"/>
         <field description="External user wake-up signal for device mode; asserting this signal (active low) will result in exiting the low power mode; input to asynchronous control logic."
                format="hex0x"
                id="SYSCON@USB1CLKCTRL@HS-DEV-WAKEUP-N"
                offset="[4]"/>
      </register>
      <register description="USB1 clock status" format="hex0x" id="SYSCON@USB1CLKSTAT"
                offset="0x428"
                size="4">
         <field description="USB1 Device USB1_NEEDCLK signal status." format="hex0x"
                id="SYSCON@USB1CLKSTAT@DEV-NEED-CLKST"
                offset="[0]"/>
         <field description="USB1 Device host USB1_NEEDCLK signal status." format="hex0x"
                id="SYSCON@USB1CLKSTAT@HOST-NEED-CLKST"
                offset="[1]"/>
      </register>
      <register description="EMC system control" format="hex0x" id="SYSCON@EMCSYSCTRL"
                offset="0x444"
                size="4">
         <field description="EMC Shift Control." format="hex0x" id="SYSCON@EMCSYSCTRL@EMCSC"
                offset="[0]"/>
         <field description="EMC Reset Disable." format="hex0x" id="SYSCON@EMCSYSCTRL@EMCRD"
                offset="[1]"/>
         <field description="External Memory Controller burst control." format="hex0x"
                id="SYSCON@EMCSYSCTRL@EMCBC"
                offset="[2]"/>
         <field description="External Memory Controller clock select." format="hex0x"
                id="SYSCON@EMCSYSCTRL@EMCFBCLKINSEL"
                offset="[3]"/>
      </register>
      <register description="EMC clock delay control" format="hex0x" id="SYSCON@EMCDLYCTRL"
                offset="0x448"
                size="4">
         <field description="Programmable delay value for EMC outputs in command delayed mode."
                format="hex0x"
                id="SYSCON@EMCDLYCTRL@CMD-DELAY"
                offset="[4:0]"/>
         <field description="Programmable delay value for the feedback clock that controls input data sampling."
                format="hex0x"
                id="SYSCON@EMCDLYCTRL@FBCLK-DELAY"
                offset="[12:8]"/>
      </register>
      <register description="EMC delay chain calibration control" format="hex0x"
                id="SYSCON@EMCDLYCAL"
                offset="0x44c"
                size="4">
         <field description="Returns the count of the approximately 50 MHz ring oscillator that occur during 32 clocks of the FRO 12 MHz."
                format="hex0x"
                id="SYSCON@EMCDLYCAL@CALVALUE"
                offset="[7:0]"/>
         <field description="Start control bit for the EMC calibration counter." format="hex0x"
                id="SYSCON@EMCDLYCAL@START"
                offset="[14]"/>
         <field description="Measurement completion flag." format="hex0x"
                id="SYSCON@EMCDLYCAL@DONE"
                offset="[15]"/>
      </register>
      <register description="Ethernet PHY Selection" format="hex0x" id="SYSCON@ETHPHYSEL"
                offset="0x450"
                size="4">
         <field description="PHY interface select." format="hex0x"
                id="SYSCON@ETHPHYSEL@PHY-SEL"
                offset="[2]"/>
      </register>
      <register description="Ethernet SBD flow control" format="hex0x" id="SYSCON@ETHSBDCTRL"
                offset="0x454"
                size="4">
         <field description="Sideband Flow Control." format="hex0x"
                id="SYSCON@ETHSBDCTRL@SBD-CTRL"
                offset="[1:0]"/>
      </register>
      <register description="SDIO CCLKIN phase and delay control" format="hex0x"
                id="SYSCON@SDIOCLKCTRL"
                offset="0x460"
                size="4">
         <field description="Programmable delay value by which cclk_in_drv is phase-shifted with regard to cclk_in."
                format="hex0x"
                id="SYSCON@SDIOCLKCTRL@CCLK-DRV-PHASE"
                offset="[1:0]"/>
         <field description="Programmable delay value by which cclk_in_sample is delayed with regard to cclk_in."
                format="hex0x"
                id="SYSCON@SDIOCLKCTRL@CCLK-SAMPLE-PHASE"
                offset="[3:2]"/>
         <field description="sdio_clk by 2, before feeding into ccl_in, cclk_in_sample, and cclk_in_drv."
                format="hex0x"
                id="SYSCON@SDIOCLKCTRL@PHASE-ACTIVE"
                offset="[7]"/>
         <field description="Programmable delay value by which cclk_in_drv is delayed with regard to cclk_in."
                format="hex0x"
                id="SYSCON@SDIOCLKCTRL@CCLK-DRV-DELAY"
                offset="[20:16]"/>
         <field description="Enables drive delay, as controlled by the CCLK_DRV_DELAY field."
                format="hex0x"
                id="SYSCON@SDIOCLKCTRL@CCLK-DRV-DELAY-ACTIVE"
                offset="[23]"/>
         <field description="Programmable delay value by which cclk_in_sample is delayed with regard to cclk_in."
                format="hex0x"
                id="SYSCON@SDIOCLKCTRL@CCLK-SAMPLE-DELAY"
                offset="[28:24]"/>
         <field description="Enables sample delay, as controlled by the CCLK_SAMPLE_DELAY field."
                format="hex0x"
                id="SYSCON@SDIOCLKCTRL@CCLK-SAMPLE-DELAY-ACTIVE"
                offset="[31]"/>
      </register>
      <register description="FRO oscillator control" format="hex0x" id="SYSCON@FROCTRL"
                offset="0x500"
                size="4">
         <field description="This value is factory trimmed to account for bias and temperature compensation."
                format="hex0x"
                id="SYSCON@FROCTRL@TRIM"
                offset="[13:0]"/>
         <field description="Select the FRO HF output frequency." format="hex0x"
                id="SYSCON@FROCTRL@SEL"
                offset="[14]"/>
         <field description="Frequency trim." format="hex0x" id="SYSCON@FROCTRL@FREQTRIM"
                offset="[23:16]"/>
         <field description="USB clock adjust mode." format="hex0x"
                id="SYSCON@FROCTRL@USBCLKADJ"
                offset="[24]"/>
         <field description="USB Mode value Change flag." format="hex0x"
                id="SYSCON@FROCTRL@USBMODCHG"
                offset="[25]"/>
         <field description="High speed clock enable." format="hex0x"
                id="SYSCON@FROCTRL@HSPDCLK"
                offset="[30]"/>
         <field description="Write Trim value." format="hex0x" id="SYSCON@FROCTRL@WRTRIM"
                offset="[31]"/>
      </register>
      <register description="System oscillator control" format="hex0x" id="SYSCON@SYSOSCCTRL"
                offset="0x504"
                size="4">
         <field description="Bypass system oscillator." format="hex0x"
                id="SYSCON@SYSOSCCTRL@BYPASS"
                offset="[0]"/>
         <field description="Determines frequency range for system oscillator." format="hex0x"
                id="SYSCON@SYSOSCCTRL@FREQRANGE"
                offset="[1]"/>
      </register>
      <register description="Watchdog oscillator control" format="hex0x" id="SYSCON@WDTOSCCTRL"
                offset="0x508"
                size="4">
         <field description="Divider select." format="hex0x" id="SYSCON@WDTOSCCTRL@DIVSEL"
                offset="[4:0]"/>
         <field description="Frequency select." format="hex0x" id="SYSCON@WDTOSCCTRL@FREQSEL"
                offset="[9:5]"/>
      </register>
      <register description="RTC oscillator 32 kHz output control" format="hex0x"
                id="SYSCON@RTCOSCCTRL"
                offset="0x50c"
                size="4">
         <field description="RTC 32 kHz clock enable." format="hex0x" id="SYSCON@RTCOSCCTRL@EN"
                offset="[0]"/>
      </register>
      <register description="USB PLL control" format="hex0x" id="SYSCON@USBPLLCTRL"
                offset="0x51c"
                size="4">
         <field description="PLL feedback Divider value." format="hex0x"
                id="SYSCON@USBPLLCTRL@MSEL"
                offset="[7:0]"/>
         <field description="PLL Divider value." format="hex0x" id="SYSCON@USBPLLCTRL@PSEL"
                offset="[9:8]"/>
         <field description="PLL feedback Divider value." format="hex0x"
                id="SYSCON@USBPLLCTRL@NSEL"
                offset="[11:10]"/>
         <field description="Direct CCO clock output control." format="enum" enum="d1e8741"
                id="SYSCON@USBPLLCTRL@DIRECT"
                offset="[12]"/>
         <field description="Input clock bypass control." format="enum" enum="d1e8787"
                id="SYSCON@USBPLLCTRL@BYPASS"
                offset="[13]"/>
         <field description="Feedback divider input clock control." format="hex0x"
                id="SYSCON@USBPLLCTRL@FBSEL"
                offset="[14]"/>
      </register>
      <register description="USB PLL status" format="hex0x" id="SYSCON@USBPLLSTAT"
                offset="0x520"
                size="4">
         <field description="USBPLL lock indicator." format="hex0x" id="SYSCON@USBPLLSTAT@LOCK"
                offset="[0]"/>
      </register>
      <register description="System PLL control" format="hex0x" id="SYSCON@SYSPLLCTRL"
                offset="0x580"
                size="4">
         <field description="Bandwidth select R value." format="hex0x"
                id="SYSCON@SYSPLLCTRL@SELR"
                offset="[3:0]"/>
         <field description="Bandwidth select I value." format="hex0x"
                id="SYSCON@SYSPLLCTRL@SELI"
                offset="[9:4]"/>
         <field description="Bandwidth select P value." format="hex0x"
                id="SYSCON@SYSPLLCTRL@SELP"
                offset="[14:10]"/>
         <field description="PLL bypass control." format="enum" enum="d1e8981"
                id="SYSCON@SYSPLLCTRL@BYPASS"
                offset="[15]"/>
         <field description="Disable upper frequency limiter." format="hex0x"
                id="SYSCON@SYSPLLCTRL@UPLIMOFF"
                offset="[17]"/>
         <field description="PLL0 direct input enable." format="hex0x"
                id="SYSCON@SYSPLLCTRL@DIRECTI"
                offset="[19]"/>
         <field description="PLL0 direct output enable." format="enum" enum="d1e9064"
                id="SYSCON@SYSPLLCTRL@DIRECTO"
                offset="[20]"/>
      </register>
      <register description="PLL status" format="hex0x" id="SYSCON@SYSPLLSTAT" offset="0x584"
                size="4">
         <field description="PLL lock indicator." format="hex0x" id="SYSCON@SYSPLLSTAT@LOCK"
                offset="[0]"/>
      </register>
      <register description="PLL N divider" format="hex0x" id="SYSCON@SYSPLLNDEC"
                offset="0x588"
                size="4">
         <field description="Decoded N-divider coefficient value." format="hex0x"
                id="SYSCON@SYSPLLNDEC@NDEC"
                offset="[9:0]"/>
         <field description="NDEC reload request." format="hex0x" id="SYSCON@SYSPLLNDEC@NREQ"
                offset="[10]"/>
      </register>
      <register description="PLL P divider" format="hex0x" id="SYSCON@SYSPLLPDEC"
                offset="0x58c"
                size="4">
         <field description="Decoded P-divider coefficient value." format="hex0x"
                id="SYSCON@SYSPLLPDEC@PDEC"
                offset="[6:0]"/>
         <field description="." format="hex0x" id="SYSCON@SYSPLLPDEC@PREQ" offset="[7]"/>
      </register>
      <register description="System PLL M divider" format="hex0x" id="SYSCON@SYSPLLMDEC"
                offset="0x590"
                size="4">
         <field description="Decoded M-divider coefficient value." format="hex0x"
                id="SYSCON@SYSPLLMDEC@MDEC"
                offset="[16:0]"/>
         <field description="MDEC reload request." format="hex0x" id="SYSCON@SYSPLLMDEC@MREQ"
                offset="[17]"/>
      </register>
      <register description="Audio PLL control" format="hex0x" id="SYSCON@AUDPLLCTRL"
                offset="0x5a0"
                size="4">
         <field description="Bandwidth select R value." format="hex0x"
                id="SYSCON@AUDPLLCTRL@SELR"
                offset="[3:0]"/>
         <field description="Bandwidth select I value." format="hex0x"
                id="SYSCON@AUDPLLCTRL@SELI"
                offset="[9:4]"/>
         <field description="." format="hex0x" id="SYSCON@AUDPLLCTRL@SELP" offset="[14:10]"/>
         <field description="PLL bypass control." format="enum" enum="d1e9431"
                id="SYSCON@AUDPLLCTRL@BYPASS"
                offset="[15]"/>
         <field description="Disable upper frequency limiter." format="hex0x"
                id="SYSCON@AUDPLLCTRL@UPLIMOFF"
                offset="[17]"/>
         <field description="PLL direct input enable." format="hex0x"
                id="SYSCON@AUDPLLCTRL@DIRECTI"
                offset="[19]"/>
         <field description="PLL direct output enable" format="enum" enum="d1e9514"
                id="SYSCON@AUDPLLCTRL@DIRECTO"
                offset="[20]"/>
      </register>
      <register description="Audio PLL status" format="hex0x" id="SYSCON@AUDPLLSTAT"
                offset="0x5a4"
                size="4">
         <field description="PLL lock indicator." format="hex0x" id="SYSCON@AUDPLLSTAT@LOCK"
                offset="[0]"/>
      </register>
      <register description="Audio PLL N divider" format="hex0x" id="SYSCON@AUDPLLNDEC"
                offset="0x5a8"
                size="4">
         <field description="Decoded N-divider coefficient value." format="hex0x"
                id="SYSCON@AUDPLLNDEC@NDEC"
                offset="[9:0]"/>
         <field description="NDEC reload request." format="hex0x" id="SYSCON@AUDPLLNDEC@NREQ"
                offset="[10]"/>
      </register>
      <register description="Audio PLL P divider" format="hex0x" id="SYSCON@AUDPLLPDEC"
                offset="0x5ac"
                size="4">
         <field description="Decoded P-divider coefficient value." format="hex0x"
                id="SYSCON@AUDPLLPDEC@PDEC"
                offset="[6:0]"/>
         <field description="PDEC reload request." format="hex0x" id="SYSCON@AUDPLLPDEC@PREQ"
                offset="[7]"/>
      </register>
      <register description="Audio PLL M divider" format="hex0x" id="SYSCON@AUDPLLMDEC"
                offset="0x5b0"
                size="4">
         <field description="Decoded M-divider coefficient value." format="hex0x"
                id="SYSCON@AUDPLLMDEC@MDEC"
                offset="[16:0]"/>
         <field description="MDEC reload request." format="hex0x" id="SYSCON@AUDPLLMDEC@MREQ"
                offset="[17]"/>
      </register>
      <register description="Audio PLL fractional divider control" format="hex0x"
                id="SYSCON@AUDPLLFRAC"
                offset="0x5b4"
                size="4">
         <field description="PLL fractional divider control word" format="hex0x"
                id="SYSCON@AUDPLLFRAC@CTRL"
                offset="[21:0]"/>
         <field description="Writing 1 to REQ signal loads CTRL value into fractional wrapper modulator."
                format="hex0x"
                id="SYSCON@AUDPLLFRAC@REQ"
                offset="[22]"/>
         <field description="Select fractional divider." format="hex0x"
                id="SYSCON@AUDPLLFRAC@SEL-EXT"
                offset="[23]"/>
      </register>
      <register description="Sleep configuration register" format="hex0x"
                id="SYSCON@PDSLEEPCFG0"
                offset="0x600"
                size="4">
         <field description="FRO oscillator." format="hex0x" id="SYSCON@PDSLEEPCFG0@PDEN-FRO"
                offset="[4]"/>
         <field description="Temp sensor." format="hex0x" id="SYSCON@PDSLEEPCFG0@PDEN-TS"
                offset="[6]"/>
         <field description="Brown-out Detect reset." format="hex0x"
                id="SYSCON@PDSLEEPCFG0@PDEN-BOD-RST"
                offset="[7]"/>
         <field description="Brown-out Detect interrupt." format="hex0x"
                id="SYSCON@PDSLEEPCFG0@PDEN-BOD-INTR"
                offset="[8]"/>
         <field description="Analog supply for System Oscillator (also enable/disable bit 3 in PDRUNCFG1 register), Temperature Sensor (also, enable/disable bit 6), ADC (also, enable/disable bits 10, 19, and 23)."
                format="hex0x"
                id="SYSCON@PDSLEEPCFG0@PDEN-VD2-ANA"
                offset="[9]"/>
         <field description="ADC power." format="hex0x" id="SYSCON@PDSLEEPCFG0@PDEN-ADC0"
                offset="[10]"/>
         <field description="PDEN_SRAMX controls SRAMX (also enable/disable bit 27)."
                format="hex0x"
                id="SYSCON@PDSLEEPCFG0@PDEN-SRAMX"
                offset="[13]"/>
         <field description="PDEN_SRAM0 controls SRAM0 (also enable/disable bit 27)."
                format="hex0x"
                id="SYSCON@PDSLEEPCFG0@PDEN-SRAM0"
                offset="[14]"/>
         <field description="PDEN_SRAM1_2_3 controls SRAM1, SRAM2, and SRAM3 (also enable/disable bit 27)."
                format="hex0x"
                id="SYSCON@PDSLEEPCFG0@PDEN-SRAM1-2-3"
                offset="[15]"/>
         <field description="PDEN_USB_SRAM controls USB_RAM (also enable/disable bit 27)."
                format="hex0x"
                id="SYSCON@PDSLEEPCFG0@PDEN-USB-RAM"
                offset="[16]"/>
         <field description="ROM (also enable/disable bit 27)." format="hex0x"
                id="SYSCON@PDSLEEPCFG0@PDEN-ROM"
                offset="[17]"/>
         <field description="Vdda to the ADC, must be enabled for the ADC to work (also enable/disable bit 9, 10, and 23)."
                format="hex0x"
                id="SYSCON@PDSLEEPCFG0@PDEN-VDDA"
                offset="[19]"/>
         <field description="Watchdog oscillator." format="hex0x"
                id="SYSCON@PDSLEEPCFG0@PDEN-WDT-OSC"
                offset="[20]"/>
         <field description="USB0 PHY power (also enable/disable bit 28)." format="hex0x"
                id="SYSCON@PDSLEEPCFG0@PDEN-USB0-PHY"
                offset="[21]"/>
         <field description="System PLL (PLL0) power (also enable/disable bit 26)."
                format="hex0x"
                id="SYSCON@PDSLEEPCFG0@PDEN-SYS-PLL"
                offset="[22]"/>
         <field description="VREFP to the ADC must be enabled for the ADC to work (also enable/disable bit 9, 10, and 19)."
                format="hex0x"
                id="SYSCON@PDSLEEPCFG0@PDEN-VREFP"
                offset="[23]"/>
         <field description="Power control for all PLLs." format="hex0x"
                id="SYSCON@PDSLEEPCFG0@PDEN-VD3"
                offset="[26]"/>
         <field description="Power control for all SRAMs and ROM." format="hex0x"
                id="SYSCON@PDSLEEPCFG0@PDEN-VD4"
                offset="[27]"/>
         <field description="Power control both USB0 PHY and USB1 PHY." format="hex0x"
                id="SYSCON@PDSLEEPCFG0@PDEN-VD5"
                offset="[28]"/>
         <field description="Power control for EEPROM." format="hex0x"
                id="SYSCON@PDSLEEPCFG0@PDEN-VD6"
                offset="[29]"/>
      </register>
      <register description="Sleep configuration register" format="hex0x"
                id="SYSCON@PDSLEEPCFG1"
                offset="0x604"
                size="4">
         <field description="USB1 high speed PHY (also, enable/disable bit 28 in PDRUNCFG0 register)."
                format="hex0x"
                id="SYSCON@PDSLEEPCFG1@PDEN-USB1-PHY"
                offset="[0]"/>
         <field description="USB PLL (PLL1) power (also, enable/disable bit 26 in PDRUNCFG0 register)."
                format="hex0x"
                id="SYSCON@PDSLEEPCFG1@PDEN-USB1-PLL"
                offset="[1]"/>
         <field description="Audio PLL (PLL2) power and fractional divider (also, enable/disable bit 26 in PDRUNCFG0 register)."
                format="hex0x"
                id="SYSCON@PDSLEEPCFG1@PDEN-AUD-PLL"
                offset="[2]"/>
         <field description="System Oscillator Power (also, enable/disable bit 9 in PDRUNCFG0 register)."
                format="hex0x"
                id="SYSCON@PDSLEEPCFG1@PDEN-SYSOSC"
                offset="[3]"/>
         <field description="EEPROM power (also, enable/disable bit 29 in PDRUNCFG0 register)."
                format="hex0x"
                id="SYSCON@PDSLEEPCFG1@PDEN-EEPROM"
                offset="[5]"/>
         <field description="Random Number Generator Power." format="hex0x"
                id="SYSCON@PDSLEEPCFG1@PDEN-RNG"
                offset="[7]"/>
      </register>
      <register description="Power configuration register" format="hex0x" id="SYSCON@PDRUNCFG0"
                offset="0x610"
                size="4">
         <field description="FRO oscillator." format="hex0x" id="SYSCON@PDRUNCFG0@PDEN-FRO"
                offset="[4]"/>
         <field description="Temp sensor." format="hex0x" id="SYSCON@PDRUNCFG0@PDEN-TS"
                offset="[6]"/>
         <field description="Brown-out Detect reset." format="hex0x"
                id="SYSCON@PDRUNCFG0@PDEN-BOD-RST"
                offset="[7]"/>
         <field description="Brown-out Detect interrupt." format="hex0x"
                id="SYSCON@PDRUNCFG0@PDEN-BOD-INTR"
                offset="[8]"/>
         <field description="Analog supply for System Oscillator (also enable/disable bit 3 in PDRUNCFG1 register), Temperature Sensor (also, enable/disable bit 6), ADC (also, enable/disable bits 10, 19, and 23)."
                format="hex0x"
                id="SYSCON@PDRUNCFG0@PDEN-VD2-ANA"
                offset="[9]"/>
         <field description="ADC power." format="hex0x" id="SYSCON@PDRUNCFG0@PDEN-ADC0"
                offset="[10]"/>
         <field description="PDEN_SRAMX controls SRAMX (also enable/disable bit 27)."
                format="hex0x"
                id="SYSCON@PDRUNCFG0@PDEN-SRAMX"
                offset="[13]"/>
         <field description="PDEN_SRAM0 controls SRAM0 (also enable/disable bit 27)."
                format="hex0x"
                id="SYSCON@PDRUNCFG0@PDEN-SRAM0"
                offset="[14]"/>
         <field description="PDEN_SRAM1_2_3 controls SRAM1, SRAM2, and SRAM3 (also enable/disable bit 27)."
                format="hex0x"
                id="SYSCON@PDRUNCFG0@PDEN-SRAM1-2-3"
                offset="[15]"/>
         <field description="PDEN_USB_SRAM controls USB_RAM (also enable/disable bit 27)."
                format="hex0x"
                id="SYSCON@PDRUNCFG0@PDEN-USB-RAM"
                offset="[16]"/>
         <field description="ROM (also enable/disable bit 27)." format="hex0x"
                id="SYSCON@PDRUNCFG0@PDEN-ROM"
                offset="[17]"/>
         <field description="Vdda to the ADC, must be enabled for the ADC to work (also enable/disable bit 9, 10, and 23)."
                format="hex0x"
                id="SYSCON@PDRUNCFG0@PDEN-VDDA"
                offset="[19]"/>
         <field description="Watchdog oscillator." format="hex0x"
                id="SYSCON@PDRUNCFG0@PDEN-WDT-OSC"
                offset="[20]"/>
         <field description="USB0 PHY power (also enable/disable bit 28)." format="hex0x"
                id="SYSCON@PDRUNCFG0@PDEN-USB0-PHY"
                offset="[21]"/>
         <field description="System PLL (PLL0) power (also enable/disable bit 26)."
                format="hex0x"
                id="SYSCON@PDRUNCFG0@PDEN-SYS-PLL"
                offset="[22]"/>
         <field description="VREFP to the ADC must be enabled for the ADC to work (also enable/disable bit 9, 10, and 19)."
                format="hex0x"
                id="SYSCON@PDRUNCFG0@PDEN-VREFP"
                offset="[23]"/>
         <field description="Power control for all PLLs." format="hex0x"
                id="SYSCON@PDRUNCFG0@PDEN-VD3"
                offset="[26]"/>
         <field description="Power control for all SRAMs and ROM." format="hex0x"
                id="SYSCON@PDRUNCFG0@PDEN-VD4"
                offset="[27]"/>
         <field description="Power control both USB0 PHY and USB1 PHY." format="hex0x"
                id="SYSCON@PDRUNCFG0@PDEN-VD5"
                offset="[28]"/>
         <field description="Power control for EEPROM." format="hex0x"
                id="SYSCON@PDRUNCFG0@PDEN-VD6"
                offset="[29]"/>
      </register>
      <register description="Power configuration register" format="hex0x" id="SYSCON@PDRUNCFG1"
                offset="0x614"
                size="4">
         <field description="USB1 high speed PHY (also, enable/disable bit 28 in PDRUNCFG0 register)."
                format="hex0x"
                id="SYSCON@PDRUNCFG1@PDEN-USB1-PHY"
                offset="[0]"/>
         <field description="USB PLL (PLL1) power (also, enable/disable bit 26 in PDRUNCFG0 register)."
                format="hex0x"
                id="SYSCON@PDRUNCFG1@PDEN-USB1-PLL"
                offset="[1]"/>
         <field description="Audio PLL (PLL2) power and fractional divider (also, enable/disable bit 26 in PDRUNCFG0 register)."
                format="hex0x"
                id="SYSCON@PDRUNCFG1@PDEN-AUD-PLL"
                offset="[2]"/>
         <field description="System Oscillator Power (also, enable/disable bit 9 in PDRUNCFG0 register)."
                format="hex0x"
                id="SYSCON@PDRUNCFG1@PDEN-SYSOSC"
                offset="[3]"/>
         <field description="EEPROM power (also, enable/disable bit 29 in PDRUNCFG0 register)."
                format="hex0x"
                id="SYSCON@PDRUNCFG1@PDEN-EEPROM"
                offset="[5]"/>
         <field description="Random Number Generator Power." format="hex0x"
                id="SYSCON@PDRUNCFG1@PDEN-RNG"
                offset="[7]"/>
      </register>
      <register description="Power configuration set register" format="hex0x"
                id="SYSCON@PDRUNCFGSET0"
                offset="0x620"
                size="4">
         <field description="FRO oscillator." format="hex0x" id="SYSCON@PDRUNCFGSET0@PDEN-FRO"
                offset="[4]"/>
         <field description="Temp sensor." format="hex0x" id="SYSCON@PDRUNCFGSET0@PDEN-TS"
                offset="[6]"/>
         <field description="Brown-out Detect reset." format="hex0x"
                id="SYSCON@PDRUNCFGSET0@PDEN-BOD-RST"
                offset="[7]"/>
         <field description="Brown-out Detect interrupt." format="hex0x"
                id="SYSCON@PDRUNCFGSET0@PDEN-BOD-INTR"
                offset="[8]"/>
         <field description="Analog supply for System Oscillator (also enable/disable bit 3 in PDRUNCFG1 register), Temperature Sensor (also, enable/disable bit 6), ADC (also, enable/disable bits 10, 19, and 23)."
                format="hex0x"
                id="SYSCON@PDRUNCFGSET0@PDEN-VD2-ANA"
                offset="[9]"/>
         <field description="ADC power." format="hex0x" id="SYSCON@PDRUNCFGSET0@PDEN-ADC0"
                offset="[10]"/>
         <field description="PDEN_SRAMX controls SRAMX (also enable/disable bit 27)."
                format="hex0x"
                id="SYSCON@PDRUNCFGSET0@PDEN-SRAMX"
                offset="[13]"/>
         <field description="PDEN_SRAM0 controls SRAM0 (also enable/disable bit 27)."
                format="hex0x"
                id="SYSCON@PDRUNCFGSET0@PDEN-SRAM0"
                offset="[14]"/>
         <field description="PDEN_SRAM1_2_3 controls SRAM1, SRAM2, and SRAM3 (also enable/disable bit 27)."
                format="hex0x"
                id="SYSCON@PDRUNCFGSET0@PDEN-SRAM1-2-3"
                offset="[15]"/>
         <field description="PDEN_USB_SRAM controls USB_RAM (also enable/disable bit 27)."
                format="hex0x"
                id="SYSCON@PDRUNCFGSET0@PDEN-USB-RAM"
                offset="[16]"/>
         <field description="ROM (also enable/disable bit 27)." format="hex0x"
                id="SYSCON@PDRUNCFGSET0@PDEN-ROM"
                offset="[17]"/>
         <field description="Vdda to the ADC, must be enabled for the ADC to work (also enable/disable bit 9, 10, and 23)."
                format="hex0x"
                id="SYSCON@PDRUNCFGSET0@PDEN-VDDA"
                offset="[19]"/>
         <field description="Watchdog oscillator." format="hex0x"
                id="SYSCON@PDRUNCFGSET0@PDEN-WDT-OSC"
                offset="[20]"/>
         <field description="USB0 PHY power (also enable/disable bit 28)." format="hex0x"
                id="SYSCON@PDRUNCFGSET0@PDEN-USB0-PHY"
                offset="[21]"/>
         <field description="System PLL (PLL0) power (also enable/disable bit 26)."
                format="hex0x"
                id="SYSCON@PDRUNCFGSET0@PDEN-SYS-PLL"
                offset="[22]"/>
         <field description="VREFP to the ADC must be enabled for the ADC to work (also enable/disable bit 9, 10, and 19)."
                format="hex0x"
                id="SYSCON@PDRUNCFGSET0@PDEN-VREFP"
                offset="[23]"/>
         <field description="Power control for all PLLs." format="hex0x"
                id="SYSCON@PDRUNCFGSET0@PDEN-VD3"
                offset="[26]"/>
         <field description="Power control for all SRAMs and ROM." format="hex0x"
                id="SYSCON@PDRUNCFGSET0@PDEN-VD4"
                offset="[27]"/>
         <field description="Power control both USB0 PHY and USB1 PHY." format="hex0x"
                id="SYSCON@PDRUNCFGSET0@PDEN-VD5"
                offset="[28]"/>
         <field description="Power control for EEPROM." format="hex0x"
                id="SYSCON@PDRUNCFGSET0@PDEN-VD6"
                offset="[29]"/>
      </register>
      <register description="Power configuration set register" format="hex0x"
                id="SYSCON@PDRUNCFGSET1"
                offset="0x624"
                size="4">
         <field description="USB1 high speed PHY (also, enable/disable bit 28 in PDRUNCFG0 register)."
                format="hex0x"
                id="SYSCON@PDRUNCFGSET1@PDEN-USB1-PHY"
                offset="[0]"/>
         <field description="USB PLL (PLL1) power (also, enable/disable bit 26 in PDRUNCFG0 register)."
                format="hex0x"
                id="SYSCON@PDRUNCFGSET1@PDEN-USB1-PLL"
                offset="[1]"/>
         <field description="Audio PLL (PLL2) power and fractional divider (also, enable/disable bit 26 in PDRUNCFG0 register)."
                format="hex0x"
                id="SYSCON@PDRUNCFGSET1@PDEN-AUD-PLL"
                offset="[2]"/>
         <field description="System Oscillator Power (also, enable/disable bit 9 in PDRUNCFG0 register)."
                format="hex0x"
                id="SYSCON@PDRUNCFGSET1@PDEN-SYSOSC"
                offset="[3]"/>
         <field description="EEPROM power (also, enable/disable bit 29 in PDRUNCFG0 register)."
                format="hex0x"
                id="SYSCON@PDRUNCFGSET1@PDEN-EEPROM"
                offset="[5]"/>
         <field description="Random Number Generator Power." format="hex0x"
                id="SYSCON@PDRUNCFGSET1@PDEN-RNG"
                offset="[7]"/>
      </register>
      <register description="Power configuration clear register" format="hex0x"
                id="SYSCON@PDRUNCFGCLR0"
                offset="0x630"
                size="4">
         <field description="FRO oscillator." format="hex0x" id="SYSCON@PDRUNCFGCLR0@PDEN-FRO"
                offset="[4]"/>
         <field description="Temp sensor." format="hex0x" id="SYSCON@PDRUNCFGCLR0@PDEN-TS"
                offset="[6]"/>
         <field description="Brown-out Detect reset." format="hex0x"
                id="SYSCON@PDRUNCFGCLR0@PDEN-BOD-RST"
                offset="[7]"/>
         <field description="Brown-out Detect interrupt." format="hex0x"
                id="SYSCON@PDRUNCFGCLR0@PDEN-BOD-INTR"
                offset="[8]"/>
         <field description="Analog supply for System Oscillator (also enable/disable bit 3 in PDRUNCFG1 register), Temperature Sensor (also, enable/disable bit 6), ADC (also, enable/disable bits 10, 19, and 23)."
                format="hex0x"
                id="SYSCON@PDRUNCFGCLR0@PDEN-VD2-ANA"
                offset="[9]"/>
         <field description="ADC power." format="hex0x" id="SYSCON@PDRUNCFGCLR0@PDEN-ADC0"
                offset="[10]"/>
         <field description="PDEN_SRAMX controls SRAMX (also enable/disable bit 27)."
                format="hex0x"
                id="SYSCON@PDRUNCFGCLR0@PDEN-SRAMX"
                offset="[13]"/>
         <field description="PDEN_SRAM0 controls SRAM0 (also enable/disable bit 27)."
                format="hex0x"
                id="SYSCON@PDRUNCFGCLR0@PDEN-SRAM0"
                offset="[14]"/>
         <field description="PDEN_SRAM1_2_3 controls SRAM1, SRAM2, and SRAM3 (also enable/disable bit 27)."
                format="hex0x"
                id="SYSCON@PDRUNCFGCLR0@PDEN-SRAM1-2-3"
                offset="[15]"/>
         <field description="PDEN_USB_SRAM controls USB_RAM (also enable/disable bit 27)."
                format="hex0x"
                id="SYSCON@PDRUNCFGCLR0@PDEN-USB-RAM"
                offset="[16]"/>
         <field description="ROM (also enable/disable bit 27)." format="hex0x"
                id="SYSCON@PDRUNCFGCLR0@PDEN-ROM"
                offset="[17]"/>
         <field description="Vdda to the ADC, must be enabled for the ADC to work (also enable/disable bit 9, 10, and 23)."
                format="hex0x"
                id="SYSCON@PDRUNCFGCLR0@PDEN-VDDA"
                offset="[19]"/>
         <field description="Watchdog oscillator." format="hex0x"
                id="SYSCON@PDRUNCFGCLR0@PDEN-WDT-OSC"
                offset="[20]"/>
         <field description="USB0 PHY power (also enable/disable bit 28)." format="hex0x"
                id="SYSCON@PDRUNCFGCLR0@PDEN-USB0-PHY"
                offset="[21]"/>
         <field description="System PLL (PLL0) power (also enable/disable bit 26)."
                format="hex0x"
                id="SYSCON@PDRUNCFGCLR0@PDEN-SYS-PLL"
                offset="[22]"/>
         <field description="VREFP to the ADC must be enabled for the ADC to work (also enable/disable bit 9, 10, and 19)."
                format="hex0x"
                id="SYSCON@PDRUNCFGCLR0@PDEN-VREFP"
                offset="[23]"/>
         <field description="Power control for all PLLs." format="hex0x"
                id="SYSCON@PDRUNCFGCLR0@PDEN-VD3"
                offset="[26]"/>
         <field description="Power control for all SRAMs and ROM." format="hex0x"
                id="SYSCON@PDRUNCFGCLR0@PDEN-VD4"
                offset="[27]"/>
         <field description="Power control both USB0 PHY and USB1 PHY." format="hex0x"
                id="SYSCON@PDRUNCFGCLR0@PDEN-VD5"
                offset="[28]"/>
         <field description="Power control for EEPROM." format="hex0x"
                id="SYSCON@PDRUNCFGCLR0@PDEN-VD6"
                offset="[29]"/>
      </register>
      <register description="Power configuration clear register" format="hex0x"
                id="SYSCON@PDRUNCFGCLR1"
                offset="0x634"
                size="4">
         <field description="USB1 high speed PHY (also, enable/disable bit 28 in PDRUNCFG0 register)."
                format="hex0x"
                id="SYSCON@PDRUNCFGCLR1@PDEN-USB1-PHY"
                offset="[0]"/>
         <field description="USB PLL (PLL1) power (also, enable/disable bit 26 in PDRUNCFG0 register)."
                format="hex0x"
                id="SYSCON@PDRUNCFGCLR1@PDEN-USB1-PLL"
                offset="[1]"/>
         <field description="Audio PLL (PLL2) power and fractional divider (also, enable/disable bit 26 in PDRUNCFG0 register)."
                format="hex0x"
                id="SYSCON@PDRUNCFGCLR1@PDEN-AUD-PLL"
                offset="[2]"/>
         <field description="System Oscillator Power (also, enable/disable bit 9 in PDRUNCFG0 register)."
                format="hex0x"
                id="SYSCON@PDRUNCFGCLR1@PDEN-SYSOSC"
                offset="[3]"/>
         <field description="EEPROM power (also, enable/disable bit 29 in PDRUNCFG0 register)."
                format="hex0x"
                id="SYSCON@PDRUNCFGCLR1@PDEN-EEPROM"
                offset="[5]"/>
         <field description="Random Number Generator Power." format="hex0x"
                id="SYSCON@PDRUNCFGCLR1@PDEN-RNG"
                offset="[7]"/>
      </register>
      <register description="Start logic 0 wake-up enable register" format="hex0x"
                id="SYSCON@STARTER0"
                offset="0x680"
                size="4">
         <field description="WWDT and BOD interrupt wake-up." format="hex0x"
                id="SYSCON@STARTER0@WDT-BOD"
                offset="[0]"/>
         <field description="DMA wake-up." format="hex0x" id="SYSCON@STARTER0@DMA" offset="[1]"/>
         <field description="Group interrupt 0 wake-up." format="hex0x"
                id="SYSCON@STARTER0@GINT0"
                offset="[2]"/>
         <field description="Group interrupt 1 wake-up." format="hex0x"
                id="SYSCON@STARTER0@GINT1"
                offset="[3]"/>
         <field description="GPIO pin interrupt 0 wake-up." format="hex0x"
                id="SYSCON@STARTER0@PIN-INT0"
                offset="[4]"/>
         <field description="GPIO pin interrupt 1 wake-up." format="hex0x"
                id="SYSCON@STARTER0@PIN-INT1"
                offset="[5]"/>
         <field description="GPIO pin interrupt 2 wake-up." format="hex0x"
                id="SYSCON@STARTER0@PIN-INT2"
                offset="[6]"/>
         <field description="GPIO pin interrupt 3 wake-up." format="hex0x"
                id="SYSCON@STARTER0@PIN-INT3"
                offset="[7]"/>
         <field description="Micro-tick Timer wake-up." format="hex0x"
                id="SYSCON@STARTER0@UTICK"
                offset="[8]"/>
         <field description="Multi-Rate Timer wake-up." format="hex0x" id="SYSCON@STARTER0@MRT"
                offset="[9]"/>
         <field description="Standard counter/timer CTIMER0 wake-up." format="hex0x"
                id="SYSCON@STARTER0@CTIMER0"
                offset="[10]"/>
         <field description="Standard counter/timer CTIMER1 wake-up." format="hex0x"
                id="SYSCON@STARTER0@CTIMER1"
                offset="[11]"/>
         <field description="SCT0 wake-up." format="hex0x" id="SYSCON@STARTER0@SCT0"
                offset="[12]"/>
         <field description="Standard counter/timer CTIMER3 wake-up." format="hex0x"
                id="SYSCON@STARTER0@CTIMER3"
                offset="[13]"/>
         <field description="Flexcomm0 peripheral interrupt wake-up." format="hex0x"
                id="SYSCON@STARTER0@FLEXCOMM0"
                offset="[14]"/>
         <field description="Flexcomm1 peripheral interrupt wake-up." format="hex0x"
                id="SYSCON@STARTER0@FLEXCOMM1"
                offset="[15]"/>
         <field description="Flexcomm2 peripheral interrupt wake-up." format="hex0x"
                id="SYSCON@STARTER0@FLEXCOMM2"
                offset="[16]"/>
         <field description="Flexcomm3 peripheral interrupt wake-up." format="hex0x"
                id="SYSCON@STARTER0@FLEXCOMM3"
                offset="[17]"/>
         <field description="Flexcomm4 peripheral interrupt wake-up." format="hex0x"
                id="SYSCON@STARTER0@FLEXCOMM4"
                offset="[18]"/>
         <field description="Flexcomm5 peripheral interrupt wake-up." format="hex0x"
                id="SYSCON@STARTER0@FLEXCOMM5"
                offset="[19]"/>
         <field description="Flexcomm6 peripheral interrupt wake-up." format="hex0x"
                id="SYSCON@STARTER0@FLEXCOMM6"
                offset="[20]"/>
         <field description="Flexcomm7 peripheral interrupt wake-up." format="hex0x"
                id="SYSCON@STARTER0@FLEXCOMM7"
                offset="[21]"/>
         <field description="ADC0 sequence A interrupt wake-up." format="hex0x"
                id="SYSCON@STARTER0@ADC0-SEQA"
                offset="[22]"/>
         <field description="ADC0 sequence B interrupt wake-up." format="hex0x"
                id="SYSCON@STARTER0@ADC0-SEQB"
                offset="[23]"/>
         <field description="ADC0 threshold and error interrupt wake-up." format="hex0x"
                id="SYSCON@STARTER0@ADC0-THCMP"
                offset="[24]"/>
         <field description="Digital microphone interrupt wake-up." format="hex0x"
                id="SYSCON@STARTER0@DMIC"
                offset="[25]"/>
         <field description="Hardware voice activity detect interrupt wake-up." format="hex0x"
                id="SYSCON@STARTER0@HWVAD"
                offset="[26]"/>
         <field description="USB activity interrupt wake-up." format="hex0x"
                id="SYSCON@STARTER0@USB0-NEEDCLK"
                offset="[27]"/>
         <field description="USB function interrupt wake-up." format="hex0x"
                id="SYSCON@STARTER0@USB0"
                offset="[28]"/>
         <field description="RTC interrupt alarm and wake-up timer." format="hex0x"
                id="SYSCON@STARTER0@RTC"
                offset="[29]"/>
      </register>
      <register description="Start logic 0 wake-up enable register" format="hex0x"
                id="SYSCON@STARTER1"
                offset="0x684"
                size="4">
         <field description="GPIO pin interrupt 4 wake-up." format="hex0x"
                id="SYSCON@STARTER1@PINT4"
                offset="[0]"/>
         <field description="GPIO pin interrupt 5 wake-up." format="hex0x"
                id="SYSCON@STARTER1@PINT5"
                offset="[1]"/>
         <field description="GPIO pin interrupt 6 wake-up." format="hex0x"
                id="SYSCON@STARTER1@PINT6"
                offset="[2]"/>
         <field description="GPIO pin interrupt 7 wake-up." format="hex0x"
                id="SYSCON@STARTER1@PINT7"
                offset="[3]"/>
         <field description="Standard counter/timer CTIMER2 wake-up." format="hex0x"
                id="SYSCON@STARTER1@CTIMER2"
                offset="[4]"/>
         <field description="Standard counter/timer CTIMER4 wake-up." format="hex0x"
                id="SYSCON@STARTER1@CTIMER4"
                offset="[5]"/>
         <field description="SPIFI interrupt wake-up. 0 = Wake-up disabled. 1 = Wake-up enabled."
                format="hex0x"
                id="SYSCON@STARTER1@SPIFI"
                offset="[7]"/>
         <field description="Flexcomm Interface 8 wake-up." format="hex0x"
                id="SYSCON@STARTER1@FLEXCOMM8"
                offset="[8]"/>
         <field description="Flexcomm Interface 9 wake-up." format="hex0x"
                id="SYSCON@STARTER1@FLEXCOMM9"
                offset="[9]"/>
         <field description="USB 1 wake-up." format="hex0x" id="SYSCON@STARTER1@USB1"
                offset="[15]"/>
         <field description="USB 1 activity wake-up." format="hex0x"
                id="SYSCON@STARTER1@USB1-ACT"
                offset="[16]"/>
         <field description="Ethernet." format="hex0x" id="SYSCON@STARTER1@ENET-INT1"
                offset="[17]"/>
         <field description="Ethernet." format="hex0x" id="SYSCON@STARTER1@ENET-INT2"
                offset="[18]"/>
         <field description="Ethernet." format="hex0x" id="SYSCON@STARTER1@ENET-INT0"
                offset="[19]"/>
         <field description="Smart card 0 wake-up." format="hex0x"
                id="SYSCON@STARTER1@SMARTCARD0"
                offset="[23]"/>
         <field description="Smart card 1 wake-up." format="hex0x"
                id="SYSCON@STARTER1@SMARTCARD1"
                offset="[24]"/>
      </register>
      <register description="Set bits in STARTER" format="hex0x" id="SYSCON@STARTERSET0"
                offset="0x6a0"
                writeOnly="true"
                size="4">
         <field description="Writing ones to this register sets the corresponding bit or bits in the STARTER0 register, if they are implemented."
                format="hex0x"
                id="SYSCON@STARTERSET0@START-SET"
                offset="[31:0]"/>
      </register>
      <register description="Set bits in STARTER" format="hex0x" id="SYSCON@STARTERSET1"
                offset="0x6a4"
                writeOnly="true"
                size="4">
         <field description="Writing ones to this register sets the corresponding bit or bits in the STARTER0 register, if they are implemented."
                format="hex0x"
                id="SYSCON@STARTERSET1@START-SET"
                offset="[31:0]"/>
      </register>
      <register description="Clear bits in STARTER0" format="hex0x" id="SYSCON@STARTERCLR0"
                offset="0x6c0"
                writeOnly="true"
                size="4">
         <field description="Writing ones to this register clears the corresponding bit or bits in the STARTER0 register, if they are implemented."
                format="hex0x"
                id="SYSCON@STARTERCLR0@START-CLR"
                offset="[31:0]"/>
      </register>
      <register description="Clear bits in STARTER0" format="hex0x" id="SYSCON@STARTERCLR1"
                offset="0x6c4"
                writeOnly="true"
                size="4">
         <field description="Writing ones to this register clears the corresponding bit or bits in the STARTER0 register, if they are implemented."
                format="hex0x"
                id="SYSCON@STARTERCLR1@START-CLR"
                offset="[31:0]"/>
      </register>
      <register description="Configures special cases of hardware wake-up" format="hex0x"
                id="SYSCON@HWWAKE"
                offset="0x780"
                size="4">
         <field description="Force peripheral clocking to stay on during Deep Sleep and Power-down modes. When 1, clocking to peripherals is prevented from being shut down when the CPU enters Deep Sleep and Power-down modes. This is intended to allow a coprocessor to continue operating while the main CPU(s) are shut down."
                format="hex0x"
                id="SYSCON@HWWAKE@FORCEWAKE"
                offset="[0]"/>
         <field description="Wake for Flexcomms. When 1, any Flexcomm FIFO reaching the level specified by its own TXLVL will cause peripheral clocking to wake up temporarily while the related status is asserted."
                format="hex0x"
                id="SYSCON@HWWAKE@FCWAKE"
                offset="[1]"/>
         <field description="Wake for Digital Microphone. When 1, the digital microphone input FIFO reaching the level specified by TRIGLVL of either channel will cause peripheral clocking to wake up temporarily while the related status is asserted."
                format="hex0x"
                id="SYSCON@HWWAKE@WAKEDMIC"
                offset="[2]"/>
         <field description="Wake for DMA. When 1, DMA being busy will cause peripheral clocking to remain running until DMA completes. This is generally used in conjunction with bit 1 and/or 2 in order to prevent peripheral clocking from being shut down as soon as the cause of wake-up is cleared, but before DMA has completed its related activity."
                format="hex0x"
                id="SYSCON@HWWAKE@WAKEDMA"
                offset="[3]"/>
      </register>
      <register description="Auto Clock-Gate Override Register" format="hex0x"
                id="SYSCON@AUTOCGOR"
                offset="0xe04"
                size="4">
         <field description="When 1, automatic clock gating for RAMX and RAM0 are turned off."
                format="hex0x"
                id="SYSCON@AUTOCGOR@RAM0X"
                offset="[1]"/>
         <field description="When 1, automatic clock gating for RAM1 are turned off."
                format="hex0x"
                id="SYSCON@AUTOCGOR@RAM1"
                offset="[2]"/>
         <field description="When 1, automatic clock gating for RAM1 are turned off."
                format="hex0x"
                id="SYSCON@AUTOCGOR@RAM2"
                offset="[3]"/>
         <field description="When 1, automatic clock gating for RAM1 are turned off."
                format="hex0x"
                id="SYSCON@AUTOCGOR@RAM3"
                offset="[4]"/>
      </register>
      <register description="JTAG ID code register" format="hex0x" id="SYSCON@JTAGIDCODE"
                offset="0xff4"
                readOnly="true"
                size="4">
         <field description="JTAG ID code." format="hex0x" id="SYSCON@JTAGIDCODE@JTAGID"
                offset="[31:0]"/>
      </register>
      <register description="Part ID register" format="hex0x" id="SYSCON@DEVICE-ID0"
                offset="0xff8"
                readOnly="true"
                size="4">
         <field description="Part ID" format="hex0x" id="SYSCON@DEVICE-ID0@PARTID"
                offset="[31:0]"/>
      </register>
      <register description="Boot ROM and die revision register" format="hex0x"
                id="SYSCON@DEVICE-ID1"
                offset="0xffc"
                readOnly="true"
                size="4">
         <field description="Revision." format="hex0x" id="SYSCON@DEVICE-ID1@REVID"
                offset="[31:0]"/>
      </register>
      <register description="Brown-Out Detect control" format="hex0x" id="SYSCON@BODCTRL"
                offset="0x20044"
                size="4">
         <field description="BOD reset level" format="enum" enum="d1e13356"
                id="SYSCON@BODCTRL@BODRSTLEV"
                offset="[1:0]"/>
         <field description="BOD reset enable" format="enum" enum="d1e13426"
                id="SYSCON@BODCTRL@BODRSTENA"
                offset="[2]"/>
         <field description="BOD interrupt level" format="enum" enum="d1e13472"
                id="SYSCON@BODCTRL@BODINTLEV"
                offset="[4:3]"/>
         <field description="BOD interrupt enable" format="enum" enum="d1e13542"
                id="SYSCON@BODCTRL@BODINTENA"
                offset="[5]"/>
         <field description="BOD reset status. When 1, a BOD reset has occurred. Cleared by writing 1 to this bit."
                format="hex0x"
                id="SYSCON@BODCTRL@BODRSTSTAT"
                offset="[6]"/>
         <field description="BOD interrupt status. When 1, a BOD interrupt has occurred. Cleared by writing 1 to this bit."
                format="hex0x"
                id="SYSCON@BODCTRL@BODINTSTAT"
                offset="[7]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x I/O pin configuration (IOCON)" id="IOCON"
               size="0x300">
      <register description="Digital I/O control for port 0 pins PIO0_0" format="hex0x"
                id="IOCON@PIO00"
                offset="0x0"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e13684"
                id="IOCON@PIO00@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e13803"
                id="IOCON@PIO00@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e13873"
                id="IOCON@PIO00@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e13919"
                id="IOCON@PIO00@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e13965"
                id="IOCON@PIO00@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e14012"
                id="IOCON@PIO00@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e14058"
                id="IOCON@PIO00@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 0 pins PIO0_1" format="hex0x"
                id="IOCON@PIO01"
                offset="0x4"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e14132"
                id="IOCON@PIO01@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e14251"
                id="IOCON@PIO01@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e14321"
                id="IOCON@PIO01@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e14367"
                id="IOCON@PIO01@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e14413"
                id="IOCON@PIO01@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e14460"
                id="IOCON@PIO01@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e14506"
                id="IOCON@PIO01@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 0 pins PIO0_2" format="hex0x"
                id="IOCON@PIO02"
                offset="0x8"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e14580"
                id="IOCON@PIO02@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e14699"
                id="IOCON@PIO02@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e14769"
                id="IOCON@PIO02@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e14815"
                id="IOCON@PIO02@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e14861"
                id="IOCON@PIO02@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e14908"
                id="IOCON@PIO02@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e14954"
                id="IOCON@PIO02@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 0 pins PIO0_3" format="hex0x"
                id="IOCON@PIO03"
                offset="0xc"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e15028"
                id="IOCON@PIO03@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e15147"
                id="IOCON@PIO03@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e15217"
                id="IOCON@PIO03@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e15263"
                id="IOCON@PIO03@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e15309"
                id="IOCON@PIO03@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e15356"
                id="IOCON@PIO03@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e15402"
                id="IOCON@PIO03@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 0 pins PIO0_4" format="hex0x"
                id="IOCON@PIO04"
                offset="0x10"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e15476"
                id="IOCON@PIO04@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e15595"
                id="IOCON@PIO04@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e15665"
                id="IOCON@PIO04@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e15711"
                id="IOCON@PIO04@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e15757"
                id="IOCON@PIO04@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e15804"
                id="IOCON@PIO04@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e15850"
                id="IOCON@PIO04@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 0 pins PIO0_5" format="hex0x"
                id="IOCON@PIO05"
                offset="0x14"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e15925"
                id="IOCON@PIO05@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e16044"
                id="IOCON@PIO05@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e16114"
                id="IOCON@PIO05@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e16160"
                id="IOCON@PIO05@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e16206"
                id="IOCON@PIO05@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e16253"
                id="IOCON@PIO05@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e16299"
                id="IOCON@PIO05@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 0 pins PIO0_6" format="hex0x"
                id="IOCON@PIO06"
                offset="0x18"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e16373"
                id="IOCON@PIO06@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e16492"
                id="IOCON@PIO06@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e16562"
                id="IOCON@PIO06@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e16608"
                id="IOCON@PIO06@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e16654"
                id="IOCON@PIO06@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e16701"
                id="IOCON@PIO06@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e16747"
                id="IOCON@PIO06@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 0 pins PIO0_7" format="hex0x"
                id="IOCON@PIO07"
                offset="0x1c"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e16821"
                id="IOCON@PIO07@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e16940"
                id="IOCON@PIO07@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e17010"
                id="IOCON@PIO07@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e17056"
                id="IOCON@PIO07@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e17102"
                id="IOCON@PIO07@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e17149"
                id="IOCON@PIO07@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e17195"
                id="IOCON@PIO07@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 0 pins PIO0_8" format="hex0x"
                id="IOCON@PIO08"
                offset="0x20"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e17269"
                id="IOCON@PIO08@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e17388"
                id="IOCON@PIO08@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e17458"
                id="IOCON@PIO08@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e17504"
                id="IOCON@PIO08@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e17550"
                id="IOCON@PIO08@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e17597"
                id="IOCON@PIO08@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e17643"
                id="IOCON@PIO08@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 0 pins PIO0_9" format="hex0x"
                id="IOCON@PIO09"
                offset="0x24"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e17717"
                id="IOCON@PIO09@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e17836"
                id="IOCON@PIO09@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e17906"
                id="IOCON@PIO09@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e17952"
                id="IOCON@PIO09@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e17998"
                id="IOCON@PIO09@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e18045"
                id="IOCON@PIO09@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e18091"
                id="IOCON@PIO09@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 0 pins PIO0_10" format="hex0x"
                id="IOCON@PIO010"
                offset="0x28"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e18165"
                id="IOCON@PIO010@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e18284"
                id="IOCON@PIO010@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e18354"
                id="IOCON@PIO010@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e18400"
                id="IOCON@PIO010@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e18446"
                id="IOCON@PIO010@FILTEROFF"
                offset="[9]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e18493"
                id="IOCON@PIO010@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 0 pins PIO0_11" format="hex0x"
                id="IOCON@PIO011"
                offset="0x2c"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e18568"
                id="IOCON@PIO011@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e18687"
                id="IOCON@PIO011@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e18757"
                id="IOCON@PIO011@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e18803"
                id="IOCON@PIO011@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e18849"
                id="IOCON@PIO011@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e18896"
                id="IOCON@PIO011@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e18942"
                id="IOCON@PIO011@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 0 pins PIO0_12" format="hex0x"
                id="IOCON@PIO012"
                offset="0x30"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e19016"
                id="IOCON@PIO012@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e19135"
                id="IOCON@PIO012@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e19205"
                id="IOCON@PIO012@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e19251"
                id="IOCON@PIO012@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e19297"
                id="IOCON@PIO012@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e19344"
                id="IOCON@PIO012@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e19390"
                id="IOCON@PIO012@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 0 pins PIO0_13" format="hex0x"
                id="IOCON@PIO013"
                offset="0x34"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e19464"
                id="IOCON@PIO013@FUNC"
                offset="[3:0]"/>
         <field description="Controls slew rate of I2C pad." format="enum" enum="d1e19583"
                id="IOCON@PIO013@I2CSLEW"
                offset="[6]"/>
         <field description="Input polarity." format="enum" enum="d1e19629"
                id="IOCON@PIO013@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e19675"
                id="IOCON@PIO013@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e19721"
                id="IOCON@PIO013@FILTEROFF"
                offset="[9]"/>
         <field description="Controls the current sink capability of the pin." format="enum"
                enum="d1e19768"
                id="IOCON@PIO013@I2CDRIVE"
                offset="[10]"/>
         <field description="Configures I2C features for standard mode, fast mode, and Fast Mode Plus operation."
                format="enum"
                enum="d1e19814"
                id="IOCON@PIO013@I2CFILTER"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 0 pins PIO0_14" format="hex0x"
                id="IOCON@PIO014"
                offset="0x38"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e19888"
                id="IOCON@PIO014@FUNC"
                offset="[3:0]"/>
         <field description="Controls slew rate of I2C pad." format="enum" enum="d1e20007"
                id="IOCON@PIO014@I2CSLEW"
                offset="[6]"/>
         <field description="Input polarity." format="enum" enum="d1e20053"
                id="IOCON@PIO014@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e20099"
                id="IOCON@PIO014@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e20145"
                id="IOCON@PIO014@FILTEROFF"
                offset="[9]"/>
         <field description="Controls the current sink capability of the pin." format="enum"
                enum="d1e20192"
                id="IOCON@PIO014@I2CDRIVE"
                offset="[10]"/>
         <field description="Configures I2C features for standard mode, fast mode, and Fast Mode Plus operation."
                format="enum"
                enum="d1e20238"
                id="IOCON@PIO014@I2CFILTER"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 0 pins PIO0_15" format="hex0x"
                id="IOCON@PIO015"
                offset="0x3c"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e20312"
                id="IOCON@PIO015@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e20431"
                id="IOCON@PIO015@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e20501"
                id="IOCON@PIO015@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e20547"
                id="IOCON@PIO015@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e20593"
                id="IOCON@PIO015@FILTEROFF"
                offset="[9]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e20640"
                id="IOCON@PIO015@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 0 pins PIO0_16" format="hex0x"
                id="IOCON@PIO016"
                offset="0x40"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e20714"
                id="IOCON@PIO016@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e20833"
                id="IOCON@PIO016@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e20903"
                id="IOCON@PIO016@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e20949"
                id="IOCON@PIO016@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e20995"
                id="IOCON@PIO016@FILTEROFF"
                offset="[9]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e21042"
                id="IOCON@PIO016@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 0 pins PIO0_17" format="hex0x"
                id="IOCON@PIO017"
                offset="0x44"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e21117"
                id="IOCON@PIO017@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e21236"
                id="IOCON@PIO017@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e21306"
                id="IOCON@PIO017@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e21352"
                id="IOCON@PIO017@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e21398"
                id="IOCON@PIO017@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e21445"
                id="IOCON@PIO017@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e21491"
                id="IOCON@PIO017@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 0 pins PIO0_18" format="hex0x"
                id="IOCON@PIO018"
                offset="0x48"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e21565"
                id="IOCON@PIO018@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e21684"
                id="IOCON@PIO018@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e21754"
                id="IOCON@PIO018@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e21800"
                id="IOCON@PIO018@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e21846"
                id="IOCON@PIO018@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e21893"
                id="IOCON@PIO018@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e21939"
                id="IOCON@PIO018@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 0 pins PIO0_19" format="hex0x"
                id="IOCON@PIO019"
                offset="0x4c"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e22013"
                id="IOCON@PIO019@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e22132"
                id="IOCON@PIO019@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e22202"
                id="IOCON@PIO019@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e22248"
                id="IOCON@PIO019@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e22294"
                id="IOCON@PIO019@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e22341"
                id="IOCON@PIO019@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e22387"
                id="IOCON@PIO019@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 0 pins PIO0_20" format="hex0x"
                id="IOCON@PIO020"
                offset="0x50"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e22461"
                id="IOCON@PIO020@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e22580"
                id="IOCON@PIO020@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e22650"
                id="IOCON@PIO020@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e22696"
                id="IOCON@PIO020@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e22742"
                id="IOCON@PIO020@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e22789"
                id="IOCON@PIO020@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e22835"
                id="IOCON@PIO020@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 0 pins PIO0_21" format="hex0x"
                id="IOCON@PIO021"
                offset="0x54"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e22909"
                id="IOCON@PIO021@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e23028"
                id="IOCON@PIO021@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e23098"
                id="IOCON@PIO021@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e23144"
                id="IOCON@PIO021@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e23190"
                id="IOCON@PIO021@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e23237"
                id="IOCON@PIO021@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e23283"
                id="IOCON@PIO021@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 0 pins PIO0_22" format="hex0x"
                id="IOCON@PIO022"
                offset="0x58"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e23357"
                id="IOCON@PIO022@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e23476"
                id="IOCON@PIO022@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e23546"
                id="IOCON@PIO022@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e23592"
                id="IOCON@PIO022@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e23638"
                id="IOCON@PIO022@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e23685"
                id="IOCON@PIO022@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e23731"
                id="IOCON@PIO022@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 0 pins PIO0_23" format="hex0x"
                id="IOCON@PIO023"
                offset="0x5c"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e23806"
                id="IOCON@PIO023@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e23925"
                id="IOCON@PIO023@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e23995"
                id="IOCON@PIO023@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e24041"
                id="IOCON@PIO023@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e24087"
                id="IOCON@PIO023@FILTEROFF"
                offset="[9]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e24134"
                id="IOCON@PIO023@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 0 pins PIO0_24" format="hex0x"
                id="IOCON@PIO024"
                offset="0x60"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e24208"
                id="IOCON@PIO024@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e24327"
                id="IOCON@PIO024@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e24397"
                id="IOCON@PIO024@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e24443"
                id="IOCON@PIO024@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e24489"
                id="IOCON@PIO024@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e24536"
                id="IOCON@PIO024@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e24582"
                id="IOCON@PIO024@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 0 pins PIO0_25" format="hex0x"
                id="IOCON@PIO025"
                offset="0x64"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e24656"
                id="IOCON@PIO025@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e24775"
                id="IOCON@PIO025@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e24845"
                id="IOCON@PIO025@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e24891"
                id="IOCON@PIO025@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e24937"
                id="IOCON@PIO025@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e24984"
                id="IOCON@PIO025@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e25030"
                id="IOCON@PIO025@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 0 pins PIO0_26" format="hex0x"
                id="IOCON@PIO026"
                offset="0x68"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e25104"
                id="IOCON@PIO026@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e25223"
                id="IOCON@PIO026@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e25293"
                id="IOCON@PIO026@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e25339"
                id="IOCON@PIO026@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e25385"
                id="IOCON@PIO026@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e25432"
                id="IOCON@PIO026@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e25478"
                id="IOCON@PIO026@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 0 pins PIO0_27" format="hex0x"
                id="IOCON@PIO027"
                offset="0x6c"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e25552"
                id="IOCON@PIO027@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e25671"
                id="IOCON@PIO027@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e25741"
                id="IOCON@PIO027@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e25787"
                id="IOCON@PIO027@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e25833"
                id="IOCON@PIO027@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e25880"
                id="IOCON@PIO027@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e25926"
                id="IOCON@PIO027@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 0 pins PIO0_28" format="hex0x"
                id="IOCON@PIO028"
                offset="0x70"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e26000"
                id="IOCON@PIO028@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e26119"
                id="IOCON@PIO028@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e26189"
                id="IOCON@PIO028@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e26235"
                id="IOCON@PIO028@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e26281"
                id="IOCON@PIO028@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e26328"
                id="IOCON@PIO028@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e26374"
                id="IOCON@PIO028@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 0 pins PIO0_29" format="hex0x"
                id="IOCON@PIO029"
                offset="0x74"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e26449"
                id="IOCON@PIO029@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e26568"
                id="IOCON@PIO029@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e26638"
                id="IOCON@PIO029@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e26684"
                id="IOCON@PIO029@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e26730"
                id="IOCON@PIO029@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e26777"
                id="IOCON@PIO029@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e26823"
                id="IOCON@PIO029@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 0 pins PIO0_30" format="hex0x"
                id="IOCON@PIO030"
                offset="0x78"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e26897"
                id="IOCON@PIO030@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e27016"
                id="IOCON@PIO030@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e27086"
                id="IOCON@PIO030@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e27132"
                id="IOCON@PIO030@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e27178"
                id="IOCON@PIO030@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e27225"
                id="IOCON@PIO030@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e27271"
                id="IOCON@PIO030@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 0 pins PIO0_31" format="hex0x"
                id="IOCON@PIO031"
                offset="0x7c"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e27345"
                id="IOCON@PIO031@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e27464"
                id="IOCON@PIO031@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e27534"
                id="IOCON@PIO031@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e27580"
                id="IOCON@PIO031@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e27626"
                id="IOCON@PIO031@FILTEROFF"
                offset="[9]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e27673"
                id="IOCON@PIO031@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 1 pins PIO1_0" format="hex0x"
                id="IOCON@PIO10"
                offset="0x80"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e27747"
                id="IOCON@PIO10@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e27866"
                id="IOCON@PIO10@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e27936"
                id="IOCON@PIO10@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e27982"
                id="IOCON@PIO10@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e28028"
                id="IOCON@PIO10@FILTEROFF"
                offset="[9]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e28075"
                id="IOCON@PIO10@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 1 pins PIO1_1" format="hex0x"
                id="IOCON@PIO11"
                offset="0x84"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e28149"
                id="IOCON@PIO11@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e28268"
                id="IOCON@PIO11@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e28338"
                id="IOCON@PIO11@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e28384"
                id="IOCON@PIO11@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e28430"
                id="IOCON@PIO11@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e28477"
                id="IOCON@PIO11@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e28523"
                id="IOCON@PIO11@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 1 pins PIO1_2" format="hex0x"
                id="IOCON@PIO12"
                offset="0x88"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e28597"
                id="IOCON@PIO12@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e28716"
                id="IOCON@PIO12@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e28786"
                id="IOCON@PIO12@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e28832"
                id="IOCON@PIO12@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e28878"
                id="IOCON@PIO12@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e28925"
                id="IOCON@PIO12@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e28971"
                id="IOCON@PIO12@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 1 pins PIO1_3" format="hex0x"
                id="IOCON@PIO13"
                offset="0x8c"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e29046"
                id="IOCON@PIO13@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e29165"
                id="IOCON@PIO13@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e29235"
                id="IOCON@PIO13@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e29281"
                id="IOCON@PIO13@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e29327"
                id="IOCON@PIO13@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e29374"
                id="IOCON@PIO13@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e29420"
                id="IOCON@PIO13@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 1 pins PIO1_4" format="hex0x"
                id="IOCON@PIO14"
                offset="0x90"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e29494"
                id="IOCON@PIO14@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e29613"
                id="IOCON@PIO14@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e29683"
                id="IOCON@PIO14@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e29729"
                id="IOCON@PIO14@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e29775"
                id="IOCON@PIO14@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e29822"
                id="IOCON@PIO14@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e29868"
                id="IOCON@PIO14@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 1 pins PIO1_5" format="hex0x"
                id="IOCON@PIO15"
                offset="0x94"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e29942"
                id="IOCON@PIO15@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e30061"
                id="IOCON@PIO15@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e30131"
                id="IOCON@PIO15@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e30177"
                id="IOCON@PIO15@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e30223"
                id="IOCON@PIO15@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e30270"
                id="IOCON@PIO15@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e30316"
                id="IOCON@PIO15@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 1 pins PIO1_6" format="hex0x"
                id="IOCON@PIO16"
                offset="0x98"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e30390"
                id="IOCON@PIO16@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e30509"
                id="IOCON@PIO16@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e30579"
                id="IOCON@PIO16@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e30625"
                id="IOCON@PIO16@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e30671"
                id="IOCON@PIO16@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e30718"
                id="IOCON@PIO16@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e30764"
                id="IOCON@PIO16@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 1 pins PIO1_7" format="hex0x"
                id="IOCON@PIO17"
                offset="0x9c"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e30838"
                id="IOCON@PIO17@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e30957"
                id="IOCON@PIO17@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e31027"
                id="IOCON@PIO17@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e31073"
                id="IOCON@PIO17@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e31119"
                id="IOCON@PIO17@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e31166"
                id="IOCON@PIO17@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e31212"
                id="IOCON@PIO17@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 1 pins PIO1_8" format="hex0x"
                id="IOCON@PIO18"
                offset="0xa0"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e31286"
                id="IOCON@PIO18@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e31405"
                id="IOCON@PIO18@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e31475"
                id="IOCON@PIO18@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e31521"
                id="IOCON@PIO18@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e31567"
                id="IOCON@PIO18@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e31614"
                id="IOCON@PIO18@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e31660"
                id="IOCON@PIO18@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 1 pins PIO1_9" format="hex0x"
                id="IOCON@PIO19"
                offset="0xa4"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e31735"
                id="IOCON@PIO19@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e31854"
                id="IOCON@PIO19@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e31924"
                id="IOCON@PIO19@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e31970"
                id="IOCON@PIO19@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e32016"
                id="IOCON@PIO19@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e32063"
                id="IOCON@PIO19@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e32109"
                id="IOCON@PIO19@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 1 pins PIO1_10" format="hex0x"
                id="IOCON@PIO110"
                offset="0xa8"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e32183"
                id="IOCON@PIO110@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e32302"
                id="IOCON@PIO110@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e32372"
                id="IOCON@PIO110@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e32418"
                id="IOCON@PIO110@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e32464"
                id="IOCON@PIO110@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e32511"
                id="IOCON@PIO110@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e32557"
                id="IOCON@PIO110@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 1 pins PIO1_11" format="hex0x"
                id="IOCON@PIO111"
                offset="0xac"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e32631"
                id="IOCON@PIO111@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e32750"
                id="IOCON@PIO111@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e32820"
                id="IOCON@PIO111@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e32866"
                id="IOCON@PIO111@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e32912"
                id="IOCON@PIO111@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e32959"
                id="IOCON@PIO111@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e33005"
                id="IOCON@PIO111@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 1 pins PIO1_12" format="hex0x"
                id="IOCON@PIO112"
                offset="0xb0"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e33079"
                id="IOCON@PIO112@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e33198"
                id="IOCON@PIO112@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e33268"
                id="IOCON@PIO112@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e33314"
                id="IOCON@PIO112@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e33360"
                id="IOCON@PIO112@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e33407"
                id="IOCON@PIO112@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e33453"
                id="IOCON@PIO112@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 1 pins PIO1_13" format="hex0x"
                id="IOCON@PIO113"
                offset="0xb4"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e33527"
                id="IOCON@PIO113@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e33646"
                id="IOCON@PIO113@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e33716"
                id="IOCON@PIO113@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e33762"
                id="IOCON@PIO113@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e33808"
                id="IOCON@PIO113@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e33855"
                id="IOCON@PIO113@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e33901"
                id="IOCON@PIO113@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 1 pins PIO1_14" format="hex0x"
                id="IOCON@PIO114"
                offset="0xb8"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e33975"
                id="IOCON@PIO114@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e34094"
                id="IOCON@PIO114@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e34164"
                id="IOCON@PIO114@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e34210"
                id="IOCON@PIO114@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e34256"
                id="IOCON@PIO114@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e34303"
                id="IOCON@PIO114@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e34349"
                id="IOCON@PIO114@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 1 pins PIO1_15" format="hex0x"
                id="IOCON@PIO115"
                offset="0xbc"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e34424"
                id="IOCON@PIO115@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e34543"
                id="IOCON@PIO115@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e34613"
                id="IOCON@PIO115@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e34659"
                id="IOCON@PIO115@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e34705"
                id="IOCON@PIO115@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e34752"
                id="IOCON@PIO115@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e34798"
                id="IOCON@PIO115@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 1 pins PIO1_16" format="hex0x"
                id="IOCON@PIO116"
                offset="0xc0"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e34872"
                id="IOCON@PIO116@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e34991"
                id="IOCON@PIO116@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e35061"
                id="IOCON@PIO116@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e35107"
                id="IOCON@PIO116@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e35153"
                id="IOCON@PIO116@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e35200"
                id="IOCON@PIO116@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e35246"
                id="IOCON@PIO116@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 1 pins PIO1_17" format="hex0x"
                id="IOCON@PIO117"
                offset="0xc4"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e35320"
                id="IOCON@PIO117@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e35439"
                id="IOCON@PIO117@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e35509"
                id="IOCON@PIO117@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e35555"
                id="IOCON@PIO117@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e35601"
                id="IOCON@PIO117@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e35648"
                id="IOCON@PIO117@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e35694"
                id="IOCON@PIO117@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 1 pins PIO1_18" format="hex0x"
                id="IOCON@PIO118"
                offset="0xc8"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e35768"
                id="IOCON@PIO118@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e35887"
                id="IOCON@PIO118@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e35957"
                id="IOCON@PIO118@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e36003"
                id="IOCON@PIO118@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e36049"
                id="IOCON@PIO118@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e36096"
                id="IOCON@PIO118@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e36142"
                id="IOCON@PIO118@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 1 pins PIO1_19" format="hex0x"
                id="IOCON@PIO119"
                offset="0xcc"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e36216"
                id="IOCON@PIO119@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e36335"
                id="IOCON@PIO119@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e36405"
                id="IOCON@PIO119@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e36451"
                id="IOCON@PIO119@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e36497"
                id="IOCON@PIO119@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e36544"
                id="IOCON@PIO119@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e36590"
                id="IOCON@PIO119@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 1 pins PIO1_20" format="hex0x"
                id="IOCON@PIO120"
                offset="0xd0"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e36664"
                id="IOCON@PIO120@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e36783"
                id="IOCON@PIO120@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e36853"
                id="IOCON@PIO120@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e36899"
                id="IOCON@PIO120@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e36945"
                id="IOCON@PIO120@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e36992"
                id="IOCON@PIO120@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e37038"
                id="IOCON@PIO120@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 1 pins PIO1_21" format="hex0x"
                id="IOCON@PIO121"
                offset="0xd4"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e37113"
                id="IOCON@PIO121@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e37232"
                id="IOCON@PIO121@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e37302"
                id="IOCON@PIO121@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e37348"
                id="IOCON@PIO121@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e37394"
                id="IOCON@PIO121@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e37441"
                id="IOCON@PIO121@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e37487"
                id="IOCON@PIO121@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 1 pins PIO1_22" format="hex0x"
                id="IOCON@PIO122"
                offset="0xd8"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e37561"
                id="IOCON@PIO122@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e37680"
                id="IOCON@PIO122@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e37750"
                id="IOCON@PIO122@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e37796"
                id="IOCON@PIO122@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e37842"
                id="IOCON@PIO122@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e37889"
                id="IOCON@PIO122@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e37935"
                id="IOCON@PIO122@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 1 pins PIO1_23" format="hex0x"
                id="IOCON@PIO123"
                offset="0xdc"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e38009"
                id="IOCON@PIO123@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e38128"
                id="IOCON@PIO123@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e38198"
                id="IOCON@PIO123@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e38244"
                id="IOCON@PIO123@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e38290"
                id="IOCON@PIO123@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e38337"
                id="IOCON@PIO123@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e38383"
                id="IOCON@PIO123@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 1 pins PIO1_24" format="hex0x"
                id="IOCON@PIO124"
                offset="0xe0"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e38457"
                id="IOCON@PIO124@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e38576"
                id="IOCON@PIO124@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e38646"
                id="IOCON@PIO124@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e38692"
                id="IOCON@PIO124@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e38738"
                id="IOCON@PIO124@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e38785"
                id="IOCON@PIO124@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e38831"
                id="IOCON@PIO124@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 1 pins PIO1_25" format="hex0x"
                id="IOCON@PIO125"
                offset="0xe4"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e38905"
                id="IOCON@PIO125@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e39024"
                id="IOCON@PIO125@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e39094"
                id="IOCON@PIO125@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e39140"
                id="IOCON@PIO125@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e39186"
                id="IOCON@PIO125@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e39233"
                id="IOCON@PIO125@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e39279"
                id="IOCON@PIO125@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 1 pins PIO1_26" format="hex0x"
                id="IOCON@PIO126"
                offset="0xe8"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e39353"
                id="IOCON@PIO126@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e39472"
                id="IOCON@PIO126@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e39542"
                id="IOCON@PIO126@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e39588"
                id="IOCON@PIO126@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e39634"
                id="IOCON@PIO126@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e39681"
                id="IOCON@PIO126@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e39727"
                id="IOCON@PIO126@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 1 pins PIO1_27" format="hex0x"
                id="IOCON@PIO127"
                offset="0xec"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e39802"
                id="IOCON@PIO127@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e39921"
                id="IOCON@PIO127@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e39991"
                id="IOCON@PIO127@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e40037"
                id="IOCON@PIO127@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e40083"
                id="IOCON@PIO127@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e40130"
                id="IOCON@PIO127@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e40176"
                id="IOCON@PIO127@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 1 pins PIO1_28" format="hex0x"
                id="IOCON@PIO128"
                offset="0xf0"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e40250"
                id="IOCON@PIO128@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e40369"
                id="IOCON@PIO128@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e40439"
                id="IOCON@PIO128@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e40485"
                id="IOCON@PIO128@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e40531"
                id="IOCON@PIO128@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e40578"
                id="IOCON@PIO128@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e40624"
                id="IOCON@PIO128@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 1 pins PIO1_29" format="hex0x"
                id="IOCON@PIO129"
                offset="0xf4"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e40698"
                id="IOCON@PIO129@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e40817"
                id="IOCON@PIO129@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e40887"
                id="IOCON@PIO129@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e40933"
                id="IOCON@PIO129@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e40979"
                id="IOCON@PIO129@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e41026"
                id="IOCON@PIO129@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e41072"
                id="IOCON@PIO129@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 1 pins PIO1_30" format="hex0x"
                id="IOCON@PIO130"
                offset="0xf8"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e41146"
                id="IOCON@PIO130@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e41265"
                id="IOCON@PIO130@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e41335"
                id="IOCON@PIO130@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e41381"
                id="IOCON@PIO130@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e41427"
                id="IOCON@PIO130@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e41474"
                id="IOCON@PIO130@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e41520"
                id="IOCON@PIO130@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 1 pins PIO1_31" format="hex0x"
                id="IOCON@PIO131"
                offset="0xfc"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e41594"
                id="IOCON@PIO131@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e41713"
                id="IOCON@PIO131@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e41783"
                id="IOCON@PIO131@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e41829"
                id="IOCON@PIO131@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e41875"
                id="IOCON@PIO131@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e41922"
                id="IOCON@PIO131@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e41968"
                id="IOCON@PIO131@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 2 pins PIO2_0" format="hex0x"
                id="IOCON@PIO20"
                offset="0x100"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e42042"
                id="IOCON@PIO20@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e42161"
                id="IOCON@PIO20@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e42231"
                id="IOCON@PIO20@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e42277"
                id="IOCON@PIO20@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e42323"
                id="IOCON@PIO20@FILTEROFF"
                offset="[9]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e42370"
                id="IOCON@PIO20@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 2 pins PIO2_1" format="hex0x"
                id="IOCON@PIO21"
                offset="0x104"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e42445"
                id="IOCON@PIO21@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e42564"
                id="IOCON@PIO21@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e42634"
                id="IOCON@PIO21@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e42680"
                id="IOCON@PIO21@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e42726"
                id="IOCON@PIO21@FILTEROFF"
                offset="[9]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e42773"
                id="IOCON@PIO21@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 2 pins PIO2_2" format="hex0x"
                id="IOCON@PIO22"
                offset="0x108"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e42847"
                id="IOCON@PIO22@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e42966"
                id="IOCON@PIO22@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e43036"
                id="IOCON@PIO22@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e43082"
                id="IOCON@PIO22@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e43128"
                id="IOCON@PIO22@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e43175"
                id="IOCON@PIO22@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e43221"
                id="IOCON@PIO22@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 2 pins PIO2_3" format="hex0x"
                id="IOCON@PIO23"
                offset="0x10c"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e43295"
                id="IOCON@PIO23@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e43414"
                id="IOCON@PIO23@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e43484"
                id="IOCON@PIO23@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e43530"
                id="IOCON@PIO23@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e43576"
                id="IOCON@PIO23@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e43623"
                id="IOCON@PIO23@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e43669"
                id="IOCON@PIO23@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 2 pins PIO2_4" format="hex0x"
                id="IOCON@PIO24"
                offset="0x110"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e43743"
                id="IOCON@PIO24@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e43862"
                id="IOCON@PIO24@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e43932"
                id="IOCON@PIO24@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e43978"
                id="IOCON@PIO24@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e44024"
                id="IOCON@PIO24@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e44071"
                id="IOCON@PIO24@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e44117"
                id="IOCON@PIO24@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 2 pins PIO2_5" format="hex0x"
                id="IOCON@PIO25"
                offset="0x114"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e44191"
                id="IOCON@PIO25@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e44310"
                id="IOCON@PIO25@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e44380"
                id="IOCON@PIO25@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e44426"
                id="IOCON@PIO25@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e44472"
                id="IOCON@PIO25@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e44519"
                id="IOCON@PIO25@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e44565"
                id="IOCON@PIO25@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 2 pins PIO2_6" format="hex0x"
                id="IOCON@PIO26"
                offset="0x118"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e44639"
                id="IOCON@PIO26@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e44758"
                id="IOCON@PIO26@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e44828"
                id="IOCON@PIO26@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e44874"
                id="IOCON@PIO26@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e44920"
                id="IOCON@PIO26@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e44967"
                id="IOCON@PIO26@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e45013"
                id="IOCON@PIO26@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 2 pins PIO2_7" format="hex0x"
                id="IOCON@PIO27"
                offset="0x11c"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e45088"
                id="IOCON@PIO27@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e45207"
                id="IOCON@PIO27@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e45277"
                id="IOCON@PIO27@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e45323"
                id="IOCON@PIO27@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e45369"
                id="IOCON@PIO27@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e45416"
                id="IOCON@PIO27@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e45462"
                id="IOCON@PIO27@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 2 pins PIO2_8" format="hex0x"
                id="IOCON@PIO28"
                offset="0x120"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e45536"
                id="IOCON@PIO28@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e45655"
                id="IOCON@PIO28@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e45725"
                id="IOCON@PIO28@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e45771"
                id="IOCON@PIO28@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e45817"
                id="IOCON@PIO28@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e45864"
                id="IOCON@PIO28@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e45910"
                id="IOCON@PIO28@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 2 pins PIO2_9" format="hex0x"
                id="IOCON@PIO29"
                offset="0x124"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e45984"
                id="IOCON@PIO29@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e46103"
                id="IOCON@PIO29@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e46173"
                id="IOCON@PIO29@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e46219"
                id="IOCON@PIO29@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e46265"
                id="IOCON@PIO29@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e46312"
                id="IOCON@PIO29@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e46358"
                id="IOCON@PIO29@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 2 pins PIO2_10" format="hex0x"
                id="IOCON@PIO210"
                offset="0x128"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e46432"
                id="IOCON@PIO210@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e46551"
                id="IOCON@PIO210@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e46621"
                id="IOCON@PIO210@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e46667"
                id="IOCON@PIO210@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e46713"
                id="IOCON@PIO210@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e46760"
                id="IOCON@PIO210@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e46806"
                id="IOCON@PIO210@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 2 pins PIO2_11" format="hex0x"
                id="IOCON@PIO211"
                offset="0x12c"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e46880"
                id="IOCON@PIO211@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e46999"
                id="IOCON@PIO211@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e47069"
                id="IOCON@PIO211@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e47115"
                id="IOCON@PIO211@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e47161"
                id="IOCON@PIO211@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e47208"
                id="IOCON@PIO211@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e47254"
                id="IOCON@PIO211@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 2 pins PIO2_12" format="hex0x"
                id="IOCON@PIO212"
                offset="0x130"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e47328"
                id="IOCON@PIO212@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e47447"
                id="IOCON@PIO212@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e47517"
                id="IOCON@PIO212@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e47563"
                id="IOCON@PIO212@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e47609"
                id="IOCON@PIO212@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e47656"
                id="IOCON@PIO212@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e47702"
                id="IOCON@PIO212@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 2 pins PIO2_13" format="hex0x"
                id="IOCON@PIO213"
                offset="0x134"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e47777"
                id="IOCON@PIO213@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e47896"
                id="IOCON@PIO213@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e47966"
                id="IOCON@PIO213@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e48012"
                id="IOCON@PIO213@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e48058"
                id="IOCON@PIO213@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e48105"
                id="IOCON@PIO213@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e48151"
                id="IOCON@PIO213@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 2 pins PIO2_14" format="hex0x"
                id="IOCON@PIO214"
                offset="0x138"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e48225"
                id="IOCON@PIO214@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e48344"
                id="IOCON@PIO214@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e48414"
                id="IOCON@PIO214@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e48460"
                id="IOCON@PIO214@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e48506"
                id="IOCON@PIO214@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e48553"
                id="IOCON@PIO214@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e48599"
                id="IOCON@PIO214@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 2 pins PIO2_15" format="hex0x"
                id="IOCON@PIO215"
                offset="0x13c"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e48673"
                id="IOCON@PIO215@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e48792"
                id="IOCON@PIO215@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e48862"
                id="IOCON@PIO215@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e48908"
                id="IOCON@PIO215@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e48954"
                id="IOCON@PIO215@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e49001"
                id="IOCON@PIO215@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e49047"
                id="IOCON@PIO215@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 2 pins PIO2_16" format="hex0x"
                id="IOCON@PIO216"
                offset="0x140"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e49121"
                id="IOCON@PIO216@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e49240"
                id="IOCON@PIO216@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e49310"
                id="IOCON@PIO216@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e49356"
                id="IOCON@PIO216@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e49402"
                id="IOCON@PIO216@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e49449"
                id="IOCON@PIO216@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e49495"
                id="IOCON@PIO216@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 2 pins PIO2_17" format="hex0x"
                id="IOCON@PIO217"
                offset="0x144"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e49569"
                id="IOCON@PIO217@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e49688"
                id="IOCON@PIO217@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e49758"
                id="IOCON@PIO217@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e49804"
                id="IOCON@PIO217@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e49850"
                id="IOCON@PIO217@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e49897"
                id="IOCON@PIO217@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e49943"
                id="IOCON@PIO217@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 2 pins PIO2_18" format="hex0x"
                id="IOCON@PIO218"
                offset="0x148"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e50017"
                id="IOCON@PIO218@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e50136"
                id="IOCON@PIO218@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e50206"
                id="IOCON@PIO218@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e50252"
                id="IOCON@PIO218@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e50298"
                id="IOCON@PIO218@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e50345"
                id="IOCON@PIO218@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e50391"
                id="IOCON@PIO218@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 2 pins PIO2_19" format="hex0x"
                id="IOCON@PIO219"
                offset="0x14c"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e50466"
                id="IOCON@PIO219@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e50585"
                id="IOCON@PIO219@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e50655"
                id="IOCON@PIO219@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e50701"
                id="IOCON@PIO219@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e50747"
                id="IOCON@PIO219@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e50794"
                id="IOCON@PIO219@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e50840"
                id="IOCON@PIO219@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 2 pins PIO2_20" format="hex0x"
                id="IOCON@PIO220"
                offset="0x150"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e50914"
                id="IOCON@PIO220@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e51033"
                id="IOCON@PIO220@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e51103"
                id="IOCON@PIO220@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e51149"
                id="IOCON@PIO220@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e51195"
                id="IOCON@PIO220@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e51242"
                id="IOCON@PIO220@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e51288"
                id="IOCON@PIO220@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 2 pins PIO2_21" format="hex0x"
                id="IOCON@PIO221"
                offset="0x154"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e51362"
                id="IOCON@PIO221@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e51481"
                id="IOCON@PIO221@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e51551"
                id="IOCON@PIO221@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e51597"
                id="IOCON@PIO221@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e51643"
                id="IOCON@PIO221@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e51690"
                id="IOCON@PIO221@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e51736"
                id="IOCON@PIO221@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 2 pins PIO2_22" format="hex0x"
                id="IOCON@PIO222"
                offset="0x158"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e51810"
                id="IOCON@PIO222@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e51929"
                id="IOCON@PIO222@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e51999"
                id="IOCON@PIO222@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e52045"
                id="IOCON@PIO222@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e52091"
                id="IOCON@PIO222@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e52138"
                id="IOCON@PIO222@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e52184"
                id="IOCON@PIO222@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 2 pins PIO2_23" format="hex0x"
                id="IOCON@PIO223"
                offset="0x15c"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e52258"
                id="IOCON@PIO223@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e52377"
                id="IOCON@PIO223@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e52447"
                id="IOCON@PIO223@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e52493"
                id="IOCON@PIO223@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e52539"
                id="IOCON@PIO223@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e52586"
                id="IOCON@PIO223@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e52632"
                id="IOCON@PIO223@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 2 pins PIO2_24" format="hex0x"
                id="IOCON@PIO224"
                offset="0x160"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e52706"
                id="IOCON@PIO224@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e52825"
                id="IOCON@PIO224@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e52895"
                id="IOCON@PIO224@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e52941"
                id="IOCON@PIO224@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e52987"
                id="IOCON@PIO224@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e53034"
                id="IOCON@PIO224@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e53080"
                id="IOCON@PIO224@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 2 pins PIO2_25" format="hex0x"
                id="IOCON@PIO225"
                offset="0x164"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e53155"
                id="IOCON@PIO225@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e53274"
                id="IOCON@PIO225@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e53344"
                id="IOCON@PIO225@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e53390"
                id="IOCON@PIO225@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e53436"
                id="IOCON@PIO225@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e53483"
                id="IOCON@PIO225@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e53529"
                id="IOCON@PIO225@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 2 pins PIO2_26" format="hex0x"
                id="IOCON@PIO226"
                offset="0x168"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e53603"
                id="IOCON@PIO226@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e53722"
                id="IOCON@PIO226@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e53792"
                id="IOCON@PIO226@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e53838"
                id="IOCON@PIO226@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e53884"
                id="IOCON@PIO226@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e53931"
                id="IOCON@PIO226@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e53977"
                id="IOCON@PIO226@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 2 pins PIO2_27" format="hex0x"
                id="IOCON@PIO227"
                offset="0x16c"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e54051"
                id="IOCON@PIO227@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e54170"
                id="IOCON@PIO227@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e54240"
                id="IOCON@PIO227@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e54286"
                id="IOCON@PIO227@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e54332"
                id="IOCON@PIO227@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e54379"
                id="IOCON@PIO227@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e54425"
                id="IOCON@PIO227@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 2 pins PIO2_28" format="hex0x"
                id="IOCON@PIO228"
                offset="0x170"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e54499"
                id="IOCON@PIO228@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e54618"
                id="IOCON@PIO228@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e54688"
                id="IOCON@PIO228@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e54734"
                id="IOCON@PIO228@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e54780"
                id="IOCON@PIO228@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e54827"
                id="IOCON@PIO228@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e54873"
                id="IOCON@PIO228@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 2 pins PIO2_29" format="hex0x"
                id="IOCON@PIO229"
                offset="0x174"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e54947"
                id="IOCON@PIO229@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e55066"
                id="IOCON@PIO229@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e55136"
                id="IOCON@PIO229@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e55182"
                id="IOCON@PIO229@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e55228"
                id="IOCON@PIO229@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e55275"
                id="IOCON@PIO229@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e55321"
                id="IOCON@PIO229@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 2 pins PIO2_30" format="hex0x"
                id="IOCON@PIO230"
                offset="0x178"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e55395"
                id="IOCON@PIO230@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e55514"
                id="IOCON@PIO230@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e55584"
                id="IOCON@PIO230@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e55630"
                id="IOCON@PIO230@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e55676"
                id="IOCON@PIO230@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e55723"
                id="IOCON@PIO230@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e55769"
                id="IOCON@PIO230@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 2 pins PIO2_31" format="hex0x"
                id="IOCON@PIO231"
                offset="0x17c"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e55844"
                id="IOCON@PIO231@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e55963"
                id="IOCON@PIO231@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e56033"
                id="IOCON@PIO231@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e56079"
                id="IOCON@PIO231@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e56125"
                id="IOCON@PIO231@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e56172"
                id="IOCON@PIO231@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e56218"
                id="IOCON@PIO231@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 3 pins PIO3_0" format="hex0x"
                id="IOCON@PIO30"
                offset="0x180"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e56292"
                id="IOCON@PIO30@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e56411"
                id="IOCON@PIO30@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e56481"
                id="IOCON@PIO30@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e56527"
                id="IOCON@PIO30@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e56573"
                id="IOCON@PIO30@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e56620"
                id="IOCON@PIO30@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e56666"
                id="IOCON@PIO30@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 3 pins PIO3_1" format="hex0x"
                id="IOCON@PIO31"
                offset="0x184"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e56740"
                id="IOCON@PIO31@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e56859"
                id="IOCON@PIO31@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e56929"
                id="IOCON@PIO31@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e56975"
                id="IOCON@PIO31@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e57021"
                id="IOCON@PIO31@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e57068"
                id="IOCON@PIO31@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e57114"
                id="IOCON@PIO31@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 3 pins PIO3_2" format="hex0x"
                id="IOCON@PIO32"
                offset="0x188"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e57188"
                id="IOCON@PIO32@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e57307"
                id="IOCON@PIO32@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e57377"
                id="IOCON@PIO32@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e57423"
                id="IOCON@PIO32@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e57469"
                id="IOCON@PIO32@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e57516"
                id="IOCON@PIO32@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e57562"
                id="IOCON@PIO32@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 3 pins PIO3_3" format="hex0x"
                id="IOCON@PIO33"
                offset="0x18c"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e57636"
                id="IOCON@PIO33@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e57755"
                id="IOCON@PIO33@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e57825"
                id="IOCON@PIO33@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e57871"
                id="IOCON@PIO33@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e57917"
                id="IOCON@PIO33@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e57964"
                id="IOCON@PIO33@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e58010"
                id="IOCON@PIO33@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 3 pins PIO3_4" format="hex0x"
                id="IOCON@PIO34"
                offset="0x190"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e58084"
                id="IOCON@PIO34@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e58203"
                id="IOCON@PIO34@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e58273"
                id="IOCON@PIO34@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e58319"
                id="IOCON@PIO34@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e58365"
                id="IOCON@PIO34@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e58412"
                id="IOCON@PIO34@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e58458"
                id="IOCON@PIO34@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 3 pins PIO3_5" format="hex0x"
                id="IOCON@PIO35"
                offset="0x194"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e58533"
                id="IOCON@PIO35@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e58652"
                id="IOCON@PIO35@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e58722"
                id="IOCON@PIO35@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e58768"
                id="IOCON@PIO35@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e58814"
                id="IOCON@PIO35@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e58861"
                id="IOCON@PIO35@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e58907"
                id="IOCON@PIO35@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 3 pins PIO3_6" format="hex0x"
                id="IOCON@PIO36"
                offset="0x198"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e58981"
                id="IOCON@PIO36@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e59100"
                id="IOCON@PIO36@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e59170"
                id="IOCON@PIO36@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e59216"
                id="IOCON@PIO36@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e59262"
                id="IOCON@PIO36@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e59309"
                id="IOCON@PIO36@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e59355"
                id="IOCON@PIO36@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 3 pins PIO3_7" format="hex0x"
                id="IOCON@PIO37"
                offset="0x19c"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e59429"
                id="IOCON@PIO37@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e59548"
                id="IOCON@PIO37@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e59618"
                id="IOCON@PIO37@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e59664"
                id="IOCON@PIO37@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e59710"
                id="IOCON@PIO37@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e59757"
                id="IOCON@PIO37@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e59803"
                id="IOCON@PIO37@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 3 pins PIO3_8" format="hex0x"
                id="IOCON@PIO38"
                offset="0x1a0"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e59877"
                id="IOCON@PIO38@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e59996"
                id="IOCON@PIO38@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e60066"
                id="IOCON@PIO38@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e60112"
                id="IOCON@PIO38@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e60158"
                id="IOCON@PIO38@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e60205"
                id="IOCON@PIO38@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e60251"
                id="IOCON@PIO38@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 3 pins PIO3_9" format="hex0x"
                id="IOCON@PIO39"
                offset="0x1a4"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e60325"
                id="IOCON@PIO39@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e60444"
                id="IOCON@PIO39@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e60514"
                id="IOCON@PIO39@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e60560"
                id="IOCON@PIO39@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e60606"
                id="IOCON@PIO39@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e60653"
                id="IOCON@PIO39@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e60699"
                id="IOCON@PIO39@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 3 pins PIO3_10" format="hex0x"
                id="IOCON@PIO310"
                offset="0x1a8"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e60773"
                id="IOCON@PIO310@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e60892"
                id="IOCON@PIO310@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e60962"
                id="IOCON@PIO310@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e61008"
                id="IOCON@PIO310@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e61054"
                id="IOCON@PIO310@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e61101"
                id="IOCON@PIO310@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e61147"
                id="IOCON@PIO310@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 3 pins PIO3_11" format="hex0x"
                id="IOCON@PIO311"
                offset="0x1ac"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e61222"
                id="IOCON@PIO311@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e61341"
                id="IOCON@PIO311@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e61411"
                id="IOCON@PIO311@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e61457"
                id="IOCON@PIO311@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e61503"
                id="IOCON@PIO311@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e61550"
                id="IOCON@PIO311@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e61596"
                id="IOCON@PIO311@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 3 pins PIO3_12" format="hex0x"
                id="IOCON@PIO312"
                offset="0x1b0"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e61670"
                id="IOCON@PIO312@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e61789"
                id="IOCON@PIO312@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e61859"
                id="IOCON@PIO312@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e61905"
                id="IOCON@PIO312@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e61951"
                id="IOCON@PIO312@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e61998"
                id="IOCON@PIO312@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e62044"
                id="IOCON@PIO312@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 3 pins PIO3_13" format="hex0x"
                id="IOCON@PIO313"
                offset="0x1b4"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e62118"
                id="IOCON@PIO313@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e62237"
                id="IOCON@PIO313@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e62307"
                id="IOCON@PIO313@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e62353"
                id="IOCON@PIO313@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e62399"
                id="IOCON@PIO313@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e62446"
                id="IOCON@PIO313@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e62492"
                id="IOCON@PIO313@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 3 pins PIO3_14" format="hex0x"
                id="IOCON@PIO314"
                offset="0x1b8"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e62566"
                id="IOCON@PIO314@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e62685"
                id="IOCON@PIO314@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e62755"
                id="IOCON@PIO314@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e62801"
                id="IOCON@PIO314@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e62847"
                id="IOCON@PIO314@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e62894"
                id="IOCON@PIO314@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e62940"
                id="IOCON@PIO314@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 3 pins PIO3_15" format="hex0x"
                id="IOCON@PIO315"
                offset="0x1bc"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e63014"
                id="IOCON@PIO315@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e63133"
                id="IOCON@PIO315@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e63203"
                id="IOCON@PIO315@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e63249"
                id="IOCON@PIO315@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e63295"
                id="IOCON@PIO315@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e63342"
                id="IOCON@PIO315@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e63388"
                id="IOCON@PIO315@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 3 pins PIO3_16" format="hex0x"
                id="IOCON@PIO316"
                offset="0x1c0"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e63462"
                id="IOCON@PIO316@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e63581"
                id="IOCON@PIO316@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e63651"
                id="IOCON@PIO316@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e63697"
                id="IOCON@PIO316@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e63743"
                id="IOCON@PIO316@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e63790"
                id="IOCON@PIO316@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e63836"
                id="IOCON@PIO316@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 3 pins PIO3_17" format="hex0x"
                id="IOCON@PIO317"
                offset="0x1c4"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e63911"
                id="IOCON@PIO317@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e64030"
                id="IOCON@PIO317@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e64100"
                id="IOCON@PIO317@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e64146"
                id="IOCON@PIO317@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e64192"
                id="IOCON@PIO317@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e64239"
                id="IOCON@PIO317@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e64285"
                id="IOCON@PIO317@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 3 pins PIO3_18" format="hex0x"
                id="IOCON@PIO318"
                offset="0x1c8"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e64359"
                id="IOCON@PIO318@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e64478"
                id="IOCON@PIO318@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e64548"
                id="IOCON@PIO318@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e64594"
                id="IOCON@PIO318@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e64640"
                id="IOCON@PIO318@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e64687"
                id="IOCON@PIO318@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e64733"
                id="IOCON@PIO318@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 3 pins PIO3_19" format="hex0x"
                id="IOCON@PIO319"
                offset="0x1cc"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e64807"
                id="IOCON@PIO319@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e64926"
                id="IOCON@PIO319@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e64996"
                id="IOCON@PIO319@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e65042"
                id="IOCON@PIO319@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e65088"
                id="IOCON@PIO319@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e65135"
                id="IOCON@PIO319@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e65181"
                id="IOCON@PIO319@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 3 pins PIO3_20" format="hex0x"
                id="IOCON@PIO320"
                offset="0x1d0"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e65255"
                id="IOCON@PIO320@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e65374"
                id="IOCON@PIO320@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e65444"
                id="IOCON@PIO320@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e65490"
                id="IOCON@PIO320@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e65536"
                id="IOCON@PIO320@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e65583"
                id="IOCON@PIO320@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e65629"
                id="IOCON@PIO320@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 3 pins PIO3_21" format="hex0x"
                id="IOCON@PIO321"
                offset="0x1d4"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e65703"
                id="IOCON@PIO321@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e65822"
                id="IOCON@PIO321@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e65892"
                id="IOCON@PIO321@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e65938"
                id="IOCON@PIO321@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e65984"
                id="IOCON@PIO321@FILTEROFF"
                offset="[9]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e66031"
                id="IOCON@PIO321@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 3 pins PIO3_22" format="hex0x"
                id="IOCON@PIO322"
                offset="0x1d8"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e66105"
                id="IOCON@PIO322@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e66224"
                id="IOCON@PIO322@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e66294"
                id="IOCON@PIO322@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e66340"
                id="IOCON@PIO322@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e66386"
                id="IOCON@PIO322@FILTEROFF"
                offset="[9]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e66433"
                id="IOCON@PIO322@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 3 pins PIO3_23" format="hex0x"
                id="IOCON@PIO323"
                offset="0x1dc"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e66508"
                id="IOCON@PIO323@FUNC"
                offset="[3:0]"/>
         <field description="Controls slew rate of I2C pad." format="enum" enum="d1e66627"
                id="IOCON@PIO323@I2CSLEW"
                offset="[6]"/>
         <field description="Input polarity." format="enum" enum="d1e66673"
                id="IOCON@PIO323@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e66719"
                id="IOCON@PIO323@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e66765"
                id="IOCON@PIO323@FILTEROFF"
                offset="[9]"/>
         <field description="Controls the current sink capability of the pin." format="enum"
                enum="d1e66812"
                id="IOCON@PIO323@I2CDRIVE"
                offset="[10]"/>
         <field description="Configures I2C features for standard mode, fast mode, and Fast Mode Plus operation."
                format="enum"
                enum="d1e66858"
                id="IOCON@PIO323@I2CFILTER"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 3 pins PIO3_24" format="hex0x"
                id="IOCON@PIO324"
                offset="0x1e0"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e66932"
                id="IOCON@PIO324@FUNC"
                offset="[3:0]"/>
         <field description="Controls slew rate of I2C pad." format="enum" enum="d1e67051"
                id="IOCON@PIO324@I2CSLEW"
                offset="[6]"/>
         <field description="Input polarity." format="enum" enum="d1e67097"
                id="IOCON@PIO324@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e67143"
                id="IOCON@PIO324@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e67189"
                id="IOCON@PIO324@FILTEROFF"
                offset="[9]"/>
         <field description="Controls the current sink capability of the pin." format="enum"
                enum="d1e67236"
                id="IOCON@PIO324@I2CDRIVE"
                offset="[10]"/>
         <field description="Configures I2C features for standard mode, fast mode, and Fast Mode Plus operation."
                format="enum"
                enum="d1e67282"
                id="IOCON@PIO324@I2CFILTER"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 3 pins PIO3_25" format="hex0x"
                id="IOCON@PIO325"
                offset="0x1e4"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e67356"
                id="IOCON@PIO325@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e67475"
                id="IOCON@PIO325@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e67545"
                id="IOCON@PIO325@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e67591"
                id="IOCON@PIO325@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e67637"
                id="IOCON@PIO325@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e67684"
                id="IOCON@PIO325@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e67730"
                id="IOCON@PIO325@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 3 pins PIO3_26" format="hex0x"
                id="IOCON@PIO326"
                offset="0x1e8"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e67804"
                id="IOCON@PIO326@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e67923"
                id="IOCON@PIO326@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e67993"
                id="IOCON@PIO326@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e68039"
                id="IOCON@PIO326@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e68085"
                id="IOCON@PIO326@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e68132"
                id="IOCON@PIO326@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e68178"
                id="IOCON@PIO326@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 3 pins PIO3_27" format="hex0x"
                id="IOCON@PIO327"
                offset="0x1ec"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e68252"
                id="IOCON@PIO327@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e68371"
                id="IOCON@PIO327@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e68441"
                id="IOCON@PIO327@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e68487"
                id="IOCON@PIO327@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e68533"
                id="IOCON@PIO327@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e68580"
                id="IOCON@PIO327@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e68626"
                id="IOCON@PIO327@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 3 pins PIO3_28" format="hex0x"
                id="IOCON@PIO328"
                offset="0x1f0"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e68700"
                id="IOCON@PIO328@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e68819"
                id="IOCON@PIO328@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e68889"
                id="IOCON@PIO328@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e68935"
                id="IOCON@PIO328@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e68981"
                id="IOCON@PIO328@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e69028"
                id="IOCON@PIO328@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e69074"
                id="IOCON@PIO328@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 3 pins PIO3_29" format="hex0x"
                id="IOCON@PIO329"
                offset="0x1f4"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e69149"
                id="IOCON@PIO329@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e69268"
                id="IOCON@PIO329@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e69338"
                id="IOCON@PIO329@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e69384"
                id="IOCON@PIO329@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e69430"
                id="IOCON@PIO329@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e69477"
                id="IOCON@PIO329@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e69523"
                id="IOCON@PIO329@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 3 pins PIO3_30" format="hex0x"
                id="IOCON@PIO330"
                offset="0x1f8"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e69597"
                id="IOCON@PIO330@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e69716"
                id="IOCON@PIO330@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e69786"
                id="IOCON@PIO330@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e69832"
                id="IOCON@PIO330@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e69878"
                id="IOCON@PIO330@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e69925"
                id="IOCON@PIO330@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e69971"
                id="IOCON@PIO330@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 3 pins PIO3_31" format="hex0x"
                id="IOCON@PIO331"
                offset="0x1fc"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e70045"
                id="IOCON@PIO331@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e70164"
                id="IOCON@PIO331@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e70234"
                id="IOCON@PIO331@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e70280"
                id="IOCON@PIO331@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e70326"
                id="IOCON@PIO331@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e70373"
                id="IOCON@PIO331@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e70419"
                id="IOCON@PIO331@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 4 pins PIO4_0" format="hex0x"
                id="IOCON@PIO40"
                offset="0x200"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e70493"
                id="IOCON@PIO40@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e70612"
                id="IOCON@PIO40@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e70682"
                id="IOCON@PIO40@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e70728"
                id="IOCON@PIO40@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e70774"
                id="IOCON@PIO40@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e70821"
                id="IOCON@PIO40@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e70867"
                id="IOCON@PIO40@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 4 pins PIO4_1" format="hex0x"
                id="IOCON@PIO41"
                offset="0x204"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e70941"
                id="IOCON@PIO41@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e71060"
                id="IOCON@PIO41@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e71130"
                id="IOCON@PIO41@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e71176"
                id="IOCON@PIO41@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e71222"
                id="IOCON@PIO41@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e71269"
                id="IOCON@PIO41@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e71315"
                id="IOCON@PIO41@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 4 pins PIO4_2" format="hex0x"
                id="IOCON@PIO42"
                offset="0x208"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e71389"
                id="IOCON@PIO42@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e71508"
                id="IOCON@PIO42@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e71578"
                id="IOCON@PIO42@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e71624"
                id="IOCON@PIO42@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e71670"
                id="IOCON@PIO42@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e71717"
                id="IOCON@PIO42@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e71763"
                id="IOCON@PIO42@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 4 pins PIO4_3" format="hex0x"
                id="IOCON@PIO43"
                offset="0x20c"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e71838"
                id="IOCON@PIO43@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e71957"
                id="IOCON@PIO43@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e72027"
                id="IOCON@PIO43@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e72073"
                id="IOCON@PIO43@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e72119"
                id="IOCON@PIO43@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e72166"
                id="IOCON@PIO43@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e72212"
                id="IOCON@PIO43@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 4 pins PIO4_4" format="hex0x"
                id="IOCON@PIO44"
                offset="0x210"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e72286"
                id="IOCON@PIO44@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e72405"
                id="IOCON@PIO44@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e72475"
                id="IOCON@PIO44@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e72521"
                id="IOCON@PIO44@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e72567"
                id="IOCON@PIO44@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e72614"
                id="IOCON@PIO44@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e72660"
                id="IOCON@PIO44@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 4 pins PIO4_5" format="hex0x"
                id="IOCON@PIO45"
                offset="0x214"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e72734"
                id="IOCON@PIO45@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e72853"
                id="IOCON@PIO45@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e72923"
                id="IOCON@PIO45@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e72969"
                id="IOCON@PIO45@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e73015"
                id="IOCON@PIO45@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e73062"
                id="IOCON@PIO45@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e73108"
                id="IOCON@PIO45@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 4 pins PIO4_6" format="hex0x"
                id="IOCON@PIO46"
                offset="0x218"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e73182"
                id="IOCON@PIO46@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e73301"
                id="IOCON@PIO46@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e73371"
                id="IOCON@PIO46@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e73417"
                id="IOCON@PIO46@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e73463"
                id="IOCON@PIO46@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e73510"
                id="IOCON@PIO46@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e73556"
                id="IOCON@PIO46@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 4 pins PIO4_7" format="hex0x"
                id="IOCON@PIO47"
                offset="0x21c"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e73630"
                id="IOCON@PIO47@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e73749"
                id="IOCON@PIO47@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e73819"
                id="IOCON@PIO47@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e73865"
                id="IOCON@PIO47@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e73911"
                id="IOCON@PIO47@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e73958"
                id="IOCON@PIO47@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e74004"
                id="IOCON@PIO47@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 4 pins PIO4_8" format="hex0x"
                id="IOCON@PIO48"
                offset="0x220"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e74078"
                id="IOCON@PIO48@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e74197"
                id="IOCON@PIO48@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e74267"
                id="IOCON@PIO48@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e74313"
                id="IOCON@PIO48@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e74359"
                id="IOCON@PIO48@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e74406"
                id="IOCON@PIO48@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e74452"
                id="IOCON@PIO48@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 4 pins PIO4_9" format="hex0x"
                id="IOCON@PIO49"
                offset="0x224"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e74527"
                id="IOCON@PIO49@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e74646"
                id="IOCON@PIO49@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e74716"
                id="IOCON@PIO49@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e74762"
                id="IOCON@PIO49@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e74808"
                id="IOCON@PIO49@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e74855"
                id="IOCON@PIO49@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e74901"
                id="IOCON@PIO49@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 4 pins PIO4_10" format="hex0x"
                id="IOCON@PIO410"
                offset="0x228"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e74975"
                id="IOCON@PIO410@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e75094"
                id="IOCON@PIO410@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e75164"
                id="IOCON@PIO410@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e75210"
                id="IOCON@PIO410@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e75256"
                id="IOCON@PIO410@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e75303"
                id="IOCON@PIO410@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e75349"
                id="IOCON@PIO410@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 4 pins PIO4_11" format="hex0x"
                id="IOCON@PIO411"
                offset="0x22c"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e75423"
                id="IOCON@PIO411@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e75542"
                id="IOCON@PIO411@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e75612"
                id="IOCON@PIO411@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e75658"
                id="IOCON@PIO411@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e75704"
                id="IOCON@PIO411@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e75751"
                id="IOCON@PIO411@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e75797"
                id="IOCON@PIO411@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 4 pins PIO4_12" format="hex0x"
                id="IOCON@PIO412"
                offset="0x230"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e75871"
                id="IOCON@PIO412@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e75990"
                id="IOCON@PIO412@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e76060"
                id="IOCON@PIO412@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e76106"
                id="IOCON@PIO412@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e76152"
                id="IOCON@PIO412@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e76199"
                id="IOCON@PIO412@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e76245"
                id="IOCON@PIO412@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 4 pins PIO4_13" format="hex0x"
                id="IOCON@PIO413"
                offset="0x234"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e76319"
                id="IOCON@PIO413@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e76438"
                id="IOCON@PIO413@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e76508"
                id="IOCON@PIO413@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e76554"
                id="IOCON@PIO413@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e76600"
                id="IOCON@PIO413@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e76647"
                id="IOCON@PIO413@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e76693"
                id="IOCON@PIO413@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 4 pins PIO4_14" format="hex0x"
                id="IOCON@PIO414"
                offset="0x238"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e76767"
                id="IOCON@PIO414@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e76886"
                id="IOCON@PIO414@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e76956"
                id="IOCON@PIO414@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e77002"
                id="IOCON@PIO414@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e77048"
                id="IOCON@PIO414@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e77095"
                id="IOCON@PIO414@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e77141"
                id="IOCON@PIO414@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 4 pins PIO4_15" format="hex0x"
                id="IOCON@PIO415"
                offset="0x23c"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e77216"
                id="IOCON@PIO415@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e77335"
                id="IOCON@PIO415@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e77405"
                id="IOCON@PIO415@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e77451"
                id="IOCON@PIO415@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e77497"
                id="IOCON@PIO415@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e77544"
                id="IOCON@PIO415@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e77590"
                id="IOCON@PIO415@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 4 pins PIO4_16" format="hex0x"
                id="IOCON@PIO416"
                offset="0x240"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e77664"
                id="IOCON@PIO416@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e77783"
                id="IOCON@PIO416@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e77853"
                id="IOCON@PIO416@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e77899"
                id="IOCON@PIO416@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e77945"
                id="IOCON@PIO416@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e77992"
                id="IOCON@PIO416@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e78038"
                id="IOCON@PIO416@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 4 pins PIO4_17" format="hex0x"
                id="IOCON@PIO417"
                offset="0x244"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e78112"
                id="IOCON@PIO417@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e78231"
                id="IOCON@PIO417@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e78301"
                id="IOCON@PIO417@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e78347"
                id="IOCON@PIO417@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e78393"
                id="IOCON@PIO417@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e78440"
                id="IOCON@PIO417@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e78486"
                id="IOCON@PIO417@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 4 pins PIO4_18" format="hex0x"
                id="IOCON@PIO418"
                offset="0x248"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e78560"
                id="IOCON@PIO418@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e78679"
                id="IOCON@PIO418@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e78749"
                id="IOCON@PIO418@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e78795"
                id="IOCON@PIO418@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e78841"
                id="IOCON@PIO418@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e78888"
                id="IOCON@PIO418@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e78934"
                id="IOCON@PIO418@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 4 pins PIO4_19" format="hex0x"
                id="IOCON@PIO419"
                offset="0x24c"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e79008"
                id="IOCON@PIO419@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e79127"
                id="IOCON@PIO419@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e79197"
                id="IOCON@PIO419@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e79243"
                id="IOCON@PIO419@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e79289"
                id="IOCON@PIO419@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e79336"
                id="IOCON@PIO419@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e79382"
                id="IOCON@PIO419@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 4 pins PIO4_20" format="hex0x"
                id="IOCON@PIO420"
                offset="0x250"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e79456"
                id="IOCON@PIO420@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e79575"
                id="IOCON@PIO420@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e79645"
                id="IOCON@PIO420@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e79691"
                id="IOCON@PIO420@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e79737"
                id="IOCON@PIO420@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e79784"
                id="IOCON@PIO420@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e79830"
                id="IOCON@PIO420@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 4 pins PIO4_21" format="hex0x"
                id="IOCON@PIO421"
                offset="0x254"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e79905"
                id="IOCON@PIO421@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e80024"
                id="IOCON@PIO421@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e80094"
                id="IOCON@PIO421@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e80140"
                id="IOCON@PIO421@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e80186"
                id="IOCON@PIO421@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e80233"
                id="IOCON@PIO421@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e80279"
                id="IOCON@PIO421@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 4 pins PIO4_22" format="hex0x"
                id="IOCON@PIO422"
                offset="0x258"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e80353"
                id="IOCON@PIO422@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e80472"
                id="IOCON@PIO422@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e80542"
                id="IOCON@PIO422@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e80588"
                id="IOCON@PIO422@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e80634"
                id="IOCON@PIO422@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e80681"
                id="IOCON@PIO422@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e80727"
                id="IOCON@PIO422@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 4 pins PIO4_23" format="hex0x"
                id="IOCON@PIO423"
                offset="0x25c"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e80801"
                id="IOCON@PIO423@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e80920"
                id="IOCON@PIO423@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e80990"
                id="IOCON@PIO423@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e81036"
                id="IOCON@PIO423@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e81082"
                id="IOCON@PIO423@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e81129"
                id="IOCON@PIO423@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e81175"
                id="IOCON@PIO423@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 4 pins PIO4_24" format="hex0x"
                id="IOCON@PIO424"
                offset="0x260"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e81249"
                id="IOCON@PIO424@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e81368"
                id="IOCON@PIO424@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e81438"
                id="IOCON@PIO424@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e81484"
                id="IOCON@PIO424@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e81530"
                id="IOCON@PIO424@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e81577"
                id="IOCON@PIO424@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e81623"
                id="IOCON@PIO424@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 4 pins PIO4_25" format="hex0x"
                id="IOCON@PIO425"
                offset="0x264"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e81697"
                id="IOCON@PIO425@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e81816"
                id="IOCON@PIO425@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e81886"
                id="IOCON@PIO425@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e81932"
                id="IOCON@PIO425@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e81978"
                id="IOCON@PIO425@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e82025"
                id="IOCON@PIO425@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e82071"
                id="IOCON@PIO425@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 4 pins PIO4_26" format="hex0x"
                id="IOCON@PIO426"
                offset="0x268"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e82145"
                id="IOCON@PIO426@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e82264"
                id="IOCON@PIO426@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e82334"
                id="IOCON@PIO426@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e82380"
                id="IOCON@PIO426@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e82426"
                id="IOCON@PIO426@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e82473"
                id="IOCON@PIO426@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e82519"
                id="IOCON@PIO426@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 4 pins PIO4_27" format="hex0x"
                id="IOCON@PIO427"
                offset="0x26c"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e82594"
                id="IOCON@PIO427@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e82713"
                id="IOCON@PIO427@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e82783"
                id="IOCON@PIO427@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e82829"
                id="IOCON@PIO427@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e82875"
                id="IOCON@PIO427@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e82922"
                id="IOCON@PIO427@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e82968"
                id="IOCON@PIO427@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 4 pins PIO4_28" format="hex0x"
                id="IOCON@PIO428"
                offset="0x270"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e83042"
                id="IOCON@PIO428@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e83161"
                id="IOCON@PIO428@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e83231"
                id="IOCON@PIO428@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e83277"
                id="IOCON@PIO428@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e83323"
                id="IOCON@PIO428@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e83370"
                id="IOCON@PIO428@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e83416"
                id="IOCON@PIO428@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 4 pins PIO4_29" format="hex0x"
                id="IOCON@PIO429"
                offset="0x274"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e83490"
                id="IOCON@PIO429@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e83609"
                id="IOCON@PIO429@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e83679"
                id="IOCON@PIO429@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e83725"
                id="IOCON@PIO429@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e83771"
                id="IOCON@PIO429@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e83818"
                id="IOCON@PIO429@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e83864"
                id="IOCON@PIO429@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 4 pins PIO4_30" format="hex0x"
                id="IOCON@PIO430"
                offset="0x278"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e83938"
                id="IOCON@PIO430@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e84057"
                id="IOCON@PIO430@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e84127"
                id="IOCON@PIO430@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e84173"
                id="IOCON@PIO430@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e84219"
                id="IOCON@PIO430@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e84266"
                id="IOCON@PIO430@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e84312"
                id="IOCON@PIO430@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 4 pins PIO4_31" format="hex0x"
                id="IOCON@PIO431"
                offset="0x27c"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e84386"
                id="IOCON@PIO431@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e84505"
                id="IOCON@PIO431@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e84575"
                id="IOCON@PIO431@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e84621"
                id="IOCON@PIO431@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e84667"
                id="IOCON@PIO431@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e84714"
                id="IOCON@PIO431@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e84760"
                id="IOCON@PIO431@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 5 pins PIO5_0" format="hex0x"
                id="IOCON@PIO50"
                offset="0x280"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e84834"
                id="IOCON@PIO50@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e84953"
                id="IOCON@PIO50@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e85023"
                id="IOCON@PIO50@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e85069"
                id="IOCON@PIO50@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e85115"
                id="IOCON@PIO50@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e85162"
                id="IOCON@PIO50@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e85208"
                id="IOCON@PIO50@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 5 pins PIO5_1" format="hex0x"
                id="IOCON@PIO51"
                offset="0x284"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e85283"
                id="IOCON@PIO51@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e85402"
                id="IOCON@PIO51@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e85472"
                id="IOCON@PIO51@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e85518"
                id="IOCON@PIO51@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e85564"
                id="IOCON@PIO51@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e85611"
                id="IOCON@PIO51@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e85657"
                id="IOCON@PIO51@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 5 pins PIO5_2" format="hex0x"
                id="IOCON@PIO52"
                offset="0x288"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e85731"
                id="IOCON@PIO52@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e85850"
                id="IOCON@PIO52@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e85920"
                id="IOCON@PIO52@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e85966"
                id="IOCON@PIO52@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e86012"
                id="IOCON@PIO52@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e86059"
                id="IOCON@PIO52@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e86105"
                id="IOCON@PIO52@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 5 pins PIO5_3" format="hex0x"
                id="IOCON@PIO53"
                offset="0x28c"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e86179"
                id="IOCON@PIO53@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e86298"
                id="IOCON@PIO53@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e86368"
                id="IOCON@PIO53@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e86414"
                id="IOCON@PIO53@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e86460"
                id="IOCON@PIO53@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e86507"
                id="IOCON@PIO53@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e86553"
                id="IOCON@PIO53@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 5 pins PIO5_4" format="hex0x"
                id="IOCON@PIO54"
                offset="0x290"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e86627"
                id="IOCON@PIO54@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e86746"
                id="IOCON@PIO54@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e86816"
                id="IOCON@PIO54@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e86862"
                id="IOCON@PIO54@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e86908"
                id="IOCON@PIO54@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e86955"
                id="IOCON@PIO54@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e87001"
                id="IOCON@PIO54@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 5 pins PIO5_5" format="hex0x"
                id="IOCON@PIO55"
                offset="0x294"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e87075"
                id="IOCON@PIO55@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e87194"
                id="IOCON@PIO55@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e87264"
                id="IOCON@PIO55@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e87310"
                id="IOCON@PIO55@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e87356"
                id="IOCON@PIO55@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e87403"
                id="IOCON@PIO55@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e87449"
                id="IOCON@PIO55@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 5 pins PIO5_6" format="hex0x"
                id="IOCON@PIO56"
                offset="0x298"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e87523"
                id="IOCON@PIO56@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e87642"
                id="IOCON@PIO56@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e87712"
                id="IOCON@PIO56@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e87758"
                id="IOCON@PIO56@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e87804"
                id="IOCON@PIO56@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e87851"
                id="IOCON@PIO56@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e87897"
                id="IOCON@PIO56@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 5 pins PIO5_7" format="hex0x"
                id="IOCON@PIO57"
                offset="0x29c"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e87972"
                id="IOCON@PIO57@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e88091"
                id="IOCON@PIO57@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e88161"
                id="IOCON@PIO57@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e88207"
                id="IOCON@PIO57@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e88253"
                id="IOCON@PIO57@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e88300"
                id="IOCON@PIO57@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e88346"
                id="IOCON@PIO57@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 5 pins PIO5_8" format="hex0x"
                id="IOCON@PIO58"
                offset="0x2a0"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e88420"
                id="IOCON@PIO58@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e88539"
                id="IOCON@PIO58@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e88609"
                id="IOCON@PIO58@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e88655"
                id="IOCON@PIO58@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e88701"
                id="IOCON@PIO58@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e88748"
                id="IOCON@PIO58@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e88794"
                id="IOCON@PIO58@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 5 pins PIO5_9" format="hex0x"
                id="IOCON@PIO59"
                offset="0x2a4"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e88868"
                id="IOCON@PIO59@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e88987"
                id="IOCON@PIO59@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e89057"
                id="IOCON@PIO59@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e89103"
                id="IOCON@PIO59@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e89149"
                id="IOCON@PIO59@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e89196"
                id="IOCON@PIO59@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e89242"
                id="IOCON@PIO59@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 5 pins PIO5_10" format="hex0x"
                id="IOCON@PIO510"
                offset="0x2a8"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e89316"
                id="IOCON@PIO510@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e89435"
                id="IOCON@PIO510@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e89505"
                id="IOCON@PIO510@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e89551"
                id="IOCON@PIO510@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e89597"
                id="IOCON@PIO510@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e89644"
                id="IOCON@PIO510@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e89690"
                id="IOCON@PIO510@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 5 pins PIO5_11" format="hex0x"
                id="IOCON@PIO511"
                offset="0x2ac"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e89764"
                id="IOCON@PIO511@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e89883"
                id="IOCON@PIO511@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e89953"
                id="IOCON@PIO511@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e89999"
                id="IOCON@PIO511@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e90045"
                id="IOCON@PIO511@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e90092"
                id="IOCON@PIO511@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e90138"
                id="IOCON@PIO511@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 5 pins PIO5_12" format="hex0x"
                id="IOCON@PIO512"
                offset="0x2b0"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e90212"
                id="IOCON@PIO512@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e90331"
                id="IOCON@PIO512@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e90401"
                id="IOCON@PIO512@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e90447"
                id="IOCON@PIO512@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e90493"
                id="IOCON@PIO512@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e90540"
                id="IOCON@PIO512@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e90586"
                id="IOCON@PIO512@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 5 pins PIO5_13" format="hex0x"
                id="IOCON@PIO513"
                offset="0x2b4"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e90661"
                id="IOCON@PIO513@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e90780"
                id="IOCON@PIO513@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e90850"
                id="IOCON@PIO513@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e90896"
                id="IOCON@PIO513@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e90942"
                id="IOCON@PIO513@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e90989"
                id="IOCON@PIO513@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e91035"
                id="IOCON@PIO513@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 5 pins PIO5_14" format="hex0x"
                id="IOCON@PIO514"
                offset="0x2b8"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e91109"
                id="IOCON@PIO514@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e91228"
                id="IOCON@PIO514@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e91298"
                id="IOCON@PIO514@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e91344"
                id="IOCON@PIO514@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e91390"
                id="IOCON@PIO514@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e91437"
                id="IOCON@PIO514@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e91483"
                id="IOCON@PIO514@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 5 pins PIO5_15" format="hex0x"
                id="IOCON@PIO515"
                offset="0x2bc"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e91557"
                id="IOCON@PIO515@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e91676"
                id="IOCON@PIO515@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e91746"
                id="IOCON@PIO515@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e91792"
                id="IOCON@PIO515@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e91838"
                id="IOCON@PIO515@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e91885"
                id="IOCON@PIO515@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e91931"
                id="IOCON@PIO515@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 5 pins PIO5_16" format="hex0x"
                id="IOCON@PIO516"
                offset="0x2c0"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e92005"
                id="IOCON@PIO516@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e92124"
                id="IOCON@PIO516@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e92194"
                id="IOCON@PIO516@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e92240"
                id="IOCON@PIO516@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e92286"
                id="IOCON@PIO516@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e92333"
                id="IOCON@PIO516@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e92379"
                id="IOCON@PIO516@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 5 pins PIO5_17" format="hex0x"
                id="IOCON@PIO517"
                offset="0x2c4"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e92453"
                id="IOCON@PIO517@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e92572"
                id="IOCON@PIO517@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e92642"
                id="IOCON@PIO517@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e92688"
                id="IOCON@PIO517@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e92734"
                id="IOCON@PIO517@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e92781"
                id="IOCON@PIO517@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e92827"
                id="IOCON@PIO517@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 5 pins PIO5_18" format="hex0x"
                id="IOCON@PIO518"
                offset="0x2c8"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e92901"
                id="IOCON@PIO518@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e93020"
                id="IOCON@PIO518@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e93090"
                id="IOCON@PIO518@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e93136"
                id="IOCON@PIO518@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e93182"
                id="IOCON@PIO518@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e93229"
                id="IOCON@PIO518@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e93275"
                id="IOCON@PIO518@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 5 pins PIO5_19" format="hex0x"
                id="IOCON@PIO519"
                offset="0x2cc"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e93350"
                id="IOCON@PIO519@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e93469"
                id="IOCON@PIO519@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e93539"
                id="IOCON@PIO519@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e93585"
                id="IOCON@PIO519@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e93631"
                id="IOCON@PIO519@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e93678"
                id="IOCON@PIO519@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e93724"
                id="IOCON@PIO519@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 5 pins PIO5_20" format="hex0x"
                id="IOCON@PIO520"
                offset="0x2d0"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e93798"
                id="IOCON@PIO520@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e93917"
                id="IOCON@PIO520@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e93987"
                id="IOCON@PIO520@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e94033"
                id="IOCON@PIO520@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e94079"
                id="IOCON@PIO520@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e94126"
                id="IOCON@PIO520@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e94172"
                id="IOCON@PIO520@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 5 pins PIO5_21" format="hex0x"
                id="IOCON@PIO521"
                offset="0x2d4"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e94246"
                id="IOCON@PIO521@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e94365"
                id="IOCON@PIO521@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e94435"
                id="IOCON@PIO521@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e94481"
                id="IOCON@PIO521@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e94527"
                id="IOCON@PIO521@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e94574"
                id="IOCON@PIO521@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e94620"
                id="IOCON@PIO521@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 5 pins PIO5_22" format="hex0x"
                id="IOCON@PIO522"
                offset="0x2d8"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e94694"
                id="IOCON@PIO522@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e94813"
                id="IOCON@PIO522@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e94883"
                id="IOCON@PIO522@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e94929"
                id="IOCON@PIO522@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e94975"
                id="IOCON@PIO522@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e95022"
                id="IOCON@PIO522@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e95068"
                id="IOCON@PIO522@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 5 pins PIO5_23" format="hex0x"
                id="IOCON@PIO523"
                offset="0x2dc"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e95142"
                id="IOCON@PIO523@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e95261"
                id="IOCON@PIO523@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e95331"
                id="IOCON@PIO523@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e95377"
                id="IOCON@PIO523@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e95423"
                id="IOCON@PIO523@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e95470"
                id="IOCON@PIO523@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e95516"
                id="IOCON@PIO523@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 5 pins PIO5_24" format="hex0x"
                id="IOCON@PIO524"
                offset="0x2e0"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e95590"
                id="IOCON@PIO524@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e95709"
                id="IOCON@PIO524@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e95779"
                id="IOCON@PIO524@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e95825"
                id="IOCON@PIO524@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e95871"
                id="IOCON@PIO524@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e95918"
                id="IOCON@PIO524@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e95964"
                id="IOCON@PIO524@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 5 pins PIO5_25" format="hex0x"
                id="IOCON@PIO525"
                offset="0x2e4"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e96039"
                id="IOCON@PIO525@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e96158"
                id="IOCON@PIO525@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e96228"
                id="IOCON@PIO525@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e96274"
                id="IOCON@PIO525@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e96320"
                id="IOCON@PIO525@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e96367"
                id="IOCON@PIO525@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e96413"
                id="IOCON@PIO525@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 5 pins PIO5_26" format="hex0x"
                id="IOCON@PIO526"
                offset="0x2e8"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e96487"
                id="IOCON@PIO526@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e96606"
                id="IOCON@PIO526@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e96676"
                id="IOCON@PIO526@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e96722"
                id="IOCON@PIO526@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e96768"
                id="IOCON@PIO526@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e96815"
                id="IOCON@PIO526@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e96861"
                id="IOCON@PIO526@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 5 pins PIO5_27" format="hex0x"
                id="IOCON@PIO527"
                offset="0x2ec"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e96935"
                id="IOCON@PIO527@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e97054"
                id="IOCON@PIO527@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e97124"
                id="IOCON@PIO527@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e97170"
                id="IOCON@PIO527@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e97216"
                id="IOCON@PIO527@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e97263"
                id="IOCON@PIO527@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e97309"
                id="IOCON@PIO527@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 5 pins PIO5_28" format="hex0x"
                id="IOCON@PIO528"
                offset="0x2f0"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e97383"
                id="IOCON@PIO528@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e97502"
                id="IOCON@PIO528@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e97572"
                id="IOCON@PIO528@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e97618"
                id="IOCON@PIO528@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e97664"
                id="IOCON@PIO528@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e97711"
                id="IOCON@PIO528@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e97757"
                id="IOCON@PIO528@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 5 pins PIO5_29" format="hex0x"
                id="IOCON@PIO529"
                offset="0x2f4"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e97831"
                id="IOCON@PIO529@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e97950"
                id="IOCON@PIO529@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e98020"
                id="IOCON@PIO529@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e98066"
                id="IOCON@PIO529@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e98112"
                id="IOCON@PIO529@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e98159"
                id="IOCON@PIO529@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e98205"
                id="IOCON@PIO529@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 5 pins PIO5_30" format="hex0x"
                id="IOCON@PIO530"
                offset="0x2f8"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e98279"
                id="IOCON@PIO530@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e98398"
                id="IOCON@PIO530@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e98468"
                id="IOCON@PIO530@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e98514"
                id="IOCON@PIO530@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e98560"
                id="IOCON@PIO530@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e98607"
                id="IOCON@PIO530@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e98653"
                id="IOCON@PIO530@OD"
                offset="[11]"/>
      </register>
      <register description="Digital I/O control for port 5 pins PIO5_31" format="hex0x"
                id="IOCON@PIO531"
                offset="0x2fc"
                size="4">
         <field description="Selects pin function." format="enum" enum="d1e98728"
                id="IOCON@PIO531@FUNC"
                offset="[3:0]"/>
         <field description="Selects function mode (on-chip pull-up/pull-down resistor control)."
                format="enum"
                enum="d1e98847"
                id="IOCON@PIO531@MODE"
                offset="[5:4]"/>
         <field description="Input polarity." format="enum" enum="d1e98917"
                id="IOCON@PIO531@INVERT"
                offset="[7]"/>
         <field description="Select Analog/Digital mode." format="enum" enum="d1e98963"
                id="IOCON@PIO531@DIGIMODE"
                offset="[8]"/>
         <field description="Controls input glitch filter." format="enum" enum="d1e99009"
                id="IOCON@PIO531@FILTEROFF"
                offset="[9]"/>
         <field description="Driver slew rate." format="enum" enum="d1e99056"
                id="IOCON@PIO531@SLEW"
                offset="[10]"/>
         <field description="Controls open-drain mode." format="enum" enum="d1e99102"
                id="IOCON@PIO531@OD"
                offset="[11]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x Group GPIO input interrupt (GINT0/1)"
               id="GINT0"
               size="0x48">
      <register description="GPIO grouped interrupt control register" format="hex0x"
                id="GINT0@CTRL"
                offset="0x0"
                size="4">
         <field description="Group interrupt status. This bit is cleared by writing a one to it. Writing zero has no effect."
                format="enum"
                enum="d1e99219"
                id="GINT0@CTRL@INT"
                offset="[0]"/>
         <field description="Combine enabled inputs for group interrupt" format="enum"
                enum="d1e99265"
                id="GINT0@CTRL@COMB"
                offset="[1]"/>
         <field description="Group interrupt trigger" format="enum" enum="d1e99311"
                id="GINT0@CTRL@TRIG"
                offset="[2]"/>
      </register>
      <register description="GPIO grouped interrupt port 0 polarity register" format="hex0x"
                id="GINT0@PORT-POL0"
                offset="0x20"
                size="4">
         <field description="Configure pin polarity of port m pins for group interrupt. Bit n corresponds to pin PIOm_n of port m. 0 = the pin is active LOW. If the level on this pin is LOW, the pin contributes to the group interrupt. 1 = the pin is active HIGH. If the level on this pin is HIGH, the pin contributes to the group interrupt."
                format="hex0x"
                id="GINT0@PORT-POL0@POL"
                offset="[31:0]"/>
      </register>
      <register description="GPIO grouped interrupt port 0 polarity register" format="hex0x"
                id="GINT0@PORT-POL1"
                offset="0x24"
                size="4">
         <field description="Configure pin polarity of port m pins for group interrupt. Bit n corresponds to pin PIOm_n of port m. 0 = the pin is active LOW. If the level on this pin is LOW, the pin contributes to the group interrupt. 1 = the pin is active HIGH. If the level on this pin is HIGH, the pin contributes to the group interrupt."
                format="hex0x"
                id="GINT0@PORT-POL1@POL"
                offset="[31:0]"/>
      </register>
      <register description="GPIO grouped interrupt port 0 enable register" format="hex0x"
                id="GINT0@PORT-ENA0"
                offset="0x40"
                size="4">
         <field description="Enable port 0 pin for group interrupt. Bit n corresponds to pin Pm_n of port m. 0 = the port 0 pin is disabled and does not contribute to the grouped interrupt. 1 = the port 0 pin is enabled and contributes to the grouped interrupt."
                format="hex0x"
                id="GINT0@PORT-ENA0@ENA"
                offset="[31:0]"/>
      </register>
      <register description="GPIO grouped interrupt port 0 enable register" format="hex0x"
                id="GINT0@PORT-ENA1"
                offset="0x44"
                size="4">
         <field description="Enable port 0 pin for group interrupt. Bit n corresponds to pin Pm_n of port m. 0 = the port 0 pin is disabled and does not contribute to the grouped interrupt. 1 = the port 0 pin is enabled and contributes to the grouped interrupt."
                format="hex0x"
                id="GINT0@PORT-ENA1@ENA"
                offset="[31:0]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x Group GPIO input interrupt (GINT0/1)"
               id="GINT1"
               size="0x48">
      <register description="GPIO grouped interrupt control register" format="hex0x"
                id="GINT0@CTRL"
                offset="0x0"
                size="4">
         <field description="Group interrupt status. This bit is cleared by writing a one to it. Writing zero has no effect."
                format="enum"
                enum="d1e99219"
                id="GINT0@CTRL@INT"
                offset="[0]"/>
         <field description="Combine enabled inputs for group interrupt" format="enum"
                enum="d1e99265"
                id="GINT0@CTRL@COMB"
                offset="[1]"/>
         <field description="Group interrupt trigger" format="enum" enum="d1e99311"
                id="GINT0@CTRL@TRIG"
                offset="[2]"/>
      </register>
      <register description="GPIO grouped interrupt port 0 polarity register" format="hex0x"
                id="GINT0@PORT-POL0"
                offset="0x20"
                size="4">
         <field description="Configure pin polarity of port m pins for group interrupt. Bit n corresponds to pin PIOm_n of port m. 0 = the pin is active LOW. If the level on this pin is LOW, the pin contributes to the group interrupt. 1 = the pin is active HIGH. If the level on this pin is HIGH, the pin contributes to the group interrupt."
                format="hex0x"
                id="GINT0@PORT-POL0@POL"
                offset="[31:0]"/>
      </register>
      <register description="GPIO grouped interrupt port 0 polarity register" format="hex0x"
                id="GINT0@PORT-POL1"
                offset="0x24"
                size="4">
         <field description="Configure pin polarity of port m pins for group interrupt. Bit n corresponds to pin PIOm_n of port m. 0 = the pin is active LOW. If the level on this pin is LOW, the pin contributes to the group interrupt. 1 = the pin is active HIGH. If the level on this pin is HIGH, the pin contributes to the group interrupt."
                format="hex0x"
                id="GINT0@PORT-POL1@POL"
                offset="[31:0]"/>
      </register>
      <register description="GPIO grouped interrupt port 0 enable register" format="hex0x"
                id="GINT0@PORT-ENA0"
                offset="0x40"
                size="4">
         <field description="Enable port 0 pin for group interrupt. Bit n corresponds to pin Pm_n of port m. 0 = the port 0 pin is disabled and does not contribute to the grouped interrupt. 1 = the port 0 pin is enabled and contributes to the grouped interrupt."
                format="hex0x"
                id="GINT0@PORT-ENA0@ENA"
                offset="[31:0]"/>
      </register>
      <register description="GPIO grouped interrupt port 0 enable register" format="hex0x"
                id="GINT0@PORT-ENA1"
                offset="0x44"
                size="4">
         <field description="Enable port 0 pin for group interrupt. Bit n corresponds to pin Pm_n of port m. 0 = the port 0 pin is disabled and does not contribute to the grouped interrupt. 1 = the port 0 pin is enabled and contributes to the grouped interrupt."
                format="hex0x"
                id="GINT0@PORT-ENA1@ENA"
                offset="[31:0]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x Pin interrupt and pattern match (PINT)"
               id="PINT"
               size="0x34">
      <register description="Pin Interrupt Mode register" format="hex0x" id="PINT@ISEL"
                offset="0x0"
                size="4">
         <field description="Selects the interrupt mode for each pin interrupt. Bit n configures the pin interrupt selected in PINTSELn. 0 = Edge sensitive 1 = Level sensitive"
                format="hex0x"
                id="PINT@ISEL@PMODE"
                offset="[7:0]"/>
      </register>
      <register description="Pin interrupt level or rising edge interrupt enable register"
                format="hex0x"
                id="PINT@IENR"
                offset="0x4"
                size="4">
         <field description="Enables the rising edge or level interrupt for each pin interrupt. Bit n configures the pin interrupt selected in PINTSELn. 0 = Disable rising edge or level interrupt. 1 = Enable rising edge or level interrupt."
                format="hex0x"
                id="PINT@IENR@ENRL"
                offset="[7:0]"/>
      </register>
      <register description="Pin interrupt level or rising edge interrupt set register"
                format="hex0x"
                id="PINT@SIENR"
                offset="0x8"
                writeOnly="true"
                size="4">
         <field description="Ones written to this address set bits in the IENR, thus enabling interrupts. Bit n sets bit n in the IENR register. 0 = No operation. 1 = Enable rising edge or level interrupt."
                format="hex0x"
                id="PINT@SIENR@SETENRL"
                offset="[7:0]"/>
      </register>
      <register description="Pin interrupt level (rising edge interrupt) clear register"
                format="hex0x"
                id="PINT@CIENR"
                offset="0xc"
                writeOnly="true"
                size="4">
         <field description="Ones written to this address clear bits in the IENR, thus disabling the interrupts. Bit n clears bit n in the IENR register. 0 = No operation. 1 = Disable rising edge or level interrupt."
                format="hex0x"
                id="PINT@CIENR@CENRL"
                offset="[7:0]"/>
      </register>
      <register description="Pin interrupt active level or falling edge interrupt enable register"
                format="hex0x"
                id="PINT@IENF"
                offset="0x10"
                size="4">
         <field description="Enables the falling edge or configures the active level interrupt for each pin interrupt. Bit n configures the pin interrupt selected in PINTSELn. 0 = Disable falling edge interrupt or set active interrupt level LOW. 1 = Enable falling edge interrupt enabled or set active interrupt level HIGH."
                format="hex0x"
                id="PINT@IENF@ENAF"
                offset="[7:0]"/>
      </register>
      <register description="Pin interrupt active level or falling edge interrupt set register"
                format="hex0x"
                id="PINT@SIENF"
                offset="0x14"
                writeOnly="true"
                size="4">
         <field description="Ones written to this address set bits in the IENF, thus enabling interrupts. Bit n sets bit n in the IENF register. 0 = No operation. 1 = Select HIGH-active interrupt or enable falling edge interrupt."
                format="hex0x"
                id="PINT@SIENF@SETENAF"
                offset="[7:0]"/>
      </register>
      <register description="Pin interrupt active level or falling edge interrupt clear register"
                format="hex0x"
                id="PINT@CIENF"
                offset="0x18"
                writeOnly="true"
                size="4">
         <field description="Ones written to this address clears bits in the IENF, thus disabling interrupts. Bit n clears bit n in the IENF register. 0 = No operation. 1 = LOW-active interrupt selected or falling edge interrupt disabled."
                format="hex0x"
                id="PINT@CIENF@CENAF"
                offset="[7:0]"/>
      </register>
      <register description="Pin interrupt rising edge register" format="hex0x" id="PINT@RISE"
                offset="0x1c"
                size="4">
         <field description="Rising edge detect. Bit n detects the rising edge of the pin selected in PINTSELn. Read 0: No rising edge has been detected on this pin since Reset or the last time a one was written to this bit. Write 0: no operation. Read 1: a rising edge has been detected since Reset or the last time a one was written to this bit. Write 1: clear rising edge detection for this pin."
                format="hex0x"
                id="PINT@RISE@RDET"
                offset="[7:0]"/>
      </register>
      <register description="Pin interrupt falling edge register" format="hex0x" id="PINT@FALL"
                offset="0x20"
                size="4">
         <field description="Falling edge detect. Bit n detects the falling edge of the pin selected in PINTSELn. Read 0: No falling edge has been detected on this pin since Reset or the last time a one was written to this bit. Write 0: no operation. Read 1: a falling edge has been detected since Reset or the last time a one was written to this bit. Write 1: clear falling edge detection for this pin."
                format="hex0x"
                id="PINT@FALL@FDET"
                offset="[7:0]"/>
      </register>
      <register description="Pin interrupt status register" format="hex0x" id="PINT@IST"
                offset="0x24"
                size="4">
         <field description="Pin interrupt status. Bit n returns the status, clears the edge interrupt, or inverts the active level of the pin selected in PINTSELn. Read 0: interrupt is not being requested for this interrupt pin. Write 0: no operation. Read 1: interrupt is being requested for this interrupt pin. Write 1 (edge-sensitive): clear rising- and falling-edge detection for this pin. Write 1 (level-sensitive): switch the active level for this pin (in the IENF register)."
                format="hex0x"
                id="PINT@IST@PSTAT"
                offset="[7:0]"/>
      </register>
      <register description="Pattern match interrupt control register" format="hex0x"
                id="PINT@PMCTRL"
                offset="0x28"
                size="4">
         <field description="Specifies whether the 8 pin interrupts are controlled by the pin interrupt function or by the pattern match function."
                format="enum"
                enum="d1e100091"
                id="PINT@PMCTRL@SEL-PMATCH"
                offset="[0]"/>
         <field description="Enables the RXEV output to the CPU and/or to a GPIO output when the specified boolean expression evaluates to true."
                format="enum"
                enum="d1e100137"
                id="PINT@PMCTRL@ENA-RXEV"
                offset="[1]"/>
         <field description="This field displays the current state of pattern matches. A 1 in any bit of this field indicates that the corresponding product term is matched by the current state of the appropriate inputs."
                format="hex0x"
                id="PINT@PMCTRL@PMAT"
                offset="[31:24]"/>
      </register>
      <register description="Pattern match interrupt bit-slice source register" format="hex0x"
                id="PINT@PMSRC"
                offset="0x2c"
                size="4">
         <field description="Selects the input source for bit slice 0" format="enum"
                enum="d1e100230"
                id="PINT@PMSRC@SRC0"
                offset="[10:8]"/>
         <field description="Selects the input source for bit slice 1" format="enum"
                enum="d1e100349"
                id="PINT@PMSRC@SRC1"
                offset="[13:11]"/>
         <field description="Selects the input source for bit slice 2" format="enum"
                enum="d1e100468"
                id="PINT@PMSRC@SRC2"
                offset="[16:14]"/>
         <field description="Selects the input source for bit slice 3" format="enum"
                enum="d1e100587"
                id="PINT@PMSRC@SRC3"
                offset="[19:17]"/>
         <field description="Selects the input source for bit slice 4" format="enum"
                enum="d1e100706"
                id="PINT@PMSRC@SRC4"
                offset="[22:20]"/>
         <field description="Selects the input source for bit slice 5" format="enum"
                enum="d1e100826"
                id="PINT@PMSRC@SRC5"
                offset="[25:23]"/>
         <field description="Selects the input source for bit slice 6" format="enum"
                enum="d1e100945"
                id="PINT@PMSRC@SRC6"
                offset="[28:26]"/>
         <field description="Selects the input source for bit slice 7" format="enum"
                enum="d1e101064"
                id="PINT@PMSRC@SRC7"
                offset="[31:29]"/>
      </register>
      <register description="Pattern match interrupt bit slice configuration register"
                format="hex0x"
                id="PINT@PMCFG"
                offset="0x30"
                size="4">
         <field description="Determines whether slice 0 is an endpoint." format="enum"
                enum="d1e101211"
                id="PINT@PMCFG@PROD-ENDPTS0"
                offset="[0]"/>
         <field description="Determines whether slice 1 is an endpoint." format="enum"
                enum="d1e101257"
                id="PINT@PMCFG@PROD-ENDPTS1"
                offset="[1]"/>
         <field description="Determines whether slice 2 is an endpoint." format="enum"
                enum="d1e101303"
                id="PINT@PMCFG@PROD-ENDPTS2"
                offset="[2]"/>
         <field description="Determines whether slice 3 is an endpoint." format="enum"
                enum="d1e101349"
                id="PINT@PMCFG@PROD-ENDPTS3"
                offset="[3]"/>
         <field description="Determines whether slice 4 is an endpoint." format="enum"
                enum="d1e101395"
                id="PINT@PMCFG@PROD-ENDPTS4"
                offset="[4]"/>
         <field description="Determines whether slice 5 is an endpoint." format="enum"
                enum="d1e101442"
                id="PINT@PMCFG@PROD-ENDPTS5"
                offset="[5]"/>
         <field description="Determines whether slice 6 is an endpoint." format="enum"
                enum="d1e101488"
                id="PINT@PMCFG@PROD-ENDPTS6"
                offset="[6]"/>
         <field description="Specifies the match contribution condition for bit slice 0."
                format="enum"
                enum="d1e101534"
                id="PINT@PMCFG@CFG0"
                offset="[10:8]"/>
         <field description="Specifies the match contribution condition for bit slice 1."
                format="enum"
                enum="d1e101653"
                id="PINT@PMCFG@CFG1"
                offset="[13:11]"/>
         <field description="Specifies the match contribution condition for bit slice 2."
                format="enum"
                enum="d1e101772"
                id="PINT@PMCFG@CFG2"
                offset="[16:14]"/>
         <field description="Specifies the match contribution condition for bit slice 3."
                format="enum"
                enum="d1e101891"
                id="PINT@PMCFG@CFG3"
                offset="[19:17]"/>
         <field description="Specifies the match contribution condition for bit slice 4."
                format="enum"
                enum="d1e102011"
                id="PINT@PMCFG@CFG4"
                offset="[22:20]"/>
         <field description="Specifies the match contribution condition for bit slice 5."
                format="enum"
                enum="d1e102130"
                id="PINT@PMCFG@CFG5"
                offset="[25:23]"/>
         <field description="Specifies the match contribution condition for bit slice 6."
                format="enum"
                enum="d1e102249"
                id="PINT@PMCFG@CFG6"
                offset="[28:26]"/>
         <field description="Specifies the match contribution condition for bit slice 7."
                format="enum"
                enum="d1e102368"
                id="PINT@PMCFG@CFG7"
                offset="[31:29]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x Input multiplexing (INPUT MUX)"
               id="INPUTMUX"
               size="0x188">
      <register description="Trigger select register for DMA channel" format="hex0x"
                id="INPUTMUX@SCT0-INMUX0"
                offset="0x0"
                size="4">
         <field description="Input number to SCT0 inputs 0 to 6.." format="hex0x"
                id="INPUTMUX@SCT0-INMUX0@INP-N"
                offset="[4:0]"/>
      </register>
      <register description="Trigger select register for DMA channel" format="hex0x"
                id="INPUTMUX@SCT0-INMUX1"
                offset="0x4"
                size="4">
         <field description="Input number to SCT0 inputs 0 to 6.." format="hex0x"
                id="INPUTMUX@SCT0-INMUX1@INP-N"
                offset="[4:0]"/>
      </register>
      <register description="Trigger select register for DMA channel" format="hex0x"
                id="INPUTMUX@SCT0-INMUX2"
                offset="0x8"
                size="4">
         <field description="Input number to SCT0 inputs 0 to 6.." format="hex0x"
                id="INPUTMUX@SCT0-INMUX2@INP-N"
                offset="[4:0]"/>
      </register>
      <register description="Trigger select register for DMA channel" format="hex0x"
                id="INPUTMUX@SCT0-INMUX3"
                offset="0xc"
                size="4">
         <field description="Input number to SCT0 inputs 0 to 6.." format="hex0x"
                id="INPUTMUX@SCT0-INMUX3@INP-N"
                offset="[4:0]"/>
      </register>
      <register description="Trigger select register for DMA channel" format="hex0x"
                id="INPUTMUX@SCT0-INMUX4"
                offset="0x10"
                size="4">
         <field description="Input number to SCT0 inputs 0 to 6.." format="hex0x"
                id="INPUTMUX@SCT0-INMUX4@INP-N"
                offset="[4:0]"/>
      </register>
      <register description="Trigger select register for DMA channel" format="hex0x"
                id="INPUTMUX@SCT0-INMUX5"
                offset="0x14"
                size="4">
         <field description="Input number to SCT0 inputs 0 to 6.." format="hex0x"
                id="INPUTMUX@SCT0-INMUX5@INP-N"
                offset="[4:0]"/>
      </register>
      <register description="Trigger select register for DMA channel" format="hex0x"
                id="INPUTMUX@SCT0-INMUX6"
                offset="0x18"
                size="4">
         <field description="Input number to SCT0 inputs 0 to 6.." format="hex0x"
                id="INPUTMUX@SCT0-INMUX6@INP-N"
                offset="[4:0]"/>
      </register>
      <register description="Pin interrupt select register" format="hex0x"
                id="INPUTMUX@PINTSEL0"
                offset="0xc0"
                size="4">
         <field description="Pin number select for pin interrupt or pattern match engine input. (PIO0_0 to PIO1_31 correspond to numbers 0 to 63)."
                format="hex0x"
                id="INPUTMUX@PINTSEL0@INTPIN"
                offset="[7:0]"/>
      </register>
      <register description="Pin interrupt select register" format="hex0x"
                id="INPUTMUX@PINTSEL1"
                offset="0xc4"
                size="4">
         <field description="Pin number select for pin interrupt or pattern match engine input. (PIO0_0 to PIO1_31 correspond to numbers 0 to 63)."
                format="hex0x"
                id="INPUTMUX@PINTSEL1@INTPIN"
                offset="[7:0]"/>
      </register>
      <register description="Pin interrupt select register" format="hex0x"
                id="INPUTMUX@PINTSEL2"
                offset="0xc8"
                size="4">
         <field description="Pin number select for pin interrupt or pattern match engine input. (PIO0_0 to PIO1_31 correspond to numbers 0 to 63)."
                format="hex0x"
                id="INPUTMUX@PINTSEL2@INTPIN"
                offset="[7:0]"/>
      </register>
      <register description="Pin interrupt select register" format="hex0x"
                id="INPUTMUX@PINTSEL3"
                offset="0xcc"
                size="4">
         <field description="Pin number select for pin interrupt or pattern match engine input. (PIO0_0 to PIO1_31 correspond to numbers 0 to 63)."
                format="hex0x"
                id="INPUTMUX@PINTSEL3@INTPIN"
                offset="[7:0]"/>
      </register>
      <register description="Pin interrupt select register" format="hex0x"
                id="INPUTMUX@PINTSEL4"
                offset="0xd0"
                size="4">
         <field description="Pin number select for pin interrupt or pattern match engine input. (PIO0_0 to PIO1_31 correspond to numbers 0 to 63)."
                format="hex0x"
                id="INPUTMUX@PINTSEL4@INTPIN"
                offset="[7:0]"/>
      </register>
      <register description="Pin interrupt select register" format="hex0x"
                id="INPUTMUX@PINTSEL5"
                offset="0xd4"
                size="4">
         <field description="Pin number select for pin interrupt or pattern match engine input. (PIO0_0 to PIO1_31 correspond to numbers 0 to 63)."
                format="hex0x"
                id="INPUTMUX@PINTSEL5@INTPIN"
                offset="[7:0]"/>
      </register>
      <register description="Pin interrupt select register" format="hex0x"
                id="INPUTMUX@PINTSEL6"
                offset="0xd8"
                size="4">
         <field description="Pin number select for pin interrupt or pattern match engine input. (PIO0_0 to PIO1_31 correspond to numbers 0 to 63)."
                format="hex0x"
                id="INPUTMUX@PINTSEL6@INTPIN"
                offset="[7:0]"/>
      </register>
      <register description="Pin interrupt select register" format="hex0x"
                id="INPUTMUX@PINTSEL7"
                offset="0xdc"
                size="4">
         <field description="Pin number select for pin interrupt or pattern match engine input. (PIO0_0 to PIO1_31 correspond to numbers 0 to 63)."
                format="hex0x"
                id="INPUTMUX@PINTSEL7@INTPIN"
                offset="[7:0]"/>
      </register>
      <register description="Trigger select register for DMA channel" format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX0"
                offset="0xe0"
                size="4">
         <field description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3"
                format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX0@INP"
                offset="[4:0]"/>
      </register>
      <register description="Trigger select register for DMA channel" format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX1"
                offset="0xe4"
                size="4">
         <field description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3"
                format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX1@INP"
                offset="[4:0]"/>
      </register>
      <register description="Trigger select register for DMA channel" format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX2"
                offset="0xe8"
                size="4">
         <field description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3"
                format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX2@INP"
                offset="[4:0]"/>
      </register>
      <register description="Trigger select register for DMA channel" format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX3"
                offset="0xec"
                size="4">
         <field description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3"
                format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX3@INP"
                offset="[4:0]"/>
      </register>
      <register description="Trigger select register for DMA channel" format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX4"
                offset="0xf0"
                size="4">
         <field description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3"
                format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX4@INP"
                offset="[4:0]"/>
      </register>
      <register description="Trigger select register for DMA channel" format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX5"
                offset="0xf4"
                size="4">
         <field description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3"
                format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX5@INP"
                offset="[4:0]"/>
      </register>
      <register description="Trigger select register for DMA channel" format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX6"
                offset="0xf8"
                size="4">
         <field description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3"
                format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX6@INP"
                offset="[4:0]"/>
      </register>
      <register description="Trigger select register for DMA channel" format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX7"
                offset="0xfc"
                size="4">
         <field description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3"
                format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX7@INP"
                offset="[4:0]"/>
      </register>
      <register description="Trigger select register for DMA channel" format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX8"
                offset="0x100"
                size="4">
         <field description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3"
                format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX8@INP"
                offset="[4:0]"/>
      </register>
      <register description="Trigger select register for DMA channel" format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX9"
                offset="0x104"
                size="4">
         <field description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3"
                format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX9@INP"
                offset="[4:0]"/>
      </register>
      <register description="Trigger select register for DMA channel" format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX10"
                offset="0x108"
                size="4">
         <field description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3"
                format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX10@INP"
                offset="[4:0]"/>
      </register>
      <register description="Trigger select register for DMA channel" format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX11"
                offset="0x10c"
                size="4">
         <field description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3"
                format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX11@INP"
                offset="[4:0]"/>
      </register>
      <register description="Trigger select register for DMA channel" format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX12"
                offset="0x110"
                size="4">
         <field description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3"
                format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX12@INP"
                offset="[4:0]"/>
      </register>
      <register description="Trigger select register for DMA channel" format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX13"
                offset="0x114"
                size="4">
         <field description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3"
                format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX13@INP"
                offset="[4:0]"/>
      </register>
      <register description="Trigger select register for DMA channel" format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX14"
                offset="0x118"
                size="4">
         <field description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3"
                format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX14@INP"
                offset="[4:0]"/>
      </register>
      <register description="Trigger select register for DMA channel" format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX15"
                offset="0x11c"
                size="4">
         <field description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3"
                format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX15@INP"
                offset="[4:0]"/>
      </register>
      <register description="Trigger select register for DMA channel" format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX16"
                offset="0x120"
                size="4">
         <field description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3"
                format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX16@INP"
                offset="[4:0]"/>
      </register>
      <register description="Trigger select register for DMA channel" format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX17"
                offset="0x124"
                size="4">
         <field description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3"
                format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX17@INP"
                offset="[4:0]"/>
      </register>
      <register description="Trigger select register for DMA channel" format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX18"
                offset="0x128"
                size="4">
         <field description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3"
                format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX18@INP"
                offset="[4:0]"/>
      </register>
      <register description="Trigger select register for DMA channel" format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX19"
                offset="0x12c"
                size="4">
         <field description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3"
                format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX19@INP"
                offset="[4:0]"/>
      </register>
      <register description="Trigger select register for DMA channel" format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX20"
                offset="0x130"
                size="4">
         <field description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3"
                format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX20@INP"
                offset="[4:0]"/>
      </register>
      <register description="Trigger select register for DMA channel" format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX21"
                offset="0x134"
                size="4">
         <field description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3"
                format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX21@INP"
                offset="[4:0]"/>
      </register>
      <register description="Trigger select register for DMA channel" format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX22"
                offset="0x138"
                size="4">
         <field description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3"
                format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX22@INP"
                offset="[4:0]"/>
      </register>
      <register description="Trigger select register for DMA channel" format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX23"
                offset="0x13c"
                size="4">
         <field description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3"
                format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX23@INP"
                offset="[4:0]"/>
      </register>
      <register description="Trigger select register for DMA channel" format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX24"
                offset="0x140"
                size="4">
         <field description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3"
                format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX24@INP"
                offset="[4:0]"/>
      </register>
      <register description="Trigger select register for DMA channel" format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX25"
                offset="0x144"
                size="4">
         <field description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3"
                format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX25@INP"
                offset="[4:0]"/>
      </register>
      <register description="Trigger select register for DMA channel" format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX26"
                offset="0x148"
                size="4">
         <field description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3"
                format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX26@INP"
                offset="[4:0]"/>
      </register>
      <register description="Trigger select register for DMA channel" format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX27"
                offset="0x14c"
                size="4">
         <field description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3"
                format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX27@INP"
                offset="[4:0]"/>
      </register>
      <register description="Trigger select register for DMA channel" format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX28"
                offset="0x150"
                size="4">
         <field description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3"
                format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX28@INP"
                offset="[4:0]"/>
      </register>
      <register description="Trigger select register for DMA channel" format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX29"
                offset="0x154"
                size="4">
         <field description="Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3"
                format="hex0x"
                id="INPUTMUX@DMA-ITRIG-INMUX29@INP"
                offset="[4:0]"/>
      </register>
      <register description="DMA output trigger selection to become DMA trigger" format="hex0x"
                id="INPUTMUX@DMA-OTRIG-INMUX0"
                offset="0x160"
                size="4">
         <field description="DMA trigger output number (decimal value) for DMA channel n (n = 0 to 19)."
                format="hex0x"
                id="INPUTMUX@DMA-OTRIG-INMUX0@INP"
                offset="[4:0]"/>
      </register>
      <register description="DMA output trigger selection to become DMA trigger" format="hex0x"
                id="INPUTMUX@DMA-OTRIG-INMUX1"
                offset="0x164"
                size="4">
         <field description="DMA trigger output number (decimal value) for DMA channel n (n = 0 to 19)."
                format="hex0x"
                id="INPUTMUX@DMA-OTRIG-INMUX1@INP"
                offset="[4:0]"/>
      </register>
      <register description="DMA output trigger selection to become DMA trigger" format="hex0x"
                id="INPUTMUX@DMA-OTRIG-INMUX2"
                offset="0x168"
                size="4">
         <field description="DMA trigger output number (decimal value) for DMA channel n (n = 0 to 19)."
                format="hex0x"
                id="INPUTMUX@DMA-OTRIG-INMUX2@INP"
                offset="[4:0]"/>
      </register>
      <register description="DMA output trigger selection to become DMA trigger" format="hex0x"
                id="INPUTMUX@DMA-OTRIG-INMUX3"
                offset="0x16c"
                size="4">
         <field description="DMA trigger output number (decimal value) for DMA channel n (n = 0 to 19)."
                format="hex0x"
                id="INPUTMUX@DMA-OTRIG-INMUX3@INP"
                offset="[4:0]"/>
      </register>
      <register description="Selection for frequency measurement reference clock"
                format="hex0x"
                id="INPUTMUX@FREQMEAS-REF"
                offset="0x180"
                size="4">
         <field description="Clock source number (decimal value) for frequency measure function target clock: 0 = CLK_IN 1 = FRO 12 MHz oscillator 2 = Watchdog oscillator 3 = 32 kHz RTC oscillator 4 = Main clock (see Section 4.5.23) 5 = PIO0_4 6 = PIO0_20 7 = PIO0_24 8 = PIO1_4"
                format="hex0x"
                id="INPUTMUX@FREQMEAS-REF@CLKIN"
                offset="[4:0]"/>
      </register>
      <register description="Selection for frequency measurement target clock" format="hex0x"
                id="INPUTMUX@FREQMEAS-TARGET"
                offset="0x184"
                size="4">
         <field description="Clock source number (decimal value) for frequency measure function target clock: 0 = CLK_IN 1 = FRO 12 MHz oscillator 2 = Watchdog oscillator 3 = 32 kHz RTC oscillator 4 = Main clock (see Section 4.5.23) 5 = PIO0_4 6 = PIO0_20 7 = PIO0_24 8 = PIO1_4"
                format="hex0x"
                id="INPUTMUX@FREQMEAS-TARGET@CLKIN"
                offset="[4:0]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x Standard counter/timers (CTIMER0 to 4)"
               id="CTIMER0"
               size="0x88">
      <register description="Interrupt Register. The IR can be written to clear interrupts. The IR can be read to identify which of eight possible interrupt sources are pending."
                format="hex0x"
                id="CTIMER0@IR"
                offset="0x0"
                size="4">
         <field description="Interrupt flag for match channel 0." format="hex0x"
                id="CTIMER0@IR@MR0INT"
                offset="[0]"/>
         <field description="Interrupt flag for match channel 1." format="hex0x"
                id="CTIMER0@IR@MR1INT"
                offset="[1]"/>
         <field description="Interrupt flag for match channel 2." format="hex0x"
                id="CTIMER0@IR@MR2INT"
                offset="[2]"/>
         <field description="Interrupt flag for match channel 3." format="hex0x"
                id="CTIMER0@IR@MR3INT"
                offset="[3]"/>
         <field description="Interrupt flag for capture channel 0 event." format="hex0x"
                id="CTIMER0@IR@CR0INT"
                offset="[4]"/>
         <field description="Interrupt flag for capture channel 1 event." format="hex0x"
                id="CTIMER0@IR@CR1INT"
                offset="[5]"/>
         <field description="Interrupt flag for capture channel 2 event." format="hex0x"
                id="CTIMER0@IR@CR2INT"
                offset="[6]"/>
         <field description="Interrupt flag for capture channel 3 event." format="hex0x"
                id="CTIMER0@IR@CR3INT"
                offset="[7]"/>
      </register>
      <register description="Timer Control Register. The TCR is used to control the Timer Counter functions. The Timer Counter can be disabled or reset through the TCR."
                format="hex0x"
                id="CTIMER0@TCR"
                offset="0x4"
                size="4">
         <field description="Counter enable." format="enum" enum="d1e103064"
                id="CTIMER0@TCR@CEN"
                offset="[0]"/>
         <field description="Counter reset." format="enum" enum="d1e103110"
                id="CTIMER0@TCR@CRST"
                offset="[1]"/>
      </register>
      <register description="Timer Counter" format="hex0x" id="CTIMER0@TC" offset="0x8"
                size="4">
         <field description="Timer counter value." format="hex0x" id="CTIMER0@TC@TCVAL"
                offset="[31:0]"/>
      </register>
      <register description="Prescale Register" format="hex0x" id="CTIMER0@PR" offset="0xc"
                size="4">
         <field description="Prescale counter value." format="hex0x" id="CTIMER0@PR@PRVAL"
                offset="[31:0]"/>
      </register>
      <register description="Prescale Counter" format="hex0x" id="CTIMER0@PC" offset="0x10"
                size="4">
         <field description="Prescale counter value." format="hex0x" id="CTIMER0@PC@PCVAL"
                offset="[31:0]"/>
      </register>
      <register description="Match Control Register" format="hex0x" id="CTIMER0@MCR"
                offset="0x14"
                size="4">
         <field description="Interrupt on MR0: an interrupt is generated when MR0 matches the value in the TC."
                format="hex0x"
                id="CTIMER0@MCR@MR0I"
                offset="[0]"/>
         <field description="Reset on MR0: the TC will be reset if MR0 matches it."
                format="hex0x"
                id="CTIMER0@MCR@MR0R"
                offset="[1]"/>
         <field description="Stop on MR0: the TC and PC will be stopped and TCR[0] will be set to 0 if MR0 matches the TC."
                format="hex0x"
                id="CTIMER0@MCR@MR0S"
                offset="[2]"/>
         <field description="Interrupt on MR1: an interrupt is generated when MR1 matches the value in the TC."
                format="hex0x"
                id="CTIMER0@MCR@MR1I"
                offset="[3]"/>
         <field description="Reset on MR1: the TC will be reset if MR1 matches it."
                format="hex0x"
                id="CTIMER0@MCR@MR1R"
                offset="[4]"/>
         <field description="Stop on MR1: the TC and PC will be stopped and TCR[0] will be set to 0 if MR1 matches the TC."
                format="hex0x"
                id="CTIMER0@MCR@MR1S"
                offset="[5]"/>
         <field description="Interrupt on MR2: an interrupt is generated when MR2 matches the value in the TC."
                format="hex0x"
                id="CTIMER0@MCR@MR2I"
                offset="[6]"/>
         <field description="Reset on MR2: the TC will be reset if MR2 matches it."
                format="hex0x"
                id="CTIMER0@MCR@MR2R"
                offset="[7]"/>
         <field description="Stop on MR2: the TC and PC will be stopped and TCR[0] will be set to 0 if MR2 matches the TC."
                format="hex0x"
                id="CTIMER0@MCR@MR2S"
                offset="[8]"/>
         <field description="Interrupt on MR3: an interrupt is generated when MR3 matches the value in the TC."
                format="hex0x"
                id="CTIMER0@MCR@MR3I"
                offset="[9]"/>
         <field description="Reset on MR3: the TC will be reset if MR3 matches it."
                format="hex0x"
                id="CTIMER0@MCR@MR3R"
                offset="[10]"/>
         <field description="Stop on MR3: the TC and PC will be stopped and TCR[0] will be set to 0 if MR3 matches the TC."
                format="hex0x"
                id="CTIMER0@MCR@MR3S"
                offset="[11]"/>
         <field description="Reload MR0 with the contents of the Match 0 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR)."
                format="hex0x"
                id="CTIMER0@MCR@MR0RL"
                offset="[24]"/>
         <field description="Reload MR1 with the contents of the Match 1 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR)."
                format="hex0x"
                id="CTIMER0@MCR@MR1RL"
                offset="[25]"/>
         <field description="Reload MR2 with the contents of the Match 2 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR)."
                format="hex0x"
                id="CTIMER0@MCR@MR2RL"
                offset="[26]"/>
         <field description="Reload MR3 with the contents of the Match 3 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR)."
                format="hex0x"
                id="CTIMER0@MCR@MR3RL"
                offset="[27]"/>
      </register>
      <register description="Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC."
                format="hex0x"
                id="CTIMER0@MR0"
                offset="0x18"
                size="4">
         <field description="Timer counter match value." format="hex0x" id="CTIMER0@MR0@MATCH"
                offset="[31:0]"/>
      </register>
      <register description="Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC."
                format="hex0x"
                id="CTIMER0@MR1"
                offset="0x1c"
                size="4">
         <field description="Timer counter match value." format="hex0x" id="CTIMER0@MR1@MATCH"
                offset="[31:0]"/>
      </register>
      <register description="Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC."
                format="hex0x"
                id="CTIMER0@MR2"
                offset="0x20"
                size="4">
         <field description="Timer counter match value." format="hex0x" id="CTIMER0@MR2@MATCH"
                offset="[31:0]"/>
      </register>
      <register description="Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC."
                format="hex0x"
                id="CTIMER0@MR3"
                offset="0x24"
                size="4">
         <field description="Timer counter match value." format="hex0x" id="CTIMER0@MR3@MATCH"
                offset="[31:0]"/>
      </register>
      <register description="Capture Control Register. The CCR controls which edges of the capture inputs are used to load the Capture Registers and whether or not an interrupt is generated when a capture takes place."
                format="hex0x"
                id="CTIMER0@CCR"
                offset="0x28"
                size="4">
         <field description="Rising edge of capture channel 0: a sequence of 0 then 1 causes CR0 to be loaded with the contents of TC. 0 = disabled. 1 = enabled."
                format="hex0x"
                id="CTIMER0@CCR@CAP0RE"
                offset="[0]"/>
         <field description="Falling edge of capture channel 0: a sequence of 1 then 0 causes CR0 to be loaded with the contents of TC. 0 = disabled. 1 = enabled."
                format="hex0x"
                id="CTIMER0@CCR@CAP0FE"
                offset="[1]"/>
         <field description="Generate interrupt on channel 0 capture event: a CR0 load generates an interrupt."
                format="hex0x"
                id="CTIMER0@CCR@CAP0I"
                offset="[2]"/>
         <field description="Rising edge of capture channel 1: a sequence of 0 then 1 causes CR1 to be loaded with the contents of TC. 0 = disabled. 1 = enabled."
                format="hex0x"
                id="CTIMER0@CCR@CAP1RE"
                offset="[3]"/>
         <field description="Falling edge of capture channel 1: a sequence of 1 then 0 causes CR1 to be loaded with the contents of TC. 0 = disabled. 1 = enabled."
                format="hex0x"
                id="CTIMER0@CCR@CAP1FE"
                offset="[4]"/>
         <field description="Generate interrupt on channel 1 capture event: a CR1 load generates an interrupt."
                format="hex0x"
                id="CTIMER0@CCR@CAP1I"
                offset="[5]"/>
         <field description="Rising edge of capture channel 2: a sequence of 0 then 1 causes CR2 to be loaded with the contents of TC. 0 = disabled. 1 = enabled."
                format="hex0x"
                id="CTIMER0@CCR@CAP2RE"
                offset="[6]"/>
         <field description="Falling edge of capture channel 2: a sequence of 1 then 0 causes CR2 to be loaded with the contents of TC. 0 = disabled. 1 = enabled."
                format="hex0x"
                id="CTIMER0@CCR@CAP2FE"
                offset="[7]"/>
         <field description="Generate interrupt on channel 2 capture event: a CR2 load generates an interrupt."
                format="hex0x"
                id="CTIMER0@CCR@CAP2I"
                offset="[8]"/>
         <field description="Rising edge of capture channel 3: a sequence of 0 then 1 causes CR3 to be loaded with the contents of TC. 0 = disabled. 1 = enabled."
                format="hex0x"
                id="CTIMER0@CCR@CAP3RE"
                offset="[9]"/>
         <field description="Falling edge of capture channel 3: a sequence of 1 then 0 causes CR3 to be loaded with the contents of TC. 0 = disabled. 1 = enabled."
                format="hex0x"
                id="CTIMER0@CCR@CAP3FE"
                offset="[10]"/>
         <field description="Generate interrupt on channel 3 capture event: a CR3 load generates an interrupt."
                format="hex0x"
                id="CTIMER0@CCR@CAP3I"
                offset="[11]"/>
      </register>
      <register description="Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input."
                format="hex0x"
                id="CTIMER0@CR0"
                offset="0x2c"
                readOnly="true"
                size="4">
         <field description="Timer counter capture value." format="hex0x" id="CTIMER0@CR0@CAP"
                offset="[31:0]"/>
      </register>
      <register description="Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input."
                format="hex0x"
                id="CTIMER0@CR1"
                offset="0x30"
                readOnly="true"
                size="4">
         <field description="Timer counter capture value." format="hex0x" id="CTIMER0@CR1@CAP"
                offset="[31:0]"/>
      </register>
      <register description="Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input."
                format="hex0x"
                id="CTIMER0@CR2"
                offset="0x34"
                readOnly="true"
                size="4">
         <field description="Timer counter capture value." format="hex0x" id="CTIMER0@CR2@CAP"
                offset="[31:0]"/>
      </register>
      <register description="Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input."
                format="hex0x"
                id="CTIMER0@CR3"
                offset="0x38"
                readOnly="true"
                size="4">
         <field description="Timer counter capture value." format="hex0x" id="CTIMER0@CR3@CAP"
                offset="[31:0]"/>
      </register>
      <register description="External Match Register. The EMR controls the match function and the external match pins."
                format="hex0x"
                id="CTIMER0@EMR"
                offset="0x3c"
                size="4">
         <field description="External Match 0. This bit reflects the state of output MAT0, whether or not this output is connected to a pin. When a match occurs between the TC and MR0, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[5:4]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH."
                format="hex0x"
                id="CTIMER0@EMR@EM0"
                offset="[0]"/>
         <field description="External Match 1. This bit reflects the state of output MAT1, whether or not this output is connected to a pin. When a match occurs between the TC and MR1, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[7:6]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH."
                format="hex0x"
                id="CTIMER0@EMR@EM1"
                offset="[1]"/>
         <field description="External Match 2. This bit reflects the state of output MAT2, whether or not this output is connected to a pin. When a match occurs between the TC and MR2, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[9:8]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH."
                format="hex0x"
                id="CTIMER0@EMR@EM2"
                offset="[2]"/>
         <field description="External Match 3. This bit reflects the state of output MAT3, whether or not this output is connected to a pin. When a match occurs between the TC and MR3, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by MR[11:10]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH."
                format="hex0x"
                id="CTIMER0@EMR@EM3"
                offset="[3]"/>
         <field description="External Match Control 0. Determines the functionality of External Match 0."
                format="enum"
                enum="d1e104063"
                id="CTIMER0@EMR@EMC0"
                offset="[5:4]"/>
         <field description="External Match Control 1. Determines the functionality of External Match 1."
                format="enum"
                enum="d1e104134"
                id="CTIMER0@EMR@EMC1"
                offset="[7:6]"/>
         <field description="External Match Control 2. Determines the functionality of External Match 2."
                format="enum"
                enum="d1e104204"
                id="CTIMER0@EMR@EMC2"
                offset="[9:8]"/>
         <field description="External Match Control 3. Determines the functionality of External Match 3."
                format="enum"
                enum="d1e104274"
                id="CTIMER0@EMR@EMC3"
                offset="[11:10]"/>
      </register>
      <register description="Count Control Register. The CTCR selects between Timer and Counter mode, and in Counter mode selects the signal and edge(s) for counting."
                format="hex0x"
                id="CTIMER0@CTCR"
                offset="0x70"
                size="4">
         <field description="Counter/Timer Mode This field selects which rising APB bus clock edges can increment Timer's Prescale Counter (PC), or clear PC and increment Timer Counter (TC). Timer Mode: the TC is incremented when the Prescale Counter matches the Prescale Register."
                format="enum"
                enum="d1e104372"
                id="CTIMER0@CTCR@CTMODE"
                offset="[1:0]"/>
         <field description="Count Input Select When bits 1:0 in this register are not 00, these bits select which CAP pin is sampled for clocking. Note: If Counter mode is selected for a particular CAPn input in the CTCR, the 3 bits for that input in the Capture Control Register (CCR) must be programmed as 000. However, capture and/or interrupt can be selected for the other 3 CAPn inputs in the same timer."
                format="enum"
                enum="d1e104442"
                id="CTIMER0@CTCR@CINSEL"
                offset="[3:2]"/>
         <field description="Setting this bit to 1 enables clearing of the timer and the prescaler when the capture-edge event specified in bits 7:5 occurs."
                format="hex0x"
                id="CTIMER0@CTCR@ENCC"
                offset="[4]"/>
         <field description="Edge select. When bit 4 is 1, these bits select which capture input edge will cause the timer and prescaler to be cleared. These bits have no effect when bit 4 is low. Values 0x2 to 0x3 and 0x6 to 0x7 are reserved."
                format="enum"
                enum="d1e104530"
                id="CTIMER0@CTCR@SELCC"
                offset="[7:5]"/>
      </register>
      <register description="PWM Control Register. The PWMCON enables PWM mode for the external match pins."
                format="hex0x"
                id="CTIMER0@PWMC"
                offset="0x74"
                size="4">
         <field description="PWM mode enable for channel0." format="enum" enum="d1e104654"
                id="CTIMER0@PWMC@PWMEN0"
                offset="[0]"/>
         <field description="PWM mode enable for channel1." format="enum" enum="d1e104700"
                id="CTIMER0@PWMC@PWMEN1"
                offset="[1]"/>
         <field description="PWM mode enable for channel2." format="enum" enum="d1e104746"
                id="CTIMER0@PWMC@PWMEN2"
                offset="[2]"/>
         <field description="PWM mode enable for channel3. Note: It is recommended to use match channel 3 to set the PWM cycle."
                format="enum"
                enum="d1e104792"
                id="CTIMER0@PWMC@PWMEN3"
                offset="[3]"/>
      </register>
      <register description="Match Shadow Register" format="hex0x" id="CTIMER0@MSR0"
                offset="0x78"
                size="4">
         <field description="Timer counter match shadow value." format="hex0x"
                id="CTIMER0@MSR0@SHADOWW"
                offset="[31:0]"/>
      </register>
      <register description="Match Shadow Register" format="hex0x" id="CTIMER0@MSR1"
                offset="0x7c"
                size="4">
         <field description="Timer counter match shadow value." format="hex0x"
                id="CTIMER0@MSR1@SHADOWW"
                offset="[31:0]"/>
      </register>
      <register description="Match Shadow Register" format="hex0x" id="CTIMER0@MSR2"
                offset="0x80"
                size="4">
         <field description="Timer counter match shadow value." format="hex0x"
                id="CTIMER0@MSR2@SHADOWW"
                offset="[31:0]"/>
      </register>
      <register description="Match Shadow Register" format="hex0x" id="CTIMER0@MSR3"
                offset="0x84"
                size="4">
         <field description="Timer counter match shadow value." format="hex0x"
                id="CTIMER0@MSR3@SHADOWW"
                offset="[31:0]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x Standard counter/timers (CTIMER0 to 4)"
               id="CTIMER1"
               size="0x88">
      <register description="Interrupt Register. The IR can be written to clear interrupts. The IR can be read to identify which of eight possible interrupt sources are pending."
                format="hex0x"
                id="CTIMER0@IR"
                offset="0x0"
                size="4">
         <field description="Interrupt flag for match channel 0." format="hex0x"
                id="CTIMER0@IR@MR0INT"
                offset="[0]"/>
         <field description="Interrupt flag for match channel 1." format="hex0x"
                id="CTIMER0@IR@MR1INT"
                offset="[1]"/>
         <field description="Interrupt flag for match channel 2." format="hex0x"
                id="CTIMER0@IR@MR2INT"
                offset="[2]"/>
         <field description="Interrupt flag for match channel 3." format="hex0x"
                id="CTIMER0@IR@MR3INT"
                offset="[3]"/>
         <field description="Interrupt flag for capture channel 0 event." format="hex0x"
                id="CTIMER0@IR@CR0INT"
                offset="[4]"/>
         <field description="Interrupt flag for capture channel 1 event." format="hex0x"
                id="CTIMER0@IR@CR1INT"
                offset="[5]"/>
         <field description="Interrupt flag for capture channel 2 event." format="hex0x"
                id="CTIMER0@IR@CR2INT"
                offset="[6]"/>
         <field description="Interrupt flag for capture channel 3 event." format="hex0x"
                id="CTIMER0@IR@CR3INT"
                offset="[7]"/>
      </register>
      <register description="Timer Control Register. The TCR is used to control the Timer Counter functions. The Timer Counter can be disabled or reset through the TCR."
                format="hex0x"
                id="CTIMER0@TCR"
                offset="0x4"
                size="4">
         <field description="Counter enable." format="enum" enum="d1e103064"
                id="CTIMER0@TCR@CEN"
                offset="[0]"/>
         <field description="Counter reset." format="enum" enum="d1e103110"
                id="CTIMER0@TCR@CRST"
                offset="[1]"/>
      </register>
      <register description="Timer Counter" format="hex0x" id="CTIMER0@TC" offset="0x8"
                size="4">
         <field description="Timer counter value." format="hex0x" id="CTIMER0@TC@TCVAL"
                offset="[31:0]"/>
      </register>
      <register description="Prescale Register" format="hex0x" id="CTIMER0@PR" offset="0xc"
                size="4">
         <field description="Prescale counter value." format="hex0x" id="CTIMER0@PR@PRVAL"
                offset="[31:0]"/>
      </register>
      <register description="Prescale Counter" format="hex0x" id="CTIMER0@PC" offset="0x10"
                size="4">
         <field description="Prescale counter value." format="hex0x" id="CTIMER0@PC@PCVAL"
                offset="[31:0]"/>
      </register>
      <register description="Match Control Register" format="hex0x" id="CTIMER0@MCR"
                offset="0x14"
                size="4">
         <field description="Interrupt on MR0: an interrupt is generated when MR0 matches the value in the TC."
                format="hex0x"
                id="CTIMER0@MCR@MR0I"
                offset="[0]"/>
         <field description="Reset on MR0: the TC will be reset if MR0 matches it."
                format="hex0x"
                id="CTIMER0@MCR@MR0R"
                offset="[1]"/>
         <field description="Stop on MR0: the TC and PC will be stopped and TCR[0] will be set to 0 if MR0 matches the TC."
                format="hex0x"
                id="CTIMER0@MCR@MR0S"
                offset="[2]"/>
         <field description="Interrupt on MR1: an interrupt is generated when MR1 matches the value in the TC."
                format="hex0x"
                id="CTIMER0@MCR@MR1I"
                offset="[3]"/>
         <field description="Reset on MR1: the TC will be reset if MR1 matches it."
                format="hex0x"
                id="CTIMER0@MCR@MR1R"
                offset="[4]"/>
         <field description="Stop on MR1: the TC and PC will be stopped and TCR[0] will be set to 0 if MR1 matches the TC."
                format="hex0x"
                id="CTIMER0@MCR@MR1S"
                offset="[5]"/>
         <field description="Interrupt on MR2: an interrupt is generated when MR2 matches the value in the TC."
                format="hex0x"
                id="CTIMER0@MCR@MR2I"
                offset="[6]"/>
         <field description="Reset on MR2: the TC will be reset if MR2 matches it."
                format="hex0x"
                id="CTIMER0@MCR@MR2R"
                offset="[7]"/>
         <field description="Stop on MR2: the TC and PC will be stopped and TCR[0] will be set to 0 if MR2 matches the TC."
                format="hex0x"
                id="CTIMER0@MCR@MR2S"
                offset="[8]"/>
         <field description="Interrupt on MR3: an interrupt is generated when MR3 matches the value in the TC."
                format="hex0x"
                id="CTIMER0@MCR@MR3I"
                offset="[9]"/>
         <field description="Reset on MR3: the TC will be reset if MR3 matches it."
                format="hex0x"
                id="CTIMER0@MCR@MR3R"
                offset="[10]"/>
         <field description="Stop on MR3: the TC and PC will be stopped and TCR[0] will be set to 0 if MR3 matches the TC."
                format="hex0x"
                id="CTIMER0@MCR@MR3S"
                offset="[11]"/>
         <field description="Reload MR0 with the contents of the Match 0 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR)."
                format="hex0x"
                id="CTIMER0@MCR@MR0RL"
                offset="[24]"/>
         <field description="Reload MR1 with the contents of the Match 1 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR)."
                format="hex0x"
                id="CTIMER0@MCR@MR1RL"
                offset="[25]"/>
         <field description="Reload MR2 with the contents of the Match 2 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR)."
                format="hex0x"
                id="CTIMER0@MCR@MR2RL"
                offset="[26]"/>
         <field description="Reload MR3 with the contents of the Match 3 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR)."
                format="hex0x"
                id="CTIMER0@MCR@MR3RL"
                offset="[27]"/>
      </register>
      <register description="Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC."
                format="hex0x"
                id="CTIMER0@MR0"
                offset="0x18"
                size="4">
         <field description="Timer counter match value." format="hex0x" id="CTIMER0@MR0@MATCH"
                offset="[31:0]"/>
      </register>
      <register description="Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC."
                format="hex0x"
                id="CTIMER0@MR1"
                offset="0x1c"
                size="4">
         <field description="Timer counter match value." format="hex0x" id="CTIMER0@MR1@MATCH"
                offset="[31:0]"/>
      </register>
      <register description="Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC."
                format="hex0x"
                id="CTIMER0@MR2"
                offset="0x20"
                size="4">
         <field description="Timer counter match value." format="hex0x" id="CTIMER0@MR2@MATCH"
                offset="[31:0]"/>
      </register>
      <register description="Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC."
                format="hex0x"
                id="CTIMER0@MR3"
                offset="0x24"
                size="4">
         <field description="Timer counter match value." format="hex0x" id="CTIMER0@MR3@MATCH"
                offset="[31:0]"/>
      </register>
      <register description="Capture Control Register. The CCR controls which edges of the capture inputs are used to load the Capture Registers and whether or not an interrupt is generated when a capture takes place."
                format="hex0x"
                id="CTIMER0@CCR"
                offset="0x28"
                size="4">
         <field description="Rising edge of capture channel 0: a sequence of 0 then 1 causes CR0 to be loaded with the contents of TC. 0 = disabled. 1 = enabled."
                format="hex0x"
                id="CTIMER0@CCR@CAP0RE"
                offset="[0]"/>
         <field description="Falling edge of capture channel 0: a sequence of 1 then 0 causes CR0 to be loaded with the contents of TC. 0 = disabled. 1 = enabled."
                format="hex0x"
                id="CTIMER0@CCR@CAP0FE"
                offset="[1]"/>
         <field description="Generate interrupt on channel 0 capture event: a CR0 load generates an interrupt."
                format="hex0x"
                id="CTIMER0@CCR@CAP0I"
                offset="[2]"/>
         <field description="Rising edge of capture channel 1: a sequence of 0 then 1 causes CR1 to be loaded with the contents of TC. 0 = disabled. 1 = enabled."
                format="hex0x"
                id="CTIMER0@CCR@CAP1RE"
                offset="[3]"/>
         <field description="Falling edge of capture channel 1: a sequence of 1 then 0 causes CR1 to be loaded with the contents of TC. 0 = disabled. 1 = enabled."
                format="hex0x"
                id="CTIMER0@CCR@CAP1FE"
                offset="[4]"/>
         <field description="Generate interrupt on channel 1 capture event: a CR1 load generates an interrupt."
                format="hex0x"
                id="CTIMER0@CCR@CAP1I"
                offset="[5]"/>
         <field description="Rising edge of capture channel 2: a sequence of 0 then 1 causes CR2 to be loaded with the contents of TC. 0 = disabled. 1 = enabled."
                format="hex0x"
                id="CTIMER0@CCR@CAP2RE"
                offset="[6]"/>
         <field description="Falling edge of capture channel 2: a sequence of 1 then 0 causes CR2 to be loaded with the contents of TC. 0 = disabled. 1 = enabled."
                format="hex0x"
                id="CTIMER0@CCR@CAP2FE"
                offset="[7]"/>
         <field description="Generate interrupt on channel 2 capture event: a CR2 load generates an interrupt."
                format="hex0x"
                id="CTIMER0@CCR@CAP2I"
                offset="[8]"/>
         <field description="Rising edge of capture channel 3: a sequence of 0 then 1 causes CR3 to be loaded with the contents of TC. 0 = disabled. 1 = enabled."
                format="hex0x"
                id="CTIMER0@CCR@CAP3RE"
                offset="[9]"/>
         <field description="Falling edge of capture channel 3: a sequence of 1 then 0 causes CR3 to be loaded with the contents of TC. 0 = disabled. 1 = enabled."
                format="hex0x"
                id="CTIMER0@CCR@CAP3FE"
                offset="[10]"/>
         <field description="Generate interrupt on channel 3 capture event: a CR3 load generates an interrupt."
                format="hex0x"
                id="CTIMER0@CCR@CAP3I"
                offset="[11]"/>
      </register>
      <register description="Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input."
                format="hex0x"
                id="CTIMER0@CR0"
                offset="0x2c"
                readOnly="true"
                size="4">
         <field description="Timer counter capture value." format="hex0x" id="CTIMER0@CR0@CAP"
                offset="[31:0]"/>
      </register>
      <register description="Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input."
                format="hex0x"
                id="CTIMER0@CR1"
                offset="0x30"
                readOnly="true"
                size="4">
         <field description="Timer counter capture value." format="hex0x" id="CTIMER0@CR1@CAP"
                offset="[31:0]"/>
      </register>
      <register description="Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input."
                format="hex0x"
                id="CTIMER0@CR2"
                offset="0x34"
                readOnly="true"
                size="4">
         <field description="Timer counter capture value." format="hex0x" id="CTIMER0@CR2@CAP"
                offset="[31:0]"/>
      </register>
      <register description="Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input."
                format="hex0x"
                id="CTIMER0@CR3"
                offset="0x38"
                readOnly="true"
                size="4">
         <field description="Timer counter capture value." format="hex0x" id="CTIMER0@CR3@CAP"
                offset="[31:0]"/>
      </register>
      <register description="External Match Register. The EMR controls the match function and the external match pins."
                format="hex0x"
                id="CTIMER0@EMR"
                offset="0x3c"
                size="4">
         <field description="External Match 0. This bit reflects the state of output MAT0, whether or not this output is connected to a pin. When a match occurs between the TC and MR0, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[5:4]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH."
                format="hex0x"
                id="CTIMER0@EMR@EM0"
                offset="[0]"/>
         <field description="External Match 1. This bit reflects the state of output MAT1, whether or not this output is connected to a pin. When a match occurs between the TC and MR1, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[7:6]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH."
                format="hex0x"
                id="CTIMER0@EMR@EM1"
                offset="[1]"/>
         <field description="External Match 2. This bit reflects the state of output MAT2, whether or not this output is connected to a pin. When a match occurs between the TC and MR2, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[9:8]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH."
                format="hex0x"
                id="CTIMER0@EMR@EM2"
                offset="[2]"/>
         <field description="External Match 3. This bit reflects the state of output MAT3, whether or not this output is connected to a pin. When a match occurs between the TC and MR3, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by MR[11:10]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH."
                format="hex0x"
                id="CTIMER0@EMR@EM3"
                offset="[3]"/>
         <field description="External Match Control 0. Determines the functionality of External Match 0."
                format="enum"
                enum="d1e104063"
                id="CTIMER0@EMR@EMC0"
                offset="[5:4]"/>
         <field description="External Match Control 1. Determines the functionality of External Match 1."
                format="enum"
                enum="d1e104134"
                id="CTIMER0@EMR@EMC1"
                offset="[7:6]"/>
         <field description="External Match Control 2. Determines the functionality of External Match 2."
                format="enum"
                enum="d1e104204"
                id="CTIMER0@EMR@EMC2"
                offset="[9:8]"/>
         <field description="External Match Control 3. Determines the functionality of External Match 3."
                format="enum"
                enum="d1e104274"
                id="CTIMER0@EMR@EMC3"
                offset="[11:10]"/>
      </register>
      <register description="Count Control Register. The CTCR selects between Timer and Counter mode, and in Counter mode selects the signal and edge(s) for counting."
                format="hex0x"
                id="CTIMER0@CTCR"
                offset="0x70"
                size="4">
         <field description="Counter/Timer Mode This field selects which rising APB bus clock edges can increment Timer's Prescale Counter (PC), or clear PC and increment Timer Counter (TC). Timer Mode: the TC is incremented when the Prescale Counter matches the Prescale Register."
                format="enum"
                enum="d1e104372"
                id="CTIMER0@CTCR@CTMODE"
                offset="[1:0]"/>
         <field description="Count Input Select When bits 1:0 in this register are not 00, these bits select which CAP pin is sampled for clocking. Note: If Counter mode is selected for a particular CAPn input in the CTCR, the 3 bits for that input in the Capture Control Register (CCR) must be programmed as 000. However, capture and/or interrupt can be selected for the other 3 CAPn inputs in the same timer."
                format="enum"
                enum="d1e104442"
                id="CTIMER0@CTCR@CINSEL"
                offset="[3:2]"/>
         <field description="Setting this bit to 1 enables clearing of the timer and the prescaler when the capture-edge event specified in bits 7:5 occurs."
                format="hex0x"
                id="CTIMER0@CTCR@ENCC"
                offset="[4]"/>
         <field description="Edge select. When bit 4 is 1, these bits select which capture input edge will cause the timer and prescaler to be cleared. These bits have no effect when bit 4 is low. Values 0x2 to 0x3 and 0x6 to 0x7 are reserved."
                format="enum"
                enum="d1e104530"
                id="CTIMER0@CTCR@SELCC"
                offset="[7:5]"/>
      </register>
      <register description="PWM Control Register. The PWMCON enables PWM mode for the external match pins."
                format="hex0x"
                id="CTIMER0@PWMC"
                offset="0x74"
                size="4">
         <field description="PWM mode enable for channel0." format="enum" enum="d1e104654"
                id="CTIMER0@PWMC@PWMEN0"
                offset="[0]"/>
         <field description="PWM mode enable for channel1." format="enum" enum="d1e104700"
                id="CTIMER0@PWMC@PWMEN1"
                offset="[1]"/>
         <field description="PWM mode enable for channel2." format="enum" enum="d1e104746"
                id="CTIMER0@PWMC@PWMEN2"
                offset="[2]"/>
         <field description="PWM mode enable for channel3. Note: It is recommended to use match channel 3 to set the PWM cycle."
                format="enum"
                enum="d1e104792"
                id="CTIMER0@PWMC@PWMEN3"
                offset="[3]"/>
      </register>
      <register description="Match Shadow Register" format="hex0x" id="CTIMER0@MSR0"
                offset="0x78"
                size="4">
         <field description="Timer counter match shadow value." format="hex0x"
                id="CTIMER0@MSR0@SHADOWW"
                offset="[31:0]"/>
      </register>
      <register description="Match Shadow Register" format="hex0x" id="CTIMER0@MSR1"
                offset="0x7c"
                size="4">
         <field description="Timer counter match shadow value." format="hex0x"
                id="CTIMER0@MSR1@SHADOWW"
                offset="[31:0]"/>
      </register>
      <register description="Match Shadow Register" format="hex0x" id="CTIMER0@MSR2"
                offset="0x80"
                size="4">
         <field description="Timer counter match shadow value." format="hex0x"
                id="CTIMER0@MSR2@SHADOWW"
                offset="[31:0]"/>
      </register>
      <register description="Match Shadow Register" format="hex0x" id="CTIMER0@MSR3"
                offset="0x84"
                size="4">
         <field description="Timer counter match shadow value." format="hex0x"
                id="CTIMER0@MSR3@SHADOWW"
                offset="[31:0]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x Standard counter/timers (CTIMER0 to 4)"
               id="CTIMER2"
               size="0x88">
      <register description="Interrupt Register. The IR can be written to clear interrupts. The IR can be read to identify which of eight possible interrupt sources are pending."
                format="hex0x"
                id="CTIMER0@IR"
                offset="0x0"
                size="4">
         <field description="Interrupt flag for match channel 0." format="hex0x"
                id="CTIMER0@IR@MR0INT"
                offset="[0]"/>
         <field description="Interrupt flag for match channel 1." format="hex0x"
                id="CTIMER0@IR@MR1INT"
                offset="[1]"/>
         <field description="Interrupt flag for match channel 2." format="hex0x"
                id="CTIMER0@IR@MR2INT"
                offset="[2]"/>
         <field description="Interrupt flag for match channel 3." format="hex0x"
                id="CTIMER0@IR@MR3INT"
                offset="[3]"/>
         <field description="Interrupt flag for capture channel 0 event." format="hex0x"
                id="CTIMER0@IR@CR0INT"
                offset="[4]"/>
         <field description="Interrupt flag for capture channel 1 event." format="hex0x"
                id="CTIMER0@IR@CR1INT"
                offset="[5]"/>
         <field description="Interrupt flag for capture channel 2 event." format="hex0x"
                id="CTIMER0@IR@CR2INT"
                offset="[6]"/>
         <field description="Interrupt flag for capture channel 3 event." format="hex0x"
                id="CTIMER0@IR@CR3INT"
                offset="[7]"/>
      </register>
      <register description="Timer Control Register. The TCR is used to control the Timer Counter functions. The Timer Counter can be disabled or reset through the TCR."
                format="hex0x"
                id="CTIMER0@TCR"
                offset="0x4"
                size="4">
         <field description="Counter enable." format="enum" enum="d1e103064"
                id="CTIMER0@TCR@CEN"
                offset="[0]"/>
         <field description="Counter reset." format="enum" enum="d1e103110"
                id="CTIMER0@TCR@CRST"
                offset="[1]"/>
      </register>
      <register description="Timer Counter" format="hex0x" id="CTIMER0@TC" offset="0x8"
                size="4">
         <field description="Timer counter value." format="hex0x" id="CTIMER0@TC@TCVAL"
                offset="[31:0]"/>
      </register>
      <register description="Prescale Register" format="hex0x" id="CTIMER0@PR" offset="0xc"
                size="4">
         <field description="Prescale counter value." format="hex0x" id="CTIMER0@PR@PRVAL"
                offset="[31:0]"/>
      </register>
      <register description="Prescale Counter" format="hex0x" id="CTIMER0@PC" offset="0x10"
                size="4">
         <field description="Prescale counter value." format="hex0x" id="CTIMER0@PC@PCVAL"
                offset="[31:0]"/>
      </register>
      <register description="Match Control Register" format="hex0x" id="CTIMER0@MCR"
                offset="0x14"
                size="4">
         <field description="Interrupt on MR0: an interrupt is generated when MR0 matches the value in the TC."
                format="hex0x"
                id="CTIMER0@MCR@MR0I"
                offset="[0]"/>
         <field description="Reset on MR0: the TC will be reset if MR0 matches it."
                format="hex0x"
                id="CTIMER0@MCR@MR0R"
                offset="[1]"/>
         <field description="Stop on MR0: the TC and PC will be stopped and TCR[0] will be set to 0 if MR0 matches the TC."
                format="hex0x"
                id="CTIMER0@MCR@MR0S"
                offset="[2]"/>
         <field description="Interrupt on MR1: an interrupt is generated when MR1 matches the value in the TC."
                format="hex0x"
                id="CTIMER0@MCR@MR1I"
                offset="[3]"/>
         <field description="Reset on MR1: the TC will be reset if MR1 matches it."
                format="hex0x"
                id="CTIMER0@MCR@MR1R"
                offset="[4]"/>
         <field description="Stop on MR1: the TC and PC will be stopped and TCR[0] will be set to 0 if MR1 matches the TC."
                format="hex0x"
                id="CTIMER0@MCR@MR1S"
                offset="[5]"/>
         <field description="Interrupt on MR2: an interrupt is generated when MR2 matches the value in the TC."
                format="hex0x"
                id="CTIMER0@MCR@MR2I"
                offset="[6]"/>
         <field description="Reset on MR2: the TC will be reset if MR2 matches it."
                format="hex0x"
                id="CTIMER0@MCR@MR2R"
                offset="[7]"/>
         <field description="Stop on MR2: the TC and PC will be stopped and TCR[0] will be set to 0 if MR2 matches the TC."
                format="hex0x"
                id="CTIMER0@MCR@MR2S"
                offset="[8]"/>
         <field description="Interrupt on MR3: an interrupt is generated when MR3 matches the value in the TC."
                format="hex0x"
                id="CTIMER0@MCR@MR3I"
                offset="[9]"/>
         <field description="Reset on MR3: the TC will be reset if MR3 matches it."
                format="hex0x"
                id="CTIMER0@MCR@MR3R"
                offset="[10]"/>
         <field description="Stop on MR3: the TC and PC will be stopped and TCR[0] will be set to 0 if MR3 matches the TC."
                format="hex0x"
                id="CTIMER0@MCR@MR3S"
                offset="[11]"/>
         <field description="Reload MR0 with the contents of the Match 0 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR)."
                format="hex0x"
                id="CTIMER0@MCR@MR0RL"
                offset="[24]"/>
         <field description="Reload MR1 with the contents of the Match 1 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR)."
                format="hex0x"
                id="CTIMER0@MCR@MR1RL"
                offset="[25]"/>
         <field description="Reload MR2 with the contents of the Match 2 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR)."
                format="hex0x"
                id="CTIMER0@MCR@MR2RL"
                offset="[26]"/>
         <field description="Reload MR3 with the contents of the Match 3 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR)."
                format="hex0x"
                id="CTIMER0@MCR@MR3RL"
                offset="[27]"/>
      </register>
      <register description="Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC."
                format="hex0x"
                id="CTIMER0@MR0"
                offset="0x18"
                size="4">
         <field description="Timer counter match value." format="hex0x" id="CTIMER0@MR0@MATCH"
                offset="[31:0]"/>
      </register>
      <register description="Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC."
                format="hex0x"
                id="CTIMER0@MR1"
                offset="0x1c"
                size="4">
         <field description="Timer counter match value." format="hex0x" id="CTIMER0@MR1@MATCH"
                offset="[31:0]"/>
      </register>
      <register description="Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC."
                format="hex0x"
                id="CTIMER0@MR2"
                offset="0x20"
                size="4">
         <field description="Timer counter match value." format="hex0x" id="CTIMER0@MR2@MATCH"
                offset="[31:0]"/>
      </register>
      <register description="Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC."
                format="hex0x"
                id="CTIMER0@MR3"
                offset="0x24"
                size="4">
         <field description="Timer counter match value." format="hex0x" id="CTIMER0@MR3@MATCH"
                offset="[31:0]"/>
      </register>
      <register description="Capture Control Register. The CCR controls which edges of the capture inputs are used to load the Capture Registers and whether or not an interrupt is generated when a capture takes place."
                format="hex0x"
                id="CTIMER0@CCR"
                offset="0x28"
                size="4">
         <field description="Rising edge of capture channel 0: a sequence of 0 then 1 causes CR0 to be loaded with the contents of TC. 0 = disabled. 1 = enabled."
                format="hex0x"
                id="CTIMER0@CCR@CAP0RE"
                offset="[0]"/>
         <field description="Falling edge of capture channel 0: a sequence of 1 then 0 causes CR0 to be loaded with the contents of TC. 0 = disabled. 1 = enabled."
                format="hex0x"
                id="CTIMER0@CCR@CAP0FE"
                offset="[1]"/>
         <field description="Generate interrupt on channel 0 capture event: a CR0 load generates an interrupt."
                format="hex0x"
                id="CTIMER0@CCR@CAP0I"
                offset="[2]"/>
         <field description="Rising edge of capture channel 1: a sequence of 0 then 1 causes CR1 to be loaded with the contents of TC. 0 = disabled. 1 = enabled."
                format="hex0x"
                id="CTIMER0@CCR@CAP1RE"
                offset="[3]"/>
         <field description="Falling edge of capture channel 1: a sequence of 1 then 0 causes CR1 to be loaded with the contents of TC. 0 = disabled. 1 = enabled."
                format="hex0x"
                id="CTIMER0@CCR@CAP1FE"
                offset="[4]"/>
         <field description="Generate interrupt on channel 1 capture event: a CR1 load generates an interrupt."
                format="hex0x"
                id="CTIMER0@CCR@CAP1I"
                offset="[5]"/>
         <field description="Rising edge of capture channel 2: a sequence of 0 then 1 causes CR2 to be loaded with the contents of TC. 0 = disabled. 1 = enabled."
                format="hex0x"
                id="CTIMER0@CCR@CAP2RE"
                offset="[6]"/>
         <field description="Falling edge of capture channel 2: a sequence of 1 then 0 causes CR2 to be loaded with the contents of TC. 0 = disabled. 1 = enabled."
                format="hex0x"
                id="CTIMER0@CCR@CAP2FE"
                offset="[7]"/>
         <field description="Generate interrupt on channel 2 capture event: a CR2 load generates an interrupt."
                format="hex0x"
                id="CTIMER0@CCR@CAP2I"
                offset="[8]"/>
         <field description="Rising edge of capture channel 3: a sequence of 0 then 1 causes CR3 to be loaded with the contents of TC. 0 = disabled. 1 = enabled."
                format="hex0x"
                id="CTIMER0@CCR@CAP3RE"
                offset="[9]"/>
         <field description="Falling edge of capture channel 3: a sequence of 1 then 0 causes CR3 to be loaded with the contents of TC. 0 = disabled. 1 = enabled."
                format="hex0x"
                id="CTIMER0@CCR@CAP3FE"
                offset="[10]"/>
         <field description="Generate interrupt on channel 3 capture event: a CR3 load generates an interrupt."
                format="hex0x"
                id="CTIMER0@CCR@CAP3I"
                offset="[11]"/>
      </register>
      <register description="Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input."
                format="hex0x"
                id="CTIMER0@CR0"
                offset="0x2c"
                readOnly="true"
                size="4">
         <field description="Timer counter capture value." format="hex0x" id="CTIMER0@CR0@CAP"
                offset="[31:0]"/>
      </register>
      <register description="Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input."
                format="hex0x"
                id="CTIMER0@CR1"
                offset="0x30"
                readOnly="true"
                size="4">
         <field description="Timer counter capture value." format="hex0x" id="CTIMER0@CR1@CAP"
                offset="[31:0]"/>
      </register>
      <register description="Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input."
                format="hex0x"
                id="CTIMER0@CR2"
                offset="0x34"
                readOnly="true"
                size="4">
         <field description="Timer counter capture value." format="hex0x" id="CTIMER0@CR2@CAP"
                offset="[31:0]"/>
      </register>
      <register description="Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input."
                format="hex0x"
                id="CTIMER0@CR3"
                offset="0x38"
                readOnly="true"
                size="4">
         <field description="Timer counter capture value." format="hex0x" id="CTIMER0@CR3@CAP"
                offset="[31:0]"/>
      </register>
      <register description="External Match Register. The EMR controls the match function and the external match pins."
                format="hex0x"
                id="CTIMER0@EMR"
                offset="0x3c"
                size="4">
         <field description="External Match 0. This bit reflects the state of output MAT0, whether or not this output is connected to a pin. When a match occurs between the TC and MR0, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[5:4]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH."
                format="hex0x"
                id="CTIMER0@EMR@EM0"
                offset="[0]"/>
         <field description="External Match 1. This bit reflects the state of output MAT1, whether or not this output is connected to a pin. When a match occurs between the TC and MR1, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[7:6]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH."
                format="hex0x"
                id="CTIMER0@EMR@EM1"
                offset="[1]"/>
         <field description="External Match 2. This bit reflects the state of output MAT2, whether or not this output is connected to a pin. When a match occurs between the TC and MR2, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[9:8]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH."
                format="hex0x"
                id="CTIMER0@EMR@EM2"
                offset="[2]"/>
         <field description="External Match 3. This bit reflects the state of output MAT3, whether or not this output is connected to a pin. When a match occurs between the TC and MR3, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by MR[11:10]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH."
                format="hex0x"
                id="CTIMER0@EMR@EM3"
                offset="[3]"/>
         <field description="External Match Control 0. Determines the functionality of External Match 0."
                format="enum"
                enum="d1e104063"
                id="CTIMER0@EMR@EMC0"
                offset="[5:4]"/>
         <field description="External Match Control 1. Determines the functionality of External Match 1."
                format="enum"
                enum="d1e104134"
                id="CTIMER0@EMR@EMC1"
                offset="[7:6]"/>
         <field description="External Match Control 2. Determines the functionality of External Match 2."
                format="enum"
                enum="d1e104204"
                id="CTIMER0@EMR@EMC2"
                offset="[9:8]"/>
         <field description="External Match Control 3. Determines the functionality of External Match 3."
                format="enum"
                enum="d1e104274"
                id="CTIMER0@EMR@EMC3"
                offset="[11:10]"/>
      </register>
      <register description="Count Control Register. The CTCR selects between Timer and Counter mode, and in Counter mode selects the signal and edge(s) for counting."
                format="hex0x"
                id="CTIMER0@CTCR"
                offset="0x70"
                size="4">
         <field description="Counter/Timer Mode This field selects which rising APB bus clock edges can increment Timer's Prescale Counter (PC), or clear PC and increment Timer Counter (TC). Timer Mode: the TC is incremented when the Prescale Counter matches the Prescale Register."
                format="enum"
                enum="d1e104372"
                id="CTIMER0@CTCR@CTMODE"
                offset="[1:0]"/>
         <field description="Count Input Select When bits 1:0 in this register are not 00, these bits select which CAP pin is sampled for clocking. Note: If Counter mode is selected for a particular CAPn input in the CTCR, the 3 bits for that input in the Capture Control Register (CCR) must be programmed as 000. However, capture and/or interrupt can be selected for the other 3 CAPn inputs in the same timer."
                format="enum"
                enum="d1e104442"
                id="CTIMER0@CTCR@CINSEL"
                offset="[3:2]"/>
         <field description="Setting this bit to 1 enables clearing of the timer and the prescaler when the capture-edge event specified in bits 7:5 occurs."
                format="hex0x"
                id="CTIMER0@CTCR@ENCC"
                offset="[4]"/>
         <field description="Edge select. When bit 4 is 1, these bits select which capture input edge will cause the timer and prescaler to be cleared. These bits have no effect when bit 4 is low. Values 0x2 to 0x3 and 0x6 to 0x7 are reserved."
                format="enum"
                enum="d1e104530"
                id="CTIMER0@CTCR@SELCC"
                offset="[7:5]"/>
      </register>
      <register description="PWM Control Register. The PWMCON enables PWM mode for the external match pins."
                format="hex0x"
                id="CTIMER0@PWMC"
                offset="0x74"
                size="4">
         <field description="PWM mode enable for channel0." format="enum" enum="d1e104654"
                id="CTIMER0@PWMC@PWMEN0"
                offset="[0]"/>
         <field description="PWM mode enable for channel1." format="enum" enum="d1e104700"
                id="CTIMER0@PWMC@PWMEN1"
                offset="[1]"/>
         <field description="PWM mode enable for channel2." format="enum" enum="d1e104746"
                id="CTIMER0@PWMC@PWMEN2"
                offset="[2]"/>
         <field description="PWM mode enable for channel3. Note: It is recommended to use match channel 3 to set the PWM cycle."
                format="enum"
                enum="d1e104792"
                id="CTIMER0@PWMC@PWMEN3"
                offset="[3]"/>
      </register>
      <register description="Match Shadow Register" format="hex0x" id="CTIMER0@MSR0"
                offset="0x78"
                size="4">
         <field description="Timer counter match shadow value." format="hex0x"
                id="CTIMER0@MSR0@SHADOWW"
                offset="[31:0]"/>
      </register>
      <register description="Match Shadow Register" format="hex0x" id="CTIMER0@MSR1"
                offset="0x7c"
                size="4">
         <field description="Timer counter match shadow value." format="hex0x"
                id="CTIMER0@MSR1@SHADOWW"
                offset="[31:0]"/>
      </register>
      <register description="Match Shadow Register" format="hex0x" id="CTIMER0@MSR2"
                offset="0x80"
                size="4">
         <field description="Timer counter match shadow value." format="hex0x"
                id="CTIMER0@MSR2@SHADOWW"
                offset="[31:0]"/>
      </register>
      <register description="Match Shadow Register" format="hex0x" id="CTIMER0@MSR3"
                offset="0x84"
                size="4">
         <field description="Timer counter match shadow value." format="hex0x"
                id="CTIMER0@MSR3@SHADOWW"
                offset="[31:0]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x Standard counter/timers (CTIMER0 to 4)"
               id="CTIMER3"
               size="0x88">
      <register description="Interrupt Register. The IR can be written to clear interrupts. The IR can be read to identify which of eight possible interrupt sources are pending."
                format="hex0x"
                id="CTIMER0@IR"
                offset="0x0"
                size="4">
         <field description="Interrupt flag for match channel 0." format="hex0x"
                id="CTIMER0@IR@MR0INT"
                offset="[0]"/>
         <field description="Interrupt flag for match channel 1." format="hex0x"
                id="CTIMER0@IR@MR1INT"
                offset="[1]"/>
         <field description="Interrupt flag for match channel 2." format="hex0x"
                id="CTIMER0@IR@MR2INT"
                offset="[2]"/>
         <field description="Interrupt flag for match channel 3." format="hex0x"
                id="CTIMER0@IR@MR3INT"
                offset="[3]"/>
         <field description="Interrupt flag for capture channel 0 event." format="hex0x"
                id="CTIMER0@IR@CR0INT"
                offset="[4]"/>
         <field description="Interrupt flag for capture channel 1 event." format="hex0x"
                id="CTIMER0@IR@CR1INT"
                offset="[5]"/>
         <field description="Interrupt flag for capture channel 2 event." format="hex0x"
                id="CTIMER0@IR@CR2INT"
                offset="[6]"/>
         <field description="Interrupt flag for capture channel 3 event." format="hex0x"
                id="CTIMER0@IR@CR3INT"
                offset="[7]"/>
      </register>
      <register description="Timer Control Register. The TCR is used to control the Timer Counter functions. The Timer Counter can be disabled or reset through the TCR."
                format="hex0x"
                id="CTIMER0@TCR"
                offset="0x4"
                size="4">
         <field description="Counter enable." format="enum" enum="d1e103064"
                id="CTIMER0@TCR@CEN"
                offset="[0]"/>
         <field description="Counter reset." format="enum" enum="d1e103110"
                id="CTIMER0@TCR@CRST"
                offset="[1]"/>
      </register>
      <register description="Timer Counter" format="hex0x" id="CTIMER0@TC" offset="0x8"
                size="4">
         <field description="Timer counter value." format="hex0x" id="CTIMER0@TC@TCVAL"
                offset="[31:0]"/>
      </register>
      <register description="Prescale Register" format="hex0x" id="CTIMER0@PR" offset="0xc"
                size="4">
         <field description="Prescale counter value." format="hex0x" id="CTIMER0@PR@PRVAL"
                offset="[31:0]"/>
      </register>
      <register description="Prescale Counter" format="hex0x" id="CTIMER0@PC" offset="0x10"
                size="4">
         <field description="Prescale counter value." format="hex0x" id="CTIMER0@PC@PCVAL"
                offset="[31:0]"/>
      </register>
      <register description="Match Control Register" format="hex0x" id="CTIMER0@MCR"
                offset="0x14"
                size="4">
         <field description="Interrupt on MR0: an interrupt is generated when MR0 matches the value in the TC."
                format="hex0x"
                id="CTIMER0@MCR@MR0I"
                offset="[0]"/>
         <field description="Reset on MR0: the TC will be reset if MR0 matches it."
                format="hex0x"
                id="CTIMER0@MCR@MR0R"
                offset="[1]"/>
         <field description="Stop on MR0: the TC and PC will be stopped and TCR[0] will be set to 0 if MR0 matches the TC."
                format="hex0x"
                id="CTIMER0@MCR@MR0S"
                offset="[2]"/>
         <field description="Interrupt on MR1: an interrupt is generated when MR1 matches the value in the TC."
                format="hex0x"
                id="CTIMER0@MCR@MR1I"
                offset="[3]"/>
         <field description="Reset on MR1: the TC will be reset if MR1 matches it."
                format="hex0x"
                id="CTIMER0@MCR@MR1R"
                offset="[4]"/>
         <field description="Stop on MR1: the TC and PC will be stopped and TCR[0] will be set to 0 if MR1 matches the TC."
                format="hex0x"
                id="CTIMER0@MCR@MR1S"
                offset="[5]"/>
         <field description="Interrupt on MR2: an interrupt is generated when MR2 matches the value in the TC."
                format="hex0x"
                id="CTIMER0@MCR@MR2I"
                offset="[6]"/>
         <field description="Reset on MR2: the TC will be reset if MR2 matches it."
                format="hex0x"
                id="CTIMER0@MCR@MR2R"
                offset="[7]"/>
         <field description="Stop on MR2: the TC and PC will be stopped and TCR[0] will be set to 0 if MR2 matches the TC."
                format="hex0x"
                id="CTIMER0@MCR@MR2S"
                offset="[8]"/>
         <field description="Interrupt on MR3: an interrupt is generated when MR3 matches the value in the TC."
                format="hex0x"
                id="CTIMER0@MCR@MR3I"
                offset="[9]"/>
         <field description="Reset on MR3: the TC will be reset if MR3 matches it."
                format="hex0x"
                id="CTIMER0@MCR@MR3R"
                offset="[10]"/>
         <field description="Stop on MR3: the TC and PC will be stopped and TCR[0] will be set to 0 if MR3 matches the TC."
                format="hex0x"
                id="CTIMER0@MCR@MR3S"
                offset="[11]"/>
         <field description="Reload MR0 with the contents of the Match 0 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR)."
                format="hex0x"
                id="CTIMER0@MCR@MR0RL"
                offset="[24]"/>
         <field description="Reload MR1 with the contents of the Match 1 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR)."
                format="hex0x"
                id="CTIMER0@MCR@MR1RL"
                offset="[25]"/>
         <field description="Reload MR2 with the contents of the Match 2 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR)."
                format="hex0x"
                id="CTIMER0@MCR@MR2RL"
                offset="[26]"/>
         <field description="Reload MR3 with the contents of the Match 3 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR)."
                format="hex0x"
                id="CTIMER0@MCR@MR3RL"
                offset="[27]"/>
      </register>
      <register description="Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC."
                format="hex0x"
                id="CTIMER0@MR0"
                offset="0x18"
                size="4">
         <field description="Timer counter match value." format="hex0x" id="CTIMER0@MR0@MATCH"
                offset="[31:0]"/>
      </register>
      <register description="Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC."
                format="hex0x"
                id="CTIMER0@MR1"
                offset="0x1c"
                size="4">
         <field description="Timer counter match value." format="hex0x" id="CTIMER0@MR1@MATCH"
                offset="[31:0]"/>
      </register>
      <register description="Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC."
                format="hex0x"
                id="CTIMER0@MR2"
                offset="0x20"
                size="4">
         <field description="Timer counter match value." format="hex0x" id="CTIMER0@MR2@MATCH"
                offset="[31:0]"/>
      </register>
      <register description="Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC."
                format="hex0x"
                id="CTIMER0@MR3"
                offset="0x24"
                size="4">
         <field description="Timer counter match value." format="hex0x" id="CTIMER0@MR3@MATCH"
                offset="[31:0]"/>
      </register>
      <register description="Capture Control Register. The CCR controls which edges of the capture inputs are used to load the Capture Registers and whether or not an interrupt is generated when a capture takes place."
                format="hex0x"
                id="CTIMER0@CCR"
                offset="0x28"
                size="4">
         <field description="Rising edge of capture channel 0: a sequence of 0 then 1 causes CR0 to be loaded with the contents of TC. 0 = disabled. 1 = enabled."
                format="hex0x"
                id="CTIMER0@CCR@CAP0RE"
                offset="[0]"/>
         <field description="Falling edge of capture channel 0: a sequence of 1 then 0 causes CR0 to be loaded with the contents of TC. 0 = disabled. 1 = enabled."
                format="hex0x"
                id="CTIMER0@CCR@CAP0FE"
                offset="[1]"/>
         <field description="Generate interrupt on channel 0 capture event: a CR0 load generates an interrupt."
                format="hex0x"
                id="CTIMER0@CCR@CAP0I"
                offset="[2]"/>
         <field description="Rising edge of capture channel 1: a sequence of 0 then 1 causes CR1 to be loaded with the contents of TC. 0 = disabled. 1 = enabled."
                format="hex0x"
                id="CTIMER0@CCR@CAP1RE"
                offset="[3]"/>
         <field description="Falling edge of capture channel 1: a sequence of 1 then 0 causes CR1 to be loaded with the contents of TC. 0 = disabled. 1 = enabled."
                format="hex0x"
                id="CTIMER0@CCR@CAP1FE"
                offset="[4]"/>
         <field description="Generate interrupt on channel 1 capture event: a CR1 load generates an interrupt."
                format="hex0x"
                id="CTIMER0@CCR@CAP1I"
                offset="[5]"/>
         <field description="Rising edge of capture channel 2: a sequence of 0 then 1 causes CR2 to be loaded with the contents of TC. 0 = disabled. 1 = enabled."
                format="hex0x"
                id="CTIMER0@CCR@CAP2RE"
                offset="[6]"/>
         <field description="Falling edge of capture channel 2: a sequence of 1 then 0 causes CR2 to be loaded with the contents of TC. 0 = disabled. 1 = enabled."
                format="hex0x"
                id="CTIMER0@CCR@CAP2FE"
                offset="[7]"/>
         <field description="Generate interrupt on channel 2 capture event: a CR2 load generates an interrupt."
                format="hex0x"
                id="CTIMER0@CCR@CAP2I"
                offset="[8]"/>
         <field description="Rising edge of capture channel 3: a sequence of 0 then 1 causes CR3 to be loaded with the contents of TC. 0 = disabled. 1 = enabled."
                format="hex0x"
                id="CTIMER0@CCR@CAP3RE"
                offset="[9]"/>
         <field description="Falling edge of capture channel 3: a sequence of 1 then 0 causes CR3 to be loaded with the contents of TC. 0 = disabled. 1 = enabled."
                format="hex0x"
                id="CTIMER0@CCR@CAP3FE"
                offset="[10]"/>
         <field description="Generate interrupt on channel 3 capture event: a CR3 load generates an interrupt."
                format="hex0x"
                id="CTIMER0@CCR@CAP3I"
                offset="[11]"/>
      </register>
      <register description="Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input."
                format="hex0x"
                id="CTIMER0@CR0"
                offset="0x2c"
                readOnly="true"
                size="4">
         <field description="Timer counter capture value." format="hex0x" id="CTIMER0@CR0@CAP"
                offset="[31:0]"/>
      </register>
      <register description="Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input."
                format="hex0x"
                id="CTIMER0@CR1"
                offset="0x30"
                readOnly="true"
                size="4">
         <field description="Timer counter capture value." format="hex0x" id="CTIMER0@CR1@CAP"
                offset="[31:0]"/>
      </register>
      <register description="Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input."
                format="hex0x"
                id="CTIMER0@CR2"
                offset="0x34"
                readOnly="true"
                size="4">
         <field description="Timer counter capture value." format="hex0x" id="CTIMER0@CR2@CAP"
                offset="[31:0]"/>
      </register>
      <register description="Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input."
                format="hex0x"
                id="CTIMER0@CR3"
                offset="0x38"
                readOnly="true"
                size="4">
         <field description="Timer counter capture value." format="hex0x" id="CTIMER0@CR3@CAP"
                offset="[31:0]"/>
      </register>
      <register description="External Match Register. The EMR controls the match function and the external match pins."
                format="hex0x"
                id="CTIMER0@EMR"
                offset="0x3c"
                size="4">
         <field description="External Match 0. This bit reflects the state of output MAT0, whether or not this output is connected to a pin. When a match occurs between the TC and MR0, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[5:4]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH."
                format="hex0x"
                id="CTIMER0@EMR@EM0"
                offset="[0]"/>
         <field description="External Match 1. This bit reflects the state of output MAT1, whether or not this output is connected to a pin. When a match occurs between the TC and MR1, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[7:6]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH."
                format="hex0x"
                id="CTIMER0@EMR@EM1"
                offset="[1]"/>
         <field description="External Match 2. This bit reflects the state of output MAT2, whether or not this output is connected to a pin. When a match occurs between the TC and MR2, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[9:8]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH."
                format="hex0x"
                id="CTIMER0@EMR@EM2"
                offset="[2]"/>
         <field description="External Match 3. This bit reflects the state of output MAT3, whether or not this output is connected to a pin. When a match occurs between the TC and MR3, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by MR[11:10]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH."
                format="hex0x"
                id="CTIMER0@EMR@EM3"
                offset="[3]"/>
         <field description="External Match Control 0. Determines the functionality of External Match 0."
                format="enum"
                enum="d1e104063"
                id="CTIMER0@EMR@EMC0"
                offset="[5:4]"/>
         <field description="External Match Control 1. Determines the functionality of External Match 1."
                format="enum"
                enum="d1e104134"
                id="CTIMER0@EMR@EMC1"
                offset="[7:6]"/>
         <field description="External Match Control 2. Determines the functionality of External Match 2."
                format="enum"
                enum="d1e104204"
                id="CTIMER0@EMR@EMC2"
                offset="[9:8]"/>
         <field description="External Match Control 3. Determines the functionality of External Match 3."
                format="enum"
                enum="d1e104274"
                id="CTIMER0@EMR@EMC3"
                offset="[11:10]"/>
      </register>
      <register description="Count Control Register. The CTCR selects between Timer and Counter mode, and in Counter mode selects the signal and edge(s) for counting."
                format="hex0x"
                id="CTIMER0@CTCR"
                offset="0x70"
                size="4">
         <field description="Counter/Timer Mode This field selects which rising APB bus clock edges can increment Timer's Prescale Counter (PC), or clear PC and increment Timer Counter (TC). Timer Mode: the TC is incremented when the Prescale Counter matches the Prescale Register."
                format="enum"
                enum="d1e104372"
                id="CTIMER0@CTCR@CTMODE"
                offset="[1:0]"/>
         <field description="Count Input Select When bits 1:0 in this register are not 00, these bits select which CAP pin is sampled for clocking. Note: If Counter mode is selected for a particular CAPn input in the CTCR, the 3 bits for that input in the Capture Control Register (CCR) must be programmed as 000. However, capture and/or interrupt can be selected for the other 3 CAPn inputs in the same timer."
                format="enum"
                enum="d1e104442"
                id="CTIMER0@CTCR@CINSEL"
                offset="[3:2]"/>
         <field description="Setting this bit to 1 enables clearing of the timer and the prescaler when the capture-edge event specified in bits 7:5 occurs."
                format="hex0x"
                id="CTIMER0@CTCR@ENCC"
                offset="[4]"/>
         <field description="Edge select. When bit 4 is 1, these bits select which capture input edge will cause the timer and prescaler to be cleared. These bits have no effect when bit 4 is low. Values 0x2 to 0x3 and 0x6 to 0x7 are reserved."
                format="enum"
                enum="d1e104530"
                id="CTIMER0@CTCR@SELCC"
                offset="[7:5]"/>
      </register>
      <register description="PWM Control Register. The PWMCON enables PWM mode for the external match pins."
                format="hex0x"
                id="CTIMER0@PWMC"
                offset="0x74"
                size="4">
         <field description="PWM mode enable for channel0." format="enum" enum="d1e104654"
                id="CTIMER0@PWMC@PWMEN0"
                offset="[0]"/>
         <field description="PWM mode enable for channel1." format="enum" enum="d1e104700"
                id="CTIMER0@PWMC@PWMEN1"
                offset="[1]"/>
         <field description="PWM mode enable for channel2." format="enum" enum="d1e104746"
                id="CTIMER0@PWMC@PWMEN2"
                offset="[2]"/>
         <field description="PWM mode enable for channel3. Note: It is recommended to use match channel 3 to set the PWM cycle."
                format="enum"
                enum="d1e104792"
                id="CTIMER0@PWMC@PWMEN3"
                offset="[3]"/>
      </register>
      <register description="Match Shadow Register" format="hex0x" id="CTIMER0@MSR0"
                offset="0x78"
                size="4">
         <field description="Timer counter match shadow value." format="hex0x"
                id="CTIMER0@MSR0@SHADOWW"
                offset="[31:0]"/>
      </register>
      <register description="Match Shadow Register" format="hex0x" id="CTIMER0@MSR1"
                offset="0x7c"
                size="4">
         <field description="Timer counter match shadow value." format="hex0x"
                id="CTIMER0@MSR1@SHADOWW"
                offset="[31:0]"/>
      </register>
      <register description="Match Shadow Register" format="hex0x" id="CTIMER0@MSR2"
                offset="0x80"
                size="4">
         <field description="Timer counter match shadow value." format="hex0x"
                id="CTIMER0@MSR2@SHADOWW"
                offset="[31:0]"/>
      </register>
      <register description="Match Shadow Register" format="hex0x" id="CTIMER0@MSR3"
                offset="0x84"
                size="4">
         <field description="Timer counter match shadow value." format="hex0x"
                id="CTIMER0@MSR3@SHADOWW"
                offset="[31:0]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x Standard counter/timers (CTIMER0 to 4)"
               id="CTIMER4"
               size="0x88">
      <register description="Interrupt Register. The IR can be written to clear interrupts. The IR can be read to identify which of eight possible interrupt sources are pending."
                format="hex0x"
                id="CTIMER0@IR"
                offset="0x0"
                size="4">
         <field description="Interrupt flag for match channel 0." format="hex0x"
                id="CTIMER0@IR@MR0INT"
                offset="[0]"/>
         <field description="Interrupt flag for match channel 1." format="hex0x"
                id="CTIMER0@IR@MR1INT"
                offset="[1]"/>
         <field description="Interrupt flag for match channel 2." format="hex0x"
                id="CTIMER0@IR@MR2INT"
                offset="[2]"/>
         <field description="Interrupt flag for match channel 3." format="hex0x"
                id="CTIMER0@IR@MR3INT"
                offset="[3]"/>
         <field description="Interrupt flag for capture channel 0 event." format="hex0x"
                id="CTIMER0@IR@CR0INT"
                offset="[4]"/>
         <field description="Interrupt flag for capture channel 1 event." format="hex0x"
                id="CTIMER0@IR@CR1INT"
                offset="[5]"/>
         <field description="Interrupt flag for capture channel 2 event." format="hex0x"
                id="CTIMER0@IR@CR2INT"
                offset="[6]"/>
         <field description="Interrupt flag for capture channel 3 event." format="hex0x"
                id="CTIMER0@IR@CR3INT"
                offset="[7]"/>
      </register>
      <register description="Timer Control Register. The TCR is used to control the Timer Counter functions. The Timer Counter can be disabled or reset through the TCR."
                format="hex0x"
                id="CTIMER0@TCR"
                offset="0x4"
                size="4">
         <field description="Counter enable." format="enum" enum="d1e103064"
                id="CTIMER0@TCR@CEN"
                offset="[0]"/>
         <field description="Counter reset." format="enum" enum="d1e103110"
                id="CTIMER0@TCR@CRST"
                offset="[1]"/>
      </register>
      <register description="Timer Counter" format="hex0x" id="CTIMER0@TC" offset="0x8"
                size="4">
         <field description="Timer counter value." format="hex0x" id="CTIMER0@TC@TCVAL"
                offset="[31:0]"/>
      </register>
      <register description="Prescale Register" format="hex0x" id="CTIMER0@PR" offset="0xc"
                size="4">
         <field description="Prescale counter value." format="hex0x" id="CTIMER0@PR@PRVAL"
                offset="[31:0]"/>
      </register>
      <register description="Prescale Counter" format="hex0x" id="CTIMER0@PC" offset="0x10"
                size="4">
         <field description="Prescale counter value." format="hex0x" id="CTIMER0@PC@PCVAL"
                offset="[31:0]"/>
      </register>
      <register description="Match Control Register" format="hex0x" id="CTIMER0@MCR"
                offset="0x14"
                size="4">
         <field description="Interrupt on MR0: an interrupt is generated when MR0 matches the value in the TC."
                format="hex0x"
                id="CTIMER0@MCR@MR0I"
                offset="[0]"/>
         <field description="Reset on MR0: the TC will be reset if MR0 matches it."
                format="hex0x"
                id="CTIMER0@MCR@MR0R"
                offset="[1]"/>
         <field description="Stop on MR0: the TC and PC will be stopped and TCR[0] will be set to 0 if MR0 matches the TC."
                format="hex0x"
                id="CTIMER0@MCR@MR0S"
                offset="[2]"/>
         <field description="Interrupt on MR1: an interrupt is generated when MR1 matches the value in the TC."
                format="hex0x"
                id="CTIMER0@MCR@MR1I"
                offset="[3]"/>
         <field description="Reset on MR1: the TC will be reset if MR1 matches it."
                format="hex0x"
                id="CTIMER0@MCR@MR1R"
                offset="[4]"/>
         <field description="Stop on MR1: the TC and PC will be stopped and TCR[0] will be set to 0 if MR1 matches the TC."
                format="hex0x"
                id="CTIMER0@MCR@MR1S"
                offset="[5]"/>
         <field description="Interrupt on MR2: an interrupt is generated when MR2 matches the value in the TC."
                format="hex0x"
                id="CTIMER0@MCR@MR2I"
                offset="[6]"/>
         <field description="Reset on MR2: the TC will be reset if MR2 matches it."
                format="hex0x"
                id="CTIMER0@MCR@MR2R"
                offset="[7]"/>
         <field description="Stop on MR2: the TC and PC will be stopped and TCR[0] will be set to 0 if MR2 matches the TC."
                format="hex0x"
                id="CTIMER0@MCR@MR2S"
                offset="[8]"/>
         <field description="Interrupt on MR3: an interrupt is generated when MR3 matches the value in the TC."
                format="hex0x"
                id="CTIMER0@MCR@MR3I"
                offset="[9]"/>
         <field description="Reset on MR3: the TC will be reset if MR3 matches it."
                format="hex0x"
                id="CTIMER0@MCR@MR3R"
                offset="[10]"/>
         <field description="Stop on MR3: the TC and PC will be stopped and TCR[0] will be set to 0 if MR3 matches the TC."
                format="hex0x"
                id="CTIMER0@MCR@MR3S"
                offset="[11]"/>
         <field description="Reload MR0 with the contents of the Match 0 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR)."
                format="hex0x"
                id="CTIMER0@MCR@MR0RL"
                offset="[24]"/>
         <field description="Reload MR1 with the contents of the Match 1 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR)."
                format="hex0x"
                id="CTIMER0@MCR@MR1RL"
                offset="[25]"/>
         <field description="Reload MR2 with the contents of the Match 2 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR)."
                format="hex0x"
                id="CTIMER0@MCR@MR2RL"
                offset="[26]"/>
         <field description="Reload MR3 with the contents of the Match 3 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR)."
                format="hex0x"
                id="CTIMER0@MCR@MR3RL"
                offset="[27]"/>
      </register>
      <register description="Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC."
                format="hex0x"
                id="CTIMER0@MR0"
                offset="0x18"
                size="4">
         <field description="Timer counter match value." format="hex0x" id="CTIMER0@MR0@MATCH"
                offset="[31:0]"/>
      </register>
      <register description="Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC."
                format="hex0x"
                id="CTIMER0@MR1"
                offset="0x1c"
                size="4">
         <field description="Timer counter match value." format="hex0x" id="CTIMER0@MR1@MATCH"
                offset="[31:0]"/>
      </register>
      <register description="Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC."
                format="hex0x"
                id="CTIMER0@MR2"
                offset="0x20"
                size="4">
         <field description="Timer counter match value." format="hex0x" id="CTIMER0@MR2@MATCH"
                offset="[31:0]"/>
      </register>
      <register description="Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC."
                format="hex0x"
                id="CTIMER0@MR3"
                offset="0x24"
                size="4">
         <field description="Timer counter match value." format="hex0x" id="CTIMER0@MR3@MATCH"
                offset="[31:0]"/>
      </register>
      <register description="Capture Control Register. The CCR controls which edges of the capture inputs are used to load the Capture Registers and whether or not an interrupt is generated when a capture takes place."
                format="hex0x"
                id="CTIMER0@CCR"
                offset="0x28"
                size="4">
         <field description="Rising edge of capture channel 0: a sequence of 0 then 1 causes CR0 to be loaded with the contents of TC. 0 = disabled. 1 = enabled."
                format="hex0x"
                id="CTIMER0@CCR@CAP0RE"
                offset="[0]"/>
         <field description="Falling edge of capture channel 0: a sequence of 1 then 0 causes CR0 to be loaded with the contents of TC. 0 = disabled. 1 = enabled."
                format="hex0x"
                id="CTIMER0@CCR@CAP0FE"
                offset="[1]"/>
         <field description="Generate interrupt on channel 0 capture event: a CR0 load generates an interrupt."
                format="hex0x"
                id="CTIMER0@CCR@CAP0I"
                offset="[2]"/>
         <field description="Rising edge of capture channel 1: a sequence of 0 then 1 causes CR1 to be loaded with the contents of TC. 0 = disabled. 1 = enabled."
                format="hex0x"
                id="CTIMER0@CCR@CAP1RE"
                offset="[3]"/>
         <field description="Falling edge of capture channel 1: a sequence of 1 then 0 causes CR1 to be loaded with the contents of TC. 0 = disabled. 1 = enabled."
                format="hex0x"
                id="CTIMER0@CCR@CAP1FE"
                offset="[4]"/>
         <field description="Generate interrupt on channel 1 capture event: a CR1 load generates an interrupt."
                format="hex0x"
                id="CTIMER0@CCR@CAP1I"
                offset="[5]"/>
         <field description="Rising edge of capture channel 2: a sequence of 0 then 1 causes CR2 to be loaded with the contents of TC. 0 = disabled. 1 = enabled."
                format="hex0x"
                id="CTIMER0@CCR@CAP2RE"
                offset="[6]"/>
         <field description="Falling edge of capture channel 2: a sequence of 1 then 0 causes CR2 to be loaded with the contents of TC. 0 = disabled. 1 = enabled."
                format="hex0x"
                id="CTIMER0@CCR@CAP2FE"
                offset="[7]"/>
         <field description="Generate interrupt on channel 2 capture event: a CR2 load generates an interrupt."
                format="hex0x"
                id="CTIMER0@CCR@CAP2I"
                offset="[8]"/>
         <field description="Rising edge of capture channel 3: a sequence of 0 then 1 causes CR3 to be loaded with the contents of TC. 0 = disabled. 1 = enabled."
                format="hex0x"
                id="CTIMER0@CCR@CAP3RE"
                offset="[9]"/>
         <field description="Falling edge of capture channel 3: a sequence of 1 then 0 causes CR3 to be loaded with the contents of TC. 0 = disabled. 1 = enabled."
                format="hex0x"
                id="CTIMER0@CCR@CAP3FE"
                offset="[10]"/>
         <field description="Generate interrupt on channel 3 capture event: a CR3 load generates an interrupt."
                format="hex0x"
                id="CTIMER0@CCR@CAP3I"
                offset="[11]"/>
      </register>
      <register description="Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input."
                format="hex0x"
                id="CTIMER0@CR0"
                offset="0x2c"
                readOnly="true"
                size="4">
         <field description="Timer counter capture value." format="hex0x" id="CTIMER0@CR0@CAP"
                offset="[31:0]"/>
      </register>
      <register description="Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input."
                format="hex0x"
                id="CTIMER0@CR1"
                offset="0x30"
                readOnly="true"
                size="4">
         <field description="Timer counter capture value." format="hex0x" id="CTIMER0@CR1@CAP"
                offset="[31:0]"/>
      </register>
      <register description="Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input."
                format="hex0x"
                id="CTIMER0@CR2"
                offset="0x34"
                readOnly="true"
                size="4">
         <field description="Timer counter capture value." format="hex0x" id="CTIMER0@CR2@CAP"
                offset="[31:0]"/>
      </register>
      <register description="Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input."
                format="hex0x"
                id="CTIMER0@CR3"
                offset="0x38"
                readOnly="true"
                size="4">
         <field description="Timer counter capture value." format="hex0x" id="CTIMER0@CR3@CAP"
                offset="[31:0]"/>
      </register>
      <register description="External Match Register. The EMR controls the match function and the external match pins."
                format="hex0x"
                id="CTIMER0@EMR"
                offset="0x3c"
                size="4">
         <field description="External Match 0. This bit reflects the state of output MAT0, whether or not this output is connected to a pin. When a match occurs between the TC and MR0, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[5:4]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH."
                format="hex0x"
                id="CTIMER0@EMR@EM0"
                offset="[0]"/>
         <field description="External Match 1. This bit reflects the state of output MAT1, whether or not this output is connected to a pin. When a match occurs between the TC and MR1, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[7:6]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH."
                format="hex0x"
                id="CTIMER0@EMR@EM1"
                offset="[1]"/>
         <field description="External Match 2. This bit reflects the state of output MAT2, whether or not this output is connected to a pin. When a match occurs between the TC and MR2, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[9:8]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH."
                format="hex0x"
                id="CTIMER0@EMR@EM2"
                offset="[2]"/>
         <field description="External Match 3. This bit reflects the state of output MAT3, whether or not this output is connected to a pin. When a match occurs between the TC and MR3, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by MR[11:10]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH."
                format="hex0x"
                id="CTIMER0@EMR@EM3"
                offset="[3]"/>
         <field description="External Match Control 0. Determines the functionality of External Match 0."
                format="enum"
                enum="d1e104063"
                id="CTIMER0@EMR@EMC0"
                offset="[5:4]"/>
         <field description="External Match Control 1. Determines the functionality of External Match 1."
                format="enum"
                enum="d1e104134"
                id="CTIMER0@EMR@EMC1"
                offset="[7:6]"/>
         <field description="External Match Control 2. Determines the functionality of External Match 2."
                format="enum"
                enum="d1e104204"
                id="CTIMER0@EMR@EMC2"
                offset="[9:8]"/>
         <field description="External Match Control 3. Determines the functionality of External Match 3."
                format="enum"
                enum="d1e104274"
                id="CTIMER0@EMR@EMC3"
                offset="[11:10]"/>
      </register>
      <register description="Count Control Register. The CTCR selects between Timer and Counter mode, and in Counter mode selects the signal and edge(s) for counting."
                format="hex0x"
                id="CTIMER0@CTCR"
                offset="0x70"
                size="4">
         <field description="Counter/Timer Mode This field selects which rising APB bus clock edges can increment Timer's Prescale Counter (PC), or clear PC and increment Timer Counter (TC). Timer Mode: the TC is incremented when the Prescale Counter matches the Prescale Register."
                format="enum"
                enum="d1e104372"
                id="CTIMER0@CTCR@CTMODE"
                offset="[1:0]"/>
         <field description="Count Input Select When bits 1:0 in this register are not 00, these bits select which CAP pin is sampled for clocking. Note: If Counter mode is selected for a particular CAPn input in the CTCR, the 3 bits for that input in the Capture Control Register (CCR) must be programmed as 000. However, capture and/or interrupt can be selected for the other 3 CAPn inputs in the same timer."
                format="enum"
                enum="d1e104442"
                id="CTIMER0@CTCR@CINSEL"
                offset="[3:2]"/>
         <field description="Setting this bit to 1 enables clearing of the timer and the prescaler when the capture-edge event specified in bits 7:5 occurs."
                format="hex0x"
                id="CTIMER0@CTCR@ENCC"
                offset="[4]"/>
         <field description="Edge select. When bit 4 is 1, these bits select which capture input edge will cause the timer and prescaler to be cleared. These bits have no effect when bit 4 is low. Values 0x2 to 0x3 and 0x6 to 0x7 are reserved."
                format="enum"
                enum="d1e104530"
                id="CTIMER0@CTCR@SELCC"
                offset="[7:5]"/>
      </register>
      <register description="PWM Control Register. The PWMCON enables PWM mode for the external match pins."
                format="hex0x"
                id="CTIMER0@PWMC"
                offset="0x74"
                size="4">
         <field description="PWM mode enable for channel0." format="enum" enum="d1e104654"
                id="CTIMER0@PWMC@PWMEN0"
                offset="[0]"/>
         <field description="PWM mode enable for channel1." format="enum" enum="d1e104700"
                id="CTIMER0@PWMC@PWMEN1"
                offset="[1]"/>
         <field description="PWM mode enable for channel2." format="enum" enum="d1e104746"
                id="CTIMER0@PWMC@PWMEN2"
                offset="[2]"/>
         <field description="PWM mode enable for channel3. Note: It is recommended to use match channel 3 to set the PWM cycle."
                format="enum"
                enum="d1e104792"
                id="CTIMER0@PWMC@PWMEN3"
                offset="[3]"/>
      </register>
      <register description="Match Shadow Register" format="hex0x" id="CTIMER0@MSR0"
                offset="0x78"
                size="4">
         <field description="Timer counter match shadow value." format="hex0x"
                id="CTIMER0@MSR0@SHADOWW"
                offset="[31:0]"/>
      </register>
      <register description="Match Shadow Register" format="hex0x" id="CTIMER0@MSR1"
                offset="0x7c"
                size="4">
         <field description="Timer counter match shadow value." format="hex0x"
                id="CTIMER0@MSR1@SHADOWW"
                offset="[31:0]"/>
      </register>
      <register description="Match Shadow Register" format="hex0x" id="CTIMER0@MSR2"
                offset="0x80"
                size="4">
         <field description="Timer counter match shadow value." format="hex0x"
                id="CTIMER0@MSR2@SHADOWW"
                offset="[31:0]"/>
      </register>
      <register description="Match Shadow Register" format="hex0x" id="CTIMER0@MSR3"
                offset="0x84"
                size="4">
         <field description="Timer counter match shadow value." format="hex0x"
                id="CTIMER0@MSR3@SHADOWW"
                offset="[31:0]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x Windowed Watchdog Timer (WWDT)" id="WWDT"
               size="0x1c">
      <register description="Watchdog mode register. This register contains the basic mode and status of the Watchdog Timer."
                format="hex0x"
                id="WWDT@MOD"
                offset="0x0"
                size="4">
         <field description="Watchdog enable bit. Once this bit is set to one and a watchdog feed is performed, the watchdog timer will run permanently."
                format="enum"
                enum="d1e105107"
                id="WWDT@MOD@WDEN"
                offset="[0]"/>
         <field description="Watchdog reset enable bit. Once this bit has been written with a 1 it cannot be re-written with a 0."
                format="enum"
                enum="d1e105153"
                id="WWDT@MOD@WDRESET"
                offset="[1]"/>
         <field description="Watchdog time-out flag. Set when the watchdog timer times out, by a feed error, or by events associated with WDPROTECT. Cleared by software writing a 0 to this bit position. Causes a chip reset if WDRESET = 1."
                format="hex0x"
                id="WWDT@MOD@WDTOF"
                offset="[2]"/>
         <field description="Warning interrupt flag. Set when the timer is at or below the value in WDWARNINT. Cleared by software writing a 1 to this bit position. Note that this bit cannot be cleared while the WARNINT value is equal to the value of the TV register. This can occur if the value of WARNINT is 0 and the WDRESET bit is 0 when TV decrements to 0."
                format="hex0x"
                id="WWDT@MOD@WDINT"
                offset="[3]"/>
         <field description="Watchdog update mode. This bit can be set once by software and is only cleared by a reset."
                format="enum"
                enum="d1e105235"
                id="WWDT@MOD@WDPROTECT"
                offset="[4]"/>
         <field description="Once this bit is set to one and a watchdog feed is performed, disabling or powering down the watchdog oscillator is prevented by hardware. This bit can be set once by software and is only cleared by any reset."
                format="hex0x"
                id="WWDT@MOD@LOCK"
                offset="[5]"/>
      </register>
      <register description="Watchdog timer constant register. This 24-bit register determines the time-out value."
                format="hex0x"
                id="WWDT@TC"
                offset="0x4"
                size="4">
         <field description="Watchdog time-out value." format="hex0x" id="WWDT@TC@COUNT"
                offset="[23:0]"/>
      </register>
      <register description="Watchdog feed sequence register. Writing 0xAA followed by 0x55 to this register reloads the Watchdog timer with the value contained in TC."
                format="hex0x"
                id="WWDT@FEED"
                offset="0x8"
                writeOnly="true"
                size="4">
         <field description="Feed value should be 0xAA followed by 0x55." format="hex0x"
                id="WWDT@FEED@FEED"
                offset="[7:0]"/>
      </register>
      <register description="Watchdog timer value register. This 24-bit register reads out the current value of the Watchdog timer."
                format="hex0x"
                id="WWDT@TV"
                offset="0xc"
                readOnly="true"
                size="4">
         <field description="Counter timer value." format="hex0x" id="WWDT@TV@COUNT"
                offset="[23:0]"/>
      </register>
      <register description="Watchdog Warning Interrupt compare value." format="hex0x"
                id="WWDT@WARNINT"
                offset="0x14"
                size="4">
         <field description="Watchdog warning interrupt compare value." format="hex0x"
                id="WWDT@WARNINT@WARNINT"
                offset="[9:0]"/>
      </register>
      <register description="Watchdog Window compare value." format="hex0x" id="WWDT@WINDOW"
                offset="0x18"
                size="4">
         <field description="Watchdog window value." format="hex0x" id="WWDT@WINDOW@WINDOW"
                offset="[23:0]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x Multi-Rate Timer (MRT)" id="MRT0"
               size="0xfc">
      <register description="MRT Time interval value register. This value is loaded into the TIMER register."
                format="hex0x"
                id="MRT0@CHANNEL0-INTVAL"
                offset="0x0"
                size="4">
         <field description="Time interval load value. This value is loaded into the TIMERn register and the MRT channel n starts counting down from IVALUE -1. If the timer is idle, writing a non-zero value to this bit field starts the timer immediately. If the timer is running, writing a zero to this bit field does the following: If LOAD = 1, the timer stops immediately. If LOAD = 0, the timer stops at the end of the time interval."
                format="hex0x"
                id="MRT0@CHANNEL0-INTVAL@IVALUE"
                offset="[23:0]"/>
         <field description="Determines how the timer interval value IVALUE -1 is loaded into the TIMERn register. This bit is write-only. Reading this bit always returns 0."
                format="enum"
                enum="d1e105635"
                id="MRT0@CHANNEL0-INTVAL@LOAD"
                offset="[31]"/>
      </register>
      <register description="MRT Timer register. This register reads the value of the down-counter."
                format="hex0x"
                id="MRT0@CHANNEL0-TIMER"
                offset="0x4"
                readOnly="true"
                size="4">
         <field description="Holds the current timer value of the down-counter. The initial value of the TIMERn register is loaded as IVALUE - 1 from the INTVALn register either at the end of the time interval or immediately in the following cases: INTVALn register is updated in the idle state. INTVALn register is updated with LOAD = 1. When the timer is in idle state, reading this bit fields returns -1 (0x00FF FFFF)."
                format="hex0x"
                id="MRT0@CHANNEL0-TIMER@VALUE"
                offset="[23:0]"/>
      </register>
      <register description="MRT Control register. This register controls the MRT modes."
                format="hex0x"
                id="MRT0@CHANNEL0-CTRL"
                offset="0x8"
                size="4">
         <field description="Enable the TIMERn interrupt." format="enum" enum="d1e105755"
                id="MRT0@CHANNEL0-CTRL@INTEN"
                offset="[0]"/>
         <field description="Selects timer mode." format="enum" enum="d1e105801"
                id="MRT0@CHANNEL0-CTRL@MODE"
                offset="[2:1]"/>
      </register>
      <register description="MRT Status register." format="hex0x" id="MRT0@CHANNEL0-STAT"
                offset="0xc"
                size="4">
         <field description="Monitors the interrupt flag." format="enum" enum="d1e105887"
                id="MRT0@CHANNEL0-STAT@INTFLAG"
                offset="[0]"/>
         <field description="Indicates the state of TIMERn. This bit is read-only."
                format="enum"
                enum="d1e105933"
                id="MRT0@CHANNEL0-STAT@RUN"
                offset="[1]"/>
         <field description="Channel In Use flag. Operating details depend on the MULTITASK bit in the MODCFG register, and affects the use of IDLE_CH. See Idle channel register for details of the two operating modes."
                format="enum"
                enum="d1e105979"
                id="MRT0@CHANNEL0-STAT@INUSE"
                offset="[2]"/>
      </register>
      <register description="MRT Time interval value register. This value is loaded into the TIMER register."
                format="hex0x"
                id="MRT0@CHANNEL1-INTVAL"
                offset="0x10"
                size="4">
         <field description="Time interval load value. This value is loaded into the TIMERn register and the MRT channel n starts counting down from IVALUE -1. If the timer is idle, writing a non-zero value to this bit field starts the timer immediately. If the timer is running, writing a zero to this bit field does the following: If LOAD = 1, the timer stops immediately. If LOAD = 0, the timer stops at the end of the time interval."
                format="hex0x"
                id="MRT0@CHANNEL1-INTVAL@IVALUE"
                offset="[23:0]"/>
         <field description="Determines how the timer interval value IVALUE -1 is loaded into the TIMERn register. This bit is write-only. Reading this bit always returns 0."
                format="enum"
                enum="d1e105635"
                id="MRT0@CHANNEL1-INTVAL@LOAD"
                offset="[31]"/>
      </register>
      <register description="MRT Timer register. This register reads the value of the down-counter."
                format="hex0x"
                id="MRT0@CHANNEL1-TIMER"
                offset="0x14"
                readOnly="true"
                size="4">
         <field description="Holds the current timer value of the down-counter. The initial value of the TIMERn register is loaded as IVALUE - 1 from the INTVALn register either at the end of the time interval or immediately in the following cases: INTVALn register is updated in the idle state. INTVALn register is updated with LOAD = 1. When the timer is in idle state, reading this bit fields returns -1 (0x00FF FFFF)."
                format="hex0x"
                id="MRT0@CHANNEL1-TIMER@VALUE"
                offset="[23:0]"/>
      </register>
      <register description="MRT Control register. This register controls the MRT modes."
                format="hex0x"
                id="MRT0@CHANNEL1-CTRL"
                offset="0x18"
                size="4">
         <field description="Enable the TIMERn interrupt." format="enum" enum="d1e105755"
                id="MRT0@CHANNEL1-CTRL@INTEN"
                offset="[0]"/>
         <field description="Selects timer mode." format="enum" enum="d1e105801"
                id="MRT0@CHANNEL1-CTRL@MODE"
                offset="[2:1]"/>
      </register>
      <register description="MRT Status register." format="hex0x" id="MRT0@CHANNEL1-STAT"
                offset="0x1c"
                size="4">
         <field description="Monitors the interrupt flag." format="enum" enum="d1e105887"
                id="MRT0@CHANNEL1-STAT@INTFLAG"
                offset="[0]"/>
         <field description="Indicates the state of TIMERn. This bit is read-only."
                format="enum"
                enum="d1e105933"
                id="MRT0@CHANNEL1-STAT@RUN"
                offset="[1]"/>
         <field description="Channel In Use flag. Operating details depend on the MULTITASK bit in the MODCFG register, and affects the use of IDLE_CH. See Idle channel register for details of the two operating modes."
                format="enum"
                enum="d1e105979"
                id="MRT0@CHANNEL1-STAT@INUSE"
                offset="[2]"/>
      </register>
      <register description="MRT Time interval value register. This value is loaded into the TIMER register."
                format="hex0x"
                id="MRT0@CHANNEL2-INTVAL"
                offset="0x20"
                size="4">
         <field description="Time interval load value. This value is loaded into the TIMERn register and the MRT channel n starts counting down from IVALUE -1. If the timer is idle, writing a non-zero value to this bit field starts the timer immediately. If the timer is running, writing a zero to this bit field does the following: If LOAD = 1, the timer stops immediately. If LOAD = 0, the timer stops at the end of the time interval."
                format="hex0x"
                id="MRT0@CHANNEL2-INTVAL@IVALUE"
                offset="[23:0]"/>
         <field description="Determines how the timer interval value IVALUE -1 is loaded into the TIMERn register. This bit is write-only. Reading this bit always returns 0."
                format="enum"
                enum="d1e105635"
                id="MRT0@CHANNEL2-INTVAL@LOAD"
                offset="[31]"/>
      </register>
      <register description="MRT Timer register. This register reads the value of the down-counter."
                format="hex0x"
                id="MRT0@CHANNEL2-TIMER"
                offset="0x24"
                readOnly="true"
                size="4">
         <field description="Holds the current timer value of the down-counter. The initial value of the TIMERn register is loaded as IVALUE - 1 from the INTVALn register either at the end of the time interval or immediately in the following cases: INTVALn register is updated in the idle state. INTVALn register is updated with LOAD = 1. When the timer is in idle state, reading this bit fields returns -1 (0x00FF FFFF)."
                format="hex0x"
                id="MRT0@CHANNEL2-TIMER@VALUE"
                offset="[23:0]"/>
      </register>
      <register description="MRT Control register. This register controls the MRT modes."
                format="hex0x"
                id="MRT0@CHANNEL2-CTRL"
                offset="0x28"
                size="4">
         <field description="Enable the TIMERn interrupt." format="enum" enum="d1e105755"
                id="MRT0@CHANNEL2-CTRL@INTEN"
                offset="[0]"/>
         <field description="Selects timer mode." format="enum" enum="d1e105801"
                id="MRT0@CHANNEL2-CTRL@MODE"
                offset="[2:1]"/>
      </register>
      <register description="MRT Status register." format="hex0x" id="MRT0@CHANNEL2-STAT"
                offset="0x2c"
                size="4">
         <field description="Monitors the interrupt flag." format="enum" enum="d1e105887"
                id="MRT0@CHANNEL2-STAT@INTFLAG"
                offset="[0]"/>
         <field description="Indicates the state of TIMERn. This bit is read-only."
                format="enum"
                enum="d1e105933"
                id="MRT0@CHANNEL2-STAT@RUN"
                offset="[1]"/>
         <field description="Channel In Use flag. Operating details depend on the MULTITASK bit in the MODCFG register, and affects the use of IDLE_CH. See Idle channel register for details of the two operating modes."
                format="enum"
                enum="d1e105979"
                id="MRT0@CHANNEL2-STAT@INUSE"
                offset="[2]"/>
      </register>
      <register description="MRT Time interval value register. This value is loaded into the TIMER register."
                format="hex0x"
                id="MRT0@CHANNEL3-INTVAL"
                offset="0x30"
                size="4">
         <field description="Time interval load value. This value is loaded into the TIMERn register and the MRT channel n starts counting down from IVALUE -1. If the timer is idle, writing a non-zero value to this bit field starts the timer immediately. If the timer is running, writing a zero to this bit field does the following: If LOAD = 1, the timer stops immediately. If LOAD = 0, the timer stops at the end of the time interval."
                format="hex0x"
                id="MRT0@CHANNEL3-INTVAL@IVALUE"
                offset="[23:0]"/>
         <field description="Determines how the timer interval value IVALUE -1 is loaded into the TIMERn register. This bit is write-only. Reading this bit always returns 0."
                format="enum"
                enum="d1e105635"
                id="MRT0@CHANNEL3-INTVAL@LOAD"
                offset="[31]"/>
      </register>
      <register description="MRT Timer register. This register reads the value of the down-counter."
                format="hex0x"
                id="MRT0@CHANNEL3-TIMER"
                offset="0x34"
                readOnly="true"
                size="4">
         <field description="Holds the current timer value of the down-counter. The initial value of the TIMERn register is loaded as IVALUE - 1 from the INTVALn register either at the end of the time interval or immediately in the following cases: INTVALn register is updated in the idle state. INTVALn register is updated with LOAD = 1. When the timer is in idle state, reading this bit fields returns -1 (0x00FF FFFF)."
                format="hex0x"
                id="MRT0@CHANNEL3-TIMER@VALUE"
                offset="[23:0]"/>
      </register>
      <register description="MRT Control register. This register controls the MRT modes."
                format="hex0x"
                id="MRT0@CHANNEL3-CTRL"
                offset="0x38"
                size="4">
         <field description="Enable the TIMERn interrupt." format="enum" enum="d1e105755"
                id="MRT0@CHANNEL3-CTRL@INTEN"
                offset="[0]"/>
         <field description="Selects timer mode." format="enum" enum="d1e105801"
                id="MRT0@CHANNEL3-CTRL@MODE"
                offset="[2:1]"/>
      </register>
      <register description="MRT Status register." format="hex0x" id="MRT0@CHANNEL3-STAT"
                offset="0x3c"
                size="4">
         <field description="Monitors the interrupt flag." format="enum" enum="d1e105887"
                id="MRT0@CHANNEL3-STAT@INTFLAG"
                offset="[0]"/>
         <field description="Indicates the state of TIMERn. This bit is read-only."
                format="enum"
                enum="d1e105933"
                id="MRT0@CHANNEL3-STAT@RUN"
                offset="[1]"/>
         <field description="Channel In Use flag. Operating details depend on the MULTITASK bit in the MODCFG register, and affects the use of IDLE_CH. See Idle channel register for details of the two operating modes."
                format="enum"
                enum="d1e105979"
                id="MRT0@CHANNEL3-STAT@INUSE"
                offset="[2]"/>
      </register>
      <register description="Module Configuration register. This register provides information about this particular MRT instance, and allows choosing an overall mode for the idle channel feature."
                format="hex0x"
                id="MRT0@MODCFG"
                offset="0xf0"
                size="4">
         <field description="Identifies the number of channels in this MRT.(4 channels on this device.)"
                format="hex0x"
                id="MRT0@MODCFG@NOC"
                offset="[3:0]"/>
         <field description="Identifies the number of timer bits in this MRT. (24 bits wide on this device.)"
                format="hex0x"
                id="MRT0@MODCFG@NOB"
                offset="[8:4]"/>
         <field description="Selects the operating mode for the INUSE flags and the IDLE_CH register."
                format="enum"
                enum="d1e106090"
                id="MRT0@MODCFG@MULTITASK"
                offset="[31]"/>
      </register>
      <register description="Idle channel register. This register returns the number of the first idle channel."
                format="hex0x"
                id="MRT0@IDLE-CH"
                offset="0xf4"
                readOnly="true"
                size="4">
         <field description="Idle channel. Reading the CHAN bits, returns the lowest idle timer channel. The number is positioned such that it can be used as an offset from the MRT base address in order to access the registers for the allocated channel. If all timer channels are running, CHAN = 0xF. See text above for more details."
                format="hex0x"
                id="MRT0@IDLE-CH@CHAN"
                offset="[7:4]"/>
      </register>
      <register description="Global interrupt flag register" format="hex0x" id="MRT0@IRQ-FLAG"
                offset="0xf8"
                size="4">
         <field description="Monitors the interrupt flag of TIMER0." format="enum"
                enum="d1e106210"
                id="MRT0@IRQ-FLAG@GFLAG0"
                offset="[0]"/>
         <field description="Monitors the interrupt flag of TIMER1. See description of channel 0."
                format="hex0x"
                id="MRT0@IRQ-FLAG@GFLAG1"
                offset="[1]"/>
         <field description="Monitors the interrupt flag of TIMER2. See description of channel 0."
                format="hex0x"
                id="MRT0@IRQ-FLAG@GFLAG2"
                offset="[2]"/>
         <field description="Monitors the interrupt flag of TIMER3. See description of channel 0."
                format="hex0x"
                id="MRT0@IRQ-FLAG@GFLAG3"
                offset="[3]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x Micro-tick Timer (UTICK)" id="UTICK0"
               size="0x20">
      <register description="Control register." format="hex0x" id="UTICK0@CTRL" offset="0x0"
                size="4">
         <field description="Tick interval value. The delay will be equal to DELAYVAL + 1 periods of the timer clock. The minimum usable value is 1, for a delay of 2 timer clocks. A value of 0 stops the timer."
                format="hex0x"
                id="UTICK0@CTRL@DELAYVAL"
                offset="[30:0]"/>
         <field description="Repeat delay. 0 = One-time delay. 1 = Delay repeats continuously."
                format="hex0x"
                id="UTICK0@CTRL@REPEAT"
                offset="[31]"/>
      </register>
      <register description="Status register." format="hex0x" id="UTICK0@STAT" offset="0x4"
                size="4">
         <field description="Interrupt flag. 0 = No interrupt is pending. 1 = An interrupt is pending. A write of any value to this register clears this flag."
                format="hex0x"
                id="UTICK0@STAT@INTR"
                offset="[0]"/>
         <field description="Active flag. 0 = The Micro-Tick Timer is stopped. 1 = The Micro-Tick Timer is currently active."
                format="hex0x"
                id="UTICK0@STAT@ACTIVE"
                offset="[1]"/>
      </register>
      <register description="Capture configuration register." format="hex0x" id="UTICK0@CFG"
                offset="0x8"
                size="4">
         <field description="Enable Capture 0. 1 = Enabled, 0 = Disabled." format="hex0x"
                id="UTICK0@CFG@CAPEN0"
                offset="[0]"/>
         <field description="Enable Capture 1. 1 = Enabled, 0 = Disabled." format="hex0x"
                id="UTICK0@CFG@CAPEN1"
                offset="[1]"/>
         <field description="Enable Capture 2. 1 = Enabled, 0 = Disabled." format="hex0x"
                id="UTICK0@CFG@CAPEN2"
                offset="[2]"/>
         <field description="Enable Capture 3. 1 = Enabled, 0 = Disabled." format="hex0x"
                id="UTICK0@CFG@CAPEN3"
                offset="[3]"/>
         <field description="Capture Polarity 0. 0 = Positive edge capture, 1 = Negative edge capture."
                format="hex0x"
                id="UTICK0@CFG@CAPPOL0"
                offset="[8]"/>
         <field description="Capture Polarity 1. 0 = Positive edge capture, 1 = Negative edge capture."
                format="hex0x"
                id="UTICK0@CFG@CAPPOL1"
                offset="[9]"/>
         <field description="Capture Polarity 2. 0 = Positive edge capture, 1 = Negative edge capture."
                format="hex0x"
                id="UTICK0@CFG@CAPPOL2"
                offset="[10]"/>
         <field description="Capture Polarity 3. 0 = Positive edge capture, 1 = Negative edge capture."
                format="hex0x"
                id="UTICK0@CFG@CAPPOL3"
                offset="[11]"/>
      </register>
      <register description="Capture clear register." format="hex0x" id="UTICK0@CAPCLR"
                offset="0xc"
                writeOnly="true"
                size="4">
         <field description="Clear capture 0. Writing 1 to this bit clears the CAP0 register value."
                format="hex0x"
                id="UTICK0@CAPCLR@CAPCLR0"
                offset="[0]"/>
         <field description="Clear capture 1. Writing 1 to this bit clears the CAP1 register value."
                format="hex0x"
                id="UTICK0@CAPCLR@CAPCLR1"
                offset="[1]"/>
         <field description="Clear capture 2. Writing 1 to this bit clears the CAP2 register value."
                format="hex0x"
                id="UTICK0@CAPCLR@CAPCLR2"
                offset="[2]"/>
         <field description="Clear capture 3. Writing 1 to this bit clears the CAP3 register value."
                format="hex0x"
                id="UTICK0@CAPCLR@CAPCLR3"
                offset="[3]"/>
      </register>
      <register description="Capture register ." format="hex0x" id="UTICK0@CAP0" offset="0x10"
                readOnly="true"
                size="4">
         <field description="Capture value for the related capture event (UTICK_CAPn. Note: the value is 1 lower than the actual value of the Micro-tick Timer at the moment of the capture event."
                format="hex0x"
                id="UTICK0@CAP0@CAP-VALUE"
                offset="[30:0]"/>
         <field description="Capture Valid. When 1, a value has been captured based on a transition of the related UTICK_CAPn pin. Cleared by writing to the related bit in the CAPCLR register."
                format="hex0x"
                id="UTICK0@CAP0@VALID"
                offset="[31]"/>
      </register>
      <register description="Capture register ." format="hex0x" id="UTICK0@CAP1" offset="0x14"
                readOnly="true"
                size="4">
         <field description="Capture value for the related capture event (UTICK_CAPn. Note: the value is 1 lower than the actual value of the Micro-tick Timer at the moment of the capture event."
                format="hex0x"
                id="UTICK0@CAP1@CAP-VALUE"
                offset="[30:0]"/>
         <field description="Capture Valid. When 1, a value has been captured based on a transition of the related UTICK_CAPn pin. Cleared by writing to the related bit in the CAPCLR register."
                format="hex0x"
                id="UTICK0@CAP1@VALID"
                offset="[31]"/>
      </register>
      <register description="Capture register ." format="hex0x" id="UTICK0@CAP2" offset="0x18"
                readOnly="true"
                size="4">
         <field description="Capture value for the related capture event (UTICK_CAPn. Note: the value is 1 lower than the actual value of the Micro-tick Timer at the moment of the capture event."
                format="hex0x"
                id="UTICK0@CAP2@CAP-VALUE"
                offset="[30:0]"/>
         <field description="Capture Valid. When 1, a value has been captured based on a transition of the related UTICK_CAPn pin. Cleared by writing to the related bit in the CAPCLR register."
                format="hex0x"
                id="UTICK0@CAP2@VALID"
                offset="[31]"/>
      </register>
      <register description="Capture register ." format="hex0x" id="UTICK0@CAP3" offset="0x1c"
                readOnly="true"
                size="4">
         <field description="Capture value for the related capture event (UTICK_CAPn. Note: the value is 1 lower than the actual value of the Micro-tick Timer at the moment of the capture event."
                format="hex0x"
                id="UTICK0@CAP3@CAP-VALUE"
                offset="[30:0]"/>
         <field description="Capture Valid. When 1, a value has been captured based on a transition of the related UTICK_CAPn pin. Cleared by writing to the related bit in the CAPCLR register."
                format="hex0x"
                id="UTICK0@CAP3@VALID"
                offset="[31]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC54S60x/LPC5460x EEPROM controller" id="EEPROM"
               size="0xff0">
      <register description="EEPROM command register" format="hex0x" id="EEPROM@CMD"
                offset="0x0"
                size="4">
         <field description="Command." format="hex0x" id="EEPROM@CMD@CMD" offset="[2:0]"/>
      </register>
      <register description="EEPROM read wait state register" format="hex0x"
                id="EEPROM@RWSTATE"
                offset="0x8"
                size="4">
         <field description="Wait states 2 (minus 1 encoded)." format="hex0x"
                id="EEPROM@RWSTATE@RPHASE2"
                offset="[7:0]"/>
         <field description="Wait states 1 (minus 1 encoded)." format="hex0x"
                id="EEPROM@RWSTATE@RPHASE1"
                offset="[15:8]"/>
      </register>
      <register description="EEPROM auto programming register" format="hex0x"
                id="EEPROM@AUTOPROG"
                offset="0xc"
                size="4">
         <field description="Auto programming mode: 00 = auto programming off 01 = erase/program cycle is triggered after 1 word is written 10 = erase/program cycle is triggered after a write to AHB address ending with ."
                format="hex0x"
                id="EEPROM@AUTOPROG@AUTOPROG"
                offset="[1:0]"/>
      </register>
      <register description="EEPROM wait state register" format="hex0x" id="EEPROM@WSTATE"
                offset="0x10"
                size="4">
         <field description="Wait states for phase 3 (minus 1 encoded)." format="hex0x"
                id="EEPROM@WSTATE@PHASE3"
                offset="[7:0]"/>
         <field description="Wait states for phase 2 (minus 1 encoded)." format="hex0x"
                id="EEPROM@WSTATE@PHASE2"
                offset="[15:8]"/>
         <field description="Wait states for phase 1 (minus 1 encoded)." format="hex0x"
                id="EEPROM@WSTATE@PHASE1"
                offset="[23:16]"/>
         <field description="Lock timing parameters for write, erase and program operation 0 = WSTATE and CLKDIV registers have R/W access 1 = WSTATE and CLKDIV registers have R only access."
                format="hex0x"
                id="EEPROM@WSTATE@LCK-PARWEP"
                offset="[31]"/>
      </register>
      <register description="EEPROM clock divider register" format="hex0x" id="EEPROM@CLKDIV"
                offset="0x14"
                size="4">
         <field description="Division factor (minus 1 encoded)." format="hex0x"
                id="EEPROM@CLKDIV@CLKDIV"
                offset="[15:0]"/>
      </register>
      <register description="EEPROM power-down register" format="hex0x" id="EEPROM@PWRDWN"
                offset="0x18"
                size="4">
         <field description="Power down mode bit." format="hex0x" id="EEPROM@PWRDWN@PWRDWN"
                offset="[0]"/>
      </register>
      <register description="EEPROM interrupt enable clear" format="hex0x" id="EEPROM@INTENCLR"
                offset="0xfd8"
                writeOnly="true"
                size="4">
         <field description="Clear program operation finished interrupt enable bit for EEPROM."
                format="hex0x"
                id="EEPROM@INTENCLR@PROG-CLR-EN"
                offset="[2]"/>
      </register>
      <register description="EEPROM interrupt enable set" format="hex0x" id="EEPROM@INTENSET"
                offset="0xfdc"
                writeOnly="true"
                size="4">
         <field description="Set program operation finished interrupt enable bit for EEPROM device 1."
                format="hex0x"
                id="EEPROM@INTENSET@PROG-SET-EN"
                offset="[2]"/>
      </register>
      <register description="EEPROM interrupt status" format="hex0x" id="EEPROM@INTSTAT"
                offset="0xfe0"
                readOnly="true"
                size="4">
         <field description="EEPROM program operation finished interrupt status bit."
                format="hex0x"
                id="EEPROM@INTSTAT@END-OF-PROG"
                offset="[2]"/>
      </register>
      <register description="EEPROM interrupt enable" format="hex0x" id="EEPROM@INTEN"
                offset="0xfe4"
                readOnly="true"
                size="4">
         <field description="EEPROM program operation finished interrupt enable bit."
                format="hex0x"
                id="EEPROM@INTEN@EE-PROG-DONE"
                offset="[2]"/>
      </register>
      <register description="EEPROM interrupt status clear" format="hex0x"
                id="EEPROM@INTSTATCLR"
                offset="0xfe8"
                writeOnly="true"
                size="4">
         <field description="Clear program operation finished interrupt status bit for EEPROM device."
                format="hex0x"
                id="EEPROM@INTSTATCLR@PROG-CLR-ST"
                offset="[2]"/>
      </register>
      <register description="EEPROM interrupt status set" format="hex0x" id="EEPROM@INTSTATSET"
                offset="0xfec"
                writeOnly="true"
                size="4">
         <field description="Set program operation finished interrupt status bit for EEPROM device."
                format="hex0x"
                id="EEPROM@INTSTATSET@PROG-SET-ST"
                offset="[2]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4"
               description="This is the description of component otpc It is an eFUSE OTP (One Time Programmable memory) controller with APB bus interface. More details will follow."
               id="OTPC"
               size="0x40">
      <register description="Register for reading the AES key." format="hex0x"
                id="OTPC@AESKEY0"
                offset="0x10"
                readOnly="true"
                size="4">
         <field description="AES key." format="hex0x" id="OTPC@AESKEY0@KEY" offset="[31:0]"/>
      </register>
      <register description="Register for reading the AES key." format="hex0x"
                id="OTPC@AESKEY1"
                offset="0x14"
                readOnly="true"
                size="4">
         <field description="AES key." format="hex0x" id="OTPC@AESKEY1@KEY" offset="[31:0]"/>
      </register>
      <register description="Register for reading the AES key." format="hex0x"
                id="OTPC@AESKEY2"
                offset="0x18"
                readOnly="true"
                size="4">
         <field description="AES key." format="hex0x" id="OTPC@AESKEY2@KEY" offset="[31:0]"/>
      </register>
      <register description="Register for reading the AES key." format="hex0x"
                id="OTPC@AESKEY3"
                offset="0x1c"
                readOnly="true"
                size="4">
         <field description="AES key." format="hex0x" id="OTPC@AESKEY3@KEY" offset="[31:0]"/>
      </register>
      <register description="Register for reading the AES key." format="hex0x"
                id="OTPC@AESKEY4"
                offset="0x20"
                readOnly="true"
                size="4">
         <field description="AES key." format="hex0x" id="OTPC@AESKEY4@KEY" offset="[31:0]"/>
      </register>
      <register description="Register for reading the AES key." format="hex0x"
                id="OTPC@AESKEY5"
                offset="0x24"
                readOnly="true"
                size="4">
         <field description="AES key." format="hex0x" id="OTPC@AESKEY5@KEY" offset="[31:0]"/>
      </register>
      <register description="Register for reading the AES key." format="hex0x"
                id="OTPC@AESKEY6"
                offset="0x28"
                readOnly="true"
                size="4">
         <field description="AES key." format="hex0x" id="OTPC@AESKEY6@KEY" offset="[31:0]"/>
      </register>
      <register description="Register for reading the AES key." format="hex0x"
                id="OTPC@AESKEY7"
                offset="0x2c"
                readOnly="true"
                size="4">
         <field description="AES key." format="hex0x" id="OTPC@AESKEY7@KEY" offset="[31:0]"/>
      </register>
      <register description="ECRP options." format="hex0x" id="OTPC@ECRP" offset="0x30"
                readOnly="true"
                size="4">
         <field description="Disable or enable CRP mass erase." format="hex0x"
                id="OTPC@ECRP@CRP-MASS-ERASE-DISABLE"
                offset="[4]"/>
         <field description="This bit controls the ability to enable checking for ECRP in IAP functions."
                format="hex0x"
                id="OTPC@ECRP@IAP-PROTECTION-ENABLE"
                offset="[5]"/>
         <field description="This bit controls the ability to enter ISP mode using the ISP pin."
                format="hex0x"
                id="OTPC@ECRP@CRP-ISP-DISABLE-PIN"
                offset="[6]"/>
         <field description="This bit controls the ability to re-invoke ISP using IAP routines."
                format="hex0x"
                id="OTPC@ECRP@CRP-ISP-DISABLE-IAP"
                offset="[7]"/>
         <field description="This bit controls how 0 is treated when read as a ECRP value.."
                format="hex0x"
                id="OTPC@ECRP@CRP-ALLOW-ZERO"
                offset="[9]"/>
         <field description="0 =&gt; Enable SWD/JTAG; 1 =&gt; Disable SWD/JTAG.." format="hex0x"
                id="OTPC@ECRP@JTAG-DISABLE"
                offset="[31]"/>
      </register>
      <register description="User application specific options." format="hex0x" id="OTPC@USER0"
                offset="0x38"
                readOnly="true"
                size="4">
         <field description="User application specific option." format="hex0x"
                id="OTPC@USER0@USER0"
                offset="[31:0]"/>
      </register>
      <register description="User application specific options." format="hex0x" id="OTPC@USER1"
                offset="0x3c"
                readOnly="true"
                size="4">
         <field description="User application specific option." format="hex0x"
                id="OTPC@USER1@USER1"
                offset="[31:0]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x Real-Time Clock (RTC)" id="RTC"
               size="0x60">
      <register description="RTC control register" format="hex0x" id="RTC@CTRL" offset="0x0"
                size="4">
         <field description="Software reset control" format="enum" enum="d1e107867"
                id="RTC@CTRL@SWRESET"
                offset="[0]"/>
         <field description="RTC 1 Hz timer alarm flag status." format="enum" enum="d1e107913"
                id="RTC@CTRL@ALARM1HZ"
                offset="[2]"/>
         <field description="RTC 1 kHz timer wake-up flag status." format="enum"
                enum="d1e107959"
                id="RTC@CTRL@WAKE1KHZ"
                offset="[3]"/>
         <field description="RTC 1 Hz timer alarm enable for Deep power-down." format="enum"
                enum="d1e108005"
                id="RTC@CTRL@ALARMDPD-EN"
                offset="[4]"/>
         <field description="RTC 1 kHz timer wake-up enable for Deep power-down." format="enum"
                enum="d1e108051"
                id="RTC@CTRL@WAKEDPD-EN"
                offset="[5]"/>
         <field description="RTC 1 kHz clock enable. This bit can be set to 0 to conserve power if the 1 kHz timer is not used. This bit has no effect when the RTC is disabled (bit 7 of this register is 0)."
                format="enum"
                enum="d1e108098"
                id="RTC@CTRL@RTC1KHZ-EN"
                offset="[6]"/>
         <field description="RTC enable." format="enum" enum="d1e108144" id="RTC@CTRL@RTC-EN"
                offset="[7]"/>
         <field description="RTC oscillator power-down control." format="enum" enum="d1e108190"
                id="RTC@CTRL@RTC-OSC-PD"
                offset="[8]"/>
      </register>
      <register description="RTC match register" format="hex0x" id="RTC@MATCH" offset="0x4"
                size="4">
         <field description="Contains the match value against which the 1 Hz RTC timer will be compared to set the alarm flag RTC_ALARM and generate an alarm interrupt/wake-up if enabled."
                format="hex0x"
                id="RTC@MATCH@MATVAL"
                offset="[31:0]"/>
      </register>
      <register description="RTC counter register" format="hex0x" id="RTC@COUNT" offset="0x8"
                size="4">
         <field description="A read reflects the current value of the main, 1 Hz RTC timer. A write loads a new initial value into the timer. The RTC counter will count up continuously at a 1 Hz rate once the RTC Software Reset is removed (by clearing bit 0 of the CTRL register). Only write to this register when the RTC_EN bit in the RTC CTRL Register is 0. The counter increments one second after the RTC_EN bit is set."
                format="hex0x"
                id="RTC@COUNT@VAL"
                offset="[31:0]"/>
      </register>
      <register description="High-resolution/wake-up timer control register" format="hex0x"
                id="RTC@WAKE"
                offset="0xc"
                size="4">
         <field description="A read reflects the current value of the high-resolution/wake-up timer. A write pre-loads a start count value into the wake-up timer and initializes a count-down sequence. Do not write to this register while counting is in progress."
                format="hex0x"
                id="RTC@WAKE@VAL"
                offset="[15:0]"/>
      </register>
      <register description="General Purpose register" format="hex0x" id="RTC@GPREG0"
                offset="0x40"
                size="4">
         <field description="Data retained during Deep power-down mode or loss of main power as long as VBAT is supplied."
                format="hex0x"
                id="RTC@GPREG0@GPDATA"
                offset="[31:0]"/>
      </register>
      <register description="General Purpose register" format="hex0x" id="RTC@GPREG1"
                offset="0x44"
                size="4">
         <field description="Data retained during Deep power-down mode or loss of main power as long as VBAT is supplied."
                format="hex0x"
                id="RTC@GPREG1@GPDATA"
                offset="[31:0]"/>
      </register>
      <register description="General Purpose register" format="hex0x" id="RTC@GPREG2"
                offset="0x48"
                size="4">
         <field description="Data retained during Deep power-down mode or loss of main power as long as VBAT is supplied."
                format="hex0x"
                id="RTC@GPREG2@GPDATA"
                offset="[31:0]"/>
      </register>
      <register description="General Purpose register" format="hex0x" id="RTC@GPREG3"
                offset="0x4c"
                size="4">
         <field description="Data retained during Deep power-down mode or loss of main power as long as VBAT is supplied."
                format="hex0x"
                id="RTC@GPREG3@GPDATA"
                offset="[31:0]"/>
      </register>
      <register description="General Purpose register" format="hex0x" id="RTC@GPREG4"
                offset="0x50"
                size="4">
         <field description="Data retained during Deep power-down mode or loss of main power as long as VBAT is supplied."
                format="hex0x"
                id="RTC@GPREG4@GPDATA"
                offset="[31:0]"/>
      </register>
      <register description="General Purpose register" format="hex0x" id="RTC@GPREG5"
                offset="0x54"
                size="4">
         <field description="Data retained during Deep power-down mode or loss of main power as long as VBAT is supplied."
                format="hex0x"
                id="RTC@GPREG5@GPDATA"
                offset="[31:0]"/>
      </register>
      <register description="General Purpose register" format="hex0x" id="RTC@GPREG6"
                offset="0x58"
                size="4">
         <field description="Data retained during Deep power-down mode or loss of main power as long as VBAT is supplied."
                format="hex0x"
                id="RTC@GPREG6@GPDATA"
                offset="[31:0]"/>
      </register>
      <register description="General Purpose register" format="hex0x" id="RTC@GPREG7"
                offset="0x5c"
                size="4">
         <field description="Data retained during Deep power-down mode or loss of main power as long as VBAT is supplied."
                format="hex0x"
                id="RTC@GPREG7@GPDATA"
                offset="[31:0]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC54S60x/LPC5460x Repetitive Interrupt Timer(RIT)"
               id="RIT"
               size="0x20">
      <register description="Compare value LSB register" format="hex0x" id="RIT@COMPVAL"
                offset="0x0"
                size="4">
         <field description="." format="hex0x" id="RIT@COMPVAL@RICOMP" offset="[31:0]"/>
      </register>
      <register description="Mask LSB register" format="hex0x" id="RIT@MASK" offset="0x4"
                size="4">
         <field description="Mask register." format="hex0x" id="RIT@MASK@RIMASK"
                offset="[31:0]"/>
      </register>
      <register description="Control register" format="hex0x" id="RIT@CTRL" offset="0x8"
                size="4">
         <field description="Interrupt flag." format="hex0x" id="RIT@CTRL@RITINT" offset="[0]"/>
         <field description="Timer enable clear." format="hex0x" id="RIT@CTRL@RITENCLR"
                offset="[1]"/>
         <field description="Timer enable for debug." format="hex0x" id="RIT@CTRL@RITENBR"
                offset="[2]"/>
         <field description="Timer enable." format="hex0x" id="RIT@CTRL@RITEN" offset="[3]"/>
      </register>
      <register description="Counter LSB register" format="hex0x" id="RIT@COUNTER" offset="0xc"
                size="4">
         <field description="32 LSBs of the up counter." format="hex0x"
                id="RIT@COUNTER@RICOUNTER"
                offset="[31:0]"/>
      </register>
      <register description="Compare value MSB register" format="hex0x" id="RIT@COMPVAL-H"
                offset="0x10"
                size="4">
         <field description="Compare value MSB register." format="hex0x"
                id="RIT@COMPVAL-H@RICOMP"
                offset="[15:0]"/>
      </register>
      <register description="Mask MSB register" format="hex0x" id="RIT@MASK-H" offset="0x14"
                size="4">
         <field description="Mask register." format="hex0x" id="RIT@MASK-H@RIMASK"
                offset="[15:0]"/>
      </register>
      <register description="Counter MSB register" format="hex0x" id="RIT@COUNTER-H"
                offset="0x1c"
                size="4">
         <field description="16 LSBs of the up counter." format="hex0x"
                id="RIT@COUNTER-H@RICOUNTER"
                offset="[15:0]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC54S60x/LPC5460x Flash signature generator"
               id="FMC"
               size="0xfec">
      <register description="Control register" format="hex0x" id="FMC@FCTR" offset="0x0"
                size="4">
         <field description="Value must be 0 for signature generation." format="hex0x"
                id="FMC@FCTR@FS-RD0"
                offset="[3]"/>
         <field description="Value must be 1 for signature generation." format="hex0x"
                id="FMC@FCTR@FS-RD1"
                offset="[4]"/>
      </register>
      <register description="Wait state register" format="hex0x" id="FMC@FBWST" offset="0x10"
                size="4">
         <field description="Wait states for signature generation." format="hex0x"
                id="FMC@FBWST@WAITSTATES"
                offset="[7:0]"/>
      </register>
      <register description="Signature start address register" format="hex0x" id="FMC@FMSSTART"
                offset="0x20"
                size="4">
         <field description="Signature generation start address (corresponds to AHB byte address bits[20:4])."
                format="hex0x"
                id="FMC@FMSSTART@START"
                offset="[16:0]"/>
      </register>
      <register description="Signature stop-address register" format="hex0x" id="FMC@FMSSTOP"
                offset="0x24"
                size="4">
         <field description="Stop address for signature generation (the word specified by STOP is included in the address range)."
                format="hex0x"
                id="FMC@FMSSTOP@STOP"
                offset="[16:0]"/>
         <field description="When this bit is written to 1, signature generation starts."
                format="hex0x"
                id="FMC@FMSSTOP@SIG-START"
                offset="[17]"/>
      </register>
      <register description="Words of 128-bit signature word" format="hex0x" id="FMC@FMSW0"
                offset="0x2c"
                readOnly="true"
                size="4">
         <field description="Words of 128-bit signature (bits)." format="hex0x"
                id="FMC@FMSW0@SW"
                offset="[31:0]"/>
      </register>
      <register description="Words of 128-bit signature word" format="hex0x" id="FMC@FMSW1"
                offset="0x30"
                readOnly="true"
                size="4">
         <field description="Words of 128-bit signature (bits)." format="hex0x"
                id="FMC@FMSW1@SW"
                offset="[31:0]"/>
      </register>
      <register description="Words of 128-bit signature word" format="hex0x" id="FMC@FMSW2"
                offset="0x34"
                readOnly="true"
                size="4">
         <field description="Words of 128-bit signature (bits)." format="hex0x"
                id="FMC@FMSW2@SW"
                offset="[31:0]"/>
      </register>
      <register description="Words of 128-bit signature word" format="hex0x" id="FMC@FMSW3"
                offset="0x38"
                readOnly="true"
                size="4">
         <field description="Words of 128-bit signature (bits)." format="hex0x"
                id="FMC@FMSW3@SW"
                offset="[31:0]"/>
      </register>
      <register description="Signature generation status register" format="hex0x"
                id="FMC@FMSTAT"
                offset="0xfe0"
                readOnly="true"
                size="4">
         <field description="When 1, a previously started signature generation has completed."
                format="hex0x"
                id="FMC@FMSTAT@SIG-DONE"
                offset="[2]"/>
      </register>
      <register description="Signature generation status clear register" format="hex0x"
                id="FMC@FMSTATCLR"
                offset="0xfe8"
                writeOnly="true"
                size="4">
         <field description="Writing a 1 to this bits clears the signature generation completion flag (SIG_DONE) in the FMSTAT register."
                format="hex0x"
                id="FMC@FMSTATCLR@SIG-DONE-CLR"
                offset="[2]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5460x/LPC54S60x Smart Card Interface"
               id="SMARTCARD0"
               size="0x4c">
      <register description="Divisor Latch LSB" format="hex0x" id="SMARTCARD0@DLL" offset="0x0"
                size="4">
         <field description="The SCIn Divisor Latch LSB Register, along with the SCInDLM register, determines the baud rate of the SCIn."
                format="hex0x"
                id="SMARTCARD0@DLL@DLLSB"
                offset="[7:0]"/>
      </register>
      <register description="Receiver Buffer Register" format="hex0x" id="SMARTCARD0@RBR"
                offset="0x0"
                readOnly="true"
                size="4">
         <field description="The SCIn Receiver Buffer Register contains the oldest received byte in the SCIn Rx FIFO."
                format="hex0x"
                id="SMARTCARD0@RBR@RBR"
                offset="[7:0]"/>
      </register>
      <register description="Transmit Holding Register" format="hex0x" id="SMARTCARD0@THR"
                offset="0x0"
                writeOnly="true"
                size="4">
         <field description="Writing to the SCIn Transmit Holding Register causes the data to be stored in the SCIn transmit FIFO."
                format="hex0x"
                id="SMARTCARD0@THR@THR"
                offset="[7:0]"/>
      </register>
      <register description="Divisor Latch MSB" format="hex0x" id="SMARTCARD0@DLM" offset="0x4"
                size="4">
         <field description="The SCIn Divisor Latch MSB Register, along with the DLL register, determines the baud rate of the SCIn."
                format="hex0x"
                id="SMARTCARD0@DLM@DLMSB"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Enable Register" format="hex0x" id="SMARTCARD0@IER"
                offset="0x4"
                size="4">
         <field description="RBR Interrupt Enable." format="hex0x" id="SMARTCARD0@IER@RBRIE"
                offset="[0]"/>
         <field description="THRE Interrupt Enable." format="hex0x" id="SMARTCARD0@IER@THREIE"
                offset="[1]"/>
         <field description="RX Line Status Interrupt Enable." format="hex0x"
                id="SMARTCARD0@IER@RXIE"
                offset="[2]"/>
      </register>
      <register description="FIFO Control Register" format="hex0x" id="SMARTCARD0@FCR"
                offset="0x8"
                writeOnly="true"
                size="4">
         <field description="FIFO Enable." format="hex0x" id="SMARTCARD0@FCR@FIFOEN"
                offset="[0]"/>
         <field description="RX FIFO Reset." format="hex0x" id="SMARTCARD0@FCR@RXFIFORES"
                offset="[1]"/>
         <field description="TX FIFO Reset." format="hex0x" id="SMARTCARD0@FCR@TXFIFORES"
                offset="[2]"/>
         <field description="DMA Mode Select." format="hex0x" id="SMARTCARD0@FCR@DMAMODE"
                offset="[3]"/>
         <field description="RX Trigger Level." format="hex0x" id="SMARTCARD0@FCR@RXTRIGLVL"
                offset="[7:6]"/>
      </register>
      <register description="Interrupt ID Register" format="hex0x" id="SMARTCARD0@IIR"
                offset="0x8"
                readOnly="true"
                size="4">
         <field description="Interrupt status." format="hex0x" id="SMARTCARD0@IIR@INTSTATUS"
                offset="[0]"/>
         <field description="Interrupt identification." format="hex0x"
                id="SMARTCARD0@IIR@INTID"
                offset="[3:1]"/>
         <field description="Copies of SCInFCR[0]." format="hex0x"
                id="SMARTCARD0@IIR@FIFOENABLE"
                offset="[7:6]"/>
      </register>
      <register description="Line Control Register" format="hex0x" id="SMARTCARD0@LCR"
                offset="0xc"
                size="4">
         <field description="Word Length Select." format="hex0x" id="SMARTCARD0@LCR@WLS"
                offset="[1:0]"/>
         <field description="Stop Bit Select." format="hex0x" id="SMARTCARD0@LCR@SBS"
                offset="[2]"/>
         <field description="Parity Enable." format="hex0x" id="SMARTCARD0@LCR@PE" offset="[3]"/>
         <field description="Parity Select." format="hex0x" id="SMARTCARD0@LCR@PS"
                offset="[5:4]"/>
         <field description="Divisor Latch Access Bit." format="hex0x" id="SMARTCARD0@LCR@DLAB"
                offset="[7]"/>
      </register>
      <register description="Line Status Register" format="hex0x" id="SMARTCARD0@LSR"
                offset="0x14"
                readOnly="true"
                size="4">
         <field description="Receiver Data Ready." format="hex0x" id="SMARTCARD0@LSR@RDR"
                offset="[0]"/>
         <field description="Overrun Error." format="hex0x" id="SMARTCARD0@LSR@OE" offset="[1]"/>
         <field description="Parity Error." format="hex0x" id="SMARTCARD0@LSR@PE" offset="[2]"/>
         <field description="Framing Error." format="hex0x" id="SMARTCARD0@LSR@FE" offset="[3]"/>
         <field description="Transmitter Holding Register Empty." format="hex0x"
                id="SMARTCARD0@LSR@THRE"
                offset="[5]"/>
         <field description="Transmitter Empty." format="hex0x" id="SMARTCARD0@LSR@TEMT"
                offset="[6]"/>
         <field description="Error in RX FIFO." format="hex0x" id="SMARTCARD0@LSR@RXFE"
                offset="[7]"/>
      </register>
      <register description="Scratch Pad Register" format="hex0x" id="SMARTCARD0@SCR"
                offset="0x1c"
                size="4">
         <field description="A readable, writable byte." format="hex0x" id="SMARTCARD0@SCR@PAD"
                offset="[7:0]"/>
      </register>
      <register description="Oversampling register" format="hex0x" id="SMARTCARD0@OSR"
                offset="0x2c"
                size="4">
         <field description="Fractional part of the oversampling ratio, in units of 1/8th of an input clock period."
                format="hex0x"
                id="SMARTCARD0@OSR@OSFRAC"
                offset="[3:1]"/>
         <field description="Integer part of the oversampling ratio, minus 1." format="hex0x"
                id="SMARTCARD0@OSR@OSINT"
                offset="[7:4]"/>
         <field description="These bits act as a more-significant extension of the OSint field, allowing an oversampling ratio up to 2048 as required by ISO7816-3."
                format="hex0x"
                id="SMARTCARD0@OSR@FDINT"
                offset="[14:8]"/>
      </register>
      <register description="Smart Card Interface control register" format="hex0x"
                id="SMARTCARD0@SCICTRL"
                offset="0x48"
                size="4">
         <field description="Smart Card Interface Enable." format="hex0x"
                id="SMARTCARD0@SCICTRL@SCIEN"
                offset="[0]"/>
         <field description="NACK response disable." format="hex0x"
                id="SMARTCARD0@SCICTRL@NACKDIS"
                offset="[1]"/>
         <field description="Protocol selection as defined in the ISO7816-3 standard."
                format="hex0x"
                id="SMARTCARD0@SCICTRL@PROTSEL"
                offset="[2]"/>
         <field description="Maximum number of retransmissions in case of a negative acknowledge (protocol T=0)."
                format="hex0x"
                id="SMARTCARD0@SCICTRL@TXRETRY"
                offset="[7:5]"/>
         <field description="Extra guard time." format="hex0x"
                id="SMARTCARD0@SCICTRL@GUARDTIME"
                offset="[15:8]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5460x/LPC54S60x Smart Card Interface"
               id="SMARTCARD1"
               size="0x4c">
      <register description="Divisor Latch LSB" format="hex0x" id="SMARTCARD0@DLL" offset="0x0"
                size="4">
         <field description="The SCIn Divisor Latch LSB Register, along with the SCInDLM register, determines the baud rate of the SCIn."
                format="hex0x"
                id="SMARTCARD0@DLL@DLLSB"
                offset="[7:0]"/>
      </register>
      <register description="Receiver Buffer Register" format="hex0x" id="SMARTCARD0@RBR"
                offset="0x0"
                readOnly="true"
                size="4">
         <field description="The SCIn Receiver Buffer Register contains the oldest received byte in the SCIn Rx FIFO."
                format="hex0x"
                id="SMARTCARD0@RBR@RBR"
                offset="[7:0]"/>
      </register>
      <register description="Transmit Holding Register" format="hex0x" id="SMARTCARD0@THR"
                offset="0x0"
                writeOnly="true"
                size="4">
         <field description="Writing to the SCIn Transmit Holding Register causes the data to be stored in the SCIn transmit FIFO."
                format="hex0x"
                id="SMARTCARD0@THR@THR"
                offset="[7:0]"/>
      </register>
      <register description="Divisor Latch MSB" format="hex0x" id="SMARTCARD0@DLM" offset="0x4"
                size="4">
         <field description="The SCIn Divisor Latch MSB Register, along with the DLL register, determines the baud rate of the SCIn."
                format="hex0x"
                id="SMARTCARD0@DLM@DLMSB"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Enable Register" format="hex0x" id="SMARTCARD0@IER"
                offset="0x4"
                size="4">
         <field description="RBR Interrupt Enable." format="hex0x" id="SMARTCARD0@IER@RBRIE"
                offset="[0]"/>
         <field description="THRE Interrupt Enable." format="hex0x" id="SMARTCARD0@IER@THREIE"
                offset="[1]"/>
         <field description="RX Line Status Interrupt Enable." format="hex0x"
                id="SMARTCARD0@IER@RXIE"
                offset="[2]"/>
      </register>
      <register description="FIFO Control Register" format="hex0x" id="SMARTCARD0@FCR"
                offset="0x8"
                writeOnly="true"
                size="4">
         <field description="FIFO Enable." format="hex0x" id="SMARTCARD0@FCR@FIFOEN"
                offset="[0]"/>
         <field description="RX FIFO Reset." format="hex0x" id="SMARTCARD0@FCR@RXFIFORES"
                offset="[1]"/>
         <field description="TX FIFO Reset." format="hex0x" id="SMARTCARD0@FCR@TXFIFORES"
                offset="[2]"/>
         <field description="DMA Mode Select." format="hex0x" id="SMARTCARD0@FCR@DMAMODE"
                offset="[3]"/>
         <field description="RX Trigger Level." format="hex0x" id="SMARTCARD0@FCR@RXTRIGLVL"
                offset="[7:6]"/>
      </register>
      <register description="Interrupt ID Register" format="hex0x" id="SMARTCARD0@IIR"
                offset="0x8"
                readOnly="true"
                size="4">
         <field description="Interrupt status." format="hex0x" id="SMARTCARD0@IIR@INTSTATUS"
                offset="[0]"/>
         <field description="Interrupt identification." format="hex0x"
                id="SMARTCARD0@IIR@INTID"
                offset="[3:1]"/>
         <field description="Copies of SCInFCR[0]." format="hex0x"
                id="SMARTCARD0@IIR@FIFOENABLE"
                offset="[7:6]"/>
      </register>
      <register description="Line Control Register" format="hex0x" id="SMARTCARD0@LCR"
                offset="0xc"
                size="4">
         <field description="Word Length Select." format="hex0x" id="SMARTCARD0@LCR@WLS"
                offset="[1:0]"/>
         <field description="Stop Bit Select." format="hex0x" id="SMARTCARD0@LCR@SBS"
                offset="[2]"/>
         <field description="Parity Enable." format="hex0x" id="SMARTCARD0@LCR@PE" offset="[3]"/>
         <field description="Parity Select." format="hex0x" id="SMARTCARD0@LCR@PS"
                offset="[5:4]"/>
         <field description="Divisor Latch Access Bit." format="hex0x" id="SMARTCARD0@LCR@DLAB"
                offset="[7]"/>
      </register>
      <register description="Line Status Register" format="hex0x" id="SMARTCARD0@LSR"
                offset="0x14"
                readOnly="true"
                size="4">
         <field description="Receiver Data Ready." format="hex0x" id="SMARTCARD0@LSR@RDR"
                offset="[0]"/>
         <field description="Overrun Error." format="hex0x" id="SMARTCARD0@LSR@OE" offset="[1]"/>
         <field description="Parity Error." format="hex0x" id="SMARTCARD0@LSR@PE" offset="[2]"/>
         <field description="Framing Error." format="hex0x" id="SMARTCARD0@LSR@FE" offset="[3]"/>
         <field description="Transmitter Holding Register Empty." format="hex0x"
                id="SMARTCARD0@LSR@THRE"
                offset="[5]"/>
         <field description="Transmitter Empty." format="hex0x" id="SMARTCARD0@LSR@TEMT"
                offset="[6]"/>
         <field description="Error in RX FIFO." format="hex0x" id="SMARTCARD0@LSR@RXFE"
                offset="[7]"/>
      </register>
      <register description="Scratch Pad Register" format="hex0x" id="SMARTCARD0@SCR"
                offset="0x1c"
                size="4">
         <field description="A readable, writable byte." format="hex0x" id="SMARTCARD0@SCR@PAD"
                offset="[7:0]"/>
      </register>
      <register description="Oversampling register" format="hex0x" id="SMARTCARD0@OSR"
                offset="0x2c"
                size="4">
         <field description="Fractional part of the oversampling ratio, in units of 1/8th of an input clock period."
                format="hex0x"
                id="SMARTCARD0@OSR@OSFRAC"
                offset="[3:1]"/>
         <field description="Integer part of the oversampling ratio, minus 1." format="hex0x"
                id="SMARTCARD0@OSR@OSINT"
                offset="[7:4]"/>
         <field description="These bits act as a more-significant extension of the OSint field, allowing an oversampling ratio up to 2048 as required by ISO7816-3."
                format="hex0x"
                id="SMARTCARD0@OSR@FDINT"
                offset="[14:8]"/>
      </register>
      <register description="Smart Card Interface control register" format="hex0x"
                id="SMARTCARD0@SCICTRL"
                offset="0x48"
                size="4">
         <field description="Smart Card Interface Enable." format="hex0x"
                id="SMARTCARD0@SCICTRL@SCIEN"
                offset="[0]"/>
         <field description="NACK response disable." format="hex0x"
                id="SMARTCARD0@SCICTRL@NACKDIS"
                offset="[1]"/>
         <field description="Protocol selection as defined in the ISO7816-3 standard."
                format="hex0x"
                id="SMARTCARD0@SCICTRL@PROTSEL"
                offset="[2]"/>
         <field description="Maximum number of retransmissions in case of a negative acknowledge (protocol T=0)."
                format="hex0x"
                id="SMARTCARD0@SCICTRL@TXRETRY"
                offset="[7:5]"/>
         <field description="Extra guard time." format="hex0x"
                id="SMARTCARD0@SCICTRL@GUARDTIME"
                offset="[15:8]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4"
               description="LPC5411x Asynchronous system configuration (ASYNC_SYSCON)"
               id="ASYNC-SYSCON"
               size="0x24">
      <register description="Async peripheral reset control" format="hex0x"
                id="ASYNC-SYSCON@ASYNCPRESETCTRL"
                offset="0x0"
                size="4">
         <field description="Standard counter/timer CTIMER3 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function."
                format="hex0x"
                id="ASYNC-SYSCON@ASYNCPRESETCTRL@CTIMER3"
                offset="[13]"/>
         <field description="Standard counter/timer CTIMER4 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function."
                format="hex0x"
                id="ASYNC-SYSCON@ASYNCPRESETCTRL@CTIMER4"
                offset="[14]"/>
      </register>
      <register description="Set bits in ASYNCPRESETCTRL" format="hex0x"
                id="ASYNC-SYSCON@ASYNCPRESETCTRLSET"
                offset="0x4"
                writeOnly="true"
                size="4">
         <field description="Writing ones to this register sets the corresponding bit or bits in the ASYNCPRESETCTRL register, if they are implemented. Bits that do not correspond to defined bits in ASYNCPRESETCTRL are reserved and only zeroes should be written to them."
                format="hex0x"
                id="ASYNC-SYSCON@ASYNCPRESETCTRLSET@ARST-SET"
                offset="[31:0]"/>
      </register>
      <register description="Clear bits in ASYNCPRESETCTRL" format="hex0x"
                id="ASYNC-SYSCON@ASYNCPRESETCTRLCLR"
                offset="0x8"
                writeOnly="true"
                size="4">
         <field description="Writing ones to this register clears the corresponding bit or bits in the ASYNCPRESETCTRL register, if they are implemented. Bits that do not correspond to defined bits in ASYNCPRESETCTRL are reserved and only zeroes should be written to them."
                format="hex0x"
                id="ASYNC-SYSCON@ASYNCPRESETCTRLCLR@ARST-CLR"
                offset="[31:0]"/>
      </register>
      <register description="Async peripheral clock control" format="hex0x"
                id="ASYNC-SYSCON@ASYNCAPBCLKCTRL"
                offset="0x10"
                size="4">
         <field description="Controls the clock for CTIMER3. 0 = Disable; 1 = Enable."
                format="hex0x"
                id="ASYNC-SYSCON@ASYNCAPBCLKCTRL@CTIMER3"
                offset="[13]"/>
         <field description="Controls the clock for CTIMER4. 0 = Disable; 1 = Enable."
                format="hex0x"
                id="ASYNC-SYSCON@ASYNCAPBCLKCTRL@CTIMER4"
                offset="[14]"/>
      </register>
      <register description="Set bits in ASYNCAPBCLKCTRL" format="hex0x"
                id="ASYNC-SYSCON@ASYNCAPBCLKCTRLSET"
                offset="0x14"
                writeOnly="true"
                size="4">
         <field description="Writing ones to this register sets the corresponding bit or bits in the ASYNCAPBCLKCTRL register, if they are implemented. Bits that do not correspond to defined bits in ASYNCPRESETCTRL are reserved and only zeroes should be written to them."
                format="hex0x"
                id="ASYNC-SYSCON@ASYNCAPBCLKCTRLSET@ACLK-SET"
                offset="[31:0]"/>
      </register>
      <register description="Clear bits in ASYNCAPBCLKCTRL" format="hex0x"
                id="ASYNC-SYSCON@ASYNCAPBCLKCTRLCLR"
                offset="0x18"
                writeOnly="true"
                size="4">
         <field description="Writing ones to this register clears the corresponding bit or bits in the ASYNCAPBCLKCTRL register, if they are implemented. Bits that do not correspond to defined bits in ASYNCAPBCLKCTRL are reserved and only zeroes should be written to them."
                format="hex0x"
                id="ASYNC-SYSCON@ASYNCAPBCLKCTRLCLR@ACLK-CLR"
                offset="[31:0]"/>
      </register>
      <register description="Async APB clock source select A" format="hex0x"
                id="ASYNC-SYSCON@ASYNCAPBCLKSELA"
                offset="0x20"
                size="4">
         <field description="Clock source for asynchronous clock source selector A"
                format="enum"
                enum="d1e110700"
                id="ASYNC-SYSCON@ASYNCAPBCLKSELA@SEL"
                offset="[1:0]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x SPI Flash Interface (SPIFI)" id="SPIFI0"
               size="0x20">
      <register description="SPIFI control register" format="hex0x" id="SPIFI0@CTRL"
                offset="0x0"
                size="4">
         <field description="This field contains the number of serial clock periods without the processor reading data in memory mode, which will cause the SPIFI hardware to terminate the command by driving the CS pin high and negating the CMD bit in the Status register. (This allows the flash memory to enter a lower-power state.) If the processor reads data from the flash region after a time-out, the command in the Memory Command Register is issued again."
                format="hex0x"
                id="SPIFI0@CTRL@TIMEOUT"
                offset="[15:0]"/>
         <field description="This field controls the minimum CS high time, expressed as a number of serial clock periods minus one."
                format="hex0x"
                id="SPIFI0@CTRL@CSHIGH"
                offset="[19:16]"/>
         <field description="This bit allows conditioning of memory mode prefetches based on the AHB HPROT (instruction/data) access information. A 1 in this register means that the SPIFI will not attempt a speculative prefetch when it encounters data accesses."
                format="hex0x"
                id="SPIFI0@CTRL@D-PRFTCH-DIS"
                offset="[21]"/>
         <field description="If this bit is 1 when a command ends, the SPIFI will assert its interrupt request output. See INTRQ in the status register for further details."
                format="hex0x"
                id="SPIFI0@CTRL@INTEN"
                offset="[22]"/>
         <field description="SPI Mode 3 select." format="enum" enum="d1e110910"
                id="SPIFI0@CTRL@MODE3"
                offset="[23]"/>
         <field description="Cache prefetching enable. The SPIFI includes an internal cache. A 1 in this bit disables prefetching of cache lines."
                format="enum"
                enum="d1e110957"
                id="SPIFI0@CTRL@PRFTCH-DIS"
                offset="[27]"/>
         <field description="Select dual protocol." format="enum" enum="d1e111003"
                id="SPIFI0@CTRL@DUAL"
                offset="[28]"/>
         <field description="Select active clock edge for input data." format="enum"
                enum="d1e111049"
                id="SPIFI0@CTRL@RFCLK"
                offset="[29]"/>
         <field description="Feedback clock select." format="enum" enum="d1e111095"
                id="SPIFI0@CTRL@FBCLK"
                offset="[30]"/>
         <field description="A 1 in this bit enables the DMA Request output from the SPIFI. Set this bit only when a DMA channel is used to transfer data in peripheral mode. Do not set this bit when a DMA channel is used for memory-to-memory transfers from the SPIFI memory area. DMAEN should only be used in Command mode."
                format="hex0x"
                id="SPIFI0@CTRL@DMAEN"
                offset="[31]"/>
      </register>
      <register description="SPIFI command register" format="hex0x" id="SPIFI0@CMD"
                offset="0x4"
                size="4">
         <field description="Except when the POLL bit in this register is 1, this field controls how many data bytes are in the command. 0 indicates that the command does not contain a data field."
                format="hex0x"
                id="SPIFI0@CMD@DATALEN"
                offset="[13:0]"/>
         <field description="This bit should be written as 1 only with an opcode that a) contains an input data field, and b) causes the serial flash device to return byte status repetitively (e.g., a Read Status command). When this bit is 1, the SPIFI hardware continues to read bytes until the test specified by the DATALEN field is met. The hardware tests the bit in each status byte selected by DATALEN bits 2:0, until a bit is found that is equal to DATALEN bit 3. When the test succeeds, the SPIFI captures the byte that meets this test so that it can be read from the Data Register, and terminates the command by raising CS. The end-of-command interrupt can be enabled to inform software when this occurs"
                format="hex0x"
                id="SPIFI0@CMD@POLL"
                offset="[14]"/>
         <field description="If the DATALEN field is not zero, this bit controls the direction of the data:"
                format="enum"
                enum="d1e111223"
                id="SPIFI0@CMD@DOUT"
                offset="[15]"/>
         <field description="This field controls how many intermediate bytes precede the data. (Each such byte may require 8 or 2 SCK cycles, depending on whether the intermediate field is in serial, 2-bit, or 4-bit format.) Intermediate bytes are output by the SPIFI, and include post-address control information, dummy and delay bytes. See the description of the Intermediate Data register for the contents of such bytes."
                format="hex0x"
                id="SPIFI0@CMD@INTLEN"
                offset="[18:16]"/>
         <field description="This field controls how the fields of the command are sent."
                format="enum"
                enum="d1e111287"
                id="SPIFI0@CMD@FIELDFORM"
                offset="[20:19]"/>
         <field description="This field controls the opcode and address fields." format="enum"
                enum="d1e111358"
                id="SPIFI0@CMD@FRAMEFORM"
                offset="[23:21]"/>
         <field description="The opcode of the command (not used for some FRAMEFORM values)."
                format="hex0x"
                id="SPIFI0@CMD@OPCODE"
                offset="[31:24]"/>
      </register>
      <register description="SPIFI address register" format="hex0x" id="SPIFI0@ADDR"
                offset="0x8"
                size="4">
         <field description="Address." format="hex0x" id="SPIFI0@ADDR@ADDRESS" offset="[31:0]"/>
      </register>
      <register description="SPIFI intermediate data register" format="hex0x" id="SPIFI0@IDATA"
                offset="0xc"
                size="4">
         <field description="Value of intermediate bytes." format="hex0x"
                id="SPIFI0@IDATA@IDATA"
                offset="[31:0]"/>
      </register>
      <register description="SPIFI limit register" format="hex0x" id="SPIFI0@CLIMIT"
                offset="0x10"
                size="4">
         <field description="Zero-based upper limit of cacheable memory" format="hex0x"
                id="SPIFI0@CLIMIT@CLIMIT"
                offset="[31:0]"/>
      </register>
      <register description="SPIFI data register" format="hex0x" id="SPIFI0@DATA" offset="0x14"
                size="4">
         <field description="Input or output data" format="hex0x" id="SPIFI0@DATA@DATA"
                offset="[31:0]"/>
      </register>
      <register description="SPIFI memory command register" format="hex0x" id="SPIFI0@MCMD"
                offset="0x18"
                size="4">
         <field description="This bit should be written as 0." format="hex0x"
                id="SPIFI0@MCMD@POLL"
                offset="[14]"/>
         <field description="This bit should be written as 0." format="hex0x"
                id="SPIFI0@MCMD@DOUT"
                offset="[15]"/>
         <field description="This field controls how many intermediate bytes precede the data. (Each such byte may require 8 or 2 SCK cycles, depending on whether the intermediate field is in serial, 2-bit, or 4-bit format.) Intermediate bytes are output by the SPIFI, and include post-address control information, dummy and delay bytes. See the description of the Intermediate Data register for the contents of such bytes."
                format="hex0x"
                id="SPIFI0@MCMD@INTLEN"
                offset="[18:16]"/>
         <field description="This field controls how the fields of the command are sent."
                format="enum"
                enum="d1e111750"
                id="SPIFI0@MCMD@FIELDFORM"
                offset="[20:19]"/>
         <field description="This field controls the opcode and address fields." format="enum"
                enum="d1e111820"
                id="SPIFI0@MCMD@FRAMEFORM"
                offset="[23:21]"/>
         <field description="The opcode of the command (not used for some FRAMEFORM values)."
                format="hex0x"
                id="SPIFI0@MCMD@OPCODE"
                offset="[31:24]"/>
      </register>
      <register description="SPIFI status register" format="hex0x" id="SPIFI0@STAT"
                offset="0x1c"
                size="4">
         <field description="This bit is set when software successfully writes the Memory Command register, and is cleared by Reset or by writing a 1 to the RESET bit in this register."
                format="hex0x"
                id="SPIFI0@STAT@MCINIT"
                offset="[0]"/>
         <field description="This bit is 1 when the Command register is written. It is cleared by a hardware reset, a write to the RESET bit in this register, or the deassertion of CS which indicates that the command has completed communication with the SPI Flash."
                format="hex0x"
                id="SPIFI0@STAT@CMD"
                offset="[1]"/>
         <field description="Write a 1 to this bit to abort a current command or memory mode. This bit is cleared when the hardware is ready for a new command to be written to the Command register."
                format="hex0x"
                id="SPIFI0@STAT@RESET"
                offset="[4]"/>
         <field description="This bit reflects the SPIFI interrupt request. Write a 1 to this bit to clear it. This bit is set when a CMD was previously 1 and has been cleared due to the deassertion of CS."
                format="hex0x"
                id="SPIFI0@STAT@INTRQ"
                offset="[5]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4"
               description="LPC54S60x/LPC5460x External Memory Controller (EMC)"
               id="EMC"
               size="0x264">
      <register description="Controls operation of the memory controller" format="hex0x"
                id="EMC@CONTROL"
                offset="0x0"
                size="4">
         <field description="EMC Enable." format="hex0x" id="EMC@CONTROL@E" offset="[0]"/>
         <field description="Address mirror." format="hex0x" id="EMC@CONTROL@M" offset="[1]"/>
         <field description="Low-power mode." format="hex0x" id="EMC@CONTROL@L" offset="[2]"/>
      </register>
      <register description="Provides EMC status information" format="hex0x" id="EMC@STATUS"
                offset="0x4"
                readOnly="true"
                size="4">
         <field description="Busy." format="hex0x" id="EMC@STATUS@B" offset="[0]"/>
         <field description="Write buffer status." format="hex0x" id="EMC@STATUS@S"
                offset="[1]"/>
         <field description="Self-refresh acknowledge." format="hex0x" id="EMC@STATUS@SA"
                offset="[2]"/>
      </register>
      <register description="Configures operation of the memory controller" format="hex0x"
                id="EMC@CONFIG"
                offset="0x8"
                size="4">
         <field description="Endian mode." format="hex0x" id="EMC@CONFIG@EM" offset="[0]"/>
         <field description="This bit must contain 0 for proper operation of the EMC."
                format="hex0x"
                id="EMC@CONFIG@CLKR"
                offset="[8]"/>
      </register>
      <register description="Controls dynamic memory operation" format="hex0x"
                id="EMC@DYNAMICCONTROL"
                offset="0x20"
                size="4">
         <field description="Dynamic memory clock enable." format="hex0x"
                id="EMC@DYNAMICCONTROL@CE"
                offset="[0]"/>
         <field description="Dynamic memory clock control." format="hex0x"
                id="EMC@DYNAMICCONTROL@CS"
                offset="[1]"/>
         <field description="Self-refresh request, EMCSREFREQ." format="hex0x"
                id="EMC@DYNAMICCONTROL@SR"
                offset="[2]"/>
         <field description="Memory clock control." format="hex0x" id="EMC@DYNAMICCONTROL@MMC"
                offset="[5]"/>
         <field description="SDRAM initialization." format="hex0x" id="EMC@DYNAMICCONTROL@I"
                offset="[8:7]"/>
      </register>
      <register description="Configures dynamic memory refresh" format="hex0x"
                id="EMC@DYNAMICREFRESH"
                offset="0x24"
                size="4">
         <field description="Refresh timer." format="hex0x" id="EMC@DYNAMICREFRESH@REFRESH"
                offset="[10:0]"/>
      </register>
      <register description="Configures dynamic memory read strategy" format="hex0x"
                id="EMC@DYNAMICREADCONFIG"
                offset="0x28"
                size="4">
         <field description="Read data strategy." format="hex0x" id="EMC@DYNAMICREADCONFIG@RD"
                offset="[1:0]"/>
      </register>
      <register description="Precharge command period" format="hex0x" id="EMC@DYNAMICRP"
                offset="0x30"
                size="4">
         <field description="Precharge command period." format="hex0x" id="EMC@DYNAMICRP@TRP"
                offset="[3:0]"/>
      </register>
      <register description="Active to precharge command period" format="hex0x"
                id="EMC@DYNAMICRAS"
                offset="0x34"
                size="4">
         <field description="Active to precharge command period." format="hex0x"
                id="EMC@DYNAMICRAS@TRAS"
                offset="[3:0]"/>
      </register>
      <register description="Self-refresh exit time" format="hex0x" id="EMC@DYNAMICSREX"
                offset="0x38"
                size="4">
         <field description="Self-refresh exit time." format="hex0x" id="EMC@DYNAMICSREX@TSREX"
                offset="[3:0]"/>
      </register>
      <register description="Last-data-out to active command time" format="hex0x"
                id="EMC@DYNAMICAPR"
                offset="0x3c"
                size="4">
         <field description="Last-data-out to active command time." format="hex0x"
                id="EMC@DYNAMICAPR@TAPR"
                offset="[3:0]"/>
      </register>
      <register description="Data-in to active command time" format="hex0x" id="EMC@DYNAMICDAL"
                offset="0x40"
                size="4">
         <field description="Data-in to active command." format="hex0x"
                id="EMC@DYNAMICDAL@TDAL"
                offset="[3:0]"/>
      </register>
      <register description="Write recovery time" format="hex0x" id="EMC@DYNAMICWR"
                offset="0x44"
                size="4">
         <field description="Write recovery time." format="hex0x" id="EMC@DYNAMICWR@TWR"
                offset="[3:0]"/>
      </register>
      <register description="Selects the active to active command period" format="hex0x"
                id="EMC@DYNAMICRC"
                offset="0x48"
                size="4">
         <field description="Active to active command period." format="hex0x"
                id="EMC@DYNAMICRC@TRC"
                offset="[4:0]"/>
      </register>
      <register description="Selects the auto-refresh period" format="hex0x"
                id="EMC@DYNAMICRFC"
                offset="0x4c"
                size="4">
         <field description="Auto-refresh period and auto-refresh to active command period."
                format="hex0x"
                id="EMC@DYNAMICRFC@TRFC"
                offset="[4:0]"/>
      </register>
      <register description="Time for exit self-refresh to active command" format="hex0x"
                id="EMC@DYNAMICXSR"
                offset="0x50"
                size="4">
         <field description="Exit self-refresh to active command time." format="hex0x"
                id="EMC@DYNAMICXSR@TXSR"
                offset="[4:0]"/>
      </register>
      <register description="Latency for active bank A to active bank B" format="hex0x"
                id="EMC@DYNAMICRRD"
                offset="0x54"
                size="4">
         <field description="Active bank A to active bank B latency 0x0 - 0xE = n + 1 clock cycles."
                format="hex0x"
                id="EMC@DYNAMICRRD@TRRD"
                offset="[3:0]"/>
      </register>
      <register description="Time for load mode register to active command" format="hex0x"
                id="EMC@DYNAMICMRD"
                offset="0x58"
                size="4">
         <field description="Load mode register to active command time." format="hex0x"
                id="EMC@DYNAMICMRD@TMRD"
                offset="[3:0]"/>
      </register>
      <register description="Time for long static memory read and write transfers"
                format="hex0x"
                id="EMC@STATICEXTENDEDWAIT"
                offset="0x80"
                size="4">
         <field description="Extended wait time out." format="hex0x"
                id="EMC@STATICEXTENDEDWAIT@EXTENDEDWAIT"
                offset="[9:0]"/>
      </register>
      <register description="Configuration information for EMC_DYCSx" format="hex0x"
                id="EMC@DYNAMIC0-DYNAMICCONFIG"
                offset="0x100"
                size="4">
         <field description="Memory device." format="hex0x" id="EMC@DYNAMIC0-DYNAMICCONFIG@MD"
                offset="[4:3]"/>
         <field description="See Table 933." format="hex0x" id="EMC@DYNAMIC0-DYNAMICCONFIG@AM0"
                offset="[12:7]"/>
         <field description="See Table 933." format="hex0x" id="EMC@DYNAMIC0-DYNAMICCONFIG@AM1"
                offset="[14]"/>
         <field description="Buffer enable." format="hex0x" id="EMC@DYNAMIC0-DYNAMICCONFIG@B"
                offset="[19]"/>
         <field description="Write protect." format="hex0x" id="EMC@DYNAMIC0-DYNAMICCONFIG@P"
                offset="[20]"/>
      </register>
      <register description="RAS and CAS latencies for EMC_DYCSx" format="hex0x"
                id="EMC@DYNAMIC0-DYNAMICRASCAS"
                offset="0x104"
                size="4">
         <field description="RAS latency (active to read/write delay)." format="hex0x"
                id="EMC@DYNAMIC0-DYNAMICRASCAS@RAS"
                offset="[1:0]"/>
         <field description="CAS latency." format="hex0x" id="EMC@DYNAMIC0-DYNAMICRASCAS@CAS"
                offset="[9:8]"/>
      </register>
      <register description="Configuration information for EMC_DYCSx" format="hex0x"
                id="EMC@DYNAMIC1-DYNAMICCONFIG"
                offset="0x120"
                size="4">
         <field description="Memory device." format="hex0x" id="EMC@DYNAMIC1-DYNAMICCONFIG@MD"
                offset="[4:3]"/>
         <field description="See Table 933." format="hex0x" id="EMC@DYNAMIC1-DYNAMICCONFIG@AM0"
                offset="[12:7]"/>
         <field description="See Table 933." format="hex0x" id="EMC@DYNAMIC1-DYNAMICCONFIG@AM1"
                offset="[14]"/>
         <field description="Buffer enable." format="hex0x" id="EMC@DYNAMIC1-DYNAMICCONFIG@B"
                offset="[19]"/>
         <field description="Write protect." format="hex0x" id="EMC@DYNAMIC1-DYNAMICCONFIG@P"
                offset="[20]"/>
      </register>
      <register description="RAS and CAS latencies for EMC_DYCSx" format="hex0x"
                id="EMC@DYNAMIC1-DYNAMICRASCAS"
                offset="0x124"
                size="4">
         <field description="RAS latency (active to read/write delay)." format="hex0x"
                id="EMC@DYNAMIC1-DYNAMICRASCAS@RAS"
                offset="[1:0]"/>
         <field description="CAS latency." format="hex0x" id="EMC@DYNAMIC1-DYNAMICRASCAS@CAS"
                offset="[9:8]"/>
      </register>
      <register description="Configuration information for EMC_DYCSx" format="hex0x"
                id="EMC@DYNAMIC2-DYNAMICCONFIG"
                offset="0x140"
                size="4">
         <field description="Memory device." format="hex0x" id="EMC@DYNAMIC2-DYNAMICCONFIG@MD"
                offset="[4:3]"/>
         <field description="See Table 933." format="hex0x" id="EMC@DYNAMIC2-DYNAMICCONFIG@AM0"
                offset="[12:7]"/>
         <field description="See Table 933." format="hex0x" id="EMC@DYNAMIC2-DYNAMICCONFIG@AM1"
                offset="[14]"/>
         <field description="Buffer enable." format="hex0x" id="EMC@DYNAMIC2-DYNAMICCONFIG@B"
                offset="[19]"/>
         <field description="Write protect." format="hex0x" id="EMC@DYNAMIC2-DYNAMICCONFIG@P"
                offset="[20]"/>
      </register>
      <register description="RAS and CAS latencies for EMC_DYCSx" format="hex0x"
                id="EMC@DYNAMIC2-DYNAMICRASCAS"
                offset="0x144"
                size="4">
         <field description="RAS latency (active to read/write delay)." format="hex0x"
                id="EMC@DYNAMIC2-DYNAMICRASCAS@RAS"
                offset="[1:0]"/>
         <field description="CAS latency." format="hex0x" id="EMC@DYNAMIC2-DYNAMICRASCAS@CAS"
                offset="[9:8]"/>
      </register>
      <register description="Configuration information for EMC_DYCSx" format="hex0x"
                id="EMC@DYNAMIC3-DYNAMICCONFIG"
                offset="0x160"
                size="4">
         <field description="Memory device." format="hex0x" id="EMC@DYNAMIC3-DYNAMICCONFIG@MD"
                offset="[4:3]"/>
         <field description="See Table 933." format="hex0x" id="EMC@DYNAMIC3-DYNAMICCONFIG@AM0"
                offset="[12:7]"/>
         <field description="See Table 933." format="hex0x" id="EMC@DYNAMIC3-DYNAMICCONFIG@AM1"
                offset="[14]"/>
         <field description="Buffer enable." format="hex0x" id="EMC@DYNAMIC3-DYNAMICCONFIG@B"
                offset="[19]"/>
         <field description="Write protect." format="hex0x" id="EMC@DYNAMIC3-DYNAMICCONFIG@P"
                offset="[20]"/>
      </register>
      <register description="RAS and CAS latencies for EMC_DYCSx" format="hex0x"
                id="EMC@DYNAMIC3-DYNAMICRASCAS"
                offset="0x164"
                size="4">
         <field description="RAS latency (active to read/write delay)." format="hex0x"
                id="EMC@DYNAMIC3-DYNAMICRASCAS@RAS"
                offset="[1:0]"/>
         <field description="CAS latency." format="hex0x" id="EMC@DYNAMIC3-DYNAMICRASCAS@CAS"
                offset="[9:8]"/>
      </register>
      <register description="Configuration for EMC_CSx" format="hex0x"
                id="EMC@STATIC0-STATICCONFIG"
                offset="0x200"
                size="4">
         <field description="Memory width." format="hex0x" id="EMC@STATIC0-STATICCONFIG@MW"
                offset="[1:0]"/>
         <field description="Page mode." format="hex0x" id="EMC@STATIC0-STATICCONFIG@PM"
                offset="[3]"/>
         <field description="Chip select polarity." format="hex0x"
                id="EMC@STATIC0-STATICCONFIG@PC"
                offset="[6]"/>
         <field description="Byte lane state." format="hex0x" id="EMC@STATIC0-STATICCONFIG@PB"
                offset="[7]"/>
         <field description="Extended wait (EW) uses the EMCStaticExtendedWait register to time both the read and write transfers rather than the EMCStaticWaitRd and EMCStaticWaitWr registers."
                format="hex0x"
                id="EMC@STATIC0-STATICCONFIG@EW"
                offset="[8]"/>
         <field description="Buffer enable [2]." format="hex0x" id="EMC@STATIC0-STATICCONFIG@B"
                offset="[19]"/>
         <field description="Write protect." format="hex0x" id="EMC@STATIC0-STATICCONFIG@P"
                offset="[20]"/>
      </register>
      <register description="Delay from EMC_CSx to write enable" format="hex0x"
                id="EMC@STATIC0-STATICWAITWEN"
                offset="0x204"
                size="4">
         <field description="Wait write enable." format="hex0x"
                id="EMC@STATIC0-STATICWAITWEN@WAITWEN"
                offset="[3:0]"/>
      </register>
      <register description="Delay from EMC_CSx or address change, whichever is later, to output enable"
                format="hex0x"
                id="EMC@STATIC0-STATICWAITOEN"
                offset="0x208"
                size="4">
         <field description="Wait output enable." format="hex0x"
                id="EMC@STATIC0-STATICWAITOEN@WAITOEN"
                offset="[3:0]"/>
      </register>
      <register description="Delay from EMC_CSx to a read access" format="hex0x"
                id="EMC@STATIC0-STATICWAITRD"
                offset="0x20c"
                size="4">
         <field description="." format="hex0x" id="EMC@STATIC0-STATICWAITRD@WAITRD"
                offset="[4:0]"/>
      </register>
      <register description="Delay for asynchronous page mode sequential accesses for EMC_CSx"
                format="hex0x"
                id="EMC@STATIC0-STATICWAITPAGE"
                offset="0x210"
                size="4">
         <field description="Asynchronous page mode read after the first read wait states."
                format="hex0x"
                id="EMC@STATIC0-STATICWAITPAGE@WAITPAGE"
                offset="[4:0]"/>
      </register>
      <register description="Delay from EMC_CSx to a write access" format="hex0x"
                id="EMC@STATIC0-STATICWAITWR"
                offset="0x214"
                size="4">
         <field description="Write wait states." format="hex0x"
                id="EMC@STATIC0-STATICWAITWR@WAITWR"
                offset="[4:0]"/>
      </register>
      <register description="Number of bus turnaround cycles EMC_CSx" format="hex0x"
                id="EMC@STATIC0-STATICWAITTURN"
                offset="0x218"
                size="4">
         <field description="Bus turn-around cycles." format="hex0x"
                id="EMC@STATIC0-STATICWAITTURN@WAITTURN"
                offset="[3:0]"/>
      </register>
      <register description="Configuration for EMC_CSx" format="hex0x"
                id="EMC@STATIC1-STATICCONFIG"
                offset="0x220"
                size="4">
         <field description="Memory width." format="hex0x" id="EMC@STATIC1-STATICCONFIG@MW"
                offset="[1:0]"/>
         <field description="Page mode." format="hex0x" id="EMC@STATIC1-STATICCONFIG@PM"
                offset="[3]"/>
         <field description="Chip select polarity." format="hex0x"
                id="EMC@STATIC1-STATICCONFIG@PC"
                offset="[6]"/>
         <field description="Byte lane state." format="hex0x" id="EMC@STATIC1-STATICCONFIG@PB"
                offset="[7]"/>
         <field description="Extended wait (EW) uses the EMCStaticExtendedWait register to time both the read and write transfers rather than the EMCStaticWaitRd and EMCStaticWaitWr registers."
                format="hex0x"
                id="EMC@STATIC1-STATICCONFIG@EW"
                offset="[8]"/>
         <field description="Buffer enable [2]." format="hex0x" id="EMC@STATIC1-STATICCONFIG@B"
                offset="[19]"/>
         <field description="Write protect." format="hex0x" id="EMC@STATIC1-STATICCONFIG@P"
                offset="[20]"/>
      </register>
      <register description="Delay from EMC_CSx to write enable" format="hex0x"
                id="EMC@STATIC1-STATICWAITWEN"
                offset="0x224"
                size="4">
         <field description="Wait write enable." format="hex0x"
                id="EMC@STATIC1-STATICWAITWEN@WAITWEN"
                offset="[3:0]"/>
      </register>
      <register description="Delay from EMC_CSx or address change, whichever is later, to output enable"
                format="hex0x"
                id="EMC@STATIC1-STATICWAITOEN"
                offset="0x228"
                size="4">
         <field description="Wait output enable." format="hex0x"
                id="EMC@STATIC1-STATICWAITOEN@WAITOEN"
                offset="[3:0]"/>
      </register>
      <register description="Delay from EMC_CSx to a read access" format="hex0x"
                id="EMC@STATIC1-STATICWAITRD"
                offset="0x22c"
                size="4">
         <field description="." format="hex0x" id="EMC@STATIC1-STATICWAITRD@WAITRD"
                offset="[4:0]"/>
      </register>
      <register description="Delay for asynchronous page mode sequential accesses for EMC_CSx"
                format="hex0x"
                id="EMC@STATIC1-STATICWAITPAGE"
                offset="0x230"
                size="4">
         <field description="Asynchronous page mode read after the first read wait states."
                format="hex0x"
                id="EMC@STATIC1-STATICWAITPAGE@WAITPAGE"
                offset="[4:0]"/>
      </register>
      <register description="Delay from EMC_CSx to a write access" format="hex0x"
                id="EMC@STATIC1-STATICWAITWR"
                offset="0x234"
                size="4">
         <field description="Write wait states." format="hex0x"
                id="EMC@STATIC1-STATICWAITWR@WAITWR"
                offset="[4:0]"/>
      </register>
      <register description="Number of bus turnaround cycles EMC_CSx" format="hex0x"
                id="EMC@STATIC1-STATICWAITTURN"
                offset="0x238"
                size="4">
         <field description="Bus turn-around cycles." format="hex0x"
                id="EMC@STATIC1-STATICWAITTURN@WAITTURN"
                offset="[3:0]"/>
      </register>
      <register description="Configuration for EMC_CSx" format="hex0x"
                id="EMC@STATIC2-STATICCONFIG"
                offset="0x240"
                size="4">
         <field description="Memory width." format="hex0x" id="EMC@STATIC2-STATICCONFIG@MW"
                offset="[1:0]"/>
         <field description="Page mode." format="hex0x" id="EMC@STATIC2-STATICCONFIG@PM"
                offset="[3]"/>
         <field description="Chip select polarity." format="hex0x"
                id="EMC@STATIC2-STATICCONFIG@PC"
                offset="[6]"/>
         <field description="Byte lane state." format="hex0x" id="EMC@STATIC2-STATICCONFIG@PB"
                offset="[7]"/>
         <field description="Extended wait (EW) uses the EMCStaticExtendedWait register to time both the read and write transfers rather than the EMCStaticWaitRd and EMCStaticWaitWr registers."
                format="hex0x"
                id="EMC@STATIC2-STATICCONFIG@EW"
                offset="[8]"/>
         <field description="Buffer enable [2]." format="hex0x" id="EMC@STATIC2-STATICCONFIG@B"
                offset="[19]"/>
         <field description="Write protect." format="hex0x" id="EMC@STATIC2-STATICCONFIG@P"
                offset="[20]"/>
      </register>
      <register description="Delay from EMC_CSx to write enable" format="hex0x"
                id="EMC@STATIC2-STATICWAITWEN"
                offset="0x244"
                size="4">
         <field description="Wait write enable." format="hex0x"
                id="EMC@STATIC2-STATICWAITWEN@WAITWEN"
                offset="[3:0]"/>
      </register>
      <register description="Delay from EMC_CSx or address change, whichever is later, to output enable"
                format="hex0x"
                id="EMC@STATIC2-STATICWAITOEN"
                offset="0x248"
                size="4">
         <field description="Wait output enable." format="hex0x"
                id="EMC@STATIC2-STATICWAITOEN@WAITOEN"
                offset="[3:0]"/>
      </register>
      <register description="Delay from EMC_CSx to a read access" format="hex0x"
                id="EMC@STATIC2-STATICWAITRD"
                offset="0x24c"
                size="4">
         <field description="." format="hex0x" id="EMC@STATIC2-STATICWAITRD@WAITRD"
                offset="[4:0]"/>
      </register>
      <register description="Delay for asynchronous page mode sequential accesses for EMC_CSx"
                format="hex0x"
                id="EMC@STATIC2-STATICWAITPAGE"
                offset="0x250"
                size="4">
         <field description="Asynchronous page mode read after the first read wait states."
                format="hex0x"
                id="EMC@STATIC2-STATICWAITPAGE@WAITPAGE"
                offset="[4:0]"/>
      </register>
      <register description="Delay from EMC_CSx to a write access" format="hex0x"
                id="EMC@STATIC2-STATICWAITWR"
                offset="0x254"
                size="4">
         <field description="Write wait states." format="hex0x"
                id="EMC@STATIC2-STATICWAITWR@WAITWR"
                offset="[4:0]"/>
      </register>
      <register description="Number of bus turnaround cycles EMC_CSx" format="hex0x"
                id="EMC@STATIC2-STATICWAITTURN"
                offset="0x258"
                size="4">
         <field description="Bus turn-around cycles." format="hex0x"
                id="EMC@STATIC2-STATICWAITTURN@WAITTURN"
                offset="[3:0]"/>
      </register>
      <register description="Configuration for EMC_CSx" format="hex0x"
                id="EMC@STATIC3-STATICCONFIG"
                offset="0x260"
                size="4">
         <field description="Memory width." format="hex0x" id="EMC@STATIC3-STATICCONFIG@MW"
                offset="[1:0]"/>
         <field description="Page mode." format="hex0x" id="EMC@STATIC3-STATICCONFIG@PM"
                offset="[3]"/>
         <field description="Chip select polarity." format="hex0x"
                id="EMC@STATIC3-STATICCONFIG@PC"
                offset="[6]"/>
         <field description="Byte lane state." format="hex0x" id="EMC@STATIC3-STATICCONFIG@PB"
                offset="[7]"/>
         <field description="Extended wait (EW) uses the EMCStaticExtendedWait register to time both the read and write transfers rather than the EMCStaticWaitRd and EMCStaticWaitWr registers."
                format="hex0x"
                id="EMC@STATIC3-STATICCONFIG@EW"
                offset="[8]"/>
         <field description="Buffer enable [2]." format="hex0x" id="EMC@STATIC3-STATICCONFIG@B"
                offset="[19]"/>
         <field description="Write protect." format="hex0x" id="EMC@STATIC3-STATICCONFIG@P"
                offset="[20]"/>
      </register>
      <register description="Delay from EMC_CSx to write enable" format="hex0x"
                id="EMC@STATIC3-STATICWAITWEN"
                offset="0x264"
                size="4">
         <field description="Wait write enable." format="hex0x"
                id="EMC@STATIC3-STATICWAITWEN@WAITWEN"
                offset="[3:0]"/>
      </register>
      <register description="Delay from EMC_CSx or address change, whichever is later, to output enable"
                format="hex0x"
                id="EMC@STATIC3-STATICWAITOEN"
                offset="0x268"
                size="4">
         <field description="Wait output enable." format="hex0x"
                id="EMC@STATIC3-STATICWAITOEN@WAITOEN"
                offset="[3:0]"/>
      </register>
      <register description="Delay from EMC_CSx to a read access" format="hex0x"
                id="EMC@STATIC3-STATICWAITRD"
                offset="0x26c"
                size="4">
         <field description="." format="hex0x" id="EMC@STATIC3-STATICWAITRD@WAITRD"
                offset="[4:0]"/>
      </register>
      <register description="Delay for asynchronous page mode sequential accesses for EMC_CSx"
                format="hex0x"
                id="EMC@STATIC3-STATICWAITPAGE"
                offset="0x270"
                size="4">
         <field description="Asynchronous page mode read after the first read wait states."
                format="hex0x"
                id="EMC@STATIC3-STATICWAITPAGE@WAITPAGE"
                offset="[4:0]"/>
      </register>
      <register description="Delay from EMC_CSx to a write access" format="hex0x"
                id="EMC@STATIC3-STATICWAITWR"
                offset="0x274"
                size="4">
         <field description="Write wait states." format="hex0x"
                id="EMC@STATIC3-STATICWAITWR@WAITWR"
                offset="[4:0]"/>
      </register>
      <register description="Number of bus turnaround cycles EMC_CSx" format="hex0x"
                id="EMC@STATIC3-STATICWAITTURN"
                offset="0x278"
                size="4">
         <field description="Bus turn-around cycles." format="hex0x"
                id="EMC@STATIC3-STATICWAITTURN@WAITTURN"
                offset="[3:0]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x DMA controller" id="DMA0" size="0x5d4">
      <register description="DMA control." format="hex0x" id="DMA0@CTRL" offset="0x0" size="4">
         <field description="DMA controller master enable." format="enum" enum="d1e113791"
                id="DMA0@CTRL@ENABLE"
                offset="[0]"/>
      </register>
      <register description="Interrupt status." format="hex0x" id="DMA0@INTSTAT" offset="0x4"
                readOnly="true"
                size="4">
         <field description="Summarizes whether any enabled interrupts (other than error interrupts) are pending."
                format="enum"
                enum="d1e113865"
                id="DMA0@INTSTAT@ACTIVEINT"
                offset="[1]"/>
         <field description="Summarizes whether any error interrupts are pending."
                format="enum"
                enum="d1e113911"
                id="DMA0@INTSTAT@ACTIVEERRINT"
                offset="[2]"/>
      </register>
      <register description="SRAM address of the channel configuration table." format="hex0x"
                id="DMA0@SRAMBASE"
                offset="0x8"
                size="4">
         <field description="Address bits 31:9 of the beginning of the DMA descriptor table. For 18 channels, the table must begin on a 512 byte boundary."
                format="hex0x"
                id="DMA0@SRAMBASE@OFFSET"
                offset="[31:9]"/>
      </register>
      <register description="Channel Enable read and Set for all DMA channels." format="hex0x"
                id="DMA0@ENABLESET0"
                offset="0x20"
                size="4">
         <field description="Enable for DMA channels. Bit n enables or disables DMA channel n. The number of bits = number of DMA channels in this device. Other bits are reserved. 0 = disabled. 1 = enabled."
                format="hex0x"
                id="DMA0@ENABLESET0@ENA"
                offset="[31:0]"/>
      </register>
      <register description="Channel Enable Clear for all DMA channels." format="hex0x"
                id="DMA0@ENABLECLR0"
                offset="0x28"
                writeOnly="true"
                size="4">
         <field description="Writing ones to this register clears the corresponding bits in ENABLESET0. Bit n clears the channel enable bit n. The number of bits = number of DMA channels in this device. Other bits are reserved."
                format="hex0x"
                id="DMA0@ENABLECLR0@CLR"
                offset="[31:0]"/>
      </register>
      <register description="Channel Active status for all DMA channels." format="hex0x"
                id="DMA0@ACTIVE0"
                offset="0x30"
                readOnly="true"
                size="4">
         <field description="Active flag for DMA channel n. Bit n corresponds to DMA channel n. The number of bits = number of DMA channels in this device. Other bits are reserved. 0 = not active. 1 = active."
                format="hex0x"
                id="DMA0@ACTIVE0@ACT"
                offset="[31:0]"/>
      </register>
      <register description="Channel Busy status for all DMA channels." format="hex0x"
                id="DMA0@BUSY0"
                offset="0x38"
                readOnly="true"
                size="4">
         <field description="Busy flag for DMA channel n. Bit n corresponds to DMA channel n. The number of bits = number of DMA channels in this device. Other bits are reserved. 0 = not busy. 1 = busy."
                format="hex0x"
                id="DMA0@BUSY0@BSY"
                offset="[31:0]"/>
      </register>
      <register description="Error Interrupt status for all DMA channels." format="hex0x"
                id="DMA0@ERRINT0"
                offset="0x40"
                size="4">
         <field description="Error Interrupt flag for DMA channel n. Bit n corresponds to DMA channel n. The number of bits = number of DMA channels in this device. Other bits are reserved. 0 = error interrupt is not active. 1 = error interrupt is active."
                format="hex0x"
                id="DMA0@ERRINT0@ERR"
                offset="[31:0]"/>
      </register>
      <register description="Interrupt Enable read and Set for all DMA channels."
                format="hex0x"
                id="DMA0@INTENSET0"
                offset="0x48"
                size="4">
         <field description="Interrupt Enable read and set for DMA channel n. Bit n corresponds to DMA channel n. The number of bits = number of DMA channels in this device. Other bits are reserved. 0 = interrupt for DMA channel is disabled. 1 = interrupt for DMA channel is enabled."
                format="hex0x"
                id="DMA0@INTENSET0@INTEN"
                offset="[31:0]"/>
      </register>
      <register description="Interrupt Enable Clear for all DMA channels." format="hex0x"
                id="DMA0@INTENCLR0"
                offset="0x50"
                writeOnly="true"
                size="4">
         <field description="Writing ones to this register clears corresponding bits in the INTENSET0. Bit n corresponds to DMA channel n. The number of bits = number of DMA channels in this device. Other bits are reserved."
                format="hex0x"
                id="DMA0@INTENCLR0@CLR"
                offset="[31:0]"/>
      </register>
      <register description="Interrupt A status for all DMA channels." format="hex0x"
                id="DMA0@INTA0"
                offset="0x58"
                size="4">
         <field description="Interrupt A status for DMA channel n. Bit n corresponds to DMA channel n. The number of bits = number of DMA channels in this device. Other bits are reserved. 0 = the DMA channel interrupt A is not active. 1 = the DMA channel interrupt A is active."
                format="hex0x"
                id="DMA0@INTA0@IA"
                offset="[31:0]"/>
      </register>
      <register description="Interrupt B status for all DMA channels." format="hex0x"
                id="DMA0@INTB0"
                offset="0x60"
                size="4">
         <field description="Interrupt B status for DMA channel n. Bit n corresponds to DMA channel n. The number of bits = number of DMA channels in this device. Other bits are reserved. 0 = the DMA channel interrupt B is not active. 1 = the DMA channel interrupt B is active."
                format="hex0x"
                id="DMA0@INTB0@IB"
                offset="[31:0]"/>
      </register>
      <register description="Set ValidPending control bits for all DMA channels."
                format="hex0x"
                id="DMA0@SETVALID0"
                offset="0x68"
                writeOnly="true"
                size="4">
         <field description="SETVALID control for DMA channel n. Bit n corresponds to DMA channel n. The number of bits = number of DMA channels in this device. Other bits are reserved. 0 = no effect. 1 = sets the VALIDPENDING control bit for DMA channel n"
                format="hex0x"
                id="DMA0@SETVALID0@SV"
                offset="[31:0]"/>
      </register>
      <register description="Set Trigger control bits for all DMA channels." format="hex0x"
                id="DMA0@SETTRIG0"
                offset="0x70"
                writeOnly="true"
                size="4">
         <field description="Set Trigger control bit for DMA channel 0. Bit n corresponds to DMA channel n. The number of bits = number of DMA channels in this device. Other bits are reserved. 0 = no effect. 1 = sets the TRIG bit for DMA channel n."
                format="hex0x"
                id="DMA0@SETTRIG0@TRIG"
                offset="[31:0]"/>
      </register>
      <register description="Channel Abort control for all DMA channels." format="hex0x"
                id="DMA0@ABORT0"
                offset="0x78"
                writeOnly="true"
                size="4">
         <field description="Abort control for DMA channel 0. Bit n corresponds to DMA channel n. 0 = no effect. 1 = aborts DMA operations on channel n."
                format="hex0x"
                id="DMA0@ABORT0@ABORTCTRL"
                offset="[31:0]"/>
      </register>
      <register description="Configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL0-CFG"
                offset="0x400"
                size="4">
         <field description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller."
                format="enum"
                enum="d1e114603"
                id="DMA0@CHANNEL0-CFG@PERIPHREQEN"
                offset="[0]"/>
         <field description="Hardware Triggering Enable for this channel." format="enum"
                enum="d1e114649"
                id="DMA0@CHANNEL0-CFG@HWTRIGEN"
                offset="[1]"/>
         <field description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel."
                format="enum"
                enum="d1e114695"
                id="DMA0@CHANNEL0-CFG@TRIGPOL"
                offset="[4]"/>
         <field description="Trigger Type. Selects hardware trigger as edge triggered or level triggered."
                format="enum"
                enum="d1e114741"
                id="DMA0@CHANNEL0-CFG@TRIGTYPE"
                offset="[5]"/>
         <field description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer."
                format="enum"
                enum="d1e114787"
                id="DMA0@CHANNEL0-CFG@TRIGBURST"
                offset="[6]"/>
         <field description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size."
                format="hex0x"
                id="DMA0@CHANNEL0-CFG@BURSTPOWER"
                offset="[11:8]"/>
         <field description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst."
                format="enum"
                enum="d1e114852"
                id="DMA0@CHANNEL0-CFG@SRCBURSTWRAP"
                offset="[14]"/>
         <field description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst."
                format="enum"
                enum="d1e114898"
                id="DMA0@CHANNEL0-CFG@DSTBURSTWRAP"
                offset="[15]"/>
         <field description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority."
                format="hex0x"
                id="DMA0@CHANNEL0-CFG@CHPRIORITY"
                offset="[18:16]"/>
      </register>
      <register description="Control and status register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL0-CTLSTAT"
                offset="0x404"
                readOnly="true"
                size="4">
         <field description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel."
                format="enum"
                enum="d1e114990"
                id="DMA0@CHANNEL0-CTLSTAT@VALIDPENDING"
                offset="[0]"/>
         <field description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1."
                format="enum"
                enum="d1e115036"
                id="DMA0@CHANNEL0-CTLSTAT@TRIG"
                offset="[2]"/>
      </register>
      <register description="Transfer configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL0-XFERCFG"
                offset="0x408"
                size="4">
         <field description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled."
                format="enum"
                enum="d1e115110"
                id="DMA0@CHANNEL0-XFERCFG@CFGVALID"
                offset="[0]"/>
         <field description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers."
                format="enum"
                enum="d1e115156"
                id="DMA0@CHANNEL0-XFERCFG@RELOAD"
                offset="[1]"/>
         <field description="Software Trigger." format="enum" enum="d1e115202"
                id="DMA0@CHANNEL0-XFERCFG@SWTRIG"
                offset="[2]"/>
         <field description="Clear Trigger." format="enum" enum="d1e115248"
                id="DMA0@CHANNEL0-XFERCFG@CLRTRIG"
                offset="[3]"/>
         <field description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115294"
                id="DMA0@CHANNEL0-XFERCFG@SETINTA"
                offset="[4]"/>
         <field description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115341"
                id="DMA0@CHANNEL0-XFERCFG@SETINTB"
                offset="[5]"/>
         <field description="Transfer width used for this DMA channel." format="enum"
                enum="d1e115387"
                id="DMA0@CHANNEL0-XFERCFG@WIDTH"
                offset="[9:8]"/>
         <field description="Determines whether the source address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115445"
                id="DMA0@CHANNEL0-XFERCFG@SRCINC"
                offset="[13:12]"/>
         <field description="Determines whether the destination address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115515"
                id="DMA0@CHANNEL0-XFERCFG@DSTINC"
                offset="[15:14]"/>
         <field description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed."
                format="hex0x"
                id="DMA0@CHANNEL0-XFERCFG@XFERCOUNT"
                offset="[25:16]"/>
      </register>
      <register description="Configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL1-CFG"
                offset="0x410"
                size="4">
         <field description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller."
                format="enum"
                enum="d1e114603"
                id="DMA0@CHANNEL1-CFG@PERIPHREQEN"
                offset="[0]"/>
         <field description="Hardware Triggering Enable for this channel." format="enum"
                enum="d1e114649"
                id="DMA0@CHANNEL1-CFG@HWTRIGEN"
                offset="[1]"/>
         <field description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel."
                format="enum"
                enum="d1e114695"
                id="DMA0@CHANNEL1-CFG@TRIGPOL"
                offset="[4]"/>
         <field description="Trigger Type. Selects hardware trigger as edge triggered or level triggered."
                format="enum"
                enum="d1e114741"
                id="DMA0@CHANNEL1-CFG@TRIGTYPE"
                offset="[5]"/>
         <field description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer."
                format="enum"
                enum="d1e114787"
                id="DMA0@CHANNEL1-CFG@TRIGBURST"
                offset="[6]"/>
         <field description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size."
                format="hex0x"
                id="DMA0@CHANNEL1-CFG@BURSTPOWER"
                offset="[11:8]"/>
         <field description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst."
                format="enum"
                enum="d1e114852"
                id="DMA0@CHANNEL1-CFG@SRCBURSTWRAP"
                offset="[14]"/>
         <field description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst."
                format="enum"
                enum="d1e114898"
                id="DMA0@CHANNEL1-CFG@DSTBURSTWRAP"
                offset="[15]"/>
         <field description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority."
                format="hex0x"
                id="DMA0@CHANNEL1-CFG@CHPRIORITY"
                offset="[18:16]"/>
      </register>
      <register description="Control and status register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL1-CTLSTAT"
                offset="0x414"
                readOnly="true"
                size="4">
         <field description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel."
                format="enum"
                enum="d1e114990"
                id="DMA0@CHANNEL1-CTLSTAT@VALIDPENDING"
                offset="[0]"/>
         <field description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1."
                format="enum"
                enum="d1e115036"
                id="DMA0@CHANNEL1-CTLSTAT@TRIG"
                offset="[2]"/>
      </register>
      <register description="Transfer configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL1-XFERCFG"
                offset="0x418"
                size="4">
         <field description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled."
                format="enum"
                enum="d1e115110"
                id="DMA0@CHANNEL1-XFERCFG@CFGVALID"
                offset="[0]"/>
         <field description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers."
                format="enum"
                enum="d1e115156"
                id="DMA0@CHANNEL1-XFERCFG@RELOAD"
                offset="[1]"/>
         <field description="Software Trigger." format="enum" enum="d1e115202"
                id="DMA0@CHANNEL1-XFERCFG@SWTRIG"
                offset="[2]"/>
         <field description="Clear Trigger." format="enum" enum="d1e115248"
                id="DMA0@CHANNEL1-XFERCFG@CLRTRIG"
                offset="[3]"/>
         <field description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115294"
                id="DMA0@CHANNEL1-XFERCFG@SETINTA"
                offset="[4]"/>
         <field description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115341"
                id="DMA0@CHANNEL1-XFERCFG@SETINTB"
                offset="[5]"/>
         <field description="Transfer width used for this DMA channel." format="enum"
                enum="d1e115387"
                id="DMA0@CHANNEL1-XFERCFG@WIDTH"
                offset="[9:8]"/>
         <field description="Determines whether the source address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115445"
                id="DMA0@CHANNEL1-XFERCFG@SRCINC"
                offset="[13:12]"/>
         <field description="Determines whether the destination address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115515"
                id="DMA0@CHANNEL1-XFERCFG@DSTINC"
                offset="[15:14]"/>
         <field description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed."
                format="hex0x"
                id="DMA0@CHANNEL1-XFERCFG@XFERCOUNT"
                offset="[25:16]"/>
      </register>
      <register description="Configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL2-CFG"
                offset="0x420"
                size="4">
         <field description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller."
                format="enum"
                enum="d1e114603"
                id="DMA0@CHANNEL2-CFG@PERIPHREQEN"
                offset="[0]"/>
         <field description="Hardware Triggering Enable for this channel." format="enum"
                enum="d1e114649"
                id="DMA0@CHANNEL2-CFG@HWTRIGEN"
                offset="[1]"/>
         <field description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel."
                format="enum"
                enum="d1e114695"
                id="DMA0@CHANNEL2-CFG@TRIGPOL"
                offset="[4]"/>
         <field description="Trigger Type. Selects hardware trigger as edge triggered or level triggered."
                format="enum"
                enum="d1e114741"
                id="DMA0@CHANNEL2-CFG@TRIGTYPE"
                offset="[5]"/>
         <field description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer."
                format="enum"
                enum="d1e114787"
                id="DMA0@CHANNEL2-CFG@TRIGBURST"
                offset="[6]"/>
         <field description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size."
                format="hex0x"
                id="DMA0@CHANNEL2-CFG@BURSTPOWER"
                offset="[11:8]"/>
         <field description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst."
                format="enum"
                enum="d1e114852"
                id="DMA0@CHANNEL2-CFG@SRCBURSTWRAP"
                offset="[14]"/>
         <field description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst."
                format="enum"
                enum="d1e114898"
                id="DMA0@CHANNEL2-CFG@DSTBURSTWRAP"
                offset="[15]"/>
         <field description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority."
                format="hex0x"
                id="DMA0@CHANNEL2-CFG@CHPRIORITY"
                offset="[18:16]"/>
      </register>
      <register description="Control and status register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL2-CTLSTAT"
                offset="0x424"
                readOnly="true"
                size="4">
         <field description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel."
                format="enum"
                enum="d1e114990"
                id="DMA0@CHANNEL2-CTLSTAT@VALIDPENDING"
                offset="[0]"/>
         <field description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1."
                format="enum"
                enum="d1e115036"
                id="DMA0@CHANNEL2-CTLSTAT@TRIG"
                offset="[2]"/>
      </register>
      <register description="Transfer configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL2-XFERCFG"
                offset="0x428"
                size="4">
         <field description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled."
                format="enum"
                enum="d1e115110"
                id="DMA0@CHANNEL2-XFERCFG@CFGVALID"
                offset="[0]"/>
         <field description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers."
                format="enum"
                enum="d1e115156"
                id="DMA0@CHANNEL2-XFERCFG@RELOAD"
                offset="[1]"/>
         <field description="Software Trigger." format="enum" enum="d1e115202"
                id="DMA0@CHANNEL2-XFERCFG@SWTRIG"
                offset="[2]"/>
         <field description="Clear Trigger." format="enum" enum="d1e115248"
                id="DMA0@CHANNEL2-XFERCFG@CLRTRIG"
                offset="[3]"/>
         <field description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115294"
                id="DMA0@CHANNEL2-XFERCFG@SETINTA"
                offset="[4]"/>
         <field description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115341"
                id="DMA0@CHANNEL2-XFERCFG@SETINTB"
                offset="[5]"/>
         <field description="Transfer width used for this DMA channel." format="enum"
                enum="d1e115387"
                id="DMA0@CHANNEL2-XFERCFG@WIDTH"
                offset="[9:8]"/>
         <field description="Determines whether the source address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115445"
                id="DMA0@CHANNEL2-XFERCFG@SRCINC"
                offset="[13:12]"/>
         <field description="Determines whether the destination address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115515"
                id="DMA0@CHANNEL2-XFERCFG@DSTINC"
                offset="[15:14]"/>
         <field description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed."
                format="hex0x"
                id="DMA0@CHANNEL2-XFERCFG@XFERCOUNT"
                offset="[25:16]"/>
      </register>
      <register description="Configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL3-CFG"
                offset="0x430"
                size="4">
         <field description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller."
                format="enum"
                enum="d1e114603"
                id="DMA0@CHANNEL3-CFG@PERIPHREQEN"
                offset="[0]"/>
         <field description="Hardware Triggering Enable for this channel." format="enum"
                enum="d1e114649"
                id="DMA0@CHANNEL3-CFG@HWTRIGEN"
                offset="[1]"/>
         <field description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel."
                format="enum"
                enum="d1e114695"
                id="DMA0@CHANNEL3-CFG@TRIGPOL"
                offset="[4]"/>
         <field description="Trigger Type. Selects hardware trigger as edge triggered or level triggered."
                format="enum"
                enum="d1e114741"
                id="DMA0@CHANNEL3-CFG@TRIGTYPE"
                offset="[5]"/>
         <field description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer."
                format="enum"
                enum="d1e114787"
                id="DMA0@CHANNEL3-CFG@TRIGBURST"
                offset="[6]"/>
         <field description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size."
                format="hex0x"
                id="DMA0@CHANNEL3-CFG@BURSTPOWER"
                offset="[11:8]"/>
         <field description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst."
                format="enum"
                enum="d1e114852"
                id="DMA0@CHANNEL3-CFG@SRCBURSTWRAP"
                offset="[14]"/>
         <field description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst."
                format="enum"
                enum="d1e114898"
                id="DMA0@CHANNEL3-CFG@DSTBURSTWRAP"
                offset="[15]"/>
         <field description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority."
                format="hex0x"
                id="DMA0@CHANNEL3-CFG@CHPRIORITY"
                offset="[18:16]"/>
      </register>
      <register description="Control and status register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL3-CTLSTAT"
                offset="0x434"
                readOnly="true"
                size="4">
         <field description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel."
                format="enum"
                enum="d1e114990"
                id="DMA0@CHANNEL3-CTLSTAT@VALIDPENDING"
                offset="[0]"/>
         <field description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1."
                format="enum"
                enum="d1e115036"
                id="DMA0@CHANNEL3-CTLSTAT@TRIG"
                offset="[2]"/>
      </register>
      <register description="Transfer configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL3-XFERCFG"
                offset="0x438"
                size="4">
         <field description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled."
                format="enum"
                enum="d1e115110"
                id="DMA0@CHANNEL3-XFERCFG@CFGVALID"
                offset="[0]"/>
         <field description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers."
                format="enum"
                enum="d1e115156"
                id="DMA0@CHANNEL3-XFERCFG@RELOAD"
                offset="[1]"/>
         <field description="Software Trigger." format="enum" enum="d1e115202"
                id="DMA0@CHANNEL3-XFERCFG@SWTRIG"
                offset="[2]"/>
         <field description="Clear Trigger." format="enum" enum="d1e115248"
                id="DMA0@CHANNEL3-XFERCFG@CLRTRIG"
                offset="[3]"/>
         <field description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115294"
                id="DMA0@CHANNEL3-XFERCFG@SETINTA"
                offset="[4]"/>
         <field description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115341"
                id="DMA0@CHANNEL3-XFERCFG@SETINTB"
                offset="[5]"/>
         <field description="Transfer width used for this DMA channel." format="enum"
                enum="d1e115387"
                id="DMA0@CHANNEL3-XFERCFG@WIDTH"
                offset="[9:8]"/>
         <field description="Determines whether the source address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115445"
                id="DMA0@CHANNEL3-XFERCFG@SRCINC"
                offset="[13:12]"/>
         <field description="Determines whether the destination address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115515"
                id="DMA0@CHANNEL3-XFERCFG@DSTINC"
                offset="[15:14]"/>
         <field description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed."
                format="hex0x"
                id="DMA0@CHANNEL3-XFERCFG@XFERCOUNT"
                offset="[25:16]"/>
      </register>
      <register description="Configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL4-CFG"
                offset="0x440"
                size="4">
         <field description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller."
                format="enum"
                enum="d1e114603"
                id="DMA0@CHANNEL4-CFG@PERIPHREQEN"
                offset="[0]"/>
         <field description="Hardware Triggering Enable for this channel." format="enum"
                enum="d1e114649"
                id="DMA0@CHANNEL4-CFG@HWTRIGEN"
                offset="[1]"/>
         <field description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel."
                format="enum"
                enum="d1e114695"
                id="DMA0@CHANNEL4-CFG@TRIGPOL"
                offset="[4]"/>
         <field description="Trigger Type. Selects hardware trigger as edge triggered or level triggered."
                format="enum"
                enum="d1e114741"
                id="DMA0@CHANNEL4-CFG@TRIGTYPE"
                offset="[5]"/>
         <field description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer."
                format="enum"
                enum="d1e114787"
                id="DMA0@CHANNEL4-CFG@TRIGBURST"
                offset="[6]"/>
         <field description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size."
                format="hex0x"
                id="DMA0@CHANNEL4-CFG@BURSTPOWER"
                offset="[11:8]"/>
         <field description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst."
                format="enum"
                enum="d1e114852"
                id="DMA0@CHANNEL4-CFG@SRCBURSTWRAP"
                offset="[14]"/>
         <field description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst."
                format="enum"
                enum="d1e114898"
                id="DMA0@CHANNEL4-CFG@DSTBURSTWRAP"
                offset="[15]"/>
         <field description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority."
                format="hex0x"
                id="DMA0@CHANNEL4-CFG@CHPRIORITY"
                offset="[18:16]"/>
      </register>
      <register description="Control and status register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL4-CTLSTAT"
                offset="0x444"
                readOnly="true"
                size="4">
         <field description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel."
                format="enum"
                enum="d1e114990"
                id="DMA0@CHANNEL4-CTLSTAT@VALIDPENDING"
                offset="[0]"/>
         <field description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1."
                format="enum"
                enum="d1e115036"
                id="DMA0@CHANNEL4-CTLSTAT@TRIG"
                offset="[2]"/>
      </register>
      <register description="Transfer configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL4-XFERCFG"
                offset="0x448"
                size="4">
         <field description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled."
                format="enum"
                enum="d1e115110"
                id="DMA0@CHANNEL4-XFERCFG@CFGVALID"
                offset="[0]"/>
         <field description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers."
                format="enum"
                enum="d1e115156"
                id="DMA0@CHANNEL4-XFERCFG@RELOAD"
                offset="[1]"/>
         <field description="Software Trigger." format="enum" enum="d1e115202"
                id="DMA0@CHANNEL4-XFERCFG@SWTRIG"
                offset="[2]"/>
         <field description="Clear Trigger." format="enum" enum="d1e115248"
                id="DMA0@CHANNEL4-XFERCFG@CLRTRIG"
                offset="[3]"/>
         <field description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115294"
                id="DMA0@CHANNEL4-XFERCFG@SETINTA"
                offset="[4]"/>
         <field description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115341"
                id="DMA0@CHANNEL4-XFERCFG@SETINTB"
                offset="[5]"/>
         <field description="Transfer width used for this DMA channel." format="enum"
                enum="d1e115387"
                id="DMA0@CHANNEL4-XFERCFG@WIDTH"
                offset="[9:8]"/>
         <field description="Determines whether the source address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115445"
                id="DMA0@CHANNEL4-XFERCFG@SRCINC"
                offset="[13:12]"/>
         <field description="Determines whether the destination address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115515"
                id="DMA0@CHANNEL4-XFERCFG@DSTINC"
                offset="[15:14]"/>
         <field description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed."
                format="hex0x"
                id="DMA0@CHANNEL4-XFERCFG@XFERCOUNT"
                offset="[25:16]"/>
      </register>
      <register description="Configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL5-CFG"
                offset="0x450"
                size="4">
         <field description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller."
                format="enum"
                enum="d1e114603"
                id="DMA0@CHANNEL5-CFG@PERIPHREQEN"
                offset="[0]"/>
         <field description="Hardware Triggering Enable for this channel." format="enum"
                enum="d1e114649"
                id="DMA0@CHANNEL5-CFG@HWTRIGEN"
                offset="[1]"/>
         <field description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel."
                format="enum"
                enum="d1e114695"
                id="DMA0@CHANNEL5-CFG@TRIGPOL"
                offset="[4]"/>
         <field description="Trigger Type. Selects hardware trigger as edge triggered or level triggered."
                format="enum"
                enum="d1e114741"
                id="DMA0@CHANNEL5-CFG@TRIGTYPE"
                offset="[5]"/>
         <field description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer."
                format="enum"
                enum="d1e114787"
                id="DMA0@CHANNEL5-CFG@TRIGBURST"
                offset="[6]"/>
         <field description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size."
                format="hex0x"
                id="DMA0@CHANNEL5-CFG@BURSTPOWER"
                offset="[11:8]"/>
         <field description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst."
                format="enum"
                enum="d1e114852"
                id="DMA0@CHANNEL5-CFG@SRCBURSTWRAP"
                offset="[14]"/>
         <field description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst."
                format="enum"
                enum="d1e114898"
                id="DMA0@CHANNEL5-CFG@DSTBURSTWRAP"
                offset="[15]"/>
         <field description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority."
                format="hex0x"
                id="DMA0@CHANNEL5-CFG@CHPRIORITY"
                offset="[18:16]"/>
      </register>
      <register description="Control and status register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL5-CTLSTAT"
                offset="0x454"
                readOnly="true"
                size="4">
         <field description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel."
                format="enum"
                enum="d1e114990"
                id="DMA0@CHANNEL5-CTLSTAT@VALIDPENDING"
                offset="[0]"/>
         <field description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1."
                format="enum"
                enum="d1e115036"
                id="DMA0@CHANNEL5-CTLSTAT@TRIG"
                offset="[2]"/>
      </register>
      <register description="Transfer configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL5-XFERCFG"
                offset="0x458"
                size="4">
         <field description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled."
                format="enum"
                enum="d1e115110"
                id="DMA0@CHANNEL5-XFERCFG@CFGVALID"
                offset="[0]"/>
         <field description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers."
                format="enum"
                enum="d1e115156"
                id="DMA0@CHANNEL5-XFERCFG@RELOAD"
                offset="[1]"/>
         <field description="Software Trigger." format="enum" enum="d1e115202"
                id="DMA0@CHANNEL5-XFERCFG@SWTRIG"
                offset="[2]"/>
         <field description="Clear Trigger." format="enum" enum="d1e115248"
                id="DMA0@CHANNEL5-XFERCFG@CLRTRIG"
                offset="[3]"/>
         <field description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115294"
                id="DMA0@CHANNEL5-XFERCFG@SETINTA"
                offset="[4]"/>
         <field description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115341"
                id="DMA0@CHANNEL5-XFERCFG@SETINTB"
                offset="[5]"/>
         <field description="Transfer width used for this DMA channel." format="enum"
                enum="d1e115387"
                id="DMA0@CHANNEL5-XFERCFG@WIDTH"
                offset="[9:8]"/>
         <field description="Determines whether the source address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115445"
                id="DMA0@CHANNEL5-XFERCFG@SRCINC"
                offset="[13:12]"/>
         <field description="Determines whether the destination address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115515"
                id="DMA0@CHANNEL5-XFERCFG@DSTINC"
                offset="[15:14]"/>
         <field description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed."
                format="hex0x"
                id="DMA0@CHANNEL5-XFERCFG@XFERCOUNT"
                offset="[25:16]"/>
      </register>
      <register description="Configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL6-CFG"
                offset="0x460"
                size="4">
         <field description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller."
                format="enum"
                enum="d1e114603"
                id="DMA0@CHANNEL6-CFG@PERIPHREQEN"
                offset="[0]"/>
         <field description="Hardware Triggering Enable for this channel." format="enum"
                enum="d1e114649"
                id="DMA0@CHANNEL6-CFG@HWTRIGEN"
                offset="[1]"/>
         <field description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel."
                format="enum"
                enum="d1e114695"
                id="DMA0@CHANNEL6-CFG@TRIGPOL"
                offset="[4]"/>
         <field description="Trigger Type. Selects hardware trigger as edge triggered or level triggered."
                format="enum"
                enum="d1e114741"
                id="DMA0@CHANNEL6-CFG@TRIGTYPE"
                offset="[5]"/>
         <field description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer."
                format="enum"
                enum="d1e114787"
                id="DMA0@CHANNEL6-CFG@TRIGBURST"
                offset="[6]"/>
         <field description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size."
                format="hex0x"
                id="DMA0@CHANNEL6-CFG@BURSTPOWER"
                offset="[11:8]"/>
         <field description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst."
                format="enum"
                enum="d1e114852"
                id="DMA0@CHANNEL6-CFG@SRCBURSTWRAP"
                offset="[14]"/>
         <field description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst."
                format="enum"
                enum="d1e114898"
                id="DMA0@CHANNEL6-CFG@DSTBURSTWRAP"
                offset="[15]"/>
         <field description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority."
                format="hex0x"
                id="DMA0@CHANNEL6-CFG@CHPRIORITY"
                offset="[18:16]"/>
      </register>
      <register description="Control and status register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL6-CTLSTAT"
                offset="0x464"
                readOnly="true"
                size="4">
         <field description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel."
                format="enum"
                enum="d1e114990"
                id="DMA0@CHANNEL6-CTLSTAT@VALIDPENDING"
                offset="[0]"/>
         <field description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1."
                format="enum"
                enum="d1e115036"
                id="DMA0@CHANNEL6-CTLSTAT@TRIG"
                offset="[2]"/>
      </register>
      <register description="Transfer configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL6-XFERCFG"
                offset="0x468"
                size="4">
         <field description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled."
                format="enum"
                enum="d1e115110"
                id="DMA0@CHANNEL6-XFERCFG@CFGVALID"
                offset="[0]"/>
         <field description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers."
                format="enum"
                enum="d1e115156"
                id="DMA0@CHANNEL6-XFERCFG@RELOAD"
                offset="[1]"/>
         <field description="Software Trigger." format="enum" enum="d1e115202"
                id="DMA0@CHANNEL6-XFERCFG@SWTRIG"
                offset="[2]"/>
         <field description="Clear Trigger." format="enum" enum="d1e115248"
                id="DMA0@CHANNEL6-XFERCFG@CLRTRIG"
                offset="[3]"/>
         <field description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115294"
                id="DMA0@CHANNEL6-XFERCFG@SETINTA"
                offset="[4]"/>
         <field description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115341"
                id="DMA0@CHANNEL6-XFERCFG@SETINTB"
                offset="[5]"/>
         <field description="Transfer width used for this DMA channel." format="enum"
                enum="d1e115387"
                id="DMA0@CHANNEL6-XFERCFG@WIDTH"
                offset="[9:8]"/>
         <field description="Determines whether the source address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115445"
                id="DMA0@CHANNEL6-XFERCFG@SRCINC"
                offset="[13:12]"/>
         <field description="Determines whether the destination address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115515"
                id="DMA0@CHANNEL6-XFERCFG@DSTINC"
                offset="[15:14]"/>
         <field description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed."
                format="hex0x"
                id="DMA0@CHANNEL6-XFERCFG@XFERCOUNT"
                offset="[25:16]"/>
      </register>
      <register description="Configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL7-CFG"
                offset="0x470"
                size="4">
         <field description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller."
                format="enum"
                enum="d1e114603"
                id="DMA0@CHANNEL7-CFG@PERIPHREQEN"
                offset="[0]"/>
         <field description="Hardware Triggering Enable for this channel." format="enum"
                enum="d1e114649"
                id="DMA0@CHANNEL7-CFG@HWTRIGEN"
                offset="[1]"/>
         <field description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel."
                format="enum"
                enum="d1e114695"
                id="DMA0@CHANNEL7-CFG@TRIGPOL"
                offset="[4]"/>
         <field description="Trigger Type. Selects hardware trigger as edge triggered or level triggered."
                format="enum"
                enum="d1e114741"
                id="DMA0@CHANNEL7-CFG@TRIGTYPE"
                offset="[5]"/>
         <field description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer."
                format="enum"
                enum="d1e114787"
                id="DMA0@CHANNEL7-CFG@TRIGBURST"
                offset="[6]"/>
         <field description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size."
                format="hex0x"
                id="DMA0@CHANNEL7-CFG@BURSTPOWER"
                offset="[11:8]"/>
         <field description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst."
                format="enum"
                enum="d1e114852"
                id="DMA0@CHANNEL7-CFG@SRCBURSTWRAP"
                offset="[14]"/>
         <field description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst."
                format="enum"
                enum="d1e114898"
                id="DMA0@CHANNEL7-CFG@DSTBURSTWRAP"
                offset="[15]"/>
         <field description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority."
                format="hex0x"
                id="DMA0@CHANNEL7-CFG@CHPRIORITY"
                offset="[18:16]"/>
      </register>
      <register description="Control and status register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL7-CTLSTAT"
                offset="0x474"
                readOnly="true"
                size="4">
         <field description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel."
                format="enum"
                enum="d1e114990"
                id="DMA0@CHANNEL7-CTLSTAT@VALIDPENDING"
                offset="[0]"/>
         <field description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1."
                format="enum"
                enum="d1e115036"
                id="DMA0@CHANNEL7-CTLSTAT@TRIG"
                offset="[2]"/>
      </register>
      <register description="Transfer configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL7-XFERCFG"
                offset="0x478"
                size="4">
         <field description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled."
                format="enum"
                enum="d1e115110"
                id="DMA0@CHANNEL7-XFERCFG@CFGVALID"
                offset="[0]"/>
         <field description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers."
                format="enum"
                enum="d1e115156"
                id="DMA0@CHANNEL7-XFERCFG@RELOAD"
                offset="[1]"/>
         <field description="Software Trigger." format="enum" enum="d1e115202"
                id="DMA0@CHANNEL7-XFERCFG@SWTRIG"
                offset="[2]"/>
         <field description="Clear Trigger." format="enum" enum="d1e115248"
                id="DMA0@CHANNEL7-XFERCFG@CLRTRIG"
                offset="[3]"/>
         <field description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115294"
                id="DMA0@CHANNEL7-XFERCFG@SETINTA"
                offset="[4]"/>
         <field description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115341"
                id="DMA0@CHANNEL7-XFERCFG@SETINTB"
                offset="[5]"/>
         <field description="Transfer width used for this DMA channel." format="enum"
                enum="d1e115387"
                id="DMA0@CHANNEL7-XFERCFG@WIDTH"
                offset="[9:8]"/>
         <field description="Determines whether the source address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115445"
                id="DMA0@CHANNEL7-XFERCFG@SRCINC"
                offset="[13:12]"/>
         <field description="Determines whether the destination address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115515"
                id="DMA0@CHANNEL7-XFERCFG@DSTINC"
                offset="[15:14]"/>
         <field description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed."
                format="hex0x"
                id="DMA0@CHANNEL7-XFERCFG@XFERCOUNT"
                offset="[25:16]"/>
      </register>
      <register description="Configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL8-CFG"
                offset="0x480"
                size="4">
         <field description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller."
                format="enum"
                enum="d1e114603"
                id="DMA0@CHANNEL8-CFG@PERIPHREQEN"
                offset="[0]"/>
         <field description="Hardware Triggering Enable for this channel." format="enum"
                enum="d1e114649"
                id="DMA0@CHANNEL8-CFG@HWTRIGEN"
                offset="[1]"/>
         <field description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel."
                format="enum"
                enum="d1e114695"
                id="DMA0@CHANNEL8-CFG@TRIGPOL"
                offset="[4]"/>
         <field description="Trigger Type. Selects hardware trigger as edge triggered or level triggered."
                format="enum"
                enum="d1e114741"
                id="DMA0@CHANNEL8-CFG@TRIGTYPE"
                offset="[5]"/>
         <field description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer."
                format="enum"
                enum="d1e114787"
                id="DMA0@CHANNEL8-CFG@TRIGBURST"
                offset="[6]"/>
         <field description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size."
                format="hex0x"
                id="DMA0@CHANNEL8-CFG@BURSTPOWER"
                offset="[11:8]"/>
         <field description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst."
                format="enum"
                enum="d1e114852"
                id="DMA0@CHANNEL8-CFG@SRCBURSTWRAP"
                offset="[14]"/>
         <field description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst."
                format="enum"
                enum="d1e114898"
                id="DMA0@CHANNEL8-CFG@DSTBURSTWRAP"
                offset="[15]"/>
         <field description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority."
                format="hex0x"
                id="DMA0@CHANNEL8-CFG@CHPRIORITY"
                offset="[18:16]"/>
      </register>
      <register description="Control and status register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL8-CTLSTAT"
                offset="0x484"
                readOnly="true"
                size="4">
         <field description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel."
                format="enum"
                enum="d1e114990"
                id="DMA0@CHANNEL8-CTLSTAT@VALIDPENDING"
                offset="[0]"/>
         <field description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1."
                format="enum"
                enum="d1e115036"
                id="DMA0@CHANNEL8-CTLSTAT@TRIG"
                offset="[2]"/>
      </register>
      <register description="Transfer configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL8-XFERCFG"
                offset="0x488"
                size="4">
         <field description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled."
                format="enum"
                enum="d1e115110"
                id="DMA0@CHANNEL8-XFERCFG@CFGVALID"
                offset="[0]"/>
         <field description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers."
                format="enum"
                enum="d1e115156"
                id="DMA0@CHANNEL8-XFERCFG@RELOAD"
                offset="[1]"/>
         <field description="Software Trigger." format="enum" enum="d1e115202"
                id="DMA0@CHANNEL8-XFERCFG@SWTRIG"
                offset="[2]"/>
         <field description="Clear Trigger." format="enum" enum="d1e115248"
                id="DMA0@CHANNEL8-XFERCFG@CLRTRIG"
                offset="[3]"/>
         <field description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115294"
                id="DMA0@CHANNEL8-XFERCFG@SETINTA"
                offset="[4]"/>
         <field description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115341"
                id="DMA0@CHANNEL8-XFERCFG@SETINTB"
                offset="[5]"/>
         <field description="Transfer width used for this DMA channel." format="enum"
                enum="d1e115387"
                id="DMA0@CHANNEL8-XFERCFG@WIDTH"
                offset="[9:8]"/>
         <field description="Determines whether the source address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115445"
                id="DMA0@CHANNEL8-XFERCFG@SRCINC"
                offset="[13:12]"/>
         <field description="Determines whether the destination address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115515"
                id="DMA0@CHANNEL8-XFERCFG@DSTINC"
                offset="[15:14]"/>
         <field description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed."
                format="hex0x"
                id="DMA0@CHANNEL8-XFERCFG@XFERCOUNT"
                offset="[25:16]"/>
      </register>
      <register description="Configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL9-CFG"
                offset="0x490"
                size="4">
         <field description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller."
                format="enum"
                enum="d1e114603"
                id="DMA0@CHANNEL9-CFG@PERIPHREQEN"
                offset="[0]"/>
         <field description="Hardware Triggering Enable for this channel." format="enum"
                enum="d1e114649"
                id="DMA0@CHANNEL9-CFG@HWTRIGEN"
                offset="[1]"/>
         <field description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel."
                format="enum"
                enum="d1e114695"
                id="DMA0@CHANNEL9-CFG@TRIGPOL"
                offset="[4]"/>
         <field description="Trigger Type. Selects hardware trigger as edge triggered or level triggered."
                format="enum"
                enum="d1e114741"
                id="DMA0@CHANNEL9-CFG@TRIGTYPE"
                offset="[5]"/>
         <field description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer."
                format="enum"
                enum="d1e114787"
                id="DMA0@CHANNEL9-CFG@TRIGBURST"
                offset="[6]"/>
         <field description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size."
                format="hex0x"
                id="DMA0@CHANNEL9-CFG@BURSTPOWER"
                offset="[11:8]"/>
         <field description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst."
                format="enum"
                enum="d1e114852"
                id="DMA0@CHANNEL9-CFG@SRCBURSTWRAP"
                offset="[14]"/>
         <field description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst."
                format="enum"
                enum="d1e114898"
                id="DMA0@CHANNEL9-CFG@DSTBURSTWRAP"
                offset="[15]"/>
         <field description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority."
                format="hex0x"
                id="DMA0@CHANNEL9-CFG@CHPRIORITY"
                offset="[18:16]"/>
      </register>
      <register description="Control and status register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL9-CTLSTAT"
                offset="0x494"
                readOnly="true"
                size="4">
         <field description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel."
                format="enum"
                enum="d1e114990"
                id="DMA0@CHANNEL9-CTLSTAT@VALIDPENDING"
                offset="[0]"/>
         <field description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1."
                format="enum"
                enum="d1e115036"
                id="DMA0@CHANNEL9-CTLSTAT@TRIG"
                offset="[2]"/>
      </register>
      <register description="Transfer configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL9-XFERCFG"
                offset="0x498"
                size="4">
         <field description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled."
                format="enum"
                enum="d1e115110"
                id="DMA0@CHANNEL9-XFERCFG@CFGVALID"
                offset="[0]"/>
         <field description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers."
                format="enum"
                enum="d1e115156"
                id="DMA0@CHANNEL9-XFERCFG@RELOAD"
                offset="[1]"/>
         <field description="Software Trigger." format="enum" enum="d1e115202"
                id="DMA0@CHANNEL9-XFERCFG@SWTRIG"
                offset="[2]"/>
         <field description="Clear Trigger." format="enum" enum="d1e115248"
                id="DMA0@CHANNEL9-XFERCFG@CLRTRIG"
                offset="[3]"/>
         <field description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115294"
                id="DMA0@CHANNEL9-XFERCFG@SETINTA"
                offset="[4]"/>
         <field description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115341"
                id="DMA0@CHANNEL9-XFERCFG@SETINTB"
                offset="[5]"/>
         <field description="Transfer width used for this DMA channel." format="enum"
                enum="d1e115387"
                id="DMA0@CHANNEL9-XFERCFG@WIDTH"
                offset="[9:8]"/>
         <field description="Determines whether the source address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115445"
                id="DMA0@CHANNEL9-XFERCFG@SRCINC"
                offset="[13:12]"/>
         <field description="Determines whether the destination address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115515"
                id="DMA0@CHANNEL9-XFERCFG@DSTINC"
                offset="[15:14]"/>
         <field description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed."
                format="hex0x"
                id="DMA0@CHANNEL9-XFERCFG@XFERCOUNT"
                offset="[25:16]"/>
      </register>
      <register description="Configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL10-CFG"
                offset="0x4a0"
                size="4">
         <field description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller."
                format="enum"
                enum="d1e114603"
                id="DMA0@CHANNEL10-CFG@PERIPHREQEN"
                offset="[0]"/>
         <field description="Hardware Triggering Enable for this channel." format="enum"
                enum="d1e114649"
                id="DMA0@CHANNEL10-CFG@HWTRIGEN"
                offset="[1]"/>
         <field description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel."
                format="enum"
                enum="d1e114695"
                id="DMA0@CHANNEL10-CFG@TRIGPOL"
                offset="[4]"/>
         <field description="Trigger Type. Selects hardware trigger as edge triggered or level triggered."
                format="enum"
                enum="d1e114741"
                id="DMA0@CHANNEL10-CFG@TRIGTYPE"
                offset="[5]"/>
         <field description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer."
                format="enum"
                enum="d1e114787"
                id="DMA0@CHANNEL10-CFG@TRIGBURST"
                offset="[6]"/>
         <field description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size."
                format="hex0x"
                id="DMA0@CHANNEL10-CFG@BURSTPOWER"
                offset="[11:8]"/>
         <field description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst."
                format="enum"
                enum="d1e114852"
                id="DMA0@CHANNEL10-CFG@SRCBURSTWRAP"
                offset="[14]"/>
         <field description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst."
                format="enum"
                enum="d1e114898"
                id="DMA0@CHANNEL10-CFG@DSTBURSTWRAP"
                offset="[15]"/>
         <field description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority."
                format="hex0x"
                id="DMA0@CHANNEL10-CFG@CHPRIORITY"
                offset="[18:16]"/>
      </register>
      <register description="Control and status register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL10-CTLSTAT"
                offset="0x4a4"
                readOnly="true"
                size="4">
         <field description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel."
                format="enum"
                enum="d1e114990"
                id="DMA0@CHANNEL10-CTLSTAT@VALIDPENDING"
                offset="[0]"/>
         <field description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1."
                format="enum"
                enum="d1e115036"
                id="DMA0@CHANNEL10-CTLSTAT@TRIG"
                offset="[2]"/>
      </register>
      <register description="Transfer configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL10-XFERCFG"
                offset="0x4a8"
                size="4">
         <field description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled."
                format="enum"
                enum="d1e115110"
                id="DMA0@CHANNEL10-XFERCFG@CFGVALID"
                offset="[0]"/>
         <field description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers."
                format="enum"
                enum="d1e115156"
                id="DMA0@CHANNEL10-XFERCFG@RELOAD"
                offset="[1]"/>
         <field description="Software Trigger." format="enum" enum="d1e115202"
                id="DMA0@CHANNEL10-XFERCFG@SWTRIG"
                offset="[2]"/>
         <field description="Clear Trigger." format="enum" enum="d1e115248"
                id="DMA0@CHANNEL10-XFERCFG@CLRTRIG"
                offset="[3]"/>
         <field description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115294"
                id="DMA0@CHANNEL10-XFERCFG@SETINTA"
                offset="[4]"/>
         <field description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115341"
                id="DMA0@CHANNEL10-XFERCFG@SETINTB"
                offset="[5]"/>
         <field description="Transfer width used for this DMA channel." format="enum"
                enum="d1e115387"
                id="DMA0@CHANNEL10-XFERCFG@WIDTH"
                offset="[9:8]"/>
         <field description="Determines whether the source address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115445"
                id="DMA0@CHANNEL10-XFERCFG@SRCINC"
                offset="[13:12]"/>
         <field description="Determines whether the destination address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115515"
                id="DMA0@CHANNEL10-XFERCFG@DSTINC"
                offset="[15:14]"/>
         <field description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed."
                format="hex0x"
                id="DMA0@CHANNEL10-XFERCFG@XFERCOUNT"
                offset="[25:16]"/>
      </register>
      <register description="Configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL11-CFG"
                offset="0x4b0"
                size="4">
         <field description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller."
                format="enum"
                enum="d1e114603"
                id="DMA0@CHANNEL11-CFG@PERIPHREQEN"
                offset="[0]"/>
         <field description="Hardware Triggering Enable for this channel." format="enum"
                enum="d1e114649"
                id="DMA0@CHANNEL11-CFG@HWTRIGEN"
                offset="[1]"/>
         <field description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel."
                format="enum"
                enum="d1e114695"
                id="DMA0@CHANNEL11-CFG@TRIGPOL"
                offset="[4]"/>
         <field description="Trigger Type. Selects hardware trigger as edge triggered or level triggered."
                format="enum"
                enum="d1e114741"
                id="DMA0@CHANNEL11-CFG@TRIGTYPE"
                offset="[5]"/>
         <field description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer."
                format="enum"
                enum="d1e114787"
                id="DMA0@CHANNEL11-CFG@TRIGBURST"
                offset="[6]"/>
         <field description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size."
                format="hex0x"
                id="DMA0@CHANNEL11-CFG@BURSTPOWER"
                offset="[11:8]"/>
         <field description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst."
                format="enum"
                enum="d1e114852"
                id="DMA0@CHANNEL11-CFG@SRCBURSTWRAP"
                offset="[14]"/>
         <field description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst."
                format="enum"
                enum="d1e114898"
                id="DMA0@CHANNEL11-CFG@DSTBURSTWRAP"
                offset="[15]"/>
         <field description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority."
                format="hex0x"
                id="DMA0@CHANNEL11-CFG@CHPRIORITY"
                offset="[18:16]"/>
      </register>
      <register description="Control and status register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL11-CTLSTAT"
                offset="0x4b4"
                readOnly="true"
                size="4">
         <field description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel."
                format="enum"
                enum="d1e114990"
                id="DMA0@CHANNEL11-CTLSTAT@VALIDPENDING"
                offset="[0]"/>
         <field description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1."
                format="enum"
                enum="d1e115036"
                id="DMA0@CHANNEL11-CTLSTAT@TRIG"
                offset="[2]"/>
      </register>
      <register description="Transfer configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL11-XFERCFG"
                offset="0x4b8"
                size="4">
         <field description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled."
                format="enum"
                enum="d1e115110"
                id="DMA0@CHANNEL11-XFERCFG@CFGVALID"
                offset="[0]"/>
         <field description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers."
                format="enum"
                enum="d1e115156"
                id="DMA0@CHANNEL11-XFERCFG@RELOAD"
                offset="[1]"/>
         <field description="Software Trigger." format="enum" enum="d1e115202"
                id="DMA0@CHANNEL11-XFERCFG@SWTRIG"
                offset="[2]"/>
         <field description="Clear Trigger." format="enum" enum="d1e115248"
                id="DMA0@CHANNEL11-XFERCFG@CLRTRIG"
                offset="[3]"/>
         <field description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115294"
                id="DMA0@CHANNEL11-XFERCFG@SETINTA"
                offset="[4]"/>
         <field description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115341"
                id="DMA0@CHANNEL11-XFERCFG@SETINTB"
                offset="[5]"/>
         <field description="Transfer width used for this DMA channel." format="enum"
                enum="d1e115387"
                id="DMA0@CHANNEL11-XFERCFG@WIDTH"
                offset="[9:8]"/>
         <field description="Determines whether the source address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115445"
                id="DMA0@CHANNEL11-XFERCFG@SRCINC"
                offset="[13:12]"/>
         <field description="Determines whether the destination address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115515"
                id="DMA0@CHANNEL11-XFERCFG@DSTINC"
                offset="[15:14]"/>
         <field description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed."
                format="hex0x"
                id="DMA0@CHANNEL11-XFERCFG@XFERCOUNT"
                offset="[25:16]"/>
      </register>
      <register description="Configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL12-CFG"
                offset="0x4c0"
                size="4">
         <field description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller."
                format="enum"
                enum="d1e114603"
                id="DMA0@CHANNEL12-CFG@PERIPHREQEN"
                offset="[0]"/>
         <field description="Hardware Triggering Enable for this channel." format="enum"
                enum="d1e114649"
                id="DMA0@CHANNEL12-CFG@HWTRIGEN"
                offset="[1]"/>
         <field description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel."
                format="enum"
                enum="d1e114695"
                id="DMA0@CHANNEL12-CFG@TRIGPOL"
                offset="[4]"/>
         <field description="Trigger Type. Selects hardware trigger as edge triggered or level triggered."
                format="enum"
                enum="d1e114741"
                id="DMA0@CHANNEL12-CFG@TRIGTYPE"
                offset="[5]"/>
         <field description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer."
                format="enum"
                enum="d1e114787"
                id="DMA0@CHANNEL12-CFG@TRIGBURST"
                offset="[6]"/>
         <field description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size."
                format="hex0x"
                id="DMA0@CHANNEL12-CFG@BURSTPOWER"
                offset="[11:8]"/>
         <field description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst."
                format="enum"
                enum="d1e114852"
                id="DMA0@CHANNEL12-CFG@SRCBURSTWRAP"
                offset="[14]"/>
         <field description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst."
                format="enum"
                enum="d1e114898"
                id="DMA0@CHANNEL12-CFG@DSTBURSTWRAP"
                offset="[15]"/>
         <field description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority."
                format="hex0x"
                id="DMA0@CHANNEL12-CFG@CHPRIORITY"
                offset="[18:16]"/>
      </register>
      <register description="Control and status register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL12-CTLSTAT"
                offset="0x4c4"
                readOnly="true"
                size="4">
         <field description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel."
                format="enum"
                enum="d1e114990"
                id="DMA0@CHANNEL12-CTLSTAT@VALIDPENDING"
                offset="[0]"/>
         <field description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1."
                format="enum"
                enum="d1e115036"
                id="DMA0@CHANNEL12-CTLSTAT@TRIG"
                offset="[2]"/>
      </register>
      <register description="Transfer configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL12-XFERCFG"
                offset="0x4c8"
                size="4">
         <field description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled."
                format="enum"
                enum="d1e115110"
                id="DMA0@CHANNEL12-XFERCFG@CFGVALID"
                offset="[0]"/>
         <field description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers."
                format="enum"
                enum="d1e115156"
                id="DMA0@CHANNEL12-XFERCFG@RELOAD"
                offset="[1]"/>
         <field description="Software Trigger." format="enum" enum="d1e115202"
                id="DMA0@CHANNEL12-XFERCFG@SWTRIG"
                offset="[2]"/>
         <field description="Clear Trigger." format="enum" enum="d1e115248"
                id="DMA0@CHANNEL12-XFERCFG@CLRTRIG"
                offset="[3]"/>
         <field description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115294"
                id="DMA0@CHANNEL12-XFERCFG@SETINTA"
                offset="[4]"/>
         <field description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115341"
                id="DMA0@CHANNEL12-XFERCFG@SETINTB"
                offset="[5]"/>
         <field description="Transfer width used for this DMA channel." format="enum"
                enum="d1e115387"
                id="DMA0@CHANNEL12-XFERCFG@WIDTH"
                offset="[9:8]"/>
         <field description="Determines whether the source address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115445"
                id="DMA0@CHANNEL12-XFERCFG@SRCINC"
                offset="[13:12]"/>
         <field description="Determines whether the destination address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115515"
                id="DMA0@CHANNEL12-XFERCFG@DSTINC"
                offset="[15:14]"/>
         <field description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed."
                format="hex0x"
                id="DMA0@CHANNEL12-XFERCFG@XFERCOUNT"
                offset="[25:16]"/>
      </register>
      <register description="Configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL13-CFG"
                offset="0x4d0"
                size="4">
         <field description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller."
                format="enum"
                enum="d1e114603"
                id="DMA0@CHANNEL13-CFG@PERIPHREQEN"
                offset="[0]"/>
         <field description="Hardware Triggering Enable for this channel." format="enum"
                enum="d1e114649"
                id="DMA0@CHANNEL13-CFG@HWTRIGEN"
                offset="[1]"/>
         <field description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel."
                format="enum"
                enum="d1e114695"
                id="DMA0@CHANNEL13-CFG@TRIGPOL"
                offset="[4]"/>
         <field description="Trigger Type. Selects hardware trigger as edge triggered or level triggered."
                format="enum"
                enum="d1e114741"
                id="DMA0@CHANNEL13-CFG@TRIGTYPE"
                offset="[5]"/>
         <field description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer."
                format="enum"
                enum="d1e114787"
                id="DMA0@CHANNEL13-CFG@TRIGBURST"
                offset="[6]"/>
         <field description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size."
                format="hex0x"
                id="DMA0@CHANNEL13-CFG@BURSTPOWER"
                offset="[11:8]"/>
         <field description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst."
                format="enum"
                enum="d1e114852"
                id="DMA0@CHANNEL13-CFG@SRCBURSTWRAP"
                offset="[14]"/>
         <field description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst."
                format="enum"
                enum="d1e114898"
                id="DMA0@CHANNEL13-CFG@DSTBURSTWRAP"
                offset="[15]"/>
         <field description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority."
                format="hex0x"
                id="DMA0@CHANNEL13-CFG@CHPRIORITY"
                offset="[18:16]"/>
      </register>
      <register description="Control and status register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL13-CTLSTAT"
                offset="0x4d4"
                readOnly="true"
                size="4">
         <field description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel."
                format="enum"
                enum="d1e114990"
                id="DMA0@CHANNEL13-CTLSTAT@VALIDPENDING"
                offset="[0]"/>
         <field description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1."
                format="enum"
                enum="d1e115036"
                id="DMA0@CHANNEL13-CTLSTAT@TRIG"
                offset="[2]"/>
      </register>
      <register description="Transfer configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL13-XFERCFG"
                offset="0x4d8"
                size="4">
         <field description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled."
                format="enum"
                enum="d1e115110"
                id="DMA0@CHANNEL13-XFERCFG@CFGVALID"
                offset="[0]"/>
         <field description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers."
                format="enum"
                enum="d1e115156"
                id="DMA0@CHANNEL13-XFERCFG@RELOAD"
                offset="[1]"/>
         <field description="Software Trigger." format="enum" enum="d1e115202"
                id="DMA0@CHANNEL13-XFERCFG@SWTRIG"
                offset="[2]"/>
         <field description="Clear Trigger." format="enum" enum="d1e115248"
                id="DMA0@CHANNEL13-XFERCFG@CLRTRIG"
                offset="[3]"/>
         <field description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115294"
                id="DMA0@CHANNEL13-XFERCFG@SETINTA"
                offset="[4]"/>
         <field description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115341"
                id="DMA0@CHANNEL13-XFERCFG@SETINTB"
                offset="[5]"/>
         <field description="Transfer width used for this DMA channel." format="enum"
                enum="d1e115387"
                id="DMA0@CHANNEL13-XFERCFG@WIDTH"
                offset="[9:8]"/>
         <field description="Determines whether the source address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115445"
                id="DMA0@CHANNEL13-XFERCFG@SRCINC"
                offset="[13:12]"/>
         <field description="Determines whether the destination address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115515"
                id="DMA0@CHANNEL13-XFERCFG@DSTINC"
                offset="[15:14]"/>
         <field description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed."
                format="hex0x"
                id="DMA0@CHANNEL13-XFERCFG@XFERCOUNT"
                offset="[25:16]"/>
      </register>
      <register description="Configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL14-CFG"
                offset="0x4e0"
                size="4">
         <field description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller."
                format="enum"
                enum="d1e114603"
                id="DMA0@CHANNEL14-CFG@PERIPHREQEN"
                offset="[0]"/>
         <field description="Hardware Triggering Enable for this channel." format="enum"
                enum="d1e114649"
                id="DMA0@CHANNEL14-CFG@HWTRIGEN"
                offset="[1]"/>
         <field description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel."
                format="enum"
                enum="d1e114695"
                id="DMA0@CHANNEL14-CFG@TRIGPOL"
                offset="[4]"/>
         <field description="Trigger Type. Selects hardware trigger as edge triggered or level triggered."
                format="enum"
                enum="d1e114741"
                id="DMA0@CHANNEL14-CFG@TRIGTYPE"
                offset="[5]"/>
         <field description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer."
                format="enum"
                enum="d1e114787"
                id="DMA0@CHANNEL14-CFG@TRIGBURST"
                offset="[6]"/>
         <field description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size."
                format="hex0x"
                id="DMA0@CHANNEL14-CFG@BURSTPOWER"
                offset="[11:8]"/>
         <field description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst."
                format="enum"
                enum="d1e114852"
                id="DMA0@CHANNEL14-CFG@SRCBURSTWRAP"
                offset="[14]"/>
         <field description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst."
                format="enum"
                enum="d1e114898"
                id="DMA0@CHANNEL14-CFG@DSTBURSTWRAP"
                offset="[15]"/>
         <field description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority."
                format="hex0x"
                id="DMA0@CHANNEL14-CFG@CHPRIORITY"
                offset="[18:16]"/>
      </register>
      <register description="Control and status register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL14-CTLSTAT"
                offset="0x4e4"
                readOnly="true"
                size="4">
         <field description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel."
                format="enum"
                enum="d1e114990"
                id="DMA0@CHANNEL14-CTLSTAT@VALIDPENDING"
                offset="[0]"/>
         <field description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1."
                format="enum"
                enum="d1e115036"
                id="DMA0@CHANNEL14-CTLSTAT@TRIG"
                offset="[2]"/>
      </register>
      <register description="Transfer configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL14-XFERCFG"
                offset="0x4e8"
                size="4">
         <field description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled."
                format="enum"
                enum="d1e115110"
                id="DMA0@CHANNEL14-XFERCFG@CFGVALID"
                offset="[0]"/>
         <field description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers."
                format="enum"
                enum="d1e115156"
                id="DMA0@CHANNEL14-XFERCFG@RELOAD"
                offset="[1]"/>
         <field description="Software Trigger." format="enum" enum="d1e115202"
                id="DMA0@CHANNEL14-XFERCFG@SWTRIG"
                offset="[2]"/>
         <field description="Clear Trigger." format="enum" enum="d1e115248"
                id="DMA0@CHANNEL14-XFERCFG@CLRTRIG"
                offset="[3]"/>
         <field description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115294"
                id="DMA0@CHANNEL14-XFERCFG@SETINTA"
                offset="[4]"/>
         <field description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115341"
                id="DMA0@CHANNEL14-XFERCFG@SETINTB"
                offset="[5]"/>
         <field description="Transfer width used for this DMA channel." format="enum"
                enum="d1e115387"
                id="DMA0@CHANNEL14-XFERCFG@WIDTH"
                offset="[9:8]"/>
         <field description="Determines whether the source address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115445"
                id="DMA0@CHANNEL14-XFERCFG@SRCINC"
                offset="[13:12]"/>
         <field description="Determines whether the destination address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115515"
                id="DMA0@CHANNEL14-XFERCFG@DSTINC"
                offset="[15:14]"/>
         <field description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed."
                format="hex0x"
                id="DMA0@CHANNEL14-XFERCFG@XFERCOUNT"
                offset="[25:16]"/>
      </register>
      <register description="Configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL15-CFG"
                offset="0x4f0"
                size="4">
         <field description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller."
                format="enum"
                enum="d1e114603"
                id="DMA0@CHANNEL15-CFG@PERIPHREQEN"
                offset="[0]"/>
         <field description="Hardware Triggering Enable for this channel." format="enum"
                enum="d1e114649"
                id="DMA0@CHANNEL15-CFG@HWTRIGEN"
                offset="[1]"/>
         <field description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel."
                format="enum"
                enum="d1e114695"
                id="DMA0@CHANNEL15-CFG@TRIGPOL"
                offset="[4]"/>
         <field description="Trigger Type. Selects hardware trigger as edge triggered or level triggered."
                format="enum"
                enum="d1e114741"
                id="DMA0@CHANNEL15-CFG@TRIGTYPE"
                offset="[5]"/>
         <field description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer."
                format="enum"
                enum="d1e114787"
                id="DMA0@CHANNEL15-CFG@TRIGBURST"
                offset="[6]"/>
         <field description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size."
                format="hex0x"
                id="DMA0@CHANNEL15-CFG@BURSTPOWER"
                offset="[11:8]"/>
         <field description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst."
                format="enum"
                enum="d1e114852"
                id="DMA0@CHANNEL15-CFG@SRCBURSTWRAP"
                offset="[14]"/>
         <field description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst."
                format="enum"
                enum="d1e114898"
                id="DMA0@CHANNEL15-CFG@DSTBURSTWRAP"
                offset="[15]"/>
         <field description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority."
                format="hex0x"
                id="DMA0@CHANNEL15-CFG@CHPRIORITY"
                offset="[18:16]"/>
      </register>
      <register description="Control and status register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL15-CTLSTAT"
                offset="0x4f4"
                readOnly="true"
                size="4">
         <field description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel."
                format="enum"
                enum="d1e114990"
                id="DMA0@CHANNEL15-CTLSTAT@VALIDPENDING"
                offset="[0]"/>
         <field description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1."
                format="enum"
                enum="d1e115036"
                id="DMA0@CHANNEL15-CTLSTAT@TRIG"
                offset="[2]"/>
      </register>
      <register description="Transfer configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL15-XFERCFG"
                offset="0x4f8"
                size="4">
         <field description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled."
                format="enum"
                enum="d1e115110"
                id="DMA0@CHANNEL15-XFERCFG@CFGVALID"
                offset="[0]"/>
         <field description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers."
                format="enum"
                enum="d1e115156"
                id="DMA0@CHANNEL15-XFERCFG@RELOAD"
                offset="[1]"/>
         <field description="Software Trigger." format="enum" enum="d1e115202"
                id="DMA0@CHANNEL15-XFERCFG@SWTRIG"
                offset="[2]"/>
         <field description="Clear Trigger." format="enum" enum="d1e115248"
                id="DMA0@CHANNEL15-XFERCFG@CLRTRIG"
                offset="[3]"/>
         <field description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115294"
                id="DMA0@CHANNEL15-XFERCFG@SETINTA"
                offset="[4]"/>
         <field description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115341"
                id="DMA0@CHANNEL15-XFERCFG@SETINTB"
                offset="[5]"/>
         <field description="Transfer width used for this DMA channel." format="enum"
                enum="d1e115387"
                id="DMA0@CHANNEL15-XFERCFG@WIDTH"
                offset="[9:8]"/>
         <field description="Determines whether the source address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115445"
                id="DMA0@CHANNEL15-XFERCFG@SRCINC"
                offset="[13:12]"/>
         <field description="Determines whether the destination address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115515"
                id="DMA0@CHANNEL15-XFERCFG@DSTINC"
                offset="[15:14]"/>
         <field description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed."
                format="hex0x"
                id="DMA0@CHANNEL15-XFERCFG@XFERCOUNT"
                offset="[25:16]"/>
      </register>
      <register description="Configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL16-CFG"
                offset="0x500"
                size="4">
         <field description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller."
                format="enum"
                enum="d1e114603"
                id="DMA0@CHANNEL16-CFG@PERIPHREQEN"
                offset="[0]"/>
         <field description="Hardware Triggering Enable for this channel." format="enum"
                enum="d1e114649"
                id="DMA0@CHANNEL16-CFG@HWTRIGEN"
                offset="[1]"/>
         <field description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel."
                format="enum"
                enum="d1e114695"
                id="DMA0@CHANNEL16-CFG@TRIGPOL"
                offset="[4]"/>
         <field description="Trigger Type. Selects hardware trigger as edge triggered or level triggered."
                format="enum"
                enum="d1e114741"
                id="DMA0@CHANNEL16-CFG@TRIGTYPE"
                offset="[5]"/>
         <field description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer."
                format="enum"
                enum="d1e114787"
                id="DMA0@CHANNEL16-CFG@TRIGBURST"
                offset="[6]"/>
         <field description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size."
                format="hex0x"
                id="DMA0@CHANNEL16-CFG@BURSTPOWER"
                offset="[11:8]"/>
         <field description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst."
                format="enum"
                enum="d1e114852"
                id="DMA0@CHANNEL16-CFG@SRCBURSTWRAP"
                offset="[14]"/>
         <field description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst."
                format="enum"
                enum="d1e114898"
                id="DMA0@CHANNEL16-CFG@DSTBURSTWRAP"
                offset="[15]"/>
         <field description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority."
                format="hex0x"
                id="DMA0@CHANNEL16-CFG@CHPRIORITY"
                offset="[18:16]"/>
      </register>
      <register description="Control and status register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL16-CTLSTAT"
                offset="0x504"
                readOnly="true"
                size="4">
         <field description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel."
                format="enum"
                enum="d1e114990"
                id="DMA0@CHANNEL16-CTLSTAT@VALIDPENDING"
                offset="[0]"/>
         <field description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1."
                format="enum"
                enum="d1e115036"
                id="DMA0@CHANNEL16-CTLSTAT@TRIG"
                offset="[2]"/>
      </register>
      <register description="Transfer configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL16-XFERCFG"
                offset="0x508"
                size="4">
         <field description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled."
                format="enum"
                enum="d1e115110"
                id="DMA0@CHANNEL16-XFERCFG@CFGVALID"
                offset="[0]"/>
         <field description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers."
                format="enum"
                enum="d1e115156"
                id="DMA0@CHANNEL16-XFERCFG@RELOAD"
                offset="[1]"/>
         <field description="Software Trigger." format="enum" enum="d1e115202"
                id="DMA0@CHANNEL16-XFERCFG@SWTRIG"
                offset="[2]"/>
         <field description="Clear Trigger." format="enum" enum="d1e115248"
                id="DMA0@CHANNEL16-XFERCFG@CLRTRIG"
                offset="[3]"/>
         <field description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115294"
                id="DMA0@CHANNEL16-XFERCFG@SETINTA"
                offset="[4]"/>
         <field description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115341"
                id="DMA0@CHANNEL16-XFERCFG@SETINTB"
                offset="[5]"/>
         <field description="Transfer width used for this DMA channel." format="enum"
                enum="d1e115387"
                id="DMA0@CHANNEL16-XFERCFG@WIDTH"
                offset="[9:8]"/>
         <field description="Determines whether the source address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115445"
                id="DMA0@CHANNEL16-XFERCFG@SRCINC"
                offset="[13:12]"/>
         <field description="Determines whether the destination address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115515"
                id="DMA0@CHANNEL16-XFERCFG@DSTINC"
                offset="[15:14]"/>
         <field description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed."
                format="hex0x"
                id="DMA0@CHANNEL16-XFERCFG@XFERCOUNT"
                offset="[25:16]"/>
      </register>
      <register description="Configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL17-CFG"
                offset="0x510"
                size="4">
         <field description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller."
                format="enum"
                enum="d1e114603"
                id="DMA0@CHANNEL17-CFG@PERIPHREQEN"
                offset="[0]"/>
         <field description="Hardware Triggering Enable for this channel." format="enum"
                enum="d1e114649"
                id="DMA0@CHANNEL17-CFG@HWTRIGEN"
                offset="[1]"/>
         <field description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel."
                format="enum"
                enum="d1e114695"
                id="DMA0@CHANNEL17-CFG@TRIGPOL"
                offset="[4]"/>
         <field description="Trigger Type. Selects hardware trigger as edge triggered or level triggered."
                format="enum"
                enum="d1e114741"
                id="DMA0@CHANNEL17-CFG@TRIGTYPE"
                offset="[5]"/>
         <field description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer."
                format="enum"
                enum="d1e114787"
                id="DMA0@CHANNEL17-CFG@TRIGBURST"
                offset="[6]"/>
         <field description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size."
                format="hex0x"
                id="DMA0@CHANNEL17-CFG@BURSTPOWER"
                offset="[11:8]"/>
         <field description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst."
                format="enum"
                enum="d1e114852"
                id="DMA0@CHANNEL17-CFG@SRCBURSTWRAP"
                offset="[14]"/>
         <field description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst."
                format="enum"
                enum="d1e114898"
                id="DMA0@CHANNEL17-CFG@DSTBURSTWRAP"
                offset="[15]"/>
         <field description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority."
                format="hex0x"
                id="DMA0@CHANNEL17-CFG@CHPRIORITY"
                offset="[18:16]"/>
      </register>
      <register description="Control and status register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL17-CTLSTAT"
                offset="0x514"
                readOnly="true"
                size="4">
         <field description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel."
                format="enum"
                enum="d1e114990"
                id="DMA0@CHANNEL17-CTLSTAT@VALIDPENDING"
                offset="[0]"/>
         <field description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1."
                format="enum"
                enum="d1e115036"
                id="DMA0@CHANNEL17-CTLSTAT@TRIG"
                offset="[2]"/>
      </register>
      <register description="Transfer configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL17-XFERCFG"
                offset="0x518"
                size="4">
         <field description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled."
                format="enum"
                enum="d1e115110"
                id="DMA0@CHANNEL17-XFERCFG@CFGVALID"
                offset="[0]"/>
         <field description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers."
                format="enum"
                enum="d1e115156"
                id="DMA0@CHANNEL17-XFERCFG@RELOAD"
                offset="[1]"/>
         <field description="Software Trigger." format="enum" enum="d1e115202"
                id="DMA0@CHANNEL17-XFERCFG@SWTRIG"
                offset="[2]"/>
         <field description="Clear Trigger." format="enum" enum="d1e115248"
                id="DMA0@CHANNEL17-XFERCFG@CLRTRIG"
                offset="[3]"/>
         <field description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115294"
                id="DMA0@CHANNEL17-XFERCFG@SETINTA"
                offset="[4]"/>
         <field description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115341"
                id="DMA0@CHANNEL17-XFERCFG@SETINTB"
                offset="[5]"/>
         <field description="Transfer width used for this DMA channel." format="enum"
                enum="d1e115387"
                id="DMA0@CHANNEL17-XFERCFG@WIDTH"
                offset="[9:8]"/>
         <field description="Determines whether the source address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115445"
                id="DMA0@CHANNEL17-XFERCFG@SRCINC"
                offset="[13:12]"/>
         <field description="Determines whether the destination address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115515"
                id="DMA0@CHANNEL17-XFERCFG@DSTINC"
                offset="[15:14]"/>
         <field description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed."
                format="hex0x"
                id="DMA0@CHANNEL17-XFERCFG@XFERCOUNT"
                offset="[25:16]"/>
      </register>
      <register description="Configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL18-CFG"
                offset="0x520"
                size="4">
         <field description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller."
                format="enum"
                enum="d1e114603"
                id="DMA0@CHANNEL18-CFG@PERIPHREQEN"
                offset="[0]"/>
         <field description="Hardware Triggering Enable for this channel." format="enum"
                enum="d1e114649"
                id="DMA0@CHANNEL18-CFG@HWTRIGEN"
                offset="[1]"/>
         <field description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel."
                format="enum"
                enum="d1e114695"
                id="DMA0@CHANNEL18-CFG@TRIGPOL"
                offset="[4]"/>
         <field description="Trigger Type. Selects hardware trigger as edge triggered or level triggered."
                format="enum"
                enum="d1e114741"
                id="DMA0@CHANNEL18-CFG@TRIGTYPE"
                offset="[5]"/>
         <field description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer."
                format="enum"
                enum="d1e114787"
                id="DMA0@CHANNEL18-CFG@TRIGBURST"
                offset="[6]"/>
         <field description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size."
                format="hex0x"
                id="DMA0@CHANNEL18-CFG@BURSTPOWER"
                offset="[11:8]"/>
         <field description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst."
                format="enum"
                enum="d1e114852"
                id="DMA0@CHANNEL18-CFG@SRCBURSTWRAP"
                offset="[14]"/>
         <field description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst."
                format="enum"
                enum="d1e114898"
                id="DMA0@CHANNEL18-CFG@DSTBURSTWRAP"
                offset="[15]"/>
         <field description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority."
                format="hex0x"
                id="DMA0@CHANNEL18-CFG@CHPRIORITY"
                offset="[18:16]"/>
      </register>
      <register description="Control and status register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL18-CTLSTAT"
                offset="0x524"
                readOnly="true"
                size="4">
         <field description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel."
                format="enum"
                enum="d1e114990"
                id="DMA0@CHANNEL18-CTLSTAT@VALIDPENDING"
                offset="[0]"/>
         <field description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1."
                format="enum"
                enum="d1e115036"
                id="DMA0@CHANNEL18-CTLSTAT@TRIG"
                offset="[2]"/>
      </register>
      <register description="Transfer configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL18-XFERCFG"
                offset="0x528"
                size="4">
         <field description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled."
                format="enum"
                enum="d1e115110"
                id="DMA0@CHANNEL18-XFERCFG@CFGVALID"
                offset="[0]"/>
         <field description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers."
                format="enum"
                enum="d1e115156"
                id="DMA0@CHANNEL18-XFERCFG@RELOAD"
                offset="[1]"/>
         <field description="Software Trigger." format="enum" enum="d1e115202"
                id="DMA0@CHANNEL18-XFERCFG@SWTRIG"
                offset="[2]"/>
         <field description="Clear Trigger." format="enum" enum="d1e115248"
                id="DMA0@CHANNEL18-XFERCFG@CLRTRIG"
                offset="[3]"/>
         <field description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115294"
                id="DMA0@CHANNEL18-XFERCFG@SETINTA"
                offset="[4]"/>
         <field description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115341"
                id="DMA0@CHANNEL18-XFERCFG@SETINTB"
                offset="[5]"/>
         <field description="Transfer width used for this DMA channel." format="enum"
                enum="d1e115387"
                id="DMA0@CHANNEL18-XFERCFG@WIDTH"
                offset="[9:8]"/>
         <field description="Determines whether the source address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115445"
                id="DMA0@CHANNEL18-XFERCFG@SRCINC"
                offset="[13:12]"/>
         <field description="Determines whether the destination address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115515"
                id="DMA0@CHANNEL18-XFERCFG@DSTINC"
                offset="[15:14]"/>
         <field description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed."
                format="hex0x"
                id="DMA0@CHANNEL18-XFERCFG@XFERCOUNT"
                offset="[25:16]"/>
      </register>
      <register description="Configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL19-CFG"
                offset="0x530"
                size="4">
         <field description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller."
                format="enum"
                enum="d1e114603"
                id="DMA0@CHANNEL19-CFG@PERIPHREQEN"
                offset="[0]"/>
         <field description="Hardware Triggering Enable for this channel." format="enum"
                enum="d1e114649"
                id="DMA0@CHANNEL19-CFG@HWTRIGEN"
                offset="[1]"/>
         <field description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel."
                format="enum"
                enum="d1e114695"
                id="DMA0@CHANNEL19-CFG@TRIGPOL"
                offset="[4]"/>
         <field description="Trigger Type. Selects hardware trigger as edge triggered or level triggered."
                format="enum"
                enum="d1e114741"
                id="DMA0@CHANNEL19-CFG@TRIGTYPE"
                offset="[5]"/>
         <field description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer."
                format="enum"
                enum="d1e114787"
                id="DMA0@CHANNEL19-CFG@TRIGBURST"
                offset="[6]"/>
         <field description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size."
                format="hex0x"
                id="DMA0@CHANNEL19-CFG@BURSTPOWER"
                offset="[11:8]"/>
         <field description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst."
                format="enum"
                enum="d1e114852"
                id="DMA0@CHANNEL19-CFG@SRCBURSTWRAP"
                offset="[14]"/>
         <field description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst."
                format="enum"
                enum="d1e114898"
                id="DMA0@CHANNEL19-CFG@DSTBURSTWRAP"
                offset="[15]"/>
         <field description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority."
                format="hex0x"
                id="DMA0@CHANNEL19-CFG@CHPRIORITY"
                offset="[18:16]"/>
      </register>
      <register description="Control and status register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL19-CTLSTAT"
                offset="0x534"
                readOnly="true"
                size="4">
         <field description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel."
                format="enum"
                enum="d1e114990"
                id="DMA0@CHANNEL19-CTLSTAT@VALIDPENDING"
                offset="[0]"/>
         <field description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1."
                format="enum"
                enum="d1e115036"
                id="DMA0@CHANNEL19-CTLSTAT@TRIG"
                offset="[2]"/>
      </register>
      <register description="Transfer configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL19-XFERCFG"
                offset="0x538"
                size="4">
         <field description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled."
                format="enum"
                enum="d1e115110"
                id="DMA0@CHANNEL19-XFERCFG@CFGVALID"
                offset="[0]"/>
         <field description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers."
                format="enum"
                enum="d1e115156"
                id="DMA0@CHANNEL19-XFERCFG@RELOAD"
                offset="[1]"/>
         <field description="Software Trigger." format="enum" enum="d1e115202"
                id="DMA0@CHANNEL19-XFERCFG@SWTRIG"
                offset="[2]"/>
         <field description="Clear Trigger." format="enum" enum="d1e115248"
                id="DMA0@CHANNEL19-XFERCFG@CLRTRIG"
                offset="[3]"/>
         <field description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115294"
                id="DMA0@CHANNEL19-XFERCFG@SETINTA"
                offset="[4]"/>
         <field description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115341"
                id="DMA0@CHANNEL19-XFERCFG@SETINTB"
                offset="[5]"/>
         <field description="Transfer width used for this DMA channel." format="enum"
                enum="d1e115387"
                id="DMA0@CHANNEL19-XFERCFG@WIDTH"
                offset="[9:8]"/>
         <field description="Determines whether the source address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115445"
                id="DMA0@CHANNEL19-XFERCFG@SRCINC"
                offset="[13:12]"/>
         <field description="Determines whether the destination address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115515"
                id="DMA0@CHANNEL19-XFERCFG@DSTINC"
                offset="[15:14]"/>
         <field description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed."
                format="hex0x"
                id="DMA0@CHANNEL19-XFERCFG@XFERCOUNT"
                offset="[25:16]"/>
      </register>
      <register description="Configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL20-CFG"
                offset="0x540"
                size="4">
         <field description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller."
                format="enum"
                enum="d1e114603"
                id="DMA0@CHANNEL20-CFG@PERIPHREQEN"
                offset="[0]"/>
         <field description="Hardware Triggering Enable for this channel." format="enum"
                enum="d1e114649"
                id="DMA0@CHANNEL20-CFG@HWTRIGEN"
                offset="[1]"/>
         <field description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel."
                format="enum"
                enum="d1e114695"
                id="DMA0@CHANNEL20-CFG@TRIGPOL"
                offset="[4]"/>
         <field description="Trigger Type. Selects hardware trigger as edge triggered or level triggered."
                format="enum"
                enum="d1e114741"
                id="DMA0@CHANNEL20-CFG@TRIGTYPE"
                offset="[5]"/>
         <field description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer."
                format="enum"
                enum="d1e114787"
                id="DMA0@CHANNEL20-CFG@TRIGBURST"
                offset="[6]"/>
         <field description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size."
                format="hex0x"
                id="DMA0@CHANNEL20-CFG@BURSTPOWER"
                offset="[11:8]"/>
         <field description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst."
                format="enum"
                enum="d1e114852"
                id="DMA0@CHANNEL20-CFG@SRCBURSTWRAP"
                offset="[14]"/>
         <field description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst."
                format="enum"
                enum="d1e114898"
                id="DMA0@CHANNEL20-CFG@DSTBURSTWRAP"
                offset="[15]"/>
         <field description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority."
                format="hex0x"
                id="DMA0@CHANNEL20-CFG@CHPRIORITY"
                offset="[18:16]"/>
      </register>
      <register description="Control and status register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL20-CTLSTAT"
                offset="0x544"
                readOnly="true"
                size="4">
         <field description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel."
                format="enum"
                enum="d1e114990"
                id="DMA0@CHANNEL20-CTLSTAT@VALIDPENDING"
                offset="[0]"/>
         <field description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1."
                format="enum"
                enum="d1e115036"
                id="DMA0@CHANNEL20-CTLSTAT@TRIG"
                offset="[2]"/>
      </register>
      <register description="Transfer configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL20-XFERCFG"
                offset="0x548"
                size="4">
         <field description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled."
                format="enum"
                enum="d1e115110"
                id="DMA0@CHANNEL20-XFERCFG@CFGVALID"
                offset="[0]"/>
         <field description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers."
                format="enum"
                enum="d1e115156"
                id="DMA0@CHANNEL20-XFERCFG@RELOAD"
                offset="[1]"/>
         <field description="Software Trigger." format="enum" enum="d1e115202"
                id="DMA0@CHANNEL20-XFERCFG@SWTRIG"
                offset="[2]"/>
         <field description="Clear Trigger." format="enum" enum="d1e115248"
                id="DMA0@CHANNEL20-XFERCFG@CLRTRIG"
                offset="[3]"/>
         <field description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115294"
                id="DMA0@CHANNEL20-XFERCFG@SETINTA"
                offset="[4]"/>
         <field description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115341"
                id="DMA0@CHANNEL20-XFERCFG@SETINTB"
                offset="[5]"/>
         <field description="Transfer width used for this DMA channel." format="enum"
                enum="d1e115387"
                id="DMA0@CHANNEL20-XFERCFG@WIDTH"
                offset="[9:8]"/>
         <field description="Determines whether the source address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115445"
                id="DMA0@CHANNEL20-XFERCFG@SRCINC"
                offset="[13:12]"/>
         <field description="Determines whether the destination address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115515"
                id="DMA0@CHANNEL20-XFERCFG@DSTINC"
                offset="[15:14]"/>
         <field description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed."
                format="hex0x"
                id="DMA0@CHANNEL20-XFERCFG@XFERCOUNT"
                offset="[25:16]"/>
      </register>
      <register description="Configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL21-CFG"
                offset="0x550"
                size="4">
         <field description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller."
                format="enum"
                enum="d1e114603"
                id="DMA0@CHANNEL21-CFG@PERIPHREQEN"
                offset="[0]"/>
         <field description="Hardware Triggering Enable for this channel." format="enum"
                enum="d1e114649"
                id="DMA0@CHANNEL21-CFG@HWTRIGEN"
                offset="[1]"/>
         <field description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel."
                format="enum"
                enum="d1e114695"
                id="DMA0@CHANNEL21-CFG@TRIGPOL"
                offset="[4]"/>
         <field description="Trigger Type. Selects hardware trigger as edge triggered or level triggered."
                format="enum"
                enum="d1e114741"
                id="DMA0@CHANNEL21-CFG@TRIGTYPE"
                offset="[5]"/>
         <field description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer."
                format="enum"
                enum="d1e114787"
                id="DMA0@CHANNEL21-CFG@TRIGBURST"
                offset="[6]"/>
         <field description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size."
                format="hex0x"
                id="DMA0@CHANNEL21-CFG@BURSTPOWER"
                offset="[11:8]"/>
         <field description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst."
                format="enum"
                enum="d1e114852"
                id="DMA0@CHANNEL21-CFG@SRCBURSTWRAP"
                offset="[14]"/>
         <field description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst."
                format="enum"
                enum="d1e114898"
                id="DMA0@CHANNEL21-CFG@DSTBURSTWRAP"
                offset="[15]"/>
         <field description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority."
                format="hex0x"
                id="DMA0@CHANNEL21-CFG@CHPRIORITY"
                offset="[18:16]"/>
      </register>
      <register description="Control and status register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL21-CTLSTAT"
                offset="0x554"
                readOnly="true"
                size="4">
         <field description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel."
                format="enum"
                enum="d1e114990"
                id="DMA0@CHANNEL21-CTLSTAT@VALIDPENDING"
                offset="[0]"/>
         <field description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1."
                format="enum"
                enum="d1e115036"
                id="DMA0@CHANNEL21-CTLSTAT@TRIG"
                offset="[2]"/>
      </register>
      <register description="Transfer configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL21-XFERCFG"
                offset="0x558"
                size="4">
         <field description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled."
                format="enum"
                enum="d1e115110"
                id="DMA0@CHANNEL21-XFERCFG@CFGVALID"
                offset="[0]"/>
         <field description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers."
                format="enum"
                enum="d1e115156"
                id="DMA0@CHANNEL21-XFERCFG@RELOAD"
                offset="[1]"/>
         <field description="Software Trigger." format="enum" enum="d1e115202"
                id="DMA0@CHANNEL21-XFERCFG@SWTRIG"
                offset="[2]"/>
         <field description="Clear Trigger." format="enum" enum="d1e115248"
                id="DMA0@CHANNEL21-XFERCFG@CLRTRIG"
                offset="[3]"/>
         <field description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115294"
                id="DMA0@CHANNEL21-XFERCFG@SETINTA"
                offset="[4]"/>
         <field description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115341"
                id="DMA0@CHANNEL21-XFERCFG@SETINTB"
                offset="[5]"/>
         <field description="Transfer width used for this DMA channel." format="enum"
                enum="d1e115387"
                id="DMA0@CHANNEL21-XFERCFG@WIDTH"
                offset="[9:8]"/>
         <field description="Determines whether the source address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115445"
                id="DMA0@CHANNEL21-XFERCFG@SRCINC"
                offset="[13:12]"/>
         <field description="Determines whether the destination address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115515"
                id="DMA0@CHANNEL21-XFERCFG@DSTINC"
                offset="[15:14]"/>
         <field description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed."
                format="hex0x"
                id="DMA0@CHANNEL21-XFERCFG@XFERCOUNT"
                offset="[25:16]"/>
      </register>
      <register description="Configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL22-CFG"
                offset="0x560"
                size="4">
         <field description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller."
                format="enum"
                enum="d1e114603"
                id="DMA0@CHANNEL22-CFG@PERIPHREQEN"
                offset="[0]"/>
         <field description="Hardware Triggering Enable for this channel." format="enum"
                enum="d1e114649"
                id="DMA0@CHANNEL22-CFG@HWTRIGEN"
                offset="[1]"/>
         <field description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel."
                format="enum"
                enum="d1e114695"
                id="DMA0@CHANNEL22-CFG@TRIGPOL"
                offset="[4]"/>
         <field description="Trigger Type. Selects hardware trigger as edge triggered or level triggered."
                format="enum"
                enum="d1e114741"
                id="DMA0@CHANNEL22-CFG@TRIGTYPE"
                offset="[5]"/>
         <field description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer."
                format="enum"
                enum="d1e114787"
                id="DMA0@CHANNEL22-CFG@TRIGBURST"
                offset="[6]"/>
         <field description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size."
                format="hex0x"
                id="DMA0@CHANNEL22-CFG@BURSTPOWER"
                offset="[11:8]"/>
         <field description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst."
                format="enum"
                enum="d1e114852"
                id="DMA0@CHANNEL22-CFG@SRCBURSTWRAP"
                offset="[14]"/>
         <field description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst."
                format="enum"
                enum="d1e114898"
                id="DMA0@CHANNEL22-CFG@DSTBURSTWRAP"
                offset="[15]"/>
         <field description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority."
                format="hex0x"
                id="DMA0@CHANNEL22-CFG@CHPRIORITY"
                offset="[18:16]"/>
      </register>
      <register description="Control and status register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL22-CTLSTAT"
                offset="0x564"
                readOnly="true"
                size="4">
         <field description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel."
                format="enum"
                enum="d1e114990"
                id="DMA0@CHANNEL22-CTLSTAT@VALIDPENDING"
                offset="[0]"/>
         <field description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1."
                format="enum"
                enum="d1e115036"
                id="DMA0@CHANNEL22-CTLSTAT@TRIG"
                offset="[2]"/>
      </register>
      <register description="Transfer configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL22-XFERCFG"
                offset="0x568"
                size="4">
         <field description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled."
                format="enum"
                enum="d1e115110"
                id="DMA0@CHANNEL22-XFERCFG@CFGVALID"
                offset="[0]"/>
         <field description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers."
                format="enum"
                enum="d1e115156"
                id="DMA0@CHANNEL22-XFERCFG@RELOAD"
                offset="[1]"/>
         <field description="Software Trigger." format="enum" enum="d1e115202"
                id="DMA0@CHANNEL22-XFERCFG@SWTRIG"
                offset="[2]"/>
         <field description="Clear Trigger." format="enum" enum="d1e115248"
                id="DMA0@CHANNEL22-XFERCFG@CLRTRIG"
                offset="[3]"/>
         <field description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115294"
                id="DMA0@CHANNEL22-XFERCFG@SETINTA"
                offset="[4]"/>
         <field description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115341"
                id="DMA0@CHANNEL22-XFERCFG@SETINTB"
                offset="[5]"/>
         <field description="Transfer width used for this DMA channel." format="enum"
                enum="d1e115387"
                id="DMA0@CHANNEL22-XFERCFG@WIDTH"
                offset="[9:8]"/>
         <field description="Determines whether the source address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115445"
                id="DMA0@CHANNEL22-XFERCFG@SRCINC"
                offset="[13:12]"/>
         <field description="Determines whether the destination address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115515"
                id="DMA0@CHANNEL22-XFERCFG@DSTINC"
                offset="[15:14]"/>
         <field description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed."
                format="hex0x"
                id="DMA0@CHANNEL22-XFERCFG@XFERCOUNT"
                offset="[25:16]"/>
      </register>
      <register description="Configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL23-CFG"
                offset="0x570"
                size="4">
         <field description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller."
                format="enum"
                enum="d1e114603"
                id="DMA0@CHANNEL23-CFG@PERIPHREQEN"
                offset="[0]"/>
         <field description="Hardware Triggering Enable for this channel." format="enum"
                enum="d1e114649"
                id="DMA0@CHANNEL23-CFG@HWTRIGEN"
                offset="[1]"/>
         <field description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel."
                format="enum"
                enum="d1e114695"
                id="DMA0@CHANNEL23-CFG@TRIGPOL"
                offset="[4]"/>
         <field description="Trigger Type. Selects hardware trigger as edge triggered or level triggered."
                format="enum"
                enum="d1e114741"
                id="DMA0@CHANNEL23-CFG@TRIGTYPE"
                offset="[5]"/>
         <field description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer."
                format="enum"
                enum="d1e114787"
                id="DMA0@CHANNEL23-CFG@TRIGBURST"
                offset="[6]"/>
         <field description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size."
                format="hex0x"
                id="DMA0@CHANNEL23-CFG@BURSTPOWER"
                offset="[11:8]"/>
         <field description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst."
                format="enum"
                enum="d1e114852"
                id="DMA0@CHANNEL23-CFG@SRCBURSTWRAP"
                offset="[14]"/>
         <field description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst."
                format="enum"
                enum="d1e114898"
                id="DMA0@CHANNEL23-CFG@DSTBURSTWRAP"
                offset="[15]"/>
         <field description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority."
                format="hex0x"
                id="DMA0@CHANNEL23-CFG@CHPRIORITY"
                offset="[18:16]"/>
      </register>
      <register description="Control and status register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL23-CTLSTAT"
                offset="0x574"
                readOnly="true"
                size="4">
         <field description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel."
                format="enum"
                enum="d1e114990"
                id="DMA0@CHANNEL23-CTLSTAT@VALIDPENDING"
                offset="[0]"/>
         <field description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1."
                format="enum"
                enum="d1e115036"
                id="DMA0@CHANNEL23-CTLSTAT@TRIG"
                offset="[2]"/>
      </register>
      <register description="Transfer configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL23-XFERCFG"
                offset="0x578"
                size="4">
         <field description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled."
                format="enum"
                enum="d1e115110"
                id="DMA0@CHANNEL23-XFERCFG@CFGVALID"
                offset="[0]"/>
         <field description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers."
                format="enum"
                enum="d1e115156"
                id="DMA0@CHANNEL23-XFERCFG@RELOAD"
                offset="[1]"/>
         <field description="Software Trigger." format="enum" enum="d1e115202"
                id="DMA0@CHANNEL23-XFERCFG@SWTRIG"
                offset="[2]"/>
         <field description="Clear Trigger." format="enum" enum="d1e115248"
                id="DMA0@CHANNEL23-XFERCFG@CLRTRIG"
                offset="[3]"/>
         <field description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115294"
                id="DMA0@CHANNEL23-XFERCFG@SETINTA"
                offset="[4]"/>
         <field description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115341"
                id="DMA0@CHANNEL23-XFERCFG@SETINTB"
                offset="[5]"/>
         <field description="Transfer width used for this DMA channel." format="enum"
                enum="d1e115387"
                id="DMA0@CHANNEL23-XFERCFG@WIDTH"
                offset="[9:8]"/>
         <field description="Determines whether the source address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115445"
                id="DMA0@CHANNEL23-XFERCFG@SRCINC"
                offset="[13:12]"/>
         <field description="Determines whether the destination address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115515"
                id="DMA0@CHANNEL23-XFERCFG@DSTINC"
                offset="[15:14]"/>
         <field description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed."
                format="hex0x"
                id="DMA0@CHANNEL23-XFERCFG@XFERCOUNT"
                offset="[25:16]"/>
      </register>
      <register description="Configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL24-CFG"
                offset="0x580"
                size="4">
         <field description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller."
                format="enum"
                enum="d1e114603"
                id="DMA0@CHANNEL24-CFG@PERIPHREQEN"
                offset="[0]"/>
         <field description="Hardware Triggering Enable for this channel." format="enum"
                enum="d1e114649"
                id="DMA0@CHANNEL24-CFG@HWTRIGEN"
                offset="[1]"/>
         <field description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel."
                format="enum"
                enum="d1e114695"
                id="DMA0@CHANNEL24-CFG@TRIGPOL"
                offset="[4]"/>
         <field description="Trigger Type. Selects hardware trigger as edge triggered or level triggered."
                format="enum"
                enum="d1e114741"
                id="DMA0@CHANNEL24-CFG@TRIGTYPE"
                offset="[5]"/>
         <field description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer."
                format="enum"
                enum="d1e114787"
                id="DMA0@CHANNEL24-CFG@TRIGBURST"
                offset="[6]"/>
         <field description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size."
                format="hex0x"
                id="DMA0@CHANNEL24-CFG@BURSTPOWER"
                offset="[11:8]"/>
         <field description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst."
                format="enum"
                enum="d1e114852"
                id="DMA0@CHANNEL24-CFG@SRCBURSTWRAP"
                offset="[14]"/>
         <field description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst."
                format="enum"
                enum="d1e114898"
                id="DMA0@CHANNEL24-CFG@DSTBURSTWRAP"
                offset="[15]"/>
         <field description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority."
                format="hex0x"
                id="DMA0@CHANNEL24-CFG@CHPRIORITY"
                offset="[18:16]"/>
      </register>
      <register description="Control and status register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL24-CTLSTAT"
                offset="0x584"
                readOnly="true"
                size="4">
         <field description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel."
                format="enum"
                enum="d1e114990"
                id="DMA0@CHANNEL24-CTLSTAT@VALIDPENDING"
                offset="[0]"/>
         <field description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1."
                format="enum"
                enum="d1e115036"
                id="DMA0@CHANNEL24-CTLSTAT@TRIG"
                offset="[2]"/>
      </register>
      <register description="Transfer configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL24-XFERCFG"
                offset="0x588"
                size="4">
         <field description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled."
                format="enum"
                enum="d1e115110"
                id="DMA0@CHANNEL24-XFERCFG@CFGVALID"
                offset="[0]"/>
         <field description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers."
                format="enum"
                enum="d1e115156"
                id="DMA0@CHANNEL24-XFERCFG@RELOAD"
                offset="[1]"/>
         <field description="Software Trigger." format="enum" enum="d1e115202"
                id="DMA0@CHANNEL24-XFERCFG@SWTRIG"
                offset="[2]"/>
         <field description="Clear Trigger." format="enum" enum="d1e115248"
                id="DMA0@CHANNEL24-XFERCFG@CLRTRIG"
                offset="[3]"/>
         <field description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115294"
                id="DMA0@CHANNEL24-XFERCFG@SETINTA"
                offset="[4]"/>
         <field description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115341"
                id="DMA0@CHANNEL24-XFERCFG@SETINTB"
                offset="[5]"/>
         <field description="Transfer width used for this DMA channel." format="enum"
                enum="d1e115387"
                id="DMA0@CHANNEL24-XFERCFG@WIDTH"
                offset="[9:8]"/>
         <field description="Determines whether the source address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115445"
                id="DMA0@CHANNEL24-XFERCFG@SRCINC"
                offset="[13:12]"/>
         <field description="Determines whether the destination address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115515"
                id="DMA0@CHANNEL24-XFERCFG@DSTINC"
                offset="[15:14]"/>
         <field description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed."
                format="hex0x"
                id="DMA0@CHANNEL24-XFERCFG@XFERCOUNT"
                offset="[25:16]"/>
      </register>
      <register description="Configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL25-CFG"
                offset="0x590"
                size="4">
         <field description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller."
                format="enum"
                enum="d1e114603"
                id="DMA0@CHANNEL25-CFG@PERIPHREQEN"
                offset="[0]"/>
         <field description="Hardware Triggering Enable for this channel." format="enum"
                enum="d1e114649"
                id="DMA0@CHANNEL25-CFG@HWTRIGEN"
                offset="[1]"/>
         <field description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel."
                format="enum"
                enum="d1e114695"
                id="DMA0@CHANNEL25-CFG@TRIGPOL"
                offset="[4]"/>
         <field description="Trigger Type. Selects hardware trigger as edge triggered or level triggered."
                format="enum"
                enum="d1e114741"
                id="DMA0@CHANNEL25-CFG@TRIGTYPE"
                offset="[5]"/>
         <field description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer."
                format="enum"
                enum="d1e114787"
                id="DMA0@CHANNEL25-CFG@TRIGBURST"
                offset="[6]"/>
         <field description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size."
                format="hex0x"
                id="DMA0@CHANNEL25-CFG@BURSTPOWER"
                offset="[11:8]"/>
         <field description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst."
                format="enum"
                enum="d1e114852"
                id="DMA0@CHANNEL25-CFG@SRCBURSTWRAP"
                offset="[14]"/>
         <field description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst."
                format="enum"
                enum="d1e114898"
                id="DMA0@CHANNEL25-CFG@DSTBURSTWRAP"
                offset="[15]"/>
         <field description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority."
                format="hex0x"
                id="DMA0@CHANNEL25-CFG@CHPRIORITY"
                offset="[18:16]"/>
      </register>
      <register description="Control and status register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL25-CTLSTAT"
                offset="0x594"
                readOnly="true"
                size="4">
         <field description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel."
                format="enum"
                enum="d1e114990"
                id="DMA0@CHANNEL25-CTLSTAT@VALIDPENDING"
                offset="[0]"/>
         <field description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1."
                format="enum"
                enum="d1e115036"
                id="DMA0@CHANNEL25-CTLSTAT@TRIG"
                offset="[2]"/>
      </register>
      <register description="Transfer configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL25-XFERCFG"
                offset="0x598"
                size="4">
         <field description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled."
                format="enum"
                enum="d1e115110"
                id="DMA0@CHANNEL25-XFERCFG@CFGVALID"
                offset="[0]"/>
         <field description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers."
                format="enum"
                enum="d1e115156"
                id="DMA0@CHANNEL25-XFERCFG@RELOAD"
                offset="[1]"/>
         <field description="Software Trigger." format="enum" enum="d1e115202"
                id="DMA0@CHANNEL25-XFERCFG@SWTRIG"
                offset="[2]"/>
         <field description="Clear Trigger." format="enum" enum="d1e115248"
                id="DMA0@CHANNEL25-XFERCFG@CLRTRIG"
                offset="[3]"/>
         <field description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115294"
                id="DMA0@CHANNEL25-XFERCFG@SETINTA"
                offset="[4]"/>
         <field description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115341"
                id="DMA0@CHANNEL25-XFERCFG@SETINTB"
                offset="[5]"/>
         <field description="Transfer width used for this DMA channel." format="enum"
                enum="d1e115387"
                id="DMA0@CHANNEL25-XFERCFG@WIDTH"
                offset="[9:8]"/>
         <field description="Determines whether the source address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115445"
                id="DMA0@CHANNEL25-XFERCFG@SRCINC"
                offset="[13:12]"/>
         <field description="Determines whether the destination address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115515"
                id="DMA0@CHANNEL25-XFERCFG@DSTINC"
                offset="[15:14]"/>
         <field description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed."
                format="hex0x"
                id="DMA0@CHANNEL25-XFERCFG@XFERCOUNT"
                offset="[25:16]"/>
      </register>
      <register description="Configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL26-CFG"
                offset="0x5a0"
                size="4">
         <field description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller."
                format="enum"
                enum="d1e114603"
                id="DMA0@CHANNEL26-CFG@PERIPHREQEN"
                offset="[0]"/>
         <field description="Hardware Triggering Enable for this channel." format="enum"
                enum="d1e114649"
                id="DMA0@CHANNEL26-CFG@HWTRIGEN"
                offset="[1]"/>
         <field description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel."
                format="enum"
                enum="d1e114695"
                id="DMA0@CHANNEL26-CFG@TRIGPOL"
                offset="[4]"/>
         <field description="Trigger Type. Selects hardware trigger as edge triggered or level triggered."
                format="enum"
                enum="d1e114741"
                id="DMA0@CHANNEL26-CFG@TRIGTYPE"
                offset="[5]"/>
         <field description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer."
                format="enum"
                enum="d1e114787"
                id="DMA0@CHANNEL26-CFG@TRIGBURST"
                offset="[6]"/>
         <field description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size."
                format="hex0x"
                id="DMA0@CHANNEL26-CFG@BURSTPOWER"
                offset="[11:8]"/>
         <field description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst."
                format="enum"
                enum="d1e114852"
                id="DMA0@CHANNEL26-CFG@SRCBURSTWRAP"
                offset="[14]"/>
         <field description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst."
                format="enum"
                enum="d1e114898"
                id="DMA0@CHANNEL26-CFG@DSTBURSTWRAP"
                offset="[15]"/>
         <field description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority."
                format="hex0x"
                id="DMA0@CHANNEL26-CFG@CHPRIORITY"
                offset="[18:16]"/>
      </register>
      <register description="Control and status register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL26-CTLSTAT"
                offset="0x5a4"
                readOnly="true"
                size="4">
         <field description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel."
                format="enum"
                enum="d1e114990"
                id="DMA0@CHANNEL26-CTLSTAT@VALIDPENDING"
                offset="[0]"/>
         <field description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1."
                format="enum"
                enum="d1e115036"
                id="DMA0@CHANNEL26-CTLSTAT@TRIG"
                offset="[2]"/>
      </register>
      <register description="Transfer configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL26-XFERCFG"
                offset="0x5a8"
                size="4">
         <field description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled."
                format="enum"
                enum="d1e115110"
                id="DMA0@CHANNEL26-XFERCFG@CFGVALID"
                offset="[0]"/>
         <field description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers."
                format="enum"
                enum="d1e115156"
                id="DMA0@CHANNEL26-XFERCFG@RELOAD"
                offset="[1]"/>
         <field description="Software Trigger." format="enum" enum="d1e115202"
                id="DMA0@CHANNEL26-XFERCFG@SWTRIG"
                offset="[2]"/>
         <field description="Clear Trigger." format="enum" enum="d1e115248"
                id="DMA0@CHANNEL26-XFERCFG@CLRTRIG"
                offset="[3]"/>
         <field description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115294"
                id="DMA0@CHANNEL26-XFERCFG@SETINTA"
                offset="[4]"/>
         <field description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115341"
                id="DMA0@CHANNEL26-XFERCFG@SETINTB"
                offset="[5]"/>
         <field description="Transfer width used for this DMA channel." format="enum"
                enum="d1e115387"
                id="DMA0@CHANNEL26-XFERCFG@WIDTH"
                offset="[9:8]"/>
         <field description="Determines whether the source address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115445"
                id="DMA0@CHANNEL26-XFERCFG@SRCINC"
                offset="[13:12]"/>
         <field description="Determines whether the destination address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115515"
                id="DMA0@CHANNEL26-XFERCFG@DSTINC"
                offset="[15:14]"/>
         <field description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed."
                format="hex0x"
                id="DMA0@CHANNEL26-XFERCFG@XFERCOUNT"
                offset="[25:16]"/>
      </register>
      <register description="Configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL27-CFG"
                offset="0x5b0"
                size="4">
         <field description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller."
                format="enum"
                enum="d1e114603"
                id="DMA0@CHANNEL27-CFG@PERIPHREQEN"
                offset="[0]"/>
         <field description="Hardware Triggering Enable for this channel." format="enum"
                enum="d1e114649"
                id="DMA0@CHANNEL27-CFG@HWTRIGEN"
                offset="[1]"/>
         <field description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel."
                format="enum"
                enum="d1e114695"
                id="DMA0@CHANNEL27-CFG@TRIGPOL"
                offset="[4]"/>
         <field description="Trigger Type. Selects hardware trigger as edge triggered or level triggered."
                format="enum"
                enum="d1e114741"
                id="DMA0@CHANNEL27-CFG@TRIGTYPE"
                offset="[5]"/>
         <field description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer."
                format="enum"
                enum="d1e114787"
                id="DMA0@CHANNEL27-CFG@TRIGBURST"
                offset="[6]"/>
         <field description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size."
                format="hex0x"
                id="DMA0@CHANNEL27-CFG@BURSTPOWER"
                offset="[11:8]"/>
         <field description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst."
                format="enum"
                enum="d1e114852"
                id="DMA0@CHANNEL27-CFG@SRCBURSTWRAP"
                offset="[14]"/>
         <field description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst."
                format="enum"
                enum="d1e114898"
                id="DMA0@CHANNEL27-CFG@DSTBURSTWRAP"
                offset="[15]"/>
         <field description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority."
                format="hex0x"
                id="DMA0@CHANNEL27-CFG@CHPRIORITY"
                offset="[18:16]"/>
      </register>
      <register description="Control and status register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL27-CTLSTAT"
                offset="0x5b4"
                readOnly="true"
                size="4">
         <field description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel."
                format="enum"
                enum="d1e114990"
                id="DMA0@CHANNEL27-CTLSTAT@VALIDPENDING"
                offset="[0]"/>
         <field description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1."
                format="enum"
                enum="d1e115036"
                id="DMA0@CHANNEL27-CTLSTAT@TRIG"
                offset="[2]"/>
      </register>
      <register description="Transfer configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL27-XFERCFG"
                offset="0x5b8"
                size="4">
         <field description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled."
                format="enum"
                enum="d1e115110"
                id="DMA0@CHANNEL27-XFERCFG@CFGVALID"
                offset="[0]"/>
         <field description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers."
                format="enum"
                enum="d1e115156"
                id="DMA0@CHANNEL27-XFERCFG@RELOAD"
                offset="[1]"/>
         <field description="Software Trigger." format="enum" enum="d1e115202"
                id="DMA0@CHANNEL27-XFERCFG@SWTRIG"
                offset="[2]"/>
         <field description="Clear Trigger." format="enum" enum="d1e115248"
                id="DMA0@CHANNEL27-XFERCFG@CLRTRIG"
                offset="[3]"/>
         <field description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115294"
                id="DMA0@CHANNEL27-XFERCFG@SETINTA"
                offset="[4]"/>
         <field description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115341"
                id="DMA0@CHANNEL27-XFERCFG@SETINTB"
                offset="[5]"/>
         <field description="Transfer width used for this DMA channel." format="enum"
                enum="d1e115387"
                id="DMA0@CHANNEL27-XFERCFG@WIDTH"
                offset="[9:8]"/>
         <field description="Determines whether the source address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115445"
                id="DMA0@CHANNEL27-XFERCFG@SRCINC"
                offset="[13:12]"/>
         <field description="Determines whether the destination address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115515"
                id="DMA0@CHANNEL27-XFERCFG@DSTINC"
                offset="[15:14]"/>
         <field description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed."
                format="hex0x"
                id="DMA0@CHANNEL27-XFERCFG@XFERCOUNT"
                offset="[25:16]"/>
      </register>
      <register description="Configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL28-CFG"
                offset="0x5c0"
                size="4">
         <field description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller."
                format="enum"
                enum="d1e114603"
                id="DMA0@CHANNEL28-CFG@PERIPHREQEN"
                offset="[0]"/>
         <field description="Hardware Triggering Enable for this channel." format="enum"
                enum="d1e114649"
                id="DMA0@CHANNEL28-CFG@HWTRIGEN"
                offset="[1]"/>
         <field description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel."
                format="enum"
                enum="d1e114695"
                id="DMA0@CHANNEL28-CFG@TRIGPOL"
                offset="[4]"/>
         <field description="Trigger Type. Selects hardware trigger as edge triggered or level triggered."
                format="enum"
                enum="d1e114741"
                id="DMA0@CHANNEL28-CFG@TRIGTYPE"
                offset="[5]"/>
         <field description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer."
                format="enum"
                enum="d1e114787"
                id="DMA0@CHANNEL28-CFG@TRIGBURST"
                offset="[6]"/>
         <field description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size."
                format="hex0x"
                id="DMA0@CHANNEL28-CFG@BURSTPOWER"
                offset="[11:8]"/>
         <field description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst."
                format="enum"
                enum="d1e114852"
                id="DMA0@CHANNEL28-CFG@SRCBURSTWRAP"
                offset="[14]"/>
         <field description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst."
                format="enum"
                enum="d1e114898"
                id="DMA0@CHANNEL28-CFG@DSTBURSTWRAP"
                offset="[15]"/>
         <field description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority."
                format="hex0x"
                id="DMA0@CHANNEL28-CFG@CHPRIORITY"
                offset="[18:16]"/>
      </register>
      <register description="Control and status register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL28-CTLSTAT"
                offset="0x5c4"
                readOnly="true"
                size="4">
         <field description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel."
                format="enum"
                enum="d1e114990"
                id="DMA0@CHANNEL28-CTLSTAT@VALIDPENDING"
                offset="[0]"/>
         <field description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1."
                format="enum"
                enum="d1e115036"
                id="DMA0@CHANNEL28-CTLSTAT@TRIG"
                offset="[2]"/>
      </register>
      <register description="Transfer configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL28-XFERCFG"
                offset="0x5c8"
                size="4">
         <field description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled."
                format="enum"
                enum="d1e115110"
                id="DMA0@CHANNEL28-XFERCFG@CFGVALID"
                offset="[0]"/>
         <field description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers."
                format="enum"
                enum="d1e115156"
                id="DMA0@CHANNEL28-XFERCFG@RELOAD"
                offset="[1]"/>
         <field description="Software Trigger." format="enum" enum="d1e115202"
                id="DMA0@CHANNEL28-XFERCFG@SWTRIG"
                offset="[2]"/>
         <field description="Clear Trigger." format="enum" enum="d1e115248"
                id="DMA0@CHANNEL28-XFERCFG@CLRTRIG"
                offset="[3]"/>
         <field description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115294"
                id="DMA0@CHANNEL28-XFERCFG@SETINTA"
                offset="[4]"/>
         <field description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115341"
                id="DMA0@CHANNEL28-XFERCFG@SETINTB"
                offset="[5]"/>
         <field description="Transfer width used for this DMA channel." format="enum"
                enum="d1e115387"
                id="DMA0@CHANNEL28-XFERCFG@WIDTH"
                offset="[9:8]"/>
         <field description="Determines whether the source address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115445"
                id="DMA0@CHANNEL28-XFERCFG@SRCINC"
                offset="[13:12]"/>
         <field description="Determines whether the destination address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115515"
                id="DMA0@CHANNEL28-XFERCFG@DSTINC"
                offset="[15:14]"/>
         <field description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed."
                format="hex0x"
                id="DMA0@CHANNEL28-XFERCFG@XFERCOUNT"
                offset="[25:16]"/>
      </register>
      <register description="Configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL29-CFG"
                offset="0x5d0"
                size="4">
         <field description="Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller."
                format="enum"
                enum="d1e114603"
                id="DMA0@CHANNEL29-CFG@PERIPHREQEN"
                offset="[0]"/>
         <field description="Hardware Triggering Enable for this channel." format="enum"
                enum="d1e114649"
                id="DMA0@CHANNEL29-CFG@HWTRIGEN"
                offset="[1]"/>
         <field description="Trigger Polarity. Selects the polarity of a hardware trigger for this channel."
                format="enum"
                enum="d1e114695"
                id="DMA0@CHANNEL29-CFG@TRIGPOL"
                offset="[4]"/>
         <field description="Trigger Type. Selects hardware trigger as edge triggered or level triggered."
                format="enum"
                enum="d1e114741"
                id="DMA0@CHANNEL29-CFG@TRIGTYPE"
                offset="[5]"/>
         <field description="Trigger Burst. Selects whether hardware triggers cause a single or burst transfer."
                format="enum"
                enum="d1e114787"
                id="DMA0@CHANNEL29-CFG@TRIGBURST"
                offset="[6]"/>
         <field description="Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size."
                format="hex0x"
                id="DMA0@CHANNEL29-CFG@BURSTPOWER"
                offset="[11:8]"/>
         <field description="Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst."
                format="enum"
                enum="d1e114852"
                id="DMA0@CHANNEL29-CFG@SRCBURSTWRAP"
                offset="[14]"/>
         <field description="Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst."
                format="enum"
                enum="d1e114898"
                id="DMA0@CHANNEL29-CFG@DSTBURSTWRAP"
                offset="[15]"/>
         <field description="Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority."
                format="hex0x"
                id="DMA0@CHANNEL29-CFG@CHPRIORITY"
                offset="[18:16]"/>
      </register>
      <register description="Control and status register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL29-CTLSTAT"
                offset="0x5d4"
                readOnly="true"
                size="4">
         <field description="Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel."
                format="enum"
                enum="d1e114990"
                id="DMA0@CHANNEL29-CTLSTAT@VALIDPENDING"
                offset="[0]"/>
         <field description="Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1."
                format="enum"
                enum="d1e115036"
                id="DMA0@CHANNEL29-CTLSTAT@TRIG"
                offset="[2]"/>
      </register>
      <register description="Transfer configuration register for DMA channel ." format="hex0x"
                id="DMA0@CHANNEL29-XFERCFG"
                offset="0x5d8"
                size="4">
         <field description="Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled."
                format="enum"
                enum="d1e115110"
                id="DMA0@CHANNEL29-XFERCFG@CFGVALID"
                offset="[0]"/>
         <field description="Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers."
                format="enum"
                enum="d1e115156"
                id="DMA0@CHANNEL29-XFERCFG@RELOAD"
                offset="[1]"/>
         <field description="Software Trigger." format="enum" enum="d1e115202"
                id="DMA0@CHANNEL29-XFERCFG@SWTRIG"
                offset="[2]"/>
         <field description="Clear Trigger." format="enum" enum="d1e115248"
                id="DMA0@CHANNEL29-XFERCFG@CLRTRIG"
                offset="[3]"/>
         <field description="Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115294"
                id="DMA0@CHANNEL29-XFERCFG@SETINTA"
                offset="[4]"/>
         <field description="Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed."
                format="enum"
                enum="d1e115341"
                id="DMA0@CHANNEL29-XFERCFG@SETINTB"
                offset="[5]"/>
         <field description="Transfer width used for this DMA channel." format="enum"
                enum="d1e115387"
                id="DMA0@CHANNEL29-XFERCFG@WIDTH"
                offset="[9:8]"/>
         <field description="Determines whether the source address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115445"
                id="DMA0@CHANNEL29-XFERCFG@SRCINC"
                offset="[13:12]"/>
         <field description="Determines whether the destination address is incremented for each DMA transfer."
                format="enum"
                enum="d1e115515"
                id="DMA0@CHANNEL29-XFERCFG@DSTINC"
                offset="[15:14]"/>
         <field description="Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed."
                format="hex0x"
                id="DMA0@CHANNEL29-XFERCFG@XFERCOUNT"
                offset="[25:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC54S60x/LPC5460x LCD controller" id="LCD"
               size="0xc30">
      <register description="Horizontal Timing Control register" format="hex0x" id="LCD@TIMH"
                offset="0x0"
                size="4">
         <field description="Pixels-per-line." format="hex0x" id="LCD@TIMH@PPL" offset="[7:2]"/>
         <field description="Horizontal synchronization pulse width." format="hex0x"
                id="LCD@TIMH@HSW"
                offset="[15:8]"/>
         <field description="Horizontal front porch." format="hex0x" id="LCD@TIMH@HFP"
                offset="[23:16]"/>
         <field description="Horizontal back porch." format="hex0x" id="LCD@TIMH@HBP"
                offset="[31:24]"/>
      </register>
      <register description="Vertical Timing Control register" format="hex0x" id="LCD@TIMV"
                offset="0x4"
                size="4">
         <field description="Lines per panel." format="hex0x" id="LCD@TIMV@LPP" offset="[9:0]"/>
         <field description="Vertical synchronization pulse width." format="hex0x"
                id="LCD@TIMV@VSW"
                offset="[15:10]"/>
         <field description="Vertical front porch." format="hex0x" id="LCD@TIMV@VFP"
                offset="[23:16]"/>
         <field description="Vertical back porch." format="hex0x" id="LCD@TIMV@VBP"
                offset="[31:24]"/>
      </register>
      <register description="Clock and Signal Polarity Control register" format="hex0x"
                id="LCD@POL"
                offset="0x8"
                size="4">
         <field description="Lower five bits of panel clock divisor." format="hex0x"
                id="LCD@POL@PCD-LO"
                offset="[4:0]"/>
         <field description="AC bias pin frequency." format="hex0x" id="LCD@POL@ACB"
                offset="[10:6]"/>
         <field description="Invert vertical synchronization." format="hex0x" id="LCD@POL@IVS"
                offset="[11]"/>
         <field description="Invert horizontal synchronization." format="hex0x"
                id="LCD@POL@IHS"
                offset="[12]"/>
         <field description="Invert panel clock." format="hex0x" id="LCD@POL@IPC" offset="[13]"/>
         <field description="Invert output enable." format="hex0x" id="LCD@POL@IOE"
                offset="[14]"/>
         <field description="Clocks per line." format="hex0x" id="LCD@POL@CPL" offset="[25:16]"/>
         <field description="Bypass panel clock divider." format="hex0x" id="LCD@POL@BCD"
                offset="[26]"/>
         <field description="Upper five bits of panel clock divisor." format="hex0x"
                id="LCD@POL@PCD-HI"
                offset="[31:27]"/>
      </register>
      <register description="Line End Control register" format="hex0x" id="LCD@LE" offset="0xc"
                size="4">
         <field description="Line-end delay." format="hex0x" id="LCD@LE@LED" offset="[6:0]"/>
         <field description="LCD Line end enable." format="hex0x" id="LCD@LE@LEE" offset="[16]"/>
      </register>
      <register description="Upper Panel Frame Base Address register" format="hex0x"
                id="LCD@UPBASE"
                offset="0x10"
                size="4">
         <field description="LCD upper panel base address." format="hex0x"
                id="LCD@UPBASE@LCDUPBASE"
                offset="[31:3]"/>
      </register>
      <register description="Lower Panel Frame Base Address register" format="hex0x"
                id="LCD@LPBASE"
                offset="0x14"
                size="4">
         <field description="LCD lower panel base address." format="hex0x"
                id="LCD@LPBASE@LCDLPBASE"
                offset="[31:3]"/>
      </register>
      <register description="LCD Control register" format="hex0x" id="LCD@CTRL" offset="0x18"
                size="4">
         <field description="LCD enable control bit." format="hex0x" id="LCD@CTRL@LCDEN"
                offset="[0]"/>
         <field description="LCD bits per pixel." format="hex0x" id="LCD@CTRL@LCDBPP"
                offset="[3:1]"/>
         <field description="STN LCD monochrome/color selection." format="hex0x"
                id="LCD@CTRL@LCDBW"
                offset="[4]"/>
         <field description="LCD panel TFT type selection." format="hex0x" id="LCD@CTRL@LCDTFT"
                offset="[5]"/>
         <field description="Monochrome LCD interface width." format="hex0x"
                id="LCD@CTRL@LCDMONO8"
                offset="[6]"/>
         <field description="Single or Dual LCD panel selection." format="hex0x"
                id="LCD@CTRL@LCDDUAL"
                offset="[7]"/>
         <field description="Color format selection." format="hex0x" id="LCD@CTRL@BGR"
                offset="[8]"/>
         <field description="Big-endian Byte Order." format="hex0x" id="LCD@CTRL@BEBO"
                offset="[9]"/>
         <field description="Big-Endian Pixel Ordering." format="hex0x" id="LCD@CTRL@BEPO"
                offset="[10]"/>
         <field description="LCD power enable." format="hex0x" id="LCD@CTRL@LCDPWR"
                offset="[11]"/>
         <field description="LCD Vertical Compare Interrupt." format="hex0x"
                id="LCD@CTRL@LCDVCOMP"
                offset="[13:12]"/>
         <field description="LCD DMA FIFO watermark level." format="hex0x"
                id="LCD@CTRL@WATERMARK"
                offset="[16]"/>
      </register>
      <register description="Interrupt Mask register" format="hex0x" id="LCD@INTMSK"
                offset="0x1c"
                size="4">
         <field description="FIFO underflow interrupt enable." format="hex0x"
                id="LCD@INTMSK@FUFIM"
                offset="[1]"/>
         <field description="LCD next base address update interrupt enable." format="hex0x"
                id="LCD@INTMSK@LNBUIM"
                offset="[2]"/>
         <field description="Vertical compare interrupt enable." format="hex0x"
                id="LCD@INTMSK@VCOMPIM"
                offset="[3]"/>
         <field description="AHB master error interrupt enable." format="hex0x"
                id="LCD@INTMSK@BERIM"
                offset="[4]"/>
      </register>
      <register description="Raw Interrupt Status register" format="hex0x" id="LCD@INTRAW"
                offset="0x20"
                readOnly="true"
                size="4">
         <field description="FIFO underflow raw interrupt status." format="hex0x"
                id="LCD@INTRAW@FUFRIS"
                offset="[1]"/>
         <field description="LCD next address base update raw interrupt status." format="hex0x"
                id="LCD@INTRAW@LNBURIS"
                offset="[2]"/>
         <field description="Vertical compare raw interrupt status." format="hex0x"
                id="LCD@INTRAW@VCOMPRIS"
                offset="[3]"/>
         <field description="AHB master bus error raw interrupt status." format="hex0x"
                id="LCD@INTRAW@BERRAW"
                offset="[4]"/>
      </register>
      <register description="Masked Interrupt Status register" format="hex0x" id="LCD@INTSTAT"
                offset="0x24"
                readOnly="true"
                size="4">
         <field description="FIFO underflow masked interrupt status." format="hex0x"
                id="LCD@INTSTAT@FUFMIS"
                offset="[1]"/>
         <field description="LCD next address base update masked interrupt status."
                format="hex0x"
                id="LCD@INTSTAT@LNBUMIS"
                offset="[2]"/>
         <field description="Vertical compare masked interrupt status." format="hex0x"
                id="LCD@INTSTAT@VCOMPMIS"
                offset="[3]"/>
         <field description="AHB master bus error masked interrupt status." format="hex0x"
                id="LCD@INTSTAT@BERMIS"
                offset="[4]"/>
      </register>
      <register description="Interrupt Clear register" format="hex0x" id="LCD@INTCLR"
                offset="0x28"
                size="4">
         <field description="FIFO underflow interrupt clear." format="hex0x"
                id="LCD@INTCLR@FUFIC"
                offset="[1]"/>
         <field description="LCD next address base update interrupt clear." format="hex0x"
                id="LCD@INTCLR@LNBUIC"
                offset="[2]"/>
         <field description="Vertical compare interrupt clear." format="hex0x"
                id="LCD@INTCLR@VCOMPIC"
                offset="[3]"/>
         <field description="AHB master error interrupt clear." format="hex0x"
                id="LCD@INTCLR@BERIC"
                offset="[4]"/>
      </register>
      <register description="Upper Panel Current Address Value register" format="hex0x"
                id="LCD@UPCURR"
                offset="0x2c"
                readOnly="true"
                size="4">
         <field description="LCD Upper Panel Current Address." format="hex0x"
                id="LCD@UPCURR@LCDUPCURR"
                offset="[31:0]"/>
      </register>
      <register description="Lower Panel Current Address Value register" format="hex0x"
                id="LCD@LPCURR"
                offset="0x30"
                readOnly="true"
                size="4">
         <field description="LCD Lower Panel Current Address." format="hex0x"
                id="LCD@LPCURR@LCDLPCURR"
                offset="[31:0]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL0"
                offset="0x200"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL0@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL0@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL0@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL0@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL0@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL0@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL0@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL0@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL1"
                offset="0x204"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL1@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL1@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL1@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL1@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL1@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL1@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL1@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL1@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL2"
                offset="0x208"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL2@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL2@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL2@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL2@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL2@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL2@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL2@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL2@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL3"
                offset="0x20c"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL3@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL3@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL3@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL3@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL3@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL3@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL3@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL3@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL4"
                offset="0x210"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL4@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL4@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL4@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL4@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL4@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL4@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL4@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL4@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL5"
                offset="0x214"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL5@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL5@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL5@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL5@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL5@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL5@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL5@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL5@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL6"
                offset="0x218"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL6@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL6@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL6@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL6@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL6@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL6@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL6@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL6@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL7"
                offset="0x21c"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL7@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL7@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL7@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL7@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL7@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL7@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL7@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL7@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL8"
                offset="0x220"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL8@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL8@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL8@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL8@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL8@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL8@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL8@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL8@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL9"
                offset="0x224"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL9@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL9@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL9@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL9@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL9@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL9@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL9@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL9@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL10"
                offset="0x228"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL10@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL10@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL10@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL10@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL10@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL10@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL10@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL10@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL11"
                offset="0x22c"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL11@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL11@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL11@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL11@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL11@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL11@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL11@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL11@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL12"
                offset="0x230"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL12@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL12@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL12@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL12@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL12@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL12@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL12@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL12@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL13"
                offset="0x234"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL13@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL13@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL13@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL13@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL13@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL13@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL13@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL13@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL14"
                offset="0x238"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL14@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL14@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL14@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL14@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL14@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL14@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL14@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL14@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL15"
                offset="0x23c"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL15@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL15@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL15@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL15@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL15@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL15@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL15@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL15@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL16"
                offset="0x240"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL16@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL16@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL16@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL16@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL16@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL16@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL16@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL16@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL17"
                offset="0x244"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL17@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL17@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL17@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL17@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL17@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL17@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL17@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL17@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL18"
                offset="0x248"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL18@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL18@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL18@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL18@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL18@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL18@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL18@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL18@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL19"
                offset="0x24c"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL19@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL19@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL19@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL19@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL19@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL19@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL19@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL19@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL20"
                offset="0x250"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL20@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL20@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL20@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL20@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL20@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL20@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL20@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL20@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL21"
                offset="0x254"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL21@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL21@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL21@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL21@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL21@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL21@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL21@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL21@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL22"
                offset="0x258"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL22@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL22@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL22@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL22@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL22@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL22@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL22@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL22@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL23"
                offset="0x25c"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL23@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL23@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL23@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL23@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL23@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL23@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL23@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL23@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL24"
                offset="0x260"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL24@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL24@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL24@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL24@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL24@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL24@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL24@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL24@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL25"
                offset="0x264"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL25@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL25@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL25@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL25@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL25@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL25@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL25@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL25@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL26"
                offset="0x268"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL26@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL26@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL26@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL26@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL26@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL26@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL26@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL26@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL27"
                offset="0x26c"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL27@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL27@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL27@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL27@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL27@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL27@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL27@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL27@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL28"
                offset="0x270"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL28@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL28@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL28@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL28@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL28@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL28@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL28@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL28@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL29"
                offset="0x274"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL29@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL29@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL29@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL29@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL29@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL29@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL29@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL29@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL30"
                offset="0x278"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL30@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL30@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL30@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL30@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL30@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL30@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL30@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL30@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL31"
                offset="0x27c"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL31@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL31@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL31@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL31@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL31@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL31@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL31@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL31@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL32"
                offset="0x280"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL32@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL32@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL32@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL32@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL32@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL32@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL32@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL32@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL33"
                offset="0x284"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL33@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL33@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL33@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL33@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL33@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL33@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL33@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL33@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL34"
                offset="0x288"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL34@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL34@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL34@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL34@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL34@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL34@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL34@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL34@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL35"
                offset="0x28c"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL35@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL35@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL35@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL35@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL35@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL35@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL35@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL35@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL36"
                offset="0x290"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL36@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL36@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL36@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL36@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL36@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL36@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL36@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL36@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL37"
                offset="0x294"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL37@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL37@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL37@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL37@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL37@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL37@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL37@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL37@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL38"
                offset="0x298"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL38@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL38@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL38@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL38@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL38@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL38@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL38@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL38@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL39"
                offset="0x29c"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL39@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL39@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL39@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL39@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL39@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL39@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL39@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL39@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL40"
                offset="0x2a0"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL40@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL40@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL40@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL40@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL40@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL40@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL40@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL40@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL41"
                offset="0x2a4"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL41@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL41@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL41@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL41@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL41@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL41@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL41@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL41@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL42"
                offset="0x2a8"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL42@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL42@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL42@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL42@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL42@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL42@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL42@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL42@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL43"
                offset="0x2ac"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL43@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL43@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL43@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL43@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL43@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL43@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL43@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL43@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL44"
                offset="0x2b0"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL44@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL44@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL44@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL44@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL44@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL44@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL44@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL44@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL45"
                offset="0x2b4"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL45@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL45@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL45@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL45@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL45@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL45@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL45@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL45@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL46"
                offset="0x2b8"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL46@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL46@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL46@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL46@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL46@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL46@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL46@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL46@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL47"
                offset="0x2bc"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL47@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL47@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL47@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL47@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL47@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL47@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL47@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL47@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL48"
                offset="0x2c0"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL48@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL48@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL48@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL48@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL48@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL48@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL48@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL48@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL49"
                offset="0x2c4"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL49@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL49@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL49@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL49@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL49@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL49@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL49@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL49@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL50"
                offset="0x2c8"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL50@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL50@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL50@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL50@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL50@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL50@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL50@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL50@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL51"
                offset="0x2cc"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL51@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL51@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL51@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL51@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL51@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL51@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL51@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL51@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL52"
                offset="0x2d0"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL52@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL52@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL52@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL52@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL52@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL52@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL52@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL52@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL53"
                offset="0x2d4"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL53@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL53@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL53@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL53@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL53@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL53@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL53@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL53@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL54"
                offset="0x2d8"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL54@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL54@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL54@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL54@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL54@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL54@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL54@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL54@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL55"
                offset="0x2dc"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL55@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL55@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL55@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL55@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL55@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL55@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL55@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL55@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL56"
                offset="0x2e0"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL56@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL56@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL56@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL56@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL56@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL56@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL56@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL56@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL57"
                offset="0x2e4"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL57@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL57@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL57@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL57@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL57@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL57@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL57@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL57@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL58"
                offset="0x2e8"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL58@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL58@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL58@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL58@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL58@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL58@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL58@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL58@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL59"
                offset="0x2ec"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL59@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL59@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL59@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL59@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL59@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL59@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL59@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL59@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL60"
                offset="0x2f0"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL60@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL60@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL60@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL60@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL60@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL60@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL60@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL60@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL61"
                offset="0x2f4"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL61@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL61@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL61@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL61@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL61@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL61@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL61@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL61@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL62"
                offset="0x2f8"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL62@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL62@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL62@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL62@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL62@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL62@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL62@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL62@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL63"
                offset="0x2fc"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL63@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL63@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL63@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL63@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL63@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL63@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL63@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL63@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL64"
                offset="0x300"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL64@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL64@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL64@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL64@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL64@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL64@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL64@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL64@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL65"
                offset="0x304"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL65@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL65@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL65@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL65@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL65@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL65@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL65@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL65@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL66"
                offset="0x308"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL66@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL66@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL66@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL66@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL66@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL66@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL66@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL66@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL67"
                offset="0x30c"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL67@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL67@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL67@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL67@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL67@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL67@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL67@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL67@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL68"
                offset="0x310"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL68@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL68@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL68@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL68@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL68@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL68@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL68@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL68@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL69"
                offset="0x314"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL69@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL69@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL69@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL69@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL69@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL69@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL69@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL69@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL70"
                offset="0x318"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL70@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL70@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL70@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL70@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL70@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL70@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL70@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL70@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL71"
                offset="0x31c"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL71@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL71@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL71@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL71@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL71@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL71@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL71@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL71@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL72"
                offset="0x320"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL72@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL72@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL72@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL72@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL72@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL72@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL72@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL72@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL73"
                offset="0x324"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL73@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL73@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL73@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL73@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL73@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL73@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL73@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL73@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL74"
                offset="0x328"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL74@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL74@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL74@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL74@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL74@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL74@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL74@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL74@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL75"
                offset="0x32c"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL75@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL75@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL75@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL75@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL75@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL75@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL75@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL75@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL76"
                offset="0x330"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL76@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL76@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL76@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL76@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL76@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL76@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL76@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL76@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL77"
                offset="0x334"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL77@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL77@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL77@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL77@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL77@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL77@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL77@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL77@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL78"
                offset="0x338"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL78@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL78@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL78@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL78@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL78@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL78@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL78@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL78@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL79"
                offset="0x33c"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL79@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL79@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL79@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL79@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL79@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL79@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL79@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL79@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL80"
                offset="0x340"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL80@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL80@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL80@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL80@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL80@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL80@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL80@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL80@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL81"
                offset="0x344"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL81@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL81@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL81@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL81@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL81@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL81@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL81@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL81@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL82"
                offset="0x348"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL82@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL82@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL82@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL82@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL82@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL82@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL82@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL82@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL83"
                offset="0x34c"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL83@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL83@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL83@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL83@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL83@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL83@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL83@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL83@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL84"
                offset="0x350"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL84@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL84@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL84@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL84@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL84@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL84@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL84@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL84@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL85"
                offset="0x354"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL85@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL85@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL85@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL85@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL85@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL85@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL85@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL85@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL86"
                offset="0x358"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL86@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL86@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL86@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL86@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL86@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL86@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL86@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL86@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL87"
                offset="0x35c"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL87@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL87@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL87@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL87@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL87@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL87@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL87@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL87@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL88"
                offset="0x360"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL88@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL88@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL88@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL88@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL88@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL88@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL88@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL88@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL89"
                offset="0x364"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL89@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL89@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL89@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL89@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL89@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL89@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL89@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL89@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL90"
                offset="0x368"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL90@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL90@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL90@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL90@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL90@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL90@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL90@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL90@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL91"
                offset="0x36c"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL91@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL91@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL91@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL91@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL91@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL91@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL91@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL91@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL92"
                offset="0x370"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL92@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL92@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL92@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL92@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL92@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL92@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL92@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL92@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL93"
                offset="0x374"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL93@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL93@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL93@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL93@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL93@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL93@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL93@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL93@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL94"
                offset="0x378"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL94@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL94@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL94@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL94@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL94@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL94@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL94@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL94@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL95"
                offset="0x37c"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL95@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL95@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL95@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL95@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL95@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL95@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL95@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL95@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL96"
                offset="0x380"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL96@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL96@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL96@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL96@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL96@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL96@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL96@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL96@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL97"
                offset="0x384"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL97@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL97@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL97@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL97@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL97@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL97@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL97@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL97@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL98"
                offset="0x388"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL98@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL98@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL98@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL98@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL98@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL98@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL98@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL98@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL99"
                offset="0x38c"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL99@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL99@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL99@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL99@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL99@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL99@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL99@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL99@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL100"
                offset="0x390"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL100@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL100@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL100@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL100@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL100@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL100@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL100@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL100@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL101"
                offset="0x394"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL101@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL101@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL101@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL101@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL101@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL101@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL101@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL101@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL102"
                offset="0x398"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL102@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL102@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL102@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL102@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL102@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL102@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL102@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL102@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL103"
                offset="0x39c"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL103@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL103@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL103@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL103@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL103@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL103@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL103@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL103@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL104"
                offset="0x3a0"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL104@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL104@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL104@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL104@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL104@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL104@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL104@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL104@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL105"
                offset="0x3a4"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL105@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL105@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL105@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL105@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL105@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL105@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL105@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL105@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL106"
                offset="0x3a8"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL106@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL106@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL106@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL106@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL106@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL106@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL106@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL106@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL107"
                offset="0x3ac"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL107@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL107@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL107@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL107@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL107@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL107@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL107@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL107@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL108"
                offset="0x3b0"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL108@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL108@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL108@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL108@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL108@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL108@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL108@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL108@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL109"
                offset="0x3b4"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL109@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL109@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL109@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL109@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL109@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL109@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL109@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL109@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL110"
                offset="0x3b8"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL110@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL110@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL110@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL110@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL110@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL110@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL110@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL110@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL111"
                offset="0x3bc"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL111@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL111@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL111@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL111@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL111@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL111@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL111@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL111@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL112"
                offset="0x3c0"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL112@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL112@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL112@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL112@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL112@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL112@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL112@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL112@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL113"
                offset="0x3c4"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL113@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL113@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL113@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL113@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL113@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL113@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL113@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL113@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL114"
                offset="0x3c8"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL114@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL114@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL114@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL114@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL114@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL114@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL114@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL114@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL115"
                offset="0x3cc"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL115@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL115@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL115@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL115@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL115@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL115@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL115@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL115@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL116"
                offset="0x3d0"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL116@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL116@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL116@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL116@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL116@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL116@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL116@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL116@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL117"
                offset="0x3d4"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL117@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL117@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL117@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL117@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL117@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL117@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL117@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL117@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL118"
                offset="0x3d8"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL118@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL118@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL118@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL118@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL118@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL118@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL118@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL118@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL119"
                offset="0x3dc"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL119@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL119@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL119@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL119@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL119@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL119@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL119@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL119@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL120"
                offset="0x3e0"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL120@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL120@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL120@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL120@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL120@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL120@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL120@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL120@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL121"
                offset="0x3e4"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL121@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL121@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL121@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL121@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL121@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL121@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL121@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL121@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL122"
                offset="0x3e8"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL122@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL122@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL122@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL122@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL122@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL122@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL122@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL122@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL123"
                offset="0x3ec"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL123@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL123@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL123@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL123@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL123@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL123@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL123@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL123@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL124"
                offset="0x3f0"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL124@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL124@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL124@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL124@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL124@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL124@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL124@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL124@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL125"
                offset="0x3f4"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL125@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL125@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL125@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL125@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL125@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL125@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL125@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL125@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL126"
                offset="0x3f8"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL126@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL126@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL126@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL126@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL126@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL126@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL126@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL126@I1"
                offset="[31]"/>
      </register>
      <register description="256x16-bit Color Palette registers" format="hex0x" id="LCD@PAL127"
                offset="0x3fc"
                size="4">
         <field description="Red palette data." format="hex0x" id="LCD@PAL127@R04-0"
                offset="[4:0]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL127@G04-0"
                offset="[9:5]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL127@B04-0"
                offset="[14:10]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL127@I0"
                offset="[15]"/>
         <field description="Red palette data." format="hex0x" id="LCD@PAL127@R14-0"
                offset="[20:16]"/>
         <field description="Green palette data." format="hex0x" id="LCD@PAL127@G14-0"
                offset="[25:21]"/>
         <field description="Blue palette data." format="hex0x" id="LCD@PAL127@B14-0"
                offset="[30:26]"/>
         <field description="Intensity / unused bit." format="hex0x" id="LCD@PAL127@I1"
                offset="[31]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG0"
                offset="0x800"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG0@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG1"
                offset="0x804"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG1@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG2"
                offset="0x808"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG2@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG3"
                offset="0x80c"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG3@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG4"
                offset="0x810"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG4@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG5"
                offset="0x814"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG5@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG6"
                offset="0x818"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG6@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG7"
                offset="0x81c"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG7@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG8"
                offset="0x820"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG8@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG9"
                offset="0x824"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG9@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG10"
                offset="0x828"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG10@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG11"
                offset="0x82c"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG11@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG12"
                offset="0x830"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG12@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG13"
                offset="0x834"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG13@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG14"
                offset="0x838"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG14@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG15"
                offset="0x83c"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG15@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG16"
                offset="0x840"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG16@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG17"
                offset="0x844"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG17@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG18"
                offset="0x848"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG18@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG19"
                offset="0x84c"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG19@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG20"
                offset="0x850"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG20@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG21"
                offset="0x854"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG21@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG22"
                offset="0x858"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG22@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG23"
                offset="0x85c"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG23@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG24"
                offset="0x860"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG24@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG25"
                offset="0x864"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG25@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG26"
                offset="0x868"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG26@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG27"
                offset="0x86c"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG27@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG28"
                offset="0x870"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG28@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG29"
                offset="0x874"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG29@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG30"
                offset="0x878"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG30@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG31"
                offset="0x87c"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG31@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG32"
                offset="0x880"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG32@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG33"
                offset="0x884"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG33@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG34"
                offset="0x888"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG34@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG35"
                offset="0x88c"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG35@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG36"
                offset="0x890"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG36@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG37"
                offset="0x894"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG37@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG38"
                offset="0x898"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG38@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG39"
                offset="0x89c"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG39@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG40"
                offset="0x8a0"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG40@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG41"
                offset="0x8a4"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG41@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG42"
                offset="0x8a8"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG42@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG43"
                offset="0x8ac"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG43@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG44"
                offset="0x8b0"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG44@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG45"
                offset="0x8b4"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG45@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG46"
                offset="0x8b8"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG46@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG47"
                offset="0x8bc"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG47@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG48"
                offset="0x8c0"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG48@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG49"
                offset="0x8c4"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG49@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG50"
                offset="0x8c8"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG50@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG51"
                offset="0x8cc"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG51@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG52"
                offset="0x8d0"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG52@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG53"
                offset="0x8d4"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG53@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG54"
                offset="0x8d8"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG54@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG55"
                offset="0x8dc"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG55@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG56"
                offset="0x8e0"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG56@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG57"
                offset="0x8e4"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG57@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG58"
                offset="0x8e8"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG58@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG59"
                offset="0x8ec"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG59@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG60"
                offset="0x8f0"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG60@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG61"
                offset="0x8f4"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG61@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG62"
                offset="0x8f8"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG62@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG63"
                offset="0x8fc"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG63@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG64"
                offset="0x900"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG64@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG65"
                offset="0x904"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG65@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG66"
                offset="0x908"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG66@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG67"
                offset="0x90c"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG67@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG68"
                offset="0x910"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG68@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG69"
                offset="0x914"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG69@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG70"
                offset="0x918"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG70@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG71"
                offset="0x91c"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG71@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG72"
                offset="0x920"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG72@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG73"
                offset="0x924"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG73@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG74"
                offset="0x928"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG74@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG75"
                offset="0x92c"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG75@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG76"
                offset="0x930"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG76@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG77"
                offset="0x934"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG77@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG78"
                offset="0x938"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG78@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG79"
                offset="0x93c"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG79@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG80"
                offset="0x940"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG80@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG81"
                offset="0x944"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG81@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG82"
                offset="0x948"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG82@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG83"
                offset="0x94c"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG83@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG84"
                offset="0x950"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG84@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG85"
                offset="0x954"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG85@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG86"
                offset="0x958"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG86@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG87"
                offset="0x95c"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG87@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG88"
                offset="0x960"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG88@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG89"
                offset="0x964"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG89@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG90"
                offset="0x968"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG90@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG91"
                offset="0x96c"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG91@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG92"
                offset="0x970"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG92@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG93"
                offset="0x974"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG93@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG94"
                offset="0x978"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG94@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG95"
                offset="0x97c"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG95@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG96"
                offset="0x980"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG96@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG97"
                offset="0x984"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG97@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG98"
                offset="0x988"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG98@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG99"
                offset="0x98c"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG99@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG100"
                offset="0x990"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG100@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG101"
                offset="0x994"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG101@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG102"
                offset="0x998"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG102@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG103"
                offset="0x99c"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG103@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG104"
                offset="0x9a0"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG104@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG105"
                offset="0x9a4"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG105@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG106"
                offset="0x9a8"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG106@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG107"
                offset="0x9ac"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG107@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG108"
                offset="0x9b0"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG108@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG109"
                offset="0x9b4"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG109@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG110"
                offset="0x9b8"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG110@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG111"
                offset="0x9bc"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG111@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG112"
                offset="0x9c0"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG112@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG113"
                offset="0x9c4"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG113@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG114"
                offset="0x9c8"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG114@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG115"
                offset="0x9cc"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG115@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG116"
                offset="0x9d0"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG116@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG117"
                offset="0x9d4"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG117@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG118"
                offset="0x9d8"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG118@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG119"
                offset="0x9dc"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG119@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG120"
                offset="0x9e0"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG120@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG121"
                offset="0x9e4"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG121@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG122"
                offset="0x9e8"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG122@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG123"
                offset="0x9ec"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG123@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG124"
                offset="0x9f0"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG124@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG125"
                offset="0x9f4"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG125@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG126"
                offset="0x9f8"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG126@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG127"
                offset="0x9fc"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG127@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG128"
                offset="0xa00"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG128@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG129"
                offset="0xa04"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG129@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG130"
                offset="0xa08"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG130@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG131"
                offset="0xa0c"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG131@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG132"
                offset="0xa10"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG132@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG133"
                offset="0xa14"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG133@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG134"
                offset="0xa18"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG134@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG135"
                offset="0xa1c"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG135@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG136"
                offset="0xa20"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG136@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG137"
                offset="0xa24"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG137@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG138"
                offset="0xa28"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG138@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG139"
                offset="0xa2c"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG139@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG140"
                offset="0xa30"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG140@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG141"
                offset="0xa34"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG141@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG142"
                offset="0xa38"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG142@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG143"
                offset="0xa3c"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG143@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG144"
                offset="0xa40"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG144@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG145"
                offset="0xa44"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG145@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG146"
                offset="0xa48"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG146@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG147"
                offset="0xa4c"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG147@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG148"
                offset="0xa50"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG148@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG149"
                offset="0xa54"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG149@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG150"
                offset="0xa58"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG150@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG151"
                offset="0xa5c"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG151@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG152"
                offset="0xa60"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG152@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG153"
                offset="0xa64"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG153@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG154"
                offset="0xa68"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG154@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG155"
                offset="0xa6c"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG155@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG156"
                offset="0xa70"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG156@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG157"
                offset="0xa74"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG157@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG158"
                offset="0xa78"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG158@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG159"
                offset="0xa7c"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG159@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG160"
                offset="0xa80"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG160@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG161"
                offset="0xa84"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG161@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG162"
                offset="0xa88"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG162@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG163"
                offset="0xa8c"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG163@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG164"
                offset="0xa90"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG164@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG165"
                offset="0xa94"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG165@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG166"
                offset="0xa98"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG166@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG167"
                offset="0xa9c"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG167@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG168"
                offset="0xaa0"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG168@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG169"
                offset="0xaa4"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG169@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG170"
                offset="0xaa8"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG170@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG171"
                offset="0xaac"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG171@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG172"
                offset="0xab0"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG172@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG173"
                offset="0xab4"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG173@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG174"
                offset="0xab8"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG174@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG175"
                offset="0xabc"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG175@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG176"
                offset="0xac0"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG176@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG177"
                offset="0xac4"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG177@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG178"
                offset="0xac8"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG178@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG179"
                offset="0xacc"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG179@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG180"
                offset="0xad0"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG180@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG181"
                offset="0xad4"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG181@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG182"
                offset="0xad8"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG182@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG183"
                offset="0xadc"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG183@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG184"
                offset="0xae0"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG184@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG185"
                offset="0xae4"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG185@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG186"
                offset="0xae8"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG186@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG187"
                offset="0xaec"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG187@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG188"
                offset="0xaf0"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG188@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG189"
                offset="0xaf4"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG189@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG190"
                offset="0xaf8"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG190@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG191"
                offset="0xafc"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG191@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG192"
                offset="0xb00"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG192@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG193"
                offset="0xb04"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG193@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG194"
                offset="0xb08"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG194@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG195"
                offset="0xb0c"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG195@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG196"
                offset="0xb10"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG196@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG197"
                offset="0xb14"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG197@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG198"
                offset="0xb18"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG198@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG199"
                offset="0xb1c"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG199@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG200"
                offset="0xb20"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG200@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG201"
                offset="0xb24"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG201@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG202"
                offset="0xb28"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG202@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG203"
                offset="0xb2c"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG203@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG204"
                offset="0xb30"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG204@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG205"
                offset="0xb34"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG205@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG206"
                offset="0xb38"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG206@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG207"
                offset="0xb3c"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG207@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG208"
                offset="0xb40"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG208@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG209"
                offset="0xb44"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG209@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG210"
                offset="0xb48"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG210@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG211"
                offset="0xb4c"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG211@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG212"
                offset="0xb50"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG212@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG213"
                offset="0xb54"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG213@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG214"
                offset="0xb58"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG214@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG215"
                offset="0xb5c"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG215@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG216"
                offset="0xb60"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG216@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG217"
                offset="0xb64"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG217@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG218"
                offset="0xb68"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG218@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG219"
                offset="0xb6c"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG219@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG220"
                offset="0xb70"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG220@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG221"
                offset="0xb74"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG221@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG222"
                offset="0xb78"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG222@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG223"
                offset="0xb7c"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG223@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG224"
                offset="0xb80"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG224@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG225"
                offset="0xb84"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG225@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG226"
                offset="0xb88"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG226@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG227"
                offset="0xb8c"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG227@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG228"
                offset="0xb90"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG228@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG229"
                offset="0xb94"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG229@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG230"
                offset="0xb98"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG230@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG231"
                offset="0xb9c"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG231@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG232"
                offset="0xba0"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG232@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG233"
                offset="0xba4"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG233@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG234"
                offset="0xba8"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG234@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG235"
                offset="0xbac"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG235@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG236"
                offset="0xbb0"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG236@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG237"
                offset="0xbb4"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG237@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG238"
                offset="0xbb8"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG238@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG239"
                offset="0xbbc"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG239@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG240"
                offset="0xbc0"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG240@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG241"
                offset="0xbc4"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG241@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG242"
                offset="0xbc8"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG242@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG243"
                offset="0xbcc"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG243@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG244"
                offset="0xbd0"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG244@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG245"
                offset="0xbd4"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG245@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG246"
                offset="0xbd8"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG246@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG247"
                offset="0xbdc"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG247@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG248"
                offset="0xbe0"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG248@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG249"
                offset="0xbe4"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG249@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG250"
                offset="0xbe8"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG250@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG251"
                offset="0xbec"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG251@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG252"
                offset="0xbf0"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG252@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG253"
                offset="0xbf4"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG253@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG254"
                offset="0xbf8"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG254@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Image registers" format="hex0x" id="LCD@CRSR-IMG255"
                offset="0xbfc"
                size="4">
         <field description="Cursor Image data." format="hex0x" id="LCD@CRSR-IMG255@CRSR-IMG"
                offset="[31:0]"/>
      </register>
      <register description="Cursor Control register" format="hex0x" id="LCD@CRSR-CTRL"
                offset="0xc00"
                size="4">
         <field description="Cursor enable." format="hex0x" id="LCD@CRSR-CTRL@CRSRON"
                offset="[0]"/>
         <field description="Cursor image number." format="hex0x" id="LCD@CRSR-CTRL@CRSRNUM1-0"
                offset="[5:4]"/>
      </register>
      <register description="Cursor Configuration register" format="hex0x" id="LCD@CRSR-CFG"
                offset="0xc04"
                size="4">
         <field description="Cursor size selection." format="hex0x" id="LCD@CRSR-CFG@CRSRSIZE"
                offset="[0]"/>
         <field description="Cursor frame synchronization type." format="hex0x"
                id="LCD@CRSR-CFG@FRAMESYNC"
                offset="[1]"/>
      </register>
      <register description="Cursor Palette register 0" format="hex0x" id="LCD@CRSR-PAL0"
                offset="0xc08"
                size="4">
         <field description="Red color component." format="hex0x" id="LCD@CRSR-PAL0@RED"
                offset="[7:0]"/>
         <field description="Green color component." format="hex0x" id="LCD@CRSR-PAL0@GREEN"
                offset="[15:8]"/>
         <field description="Blue color component." format="hex0x" id="LCD@CRSR-PAL0@BLUE"
                offset="[23:16]"/>
      </register>
      <register description="Cursor Palette register 1" format="hex0x" id="LCD@CRSR-PAL1"
                offset="0xc0c"
                size="4">
         <field description="Red color component." format="hex0x" id="LCD@CRSR-PAL1@RED"
                offset="[7:0]"/>
         <field description="Green color component." format="hex0x" id="LCD@CRSR-PAL1@GREEN"
                offset="[15:8]"/>
         <field description="Blue color component." format="hex0x" id="LCD@CRSR-PAL1@BLUE"
                offset="[23:16]"/>
      </register>
      <register description="Cursor XY Position register" format="hex0x" id="LCD@CRSR-XY"
                offset="0xc10"
                size="4">
         <field description="X ordinate of the cursor origin measured in pixels."
                format="hex0x"
                id="LCD@CRSR-XY@CRSRX"
                offset="[9:0]"/>
         <field description="Y ordinate of the cursor origin measured in pixels."
                format="hex0x"
                id="LCD@CRSR-XY@CRSRY"
                offset="[25:16]"/>
      </register>
      <register description="Cursor Clip Position register" format="hex0x" id="LCD@CRSR-CLIP"
                offset="0xc14"
                size="4">
         <field description="Cursor clip position for X direction." format="hex0x"
                id="LCD@CRSR-CLIP@CRSRCLIPX"
                offset="[5:0]"/>
         <field description="Cursor clip position for Y direction." format="hex0x"
                id="LCD@CRSR-CLIP@CRSRCLIPY"
                offset="[13:8]"/>
      </register>
      <register description="Cursor Interrupt Mask register" format="hex0x"
                id="LCD@CRSR-INTMSK"
                offset="0xc20"
                size="4">
         <field description="Cursor interrupt mask." format="hex0x" id="LCD@CRSR-INTMSK@CRSRIM"
                offset="[0]"/>
      </register>
      <register description="Cursor Interrupt Clear register" format="hex0x"
                id="LCD@CRSR-INTCLR"
                offset="0xc24"
                writeOnly="true"
                size="4">
         <field description="Cursor interrupt clear." format="hex0x"
                id="LCD@CRSR-INTCLR@CRSRIC"
                offset="[0]"/>
      </register>
      <register description="Cursor Raw Interrupt Status register" format="hex0x"
                id="LCD@CRSR-INTRAW"
                offset="0xc28"
                readOnly="true"
                size="4">
         <field description="Cursor raw interrupt status." format="hex0x"
                id="LCD@CRSR-INTRAW@CRSRRIS"
                offset="[0]"/>
      </register>
      <register description="Cursor Masked Interrupt Status register" format="hex0x"
                id="LCD@CRSR-INTSTAT"
                offset="0xc2c"
                readOnly="true"
                size="4">
         <field description="Cursor masked interrupt status." format="hex0x"
                id="LCD@CRSR-INTSTAT@CRSRMIS"
                offset="[0]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x USB 2.0 Device Controller" id="USB0"
               size="0x38">
      <register description="USB Device Command/Status register" format="hex0x"
                id="USB0@DEVCMDSTAT"
                offset="0x0"
                size="4">
         <field description="USB device address. After bus reset, the address is reset to 0x00. If the enable bit is set, the device will respond on packets for function address DEV_ADDR. When receiving a SetAddress Control Request from the USB host, software must program the new address before completing the status phase of the SetAddress Control Request."
                format="hex0x"
                id="USB0@DEVCMDSTAT@DEV-ADDR"
                offset="[6:0]"/>
         <field description="USB device enable. If this bit is set, the HW will start responding on packets for function address DEV_ADDR."
                format="hex0x"
                id="USB0@DEVCMDSTAT@DEV-EN"
                offset="[7]"/>
         <field description="SETUP token received. If a SETUP token is received and acknowledged by the device, this bit is set. As long as this bit is set all received IN and OUT tokens will be NAKed by HW. SW must clear this bit by writing a one. If this bit is zero, HW will handle the tokens to the CTRL EP0 as indicated by the CTRL EP0 IN and OUT data information programmed by SW."
                format="hex0x"
                id="USB0@DEVCMDSTAT@SETUP"
                offset="[8]"/>
         <field description="Forces the NEEDCLK output to always be on:" format="enum"
                enum="d1e117899"
                id="USB0@DEVCMDSTAT@FORCE-NEEDCLK"
                offset="[9]"/>
         <field description="LPM Supported:" format="enum" enum="d1e117945"
                id="USB0@DEVCMDSTAT@LPM-SUP"
                offset="[11]"/>
         <field description="Interrupt on NAK for interrupt and bulk OUT EP" format="enum"
                enum="d1e117992"
                id="USB0@DEVCMDSTAT@INTONNAK-AO"
                offset="[12]"/>
         <field description="Interrupt on NAK for interrupt and bulk IN EP" format="enum"
                enum="d1e118038"
                id="USB0@DEVCMDSTAT@INTONNAK-AI"
                offset="[13]"/>
         <field description="Interrupt on NAK for control OUT EP" format="enum"
                enum="d1e118084"
                id="USB0@DEVCMDSTAT@INTONNAK-CO"
                offset="[14]"/>
         <field description="Interrupt on NAK for control IN EP" format="enum" enum="d1e118130"
                id="USB0@DEVCMDSTAT@INTONNAK-CI"
                offset="[15]"/>
         <field description="Device status - connect. The connect bit must be set by SW to indicate that the device must signal a connect. The pull-up resistor on USB_DP will be enabled when this bit is set and the VBUSDEBOUNCED bit is one."
                format="hex0x"
                id="USB0@DEVCMDSTAT@DCON"
                offset="[16]"/>
         <field description="Device status - suspend. The suspend bit indicates the current suspend state. It is set to 1 when the device hasn't seen any activity on its upstream port for more than 3 milliseconds. It is reset to 0 on any activity. When the device is suspended (Suspend bit DSUS = 1) and the software writes a 0 to it, the device will generate a remote wake-up. This will only happen when the device is connected (Connect bit = 1). When the device is not connected or not suspended, a writing a 0 has no effect. Writing a 1 never has an effect."
                format="hex0x"
                id="USB0@DEVCMDSTAT@DSUS"
                offset="[17]"/>
         <field description="Device status - LPM Suspend. This bit represents the current LPM suspend state. It is set to 1 by HW when the device has acknowledged the LPM request from the USB host and the Token Retry Time of 10 ms has elapsed. When the device is in the LPM suspended state (LPM suspend bit = 1) and the software writes a zero to this bit, the device will generate a remote walk-up. Software can only write a zero to this bit when the LPM_REWP bit is set to 1. HW resets this bit when it receives a host initiated resume. HW only updates the LPM_SUS bit when the LPM_SUPP bit is equal to one."
                format="hex0x"
                id="USB0@DEVCMDSTAT@LPM-SUS"
                offset="[19]"/>
         <field description="LPM Remote Wake-up Enabled by USB host. HW sets this bit to one when the bRemoteWake bit in the LPM extended token is set to 1. HW will reset this bit to 0 when it receives the host initiated LPM resume, when a remote wake-up is sent by the device or when a USB bus reset is received. Software can use this bit to check if the remote wake-up feature is enabled by the host for the LPM transaction."
                format="hex0x"
                id="USB0@DEVCMDSTAT@LPM-REWP"
                offset="[20]"/>
         <field description="Device status - connect change. The Connect Change bit is set when the device's pull-up resistor is disconnected because VBus disappeared. The bit is reset by writing a one to it."
                format="hex0x"
                id="USB0@DEVCMDSTAT@DCON-C"
                offset="[24]"/>
         <field description="Device status - suspend change. The suspend change bit is set to 1 when the suspend bit toggles. The suspend bit can toggle because: - The device goes in the suspended state - The device is disconnected - The device receives resume signaling on its upstream port. The bit is reset by writing a one to it."
                format="hex0x"
                id="USB0@DEVCMDSTAT@DSUS-C"
                offset="[25]"/>
         <field description="Device status - reset change. This bit is set when the device received a bus reset. On a bus reset the device will automatically go to the default state (unconfigured and responding to address 0). The bit is reset by writing a one to it."
                format="hex0x"
                id="USB0@DEVCMDSTAT@DRES-C"
                offset="[26]"/>
         <field description="This bit indicates if Vbus is detected or not. The bit raises immediately when Vbus becomes high. It drops to zero if Vbus is low for at least 3 ms. If this bit is high and the DCon bit is set, the HW will enable the pull-up resistor to signal a connect."
                format="hex0x"
                id="USB0@DEVCMDSTAT@VBUSDEBOUNCED"
                offset="[28]"/>
      </register>
      <register description="USB Info register" format="hex0x" id="USB0@INFO" offset="0x4"
                size="4">
         <field description="Frame number. This contains the frame number of the last successfully received SOF. In case no SOF was received by the device at the beginning of a frame, the frame number returned is that of the last successfully received SOF. In case the SOF frame number contained a CRC error, the frame number returned will be the corrupted frame number as received by the device."
                format="hex0x"
                id="USB0@INFO@FRAME-NR"
                offset="[10:0]"/>
         <field description="The error code which last occurred:" format="enum"
                enum="d1e118367"
                id="USB0@INFO@ERR-CODE"
                offset="[14:11]"/>
         <field description="Minor Revision." format="hex0x" id="USB0@INFO@MINREV"
                offset="[23:16]"/>
         <field description="Major Revision." format="hex0x" id="USB0@INFO@MAJREV"
                offset="[31:24]"/>
      </register>
      <register description="USB EP Command/Status List start address" format="hex0x"
                id="USB0@EPLISTSTART"
                offset="0x8"
                size="4">
         <field description="Start address of the USB EP Command/Status List." format="hex0x"
                id="USB0@EPLISTSTART@EP-LIST"
                offset="[31:8]"/>
      </register>
      <register description="USB Data buffer start address" format="hex0x"
                id="USB0@DATABUFSTART"
                offset="0xc"
                size="4">
         <field description="Start address of the buffer pointer page where all endpoint data buffers are located."
                format="hex0x"
                id="USB0@DATABUFSTART@DA-BUF"
                offset="[31:22]"/>
      </register>
      <register description="USB Link Power Management register" format="hex0x" id="USB0@LPM"
                offset="0x10"
                size="4">
         <field description="Host Initiated Resume Duration - HW. This is the HIRD value from the last received LPM token"
                format="hex0x"
                id="USB0@LPM@HIRD-HW"
                offset="[3:0]"/>
         <field description="Host Initiated Resume Duration - SW. This is the time duration required by the USB device system to come out of LPM initiated suspend after receiving the host initiated LPM resume."
                format="hex0x"
                id="USB0@LPM@HIRD-SW"
                offset="[7:4]"/>
         <field description="As long as this bit is set to one and LPM supported bit is set to one, HW will return a NYET handshake on every LPM token it receives. If LPM supported bit is set to one and this bit is zero, HW will return an ACK handshake on every LPM token it receives. If SW has still data pending and LPM is supported, it must set this bit to 1."
                format="hex0x"
                id="USB0@LPM@DATA-PENDING"
                offset="[8]"/>
      </register>
      <register description="USB Endpoint skip" format="hex0x" id="USB0@EPSKIP" offset="0x14"
                size="4">
         <field description="Endpoint skip: Writing 1 to one of these bits, will indicate to HW that it must deactivate the buffer assigned to this endpoint and return control back to software. When HW has deactivated the endpoint, it will clear this bit, but it will not modify the EPINUSE bit. An interrupt will be generated when the Active bit goes from 1 to 0. Note: In case of double-buffering, HW will only clear the Active bit of the buffer indicated by the EPINUSE bit."
                format="hex0x"
                id="USB0@EPSKIP@SKIP"
                offset="[9:0]"/>
      </register>
      <register description="USB Endpoint Buffer in use" format="hex0x" id="USB0@EPINUSE"
                offset="0x18"
                size="4">
         <field description="Buffer in use: This register has one bit per physical endpoint. 0: HW is accessing buffer 0. 1: HW is accessing buffer 1."
                format="hex0x"
                id="USB0@EPINUSE@BUF"
                offset="[9:2]"/>
      </register>
      <register description="USB Endpoint Buffer Configuration register" format="hex0x"
                id="USB0@EPBUFCFG"
                offset="0x1c"
                size="4">
         <field description="Buffer usage: This register has one bit per physical endpoint. 0: Single-buffer. 1: Double-buffer. If the bit is set to single-buffer (0), it will not toggle the corresponding EPINUSE bit when it clears the active bit. If the bit is set to double-buffer (1), HW will toggle the EPINUSE bit when it clears the Active bit for the buffer."
                format="hex0x"
                id="USB0@EPBUFCFG@BUF-SB"
                offset="[9:2]"/>
      </register>
      <register description="USB interrupt status register" format="hex0x" id="USB0@INTSTAT"
                offset="0x20"
                size="4">
         <field description="Interrupt status register bit for the Control EP0 OUT direction. This bit will be set if NBytes transitions to zero or the skip bit is set by software or a SETUP packet is successfully received for the control EP0. If the IntOnNAK_CO is set, this bit will also be set when a NAK is transmitted for the Control EP0 OUT direction. Software can clear this bit by writing a one to it."
                format="hex0x"
                id="USB0@INTSTAT@EP0OUT"
                offset="[0]"/>
         <field description="Interrupt status register bit for the Control EP0 IN direction. This bit will be set if NBytes transitions to zero or the skip bit is set by software. If the IntOnNAK_CI is set, this bit will also be set when a NAK is transmitted for the Control EP0 IN direction. Software can clear this bit by writing a one to it."
                format="hex0x"
                id="USB0@INTSTAT@EP0IN"
                offset="[1]"/>
         <field description="Interrupt status register bit for the EP1 OUT direction. This bit will be set if the corresponding Active bit is cleared by HW. This is done in case the programmed NBytes transitions to zero or the skip bit is set by software. If the IntOnNAK_AO is set, this bit will also be set when a NAK is transmitted for the EP1 OUT direction. Software can clear this bit by writing a one to it."
                format="hex0x"
                id="USB0@INTSTAT@EP1OUT"
                offset="[2]"/>
         <field description="Interrupt status register bit for the EP1 IN direction. This bit will be set if the corresponding Active bit is cleared by HW. This is done in case the programmed NBytes transitions to zero or the skip bit is set by software. If the IntOnNAK_AI is set, this bit will also be set when a NAK is transmitted for the EP1 IN direction. Software can clear this bit by writing a one to it."
                format="hex0x"
                id="USB0@INTSTAT@EP1IN"
                offset="[3]"/>
         <field description="Interrupt status register bit for the EP2 OUT direction. This bit will be set if the corresponding Active bit is cleared by HW. This is done in case the programmed NBytes transitions to zero or the skip bit is set by software. If the IntOnNAK_AO is set, this bit will also be set when a NAK is transmitted for the EP2 OUT direction. Software can clear this bit by writing a one to it."
                format="hex0x"
                id="USB0@INTSTAT@EP2OUT"
                offset="[4]"/>
         <field description="Interrupt status register bit for the EP2 IN direction. This bit will be set if the corresponding Active bit is cleared by HW. This is done in case the programmed NBytes transitions to zero or the skip bit is set by software. If the IntOnNAK_AI is set, this bit will also be set when a NAK is transmitted for the EP2 IN direction. Software can clear this bit by writing a one to it."
                format="hex0x"
                id="USB0@INTSTAT@EP2IN"
                offset="[5]"/>
         <field description="Interrupt status register bit for the EP3 OUT direction. This bit will be set if the corresponding Active bit is cleared by HW. This is done in case the programmed NBytes transitions to zero or the skip bit is set by software. If the IntOnNAK_AO is set, this bit will also be set when a NAK is transmitted for the EP3 OUT direction. Software can clear this bit by writing a one to it."
                format="hex0x"
                id="USB0@INTSTAT@EP3OUT"
                offset="[6]"/>
         <field description="Interrupt status register bit for the EP3 IN direction. This bit will be set if the corresponding Active bit is cleared by HW. This is done in case the programmed NBytes transitions to zero or the skip bit is set by software. If the IntOnNAK_AI is set, this bit will also be set when a NAK is transmitted for the EP3 IN direction. Software can clear this bit by writing a one to it."
                format="hex0x"
                id="USB0@INTSTAT@EP3IN"
                offset="[7]"/>
         <field description="Interrupt status register bit for the EP4 OUT direction. This bit will be set if the corresponding Active bit is cleared by HW. This is done in case the programmed NBytes transitions to zero or the skip bit is set by software. If the IntOnNAK_AO is set, this bit will also be set when a NAK is transmitted for the EP4 OUT direction. Software can clear this bit by writing a one to it."
                format="hex0x"
                id="USB0@INTSTAT@EP4OUT"
                offset="[8]"/>
         <field description="Interrupt status register bit for the EP4 IN direction. This bit will be set if the corresponding Active bit is cleared by HW. This is done in case the programmed NBytes transitions to zero or the skip bit is set by software. If the IntOnNAK_AI is set, this bit will also be set when a NAK is transmitted for the EP4 IN direction. Software can clear this bit by writing a one to it."
                format="hex0x"
                id="USB0@INTSTAT@EP4IN"
                offset="[9]"/>
         <field description="Frame interrupt. This bit is set to one every millisecond when the VbusDebounced bit and the DCON bit are set. This bit can be used by software when handling isochronous endpoints. Software can clear this bit by writing a one to it."
                format="hex0x"
                id="USB0@INTSTAT@FRAME-INT"
                offset="[30]"/>
         <field description="Device status interrupt. This bit is set by HW when one of the bits in the Device Status Change register are set. Software can clear this bit by writing a one to it."
                format="hex0x"
                id="USB0@INTSTAT@DEV-INT"
                offset="[31]"/>
      </register>
      <register description="USB interrupt enable register" format="hex0x" id="USB0@INTEN"
                offset="0x24"
                size="4">
         <field description="If this bit is set and the corresponding USB interrupt status bit is set, a HW interrupt is generated on the interrupt line indicated by the corresponding USB interrupt routing bit."
                format="hex0x"
                id="USB0@INTEN@EP-INT-EN"
                offset="[9:0]"/>
         <field description="If this bit is set and the corresponding USB interrupt status bit is set, a HW interrupt is generated on the interrupt line indicated by the corresponding USB interrupt routing bit."
                format="hex0x"
                id="USB0@INTEN@FRAME-INT-EN"
                offset="[30]"/>
         <field description="If this bit is set and the corresponding USB interrupt status bit is set, a HW interrupt is generated on the interrupt line indicated by the corresponding USB interrupt routing bit."
                format="hex0x"
                id="USB0@INTEN@DEV-INT-EN"
                offset="[31]"/>
      </register>
      <register description="USB set interrupt status register" format="hex0x"
                id="USB0@INTSETSTAT"
                offset="0x28"
                size="4">
         <field description="If software writes a one to one of these bits, the corresponding USB interrupt status bit is set. When this register is read, the same value as the USB interrupt status register is returned."
                format="hex0x"
                id="USB0@INTSETSTAT@EP-SET-INT"
                offset="[9:0]"/>
         <field description="If software writes a one to one of these bits, the corresponding USB interrupt status bit is set. When this register is read, the same value as the USB interrupt status register is returned."
                format="hex0x"
                id="USB0@INTSETSTAT@FRAME-SET-INT"
                offset="[30]"/>
         <field description="If software writes a one to one of these bits, the corresponding USB interrupt status bit is set. When this register is read, the same value as the USB interrupt status register is returned."
                format="hex0x"
                id="USB0@INTSETSTAT@DEV-SET-INT"
                offset="[31]"/>
      </register>
      <register description="USB Endpoint toggle register" format="hex0x" id="USB0@EPTOGGLE"
                offset="0x34"
                size="4">
         <field description="Endpoint data toggle: This field indicates the current value of the data toggle for the corresponding endpoint."
                format="hex0x"
                id="USB0@EPTOGGLE@TOGGLE"
                offset="[9:0]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x SCTimer/PWM (SCT)" id="SCT0" size="0x54c">
      <register description="SCT configuration register" format="hex0x" id="SCT0@CONFIG"
                offset="0x0"
                size="4">
         <field description="SCT operation" format="enum" enum="d1e119457"
                id="SCT0@CONFIG@UNIFY"
                offset="[0]"/>
         <field description="SCT clock mode" format="enum" enum="d1e119503"
                id="SCT0@CONFIG@CLKMODE"
                offset="[2:1]"/>
         <field description="SCT clock select. The specific functionality of the designated input/edge is dependent on the CLKMODE bit selection in this register."
                format="enum"
                enum="d1e119573"
                id="SCT0@CONFIG@CKSEL"
                offset="[6:3]"/>
         <field description="A 1 in this bit prevents the lower match registers from being reloaded from their respective reload registers. Setting this bit eliminates the need to write to the reload registers MATCHREL if the match values are fixed. Software can write to set or clear this bit at any time. This bit applies to both the higher and lower registers when the UNIFY bit is set."
                format="hex0x"
                id="SCT0@CONFIG@NORELAOD-L"
                offset="[7]"/>
         <field description="A 1 in this bit prevents the higher match registers from being reloaded from their respective reload registers. Setting this bit eliminates the need to write to the reload registers MATCHREL if the match values are fixed. Software can write to set or clear this bit at any time. This bit is not used when the UNIFY bit is set."
                format="hex0x"
                id="SCT0@CONFIG@NORELOAD-H"
                offset="[8]"/>
         <field description="Synchronization for input N (bit 9 = input 0, bit 10 = input 1,, bit 12 = input 3); all other bits are reserved. A 1 in one of these bits subjects the corresponding input to synchronization to the SCT clock, before it is used to create an event. If an input is known to already be synchronous to the SCT clock, this bit may be set to 0 for faster input response. (Note: The SCT clock is the system clock for CKMODEs 0-2. It is the selected, asynchronous SCT input clock for CKMODE3). Note that the INSYNC field only affects inputs used for event generation. It does not apply to the clock input specified in the CKSEL field."
                format="hex0x"
                id="SCT0@CONFIG@INSYNC"
                offset="[12:9]"/>
         <field description="A one in this bit causes a match on match register 0 to be treated as a de-facto LIMIT condition without the need to define an associated event. As with any LIMIT event, this automatic limit causes the counter to be cleared to zero in unidirectional mode or to change the direction of count in bi-directional mode. Software can write to set or clear this bit at any time. This bit applies to both the higher and lower registers when the UNIFY bit is set."
                format="hex0x"
                id="SCT0@CONFIG@AUTOLIMIT-L"
                offset="[17]"/>
         <field description="A one in this bit will cause a match on match register 0 to be treated as a de-facto LIMIT condition without the need to define an associated event. As with any LIMIT event, this automatic limit causes the counter to be cleared to zero in unidirectional mode or to change the direction of count in bi-directional mode. Software can write to set or clear this bit at any time. This bit is not used when the UNIFY bit is set."
                format="hex0x"
                id="SCT0@CONFIG@AUTOLIMIT-H"
                offset="[18]"/>
      </register>
      <register description="SCT control register" format="hex0x" id="SCT0@CTRL" offset="0x4"
                size="4">
         <field description="This bit is 1 when the L or unified counter is counting down. Hardware sets this bit when the counter is counting up, counter limit occurs, and BIDIR = 1.Hardware clears this bit when the counter is counting down and a limit condition occurs or when the counter reaches 0."
                format="hex0x"
                id="SCT0@CTRL@DOWN-L"
                offset="[0]"/>
         <field description="When this bit is 1 and HALT is 0, the L or unified counter does not run, but I/O events related to the counter can occur. If a designated start event occurs, this bit is cleared and counting resumes."
                format="hex0x"
                id="SCT0@CTRL@STOP-L"
                offset="[1]"/>
         <field description="When this bit is 1, the L or unified counter does not run and no events can occur. A reset sets this bit. When the HALT_L bit is one, the STOP_L bit is cleared. It is possible to remove the halt condition while keeping the SCT in the stop condition (not running) with a single write to this register to simultaneously clear the HALT bit and set the STOP bit. Once set, only software can clear this bit to restore counter operation. This bit is set on reset."
                format="hex0x"
                id="SCT0@CTRL@HALT-L"
                offset="[2]"/>
         <field description="Writing a 1 to this bit clears the L or unified counter. This bit always reads as 0."
                format="hex0x"
                id="SCT0@CTRL@CLRCTR-L"
                offset="[3]"/>
         <field description="L or unified counter direction select" format="enum"
                enum="d1e119883"
                id="SCT0@CTRL@BIDIR-L"
                offset="[4]"/>
         <field description="Specifies the factor by which the SCT clock is prescaled to produce the L or unified counter clock. The counter clock is clocked at the rate of the SCT clock divided by PRE_L+1. Clear the counter (by writing a 1 to the CLRCTR bit) whenever changing the PRE value."
                format="hex0x"
                id="SCT0@CTRL@PRE-L"
                offset="[12:5]"/>
         <field description="This bit is 1 when the H counter is counting down. Hardware sets this bit when the counter is counting, a counter limit condition occurs, and BIDIR is 1. Hardware clears this bit when the counter is counting down and a limit condition occurs or when the counter reaches 0."
                format="hex0x"
                id="SCT0@CTRL@DOWN-H"
                offset="[16]"/>
         <field description="When this bit is 1 and HALT is 0, the H counter does not, run but I/O events related to the counter can occur. If such an event matches the mask in the Start register, this bit is cleared and counting resumes."
                format="hex0x"
                id="SCT0@CTRL@STOP-H"
                offset="[17]"/>
         <field description="When this bit is 1, the H counter does not run and no events can occur. A reset sets this bit. When the HALT_H bit is one, the STOP_H bit is cleared. It is possible to remove the halt condition while keeping the SCT in the stop condition (not running) with a single write to this register to simultaneously clear the HALT bit and set the STOP bit. Once set, this bit can only be cleared by software to restore counter operation. This bit is set on reset."
                format="hex0x"
                id="SCT0@CTRL@HALT-H"
                offset="[18]"/>
         <field description="Writing a 1 to this bit clears the H counter. This bit always reads as 0."
                format="hex0x"
                id="SCT0@CTRL@CLRCTR-H"
                offset="[19]"/>
         <field description="Direction select" format="enum" enum="d1e120020"
                id="SCT0@CTRL@BIDIR-H"
                offset="[20]"/>
         <field description="Specifies the factor by which the SCT clock is prescaled to produce the H counter clock. The counter clock is clocked at the rate of the SCT clock divided by PRELH+1. Clear the counter (by writing a 1 to the CLRCTR bit) whenever changing the PRE value."
                format="hex0x"
                id="SCT0@CTRL@PRE-H"
                offset="[28:21]"/>
      </register>
      <register description="SCT limit event select register" format="hex0x" id="SCT0@LIMIT"
                offset="0x8"
                size="4">
         <field description="If bit n is one, event n is used as a counter limit for the L or unified counter (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of events in this SCT."
                format="hex0x"
                id="SCT0@LIMIT@LIMMSK-L"
                offset="[15:0]"/>
         <field description="If bit n is one, event n is used as a counter limit for the H counter (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of events in this SCT."
                format="hex0x"
                id="SCT0@LIMIT@LIMMSK-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT halt event select register" format="hex0x" id="SCT0@HALT"
                offset="0xc"
                size="4">
         <field description="If bit n is one, event n sets the HALT_L bit in the CTRL register (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of events in this SCT."
                format="hex0x"
                id="SCT0@HALT@HALTMSK-L"
                offset="[15:0]"/>
         <field description="If bit n is one, event n sets the HALT_H bit in the CTRL register (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of events in this SCT."
                format="hex0x"
                id="SCT0@HALT@HALTMSK-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT stop event select register" format="hex0x" id="SCT0@STOP"
                offset="0x10"
                size="4">
         <field description="If bit n is one, event n sets the STOP_L bit in the CTRL register (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of events in this SCT."
                format="hex0x"
                id="SCT0@STOP@STOPMSK-L"
                offset="[15:0]"/>
         <field description="If bit n is one, event n sets the STOP_H bit in the CTRL register (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of events in this SCT."
                format="hex0x"
                id="SCT0@STOP@STOPMSK-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT start event select register" format="hex0x" id="SCT0@START"
                offset="0x14"
                size="4">
         <field description="If bit n is one, event n clears the STOP_L bit in the CTRL register (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of events in this SCT."
                format="hex0x"
                id="SCT0@START@STARTMSK-L"
                offset="[15:0]"/>
         <field description="If bit n is one, event n clears the STOP_H bit in the CTRL register (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of events in this SCT."
                format="hex0x"
                id="SCT0@START@STARTMSK-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT counter register" format="hex0x" id="SCT0@COUNT" offset="0x40"
                size="4">
         <field description="When UNIFY = 0, read or write the 16-bit L counter value. When UNIFY = 1, read or write the lower 16 bits of the 32-bit unified counter."
                format="hex0x"
                id="SCT0@COUNT@CTR-L"
                offset="[15:0]"/>
         <field description="When UNIFY = 0, read or write the 16-bit H counter value. When UNIFY = 1, read or write the upper 16 bits of the 32-bit unified counter."
                format="hex0x"
                id="SCT0@COUNT@CTR-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT state register" format="hex0x" id="SCT0@STATE" offset="0x44"
                size="4">
         <field description="State variable." format="hex0x" id="SCT0@STATE@STATE-L"
                offset="[4:0]"/>
         <field description="State variable." format="hex0x" id="SCT0@STATE@STATE-H"
                offset="[20:16]"/>
      </register>
      <register description="SCT input register" format="hex0x" id="SCT0@INPUT" offset="0x48"
                readOnly="true"
                size="4">
         <field description="Input 0 state. Input 0 state on the last SCT clock edge."
                format="hex0x"
                id="SCT0@INPUT@AIN0"
                offset="[0]"/>
         <field description="Input 1 state. Input 1 state on the last SCT clock edge."
                format="hex0x"
                id="SCT0@INPUT@AIN1"
                offset="[1]"/>
         <field description="Input 2 state. Input 2 state on the last SCT clock edge."
                format="hex0x"
                id="SCT0@INPUT@AIN2"
                offset="[2]"/>
         <field description="Input 3 state. Input 3 state on the last SCT clock edge."
                format="hex0x"
                id="SCT0@INPUT@AIN3"
                offset="[3]"/>
         <field description="Input 4 state. Input 4 state on the last SCT clock edge."
                format="hex0x"
                id="SCT0@INPUT@AIN4"
                offset="[4]"/>
         <field description="Input 5 state. Input 5 state on the last SCT clock edge."
                format="hex0x"
                id="SCT0@INPUT@AIN5"
                offset="[5]"/>
         <field description="Input 6 state. Input 6 state on the last SCT clock edge."
                format="hex0x"
                id="SCT0@INPUT@AIN6"
                offset="[6]"/>
         <field description="Input 7 state. Input 7 state on the last SCT clock edge."
                format="hex0x"
                id="SCT0@INPUT@AIN7"
                offset="[7]"/>
         <field description="Input 8 state. Input 8 state on the last SCT clock edge."
                format="hex0x"
                id="SCT0@INPUT@AIN8"
                offset="[8]"/>
         <field description="Input 9 state. Input 9 state on the last SCT clock edge."
                format="hex0x"
                id="SCT0@INPUT@AIN9"
                offset="[9]"/>
         <field description="Input 10 state. Input 10 state on the last SCT clock edge."
                format="hex0x"
                id="SCT0@INPUT@AIN10"
                offset="[10]"/>
         <field description="Input 11 state. Input 11 state on the last SCT clock edge."
                format="hex0x"
                id="SCT0@INPUT@AIN11"
                offset="[11]"/>
         <field description="Input 12 state. Input 12 state on the last SCT clock edge."
                format="hex0x"
                id="SCT0@INPUT@AIN12"
                offset="[12]"/>
         <field description="Input 13 state. Input 13 state on the last SCT clock edge."
                format="hex0x"
                id="SCT0@INPUT@AIN13"
                offset="[13]"/>
         <field description="Input 14 state. Input 14 state on the last SCT clock edge."
                format="hex0x"
                id="SCT0@INPUT@AIN14"
                offset="[14]"/>
         <field description="Input 15 state. Input 15 state on the last SCT clock edge."
                format="hex0x"
                id="SCT0@INPUT@AIN15"
                offset="[15]"/>
         <field description="Input 0 state. Input 0 state following the synchronization specified by INSYNC."
                format="hex0x"
                id="SCT0@INPUT@SIN0"
                offset="[16]"/>
         <field description="Input 1 state. Input 1 state following the synchronization specified by INSYNC."
                format="hex0x"
                id="SCT0@INPUT@SIN1"
                offset="[17]"/>
         <field description="Input 2 state. Input 2 state following the synchronization specified by INSYNC."
                format="hex0x"
                id="SCT0@INPUT@SIN2"
                offset="[18]"/>
         <field description="Input 3 state. Input 3 state following the synchronization specified by INSYNC."
                format="hex0x"
                id="SCT0@INPUT@SIN3"
                offset="[19]"/>
         <field description="Input 4 state. Input 4 state following the synchronization specified by INSYNC."
                format="hex0x"
                id="SCT0@INPUT@SIN4"
                offset="[20]"/>
         <field description="Input 5 state. Input 5 state following the synchronization specified by INSYNC."
                format="hex0x"
                id="SCT0@INPUT@SIN5"
                offset="[21]"/>
         <field description="Input 6 state. Input 6 state following the synchronization specified by INSYNC."
                format="hex0x"
                id="SCT0@INPUT@SIN6"
                offset="[22]"/>
         <field description="Input 7 state. Input 7 state following the synchronization specified by INSYNC."
                format="hex0x"
                id="SCT0@INPUT@SIN7"
                offset="[23]"/>
         <field description="Input 8 state. Input 8 state following the synchronization specified by INSYNC."
                format="hex0x"
                id="SCT0@INPUT@SIN8"
                offset="[24]"/>
         <field description="Input 9 state. Input 9 state following the synchronization specified by INSYNC."
                format="hex0x"
                id="SCT0@INPUT@SIN9"
                offset="[25]"/>
         <field description="Input 10 state. Input 10 state following the synchronization specified by INSYNC."
                format="hex0x"
                id="SCT0@INPUT@SIN10"
                offset="[26]"/>
         <field description="Input 11 state. Input 11 state following the synchronization specified by INSYNC."
                format="hex0x"
                id="SCT0@INPUT@SIN11"
                offset="[27]"/>
         <field description="Input 12 state. Input 12 state following the synchronization specified by INSYNC."
                format="hex0x"
                id="SCT0@INPUT@SIN12"
                offset="[28]"/>
         <field description="Input 13 state. Input 13 state following the synchronization specified by INSYNC."
                format="hex0x"
                id="SCT0@INPUT@SIN13"
                offset="[29]"/>
         <field description="Input 14 state. Input 14 state following the synchronization specified by INSYNC."
                format="hex0x"
                id="SCT0@INPUT@SIN14"
                offset="[30]"/>
         <field description="Input 15 state. Input 15 state following the synchronization specified by INSYNC."
                format="hex0x"
                id="SCT0@INPUT@SIN15"
                offset="[31]"/>
      </register>
      <register description="SCT match/capture mode register" format="hex0x" id="SCT0@REGMODE"
                offset="0x4c"
                size="4">
         <field description="Each bit controls one match/capture register (register 0 = bit 0, register 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT. 0 = register operates as match register. 1 = register operates as capture register."
                format="hex0x"
                id="SCT0@REGMODE@REGMOD-L"
                offset="[15:0]"/>
         <field description="Each bit controls one match/capture register (register 0 = bit 16, register 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT. 0 = register operates as match registers. 1 = register operates as capture registers."
                format="hex0x"
                id="SCT0@REGMODE@REGMOD-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT output register" format="hex0x" id="SCT0@OUTPUT" offset="0x50"
                size="4">
         <field description="Writing a 1 to bit n forces the corresponding output HIGH. Writing a 0 forces the corresponding output LOW (output 0 = bit 0, output 1 = bit 1, etc.). The number of bits = number of outputs in this SCT."
                format="hex0x"
                id="SCT0@OUTPUT@OUT"
                offset="[15:0]"/>
      </register>
      <register description="SCT output counter direction control register" format="hex0x"
                id="SCT0@OUTPUTDIRCTRL"
                offset="0x54"
                size="4">
         <field description="Set/clear operation on output 0. Value 0x3 is reserved. Do not program this value."
                format="enum"
                enum="d1e121218"
                id="SCT0@OUTPUTDIRCTRL@SETCLR0"
                offset="[1:0]"/>
         <field description="Set/clear operation on output 1. Value 0x3 is reserved. Do not program this value."
                format="enum"
                enum="d1e121276"
                id="SCT0@OUTPUTDIRCTRL@SETCLR1"
                offset="[3:2]"/>
         <field description="Set/clear operation on output 2. Value 0x3 is reserved. Do not program this value."
                format="enum"
                enum="d1e121334"
                id="SCT0@OUTPUTDIRCTRL@SETCLR2"
                offset="[5:4]"/>
         <field description="Set/clear operation on output 3. Value 0x3 is reserved. Do not program this value."
                format="enum"
                enum="d1e121392"
                id="SCT0@OUTPUTDIRCTRL@SETCLR3"
                offset="[7:6]"/>
         <field description="Set/clear operation on output 4. Value 0x3 is reserved. Do not program this value."
                format="enum"
                enum="d1e121450"
                id="SCT0@OUTPUTDIRCTRL@SETCLR4"
                offset="[9:8]"/>
         <field description="Set/clear operation on output 5. Value 0x3 is reserved. Do not program this value."
                format="enum"
                enum="d1e121509"
                id="SCT0@OUTPUTDIRCTRL@SETCLR5"
                offset="[11:10]"/>
         <field description="Set/clear operation on output 6. Value 0x3 is reserved. Do not program this value."
                format="enum"
                enum="d1e121567"
                id="SCT0@OUTPUTDIRCTRL@SETCLR6"
                offset="[13:12]"/>
         <field description="Set/clear operation on output 7. Value 0x3 is reserved. Do not program this value."
                format="enum"
                enum="d1e121625"
                id="SCT0@OUTPUTDIRCTRL@SETCLR7"
                offset="[15:14]"/>
         <field description="Set/clear operation on output 8. Value 0x3 is reserved. Do not program this value."
                format="enum"
                enum="d1e121683"
                id="SCT0@OUTPUTDIRCTRL@SETCLR8"
                offset="[17:16]"/>
         <field description="Set/clear operation on output 9. Value 0x3 is reserved. Do not program this value."
                format="enum"
                enum="d1e121741"
                id="SCT0@OUTPUTDIRCTRL@SETCLR9"
                offset="[19:18]"/>
         <field description="Set/clear operation on output 10. Value 0x3 is reserved. Do not program this value."
                format="enum"
                enum="d1e121799"
                id="SCT0@OUTPUTDIRCTRL@SETCLR10"
                offset="[21:20]"/>
         <field description="Set/clear operation on output 11. Value 0x3 is reserved. Do not program this value."
                format="enum"
                enum="d1e121858"
                id="SCT0@OUTPUTDIRCTRL@SETCLR11"
                offset="[23:22]"/>
         <field description="Set/clear operation on output 12. Value 0x3 is reserved. Do not program this value."
                format="enum"
                enum="d1e121916"
                id="SCT0@OUTPUTDIRCTRL@SETCLR12"
                offset="[25:24]"/>
         <field description="Set/clear operation on output 13. Value 0x3 is reserved. Do not program this value."
                format="enum"
                enum="d1e121974"
                id="SCT0@OUTPUTDIRCTRL@SETCLR13"
                offset="[27:26]"/>
         <field description="Set/clear operation on output 14. Value 0x3 is reserved. Do not program this value."
                format="enum"
                enum="d1e122032"
                id="SCT0@OUTPUTDIRCTRL@SETCLR14"
                offset="[29:28]"/>
         <field description="Set/clear operation on output 15. Value 0x3 is reserved. Do not program this value."
                format="enum"
                enum="d1e122090"
                id="SCT0@OUTPUTDIRCTRL@SETCLR15"
                offset="[31:30]"/>
      </register>
      <register description="SCT conflict resolution register" format="hex0x" id="SCT0@RES"
                offset="0x58"
                size="4">
         <field description="Effect of simultaneous set and clear on output 0." format="enum"
                enum="d1e122176"
                id="SCT0@RES@O0RES"
                offset="[1:0]"/>
         <field description="Effect of simultaneous set and clear on output 1." format="enum"
                enum="d1e122246"
                id="SCT0@RES@O1RES"
                offset="[3:2]"/>
         <field description="Effect of simultaneous set and clear on output 2." format="enum"
                enum="d1e122316"
                id="SCT0@RES@O2RES"
                offset="[5:4]"/>
         <field description="Effect of simultaneous set and clear on output 3." format="enum"
                enum="d1e122386"
                id="SCT0@RES@O3RES"
                offset="[7:6]"/>
         <field description="Effect of simultaneous set and clear on output 4." format="enum"
                enum="d1e122456"
                id="SCT0@RES@O4RES"
                offset="[9:8]"/>
         <field description="Effect of simultaneous set and clear on output 5." format="enum"
                enum="d1e122527"
                id="SCT0@RES@O5RES"
                offset="[11:10]"/>
         <field description="Effect of simultaneous set and clear on output 6." format="enum"
                enum="d1e122597"
                id="SCT0@RES@O6RES"
                offset="[13:12]"/>
         <field description="Effect of simultaneous set and clear on output 7." format="enum"
                enum="d1e122667"
                id="SCT0@RES@O7RES"
                offset="[15:14]"/>
         <field description="Effect of simultaneous set and clear on output 8." format="enum"
                enum="d1e122737"
                id="SCT0@RES@O8RES"
                offset="[17:16]"/>
         <field description="Effect of simultaneous set and clear on output 9." format="enum"
                enum="d1e122807"
                id="SCT0@RES@O9RES"
                offset="[19:18]"/>
         <field description="Effect of simultaneous set and clear on output 10." format="enum"
                enum="d1e122877"
                id="SCT0@RES@O10RES"
                offset="[21:20]"/>
         <field description="Effect of simultaneous set and clear on output 11." format="enum"
                enum="d1e122948"
                id="SCT0@RES@O11RES"
                offset="[23:22]"/>
         <field description="Effect of simultaneous set and clear on output 12." format="enum"
                enum="d1e123018"
                id="SCT0@RES@O12RES"
                offset="[25:24]"/>
         <field description="Effect of simultaneous set and clear on output 13." format="enum"
                enum="d1e123088"
                id="SCT0@RES@O13RES"
                offset="[27:26]"/>
         <field description="Effect of simultaneous set and clear on output 14." format="enum"
                enum="d1e123158"
                id="SCT0@RES@O14RES"
                offset="[29:28]"/>
         <field description="Effect of simultaneous set and clear on output 15." format="enum"
                enum="d1e123228"
                id="SCT0@RES@O15RES"
                offset="[31:30]"/>
      </register>
      <register description="SCT DMA request 0 register" format="hex0x" id="SCT0@DMA0REQUEST"
                offset="0x5c"
                size="4">
         <field description="If bit n is one, event n triggers DMA request 0 (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of events in this SCT."
                format="hex0x"
                id="SCT0@DMA0REQUEST@DEV-0"
                offset="[15:0]"/>
         <field description="A 1 in this bit triggers DMA request 0 when it loads the MATCH_L/Unified registers from the RELOAD_L/Unified registers."
                format="hex0x"
                id="SCT0@DMA0REQUEST@DRL0"
                offset="[30]"/>
         <field description="This read-only bit indicates the state of DMA Request 0. Note that if the related DMA channel is enabled and properly set up, it is unlikely that software will see this flag, it will be cleared rapidly by the DMA service. The flag remaining set could point to an issue with DMA setup."
                format="hex0x"
                id="SCT0@DMA0REQUEST@DRQ0"
                offset="[31]"/>
      </register>
      <register description="SCT DMA request 1 register" format="hex0x" id="SCT0@DMA1REQUEST"
                offset="0x60"
                size="4">
         <field description="If bit n is one, event n triggers DMA request 1 (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of events in this SCT."
                format="hex0x"
                id="SCT0@DMA1REQUEST@DEV-1"
                offset="[15:0]"/>
         <field description="A 1 in this bit triggers DMA request 1 when it loads the Match L/Unified registers from the Reload L/Unified registers."
                format="hex0x"
                id="SCT0@DMA1REQUEST@DRL1"
                offset="[30]"/>
         <field description="This read-only bit indicates the state of DMA Request 1. Note that if the related DMA channel is enabled and properly set up, it is unlikely that software will see this flag, it will be cleared rapidly by the DMA service. The flag remaining set could point to an issue with DMA setup."
                format="hex0x"
                id="SCT0@DMA1REQUEST@DRQ1"
                offset="[31]"/>
      </register>
      <register description="SCT event interrupt enable register" format="hex0x" id="SCT0@EVEN"
                offset="0xf0"
                size="4">
         <field description="The SCT requests an interrupt when bit n of this register and the event flag register are both one (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of events in this SCT."
                format="hex0x"
                id="SCT0@EVEN@IEN"
                offset="[15:0]"/>
      </register>
      <register description="SCT event flag register" format="hex0x" id="SCT0@EVFLAG"
                offset="0xf4"
                size="4">
         <field description="Bit n is one if event n has occurred since reset or a 1 was last written to this bit (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of events in this SCT."
                format="hex0x"
                id="SCT0@EVFLAG@FLAG"
                offset="[15:0]"/>
      </register>
      <register description="SCT conflict interrupt enable register" format="hex0x"
                id="SCT0@CONEN"
                offset="0xf8"
                size="4">
         <field description="The SCT requests an interrupt when bit n of this register and the SCT conflict flag register are both one (output 0 = bit 0, output 1 = bit 1, etc.). The number of bits = number of outputs in this SCT."
                format="hex0x"
                id="SCT0@CONEN@NCEN"
                offset="[15:0]"/>
      </register>
      <register description="SCT conflict flag register" format="hex0x" id="SCT0@CONFLAG"
                offset="0xfc"
                size="4">
         <field description="Bit n is one if a no-change conflict event occurred on output n since reset or a 1 was last written to this bit (output 0 = bit 0, output 1 = bit 1, etc.). The number of bits = number of outputs in this SCT."
                format="hex0x"
                id="SCT0@CONFLAG@NCFLAG"
                offset="[15:0]"/>
         <field description="The most recent bus error from this SCT involved writing CTR L/Unified, STATE L/Unified, MATCH L/Unified, or the Output register when the L/U counter was not halted. A word write to certain L and H registers can be half successful and half unsuccessful."
                format="hex0x"
                id="SCT0@CONFLAG@BUSERRL"
                offset="[30]"/>
         <field description="The most recent bus error from this SCT involved writing CTR H, STATE H, MATCH H, or the Output register when the H counter was not halted."
                format="hex0x"
                id="SCT0@CONFLAG@BUSERRH"
                offset="[31]"/>
      </register>
      <register description="SCT capture register of capture channel" format="hex0x"
                id="SCT0@SCTCAP0"
                offset="0x100"
                size="4">
         <field description="When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured."
                format="hex0x"
                id="SCT0@SCTCAP0@CAPn-L"
                offset="[15:0]"/>
         <field description="When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured."
                format="hex0x"
                id="SCT0@SCTCAP0@CAPn-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT match value register of match channels" format="hex0x"
                id="SCT0@SCTMATCH0"
                offset="0x100"
                size="4">
         <field description="When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter."
                format="hex0x"
                id="SCT0@SCTMATCH0@MATCHn-L"
                offset="[15:0]"/>
         <field description="When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter."
                format="hex0x"
                id="SCT0@SCTMATCH0@MATCHn-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT capture register of capture channel" format="hex0x"
                id="SCT0@SCTCAP1"
                offset="0x104"
                size="4">
         <field description="When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured."
                format="hex0x"
                id="SCT0@SCTCAP1@CAPn-L"
                offset="[15:0]"/>
         <field description="When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured."
                format="hex0x"
                id="SCT0@SCTCAP1@CAPn-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT match value register of match channels" format="hex0x"
                id="SCT0@SCTMATCH1"
                offset="0x104"
                size="4">
         <field description="When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter."
                format="hex0x"
                id="SCT0@SCTMATCH1@MATCHn-L"
                offset="[15:0]"/>
         <field description="When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter."
                format="hex0x"
                id="SCT0@SCTMATCH1@MATCHn-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT capture register of capture channel" format="hex0x"
                id="SCT0@SCTCAP2"
                offset="0x108"
                size="4">
         <field description="When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured."
                format="hex0x"
                id="SCT0@SCTCAP2@CAPn-L"
                offset="[15:0]"/>
         <field description="When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured."
                format="hex0x"
                id="SCT0@SCTCAP2@CAPn-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT match value register of match channels" format="hex0x"
                id="SCT0@SCTMATCH2"
                offset="0x108"
                size="4">
         <field description="When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter."
                format="hex0x"
                id="SCT0@SCTMATCH2@MATCHn-L"
                offset="[15:0]"/>
         <field description="When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter."
                format="hex0x"
                id="SCT0@SCTMATCH2@MATCHn-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT capture register of capture channel" format="hex0x"
                id="SCT0@SCTCAP3"
                offset="0x10c"
                size="4">
         <field description="When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured."
                format="hex0x"
                id="SCT0@SCTCAP3@CAPn-L"
                offset="[15:0]"/>
         <field description="When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured."
                format="hex0x"
                id="SCT0@SCTCAP3@CAPn-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT match value register of match channels" format="hex0x"
                id="SCT0@SCTMATCH3"
                offset="0x10c"
                size="4">
         <field description="When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter."
                format="hex0x"
                id="SCT0@SCTMATCH3@MATCHn-L"
                offset="[15:0]"/>
         <field description="When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter."
                format="hex0x"
                id="SCT0@SCTMATCH3@MATCHn-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT capture register of capture channel" format="hex0x"
                id="SCT0@SCTCAP4"
                offset="0x110"
                size="4">
         <field description="When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured."
                format="hex0x"
                id="SCT0@SCTCAP4@CAPn-L"
                offset="[15:0]"/>
         <field description="When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured."
                format="hex0x"
                id="SCT0@SCTCAP4@CAPn-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT match value register of match channels" format="hex0x"
                id="SCT0@SCTMATCH4"
                offset="0x110"
                size="4">
         <field description="When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter."
                format="hex0x"
                id="SCT0@SCTMATCH4@MATCHn-L"
                offset="[15:0]"/>
         <field description="When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter."
                format="hex0x"
                id="SCT0@SCTMATCH4@MATCHn-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT capture register of capture channel" format="hex0x"
                id="SCT0@SCTCAP5"
                offset="0x114"
                size="4">
         <field description="When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured."
                format="hex0x"
                id="SCT0@SCTCAP5@CAPn-L"
                offset="[15:0]"/>
         <field description="When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured."
                format="hex0x"
                id="SCT0@SCTCAP5@CAPn-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT match value register of match channels" format="hex0x"
                id="SCT0@SCTMATCH5"
                offset="0x114"
                size="4">
         <field description="When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter."
                format="hex0x"
                id="SCT0@SCTMATCH5@MATCHn-L"
                offset="[15:0]"/>
         <field description="When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter."
                format="hex0x"
                id="SCT0@SCTMATCH5@MATCHn-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT capture register of capture channel" format="hex0x"
                id="SCT0@SCTCAP6"
                offset="0x118"
                size="4">
         <field description="When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured."
                format="hex0x"
                id="SCT0@SCTCAP6@CAPn-L"
                offset="[15:0]"/>
         <field description="When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured."
                format="hex0x"
                id="SCT0@SCTCAP6@CAPn-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT match value register of match channels" format="hex0x"
                id="SCT0@SCTMATCH6"
                offset="0x118"
                size="4">
         <field description="When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter."
                format="hex0x"
                id="SCT0@SCTMATCH6@MATCHn-L"
                offset="[15:0]"/>
         <field description="When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter."
                format="hex0x"
                id="SCT0@SCTMATCH6@MATCHn-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT capture register of capture channel" format="hex0x"
                id="SCT0@SCTCAP7"
                offset="0x11c"
                size="4">
         <field description="When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured."
                format="hex0x"
                id="SCT0@SCTCAP7@CAPn-L"
                offset="[15:0]"/>
         <field description="When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured."
                format="hex0x"
                id="SCT0@SCTCAP7@CAPn-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT match value register of match channels" format="hex0x"
                id="SCT0@SCTMATCH7"
                offset="0x11c"
                size="4">
         <field description="When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter."
                format="hex0x"
                id="SCT0@SCTMATCH7@MATCHn-L"
                offset="[15:0]"/>
         <field description="When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter."
                format="hex0x"
                id="SCT0@SCTMATCH7@MATCHn-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT capture register of capture channel" format="hex0x"
                id="SCT0@SCTCAP8"
                offset="0x120"
                size="4">
         <field description="When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured."
                format="hex0x"
                id="SCT0@SCTCAP8@CAPn-L"
                offset="[15:0]"/>
         <field description="When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured."
                format="hex0x"
                id="SCT0@SCTCAP8@CAPn-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT match value register of match channels" format="hex0x"
                id="SCT0@SCTMATCH8"
                offset="0x120"
                size="4">
         <field description="When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter."
                format="hex0x"
                id="SCT0@SCTMATCH8@MATCHn-L"
                offset="[15:0]"/>
         <field description="When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter."
                format="hex0x"
                id="SCT0@SCTMATCH8@MATCHn-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT capture register of capture channel" format="hex0x"
                id="SCT0@SCTCAP9"
                offset="0x124"
                size="4">
         <field description="When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured."
                format="hex0x"
                id="SCT0@SCTCAP9@CAPn-L"
                offset="[15:0]"/>
         <field description="When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured."
                format="hex0x"
                id="SCT0@SCTCAP9@CAPn-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT match value register of match channels" format="hex0x"
                id="SCT0@SCTMATCH9"
                offset="0x124"
                size="4">
         <field description="When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter."
                format="hex0x"
                id="SCT0@SCTMATCH9@MATCHn-L"
                offset="[15:0]"/>
         <field description="When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter."
                format="hex0x"
                id="SCT0@SCTMATCH9@MATCHn-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT capture control register" format="hex0x" id="SCT0@SCTCAPCTRL0"
                offset="0x200"
                size="4">
         <field description="If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT."
                format="hex0x"
                id="SCT0@SCTCAPCTRL0@CAPCONn-L"
                offset="[15:0]"/>
         <field description="If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT."
                format="hex0x"
                id="SCT0@SCTCAPCTRL0@CAPCONn-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT match reload value register" format="hex0x"
                id="SCT0@SCTMATCHREL0"
                offset="0x200"
                size="4">
         <field description="When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register."
                format="hex0x"
                id="SCT0@SCTMATCHREL0@RELOADn-L"
                offset="[15:0]"/>
         <field description="When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register."
                format="hex0x"
                id="SCT0@SCTMATCHREL0@RELOADn-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT capture control register" format="hex0x" id="SCT0@SCTCAPCTRL1"
                offset="0x204"
                size="4">
         <field description="If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT."
                format="hex0x"
                id="SCT0@SCTCAPCTRL1@CAPCONn-L"
                offset="[15:0]"/>
         <field description="If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT."
                format="hex0x"
                id="SCT0@SCTCAPCTRL1@CAPCONn-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT match reload value register" format="hex0x"
                id="SCT0@SCTMATCHREL1"
                offset="0x204"
                size="4">
         <field description="When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register."
                format="hex0x"
                id="SCT0@SCTMATCHREL1@RELOADn-L"
                offset="[15:0]"/>
         <field description="When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register."
                format="hex0x"
                id="SCT0@SCTMATCHREL1@RELOADn-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT capture control register" format="hex0x" id="SCT0@SCTCAPCTRL2"
                offset="0x208"
                size="4">
         <field description="If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT."
                format="hex0x"
                id="SCT0@SCTCAPCTRL2@CAPCONn-L"
                offset="[15:0]"/>
         <field description="If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT."
                format="hex0x"
                id="SCT0@SCTCAPCTRL2@CAPCONn-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT match reload value register" format="hex0x"
                id="SCT0@SCTMATCHREL2"
                offset="0x208"
                size="4">
         <field description="When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register."
                format="hex0x"
                id="SCT0@SCTMATCHREL2@RELOADn-L"
                offset="[15:0]"/>
         <field description="When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register."
                format="hex0x"
                id="SCT0@SCTMATCHREL2@RELOADn-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT capture control register" format="hex0x" id="SCT0@SCTCAPCTRL3"
                offset="0x20c"
                size="4">
         <field description="If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT."
                format="hex0x"
                id="SCT0@SCTCAPCTRL3@CAPCONn-L"
                offset="[15:0]"/>
         <field description="If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT."
                format="hex0x"
                id="SCT0@SCTCAPCTRL3@CAPCONn-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT match reload value register" format="hex0x"
                id="SCT0@SCTMATCHREL3"
                offset="0x20c"
                size="4">
         <field description="When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register."
                format="hex0x"
                id="SCT0@SCTMATCHREL3@RELOADn-L"
                offset="[15:0]"/>
         <field description="When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register."
                format="hex0x"
                id="SCT0@SCTMATCHREL3@RELOADn-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT capture control register" format="hex0x" id="SCT0@SCTCAPCTRL4"
                offset="0x210"
                size="4">
         <field description="If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT."
                format="hex0x"
                id="SCT0@SCTCAPCTRL4@CAPCONn-L"
                offset="[15:0]"/>
         <field description="If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT."
                format="hex0x"
                id="SCT0@SCTCAPCTRL4@CAPCONn-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT match reload value register" format="hex0x"
                id="SCT0@SCTMATCHREL4"
                offset="0x210"
                size="4">
         <field description="When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register."
                format="hex0x"
                id="SCT0@SCTMATCHREL4@RELOADn-L"
                offset="[15:0]"/>
         <field description="When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register."
                format="hex0x"
                id="SCT0@SCTMATCHREL4@RELOADn-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT capture control register" format="hex0x" id="SCT0@SCTCAPCTRL5"
                offset="0x214"
                size="4">
         <field description="If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT."
                format="hex0x"
                id="SCT0@SCTCAPCTRL5@CAPCONn-L"
                offset="[15:0]"/>
         <field description="If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT."
                format="hex0x"
                id="SCT0@SCTCAPCTRL5@CAPCONn-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT match reload value register" format="hex0x"
                id="SCT0@SCTMATCHREL5"
                offset="0x214"
                size="4">
         <field description="When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register."
                format="hex0x"
                id="SCT0@SCTMATCHREL5@RELOADn-L"
                offset="[15:0]"/>
         <field description="When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register."
                format="hex0x"
                id="SCT0@SCTMATCHREL5@RELOADn-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT capture control register" format="hex0x" id="SCT0@SCTCAPCTRL6"
                offset="0x218"
                size="4">
         <field description="If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT."
                format="hex0x"
                id="SCT0@SCTCAPCTRL6@CAPCONn-L"
                offset="[15:0]"/>
         <field description="If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT."
                format="hex0x"
                id="SCT0@SCTCAPCTRL6@CAPCONn-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT match reload value register" format="hex0x"
                id="SCT0@SCTMATCHREL6"
                offset="0x218"
                size="4">
         <field description="When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register."
                format="hex0x"
                id="SCT0@SCTMATCHREL6@RELOADn-L"
                offset="[15:0]"/>
         <field description="When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register."
                format="hex0x"
                id="SCT0@SCTMATCHREL6@RELOADn-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT capture control register" format="hex0x" id="SCT0@SCTCAPCTRL7"
                offset="0x21c"
                size="4">
         <field description="If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT."
                format="hex0x"
                id="SCT0@SCTCAPCTRL7@CAPCONn-L"
                offset="[15:0]"/>
         <field description="If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT."
                format="hex0x"
                id="SCT0@SCTCAPCTRL7@CAPCONn-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT match reload value register" format="hex0x"
                id="SCT0@SCTMATCHREL7"
                offset="0x21c"
                size="4">
         <field description="When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register."
                format="hex0x"
                id="SCT0@SCTMATCHREL7@RELOADn-L"
                offset="[15:0]"/>
         <field description="When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register."
                format="hex0x"
                id="SCT0@SCTMATCHREL7@RELOADn-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT capture control register" format="hex0x" id="SCT0@SCTCAPCTRL8"
                offset="0x220"
                size="4">
         <field description="If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT."
                format="hex0x"
                id="SCT0@SCTCAPCTRL8@CAPCONn-L"
                offset="[15:0]"/>
         <field description="If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT."
                format="hex0x"
                id="SCT0@SCTCAPCTRL8@CAPCONn-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT match reload value register" format="hex0x"
                id="SCT0@SCTMATCHREL8"
                offset="0x220"
                size="4">
         <field description="When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register."
                format="hex0x"
                id="SCT0@SCTMATCHREL8@RELOADn-L"
                offset="[15:0]"/>
         <field description="When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register."
                format="hex0x"
                id="SCT0@SCTMATCHREL8@RELOADn-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT capture control register" format="hex0x" id="SCT0@SCTCAPCTRL9"
                offset="0x224"
                size="4">
         <field description="If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT."
                format="hex0x"
                id="SCT0@SCTCAPCTRL9@CAPCONn-L"
                offset="[15:0]"/>
         <field description="If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT."
                format="hex0x"
                id="SCT0@SCTCAPCTRL9@CAPCONn-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT match reload value register" format="hex0x"
                id="SCT0@SCTMATCHREL9"
                offset="0x224"
                size="4">
         <field description="When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register."
                format="hex0x"
                id="SCT0@SCTMATCHREL9@RELOADn-L"
                offset="[15:0]"/>
         <field description="When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register."
                format="hex0x"
                id="SCT0@SCTMATCHREL9@RELOADn-H"
                offset="[31:16]"/>
      </register>
      <register description="SCT event state register 0" format="hex0x" id="SCT0@EVENT0-STATE"
                offset="0x300"
                size="4">
         <field description="If bit m is one, event n happens in state m of the counter selected by the HEVENT bit (n = event number, m = state number; state 0 = bit 0, state 1= bit 1, etc.). The number of bits = number of states in this SCT."
                format="hex0x"
                id="SCT0@EVENT0-STATE@STATEMSKn"
                offset="[15:0]"/>
      </register>
      <register description="SCT event control register 0" format="hex0x" id="SCT0@EVENT0-CTRL"
                offset="0x304"
                size="4">
         <field description="Selects the Match register associated with this event (if any). A match can occur only when the counter selected by the HEVENT bit is running."
                format="hex0x"
                id="SCT0@EVENT0-CTRL@MATCHSEL"
                offset="[3:0]"/>
         <field description="Select L/H counter. Do not set this bit if UNIFY = 1."
                format="enum"
                enum="d1e126480"
                id="SCT0@EVENT0-CTRL@HEVENT"
                offset="[4]"/>
         <field description="Input/output select" format="enum" enum="d1e126526"
                id="SCT0@EVENT0-CTRL@OUTSEL"
                offset="[5]"/>
         <field description="Selects the input or output signal number associated with this event (if any). Do not select an input in this register if CKMODE is 1x. In this case the clock input is an implicit ingredient of every event."
                format="hex0x"
                id="SCT0@EVENT0-CTRL@IOSEL"
                offset="[9:6]"/>
         <field description="Selects the I/O condition for event n. (The detection of edges on outputs lag the conditions that switch the outputs by one SCT clock). In order to guarantee proper edge/state detection, an input must have a minimum pulse width of at least one SCT clock period ."
                format="enum"
                enum="d1e126590"
                id="SCT0@EVENT0-CTRL@IOCOND"
                offset="[11:10]"/>
         <field description="Selects how the specified match and I/O condition are used and combined."
                format="enum"
                enum="d1e126661"
                id="SCT0@EVENT0-CTRL@COMBMODE"
                offset="[13:12]"/>
         <field description="This bit controls how the STATEV value modifies the state selected by HEVENT when this event is the highest-numbered event occurring for that state."
                format="enum"
                enum="d1e126731"
                id="SCT0@EVENT0-CTRL@STATELD"
                offset="[14]"/>
         <field description="This value is loaded into or added to the state selected by HEVENT, depending on STATELD, when this event is the highest-numbered event occurring for that state. If STATELD and STATEV are both zero, there is no change to the STATE value."
                format="hex0x"
                id="SCT0@EVENT0-CTRL@STATEV"
                offset="[19:15]"/>
         <field description="If this bit is one and the COMBMODE field specifies a match component to the triggering of this event, then a match is considered to be active whenever the counter value is GREATER THAN OR EQUAL TO the value specified in the match register when counting up, LESS THEN OR EQUAL TO the match value when counting down. If this bit is zero, a match is only be active during the cycle when the counter is equal to the match value."
                format="hex0x"
                id="SCT0@EVENT0-CTRL@MATCHMEM"
                offset="[20]"/>
         <field description="Direction qualifier for event generation. This field only applies when the counters are operating in BIDIR mode. If BIDIR = 0, the SCT ignores this field. Value 0x3 is reserved."
                format="enum"
                enum="d1e126813"
                id="SCT0@EVENT0-CTRL@DIRECTION"
                offset="[22:21]"/>
      </register>
      <register description="SCT event state register 0" format="hex0x" id="SCT0@EVENT1-STATE"
                offset="0x308"
                size="4">
         <field description="If bit m is one, event n happens in state m of the counter selected by the HEVENT bit (n = event number, m = state number; state 0 = bit 0, state 1= bit 1, etc.). The number of bits = number of states in this SCT."
                format="hex0x"
                id="SCT0@EVENT1-STATE@STATEMSKn"
                offset="[15:0]"/>
      </register>
      <register description="SCT event control register 0" format="hex0x" id="SCT0@EVENT1-CTRL"
                offset="0x30c"
                size="4">
         <field description="Selects the Match register associated with this event (if any). A match can occur only when the counter selected by the HEVENT bit is running."
                format="hex0x"
                id="SCT0@EVENT1-CTRL@MATCHSEL"
                offset="[3:0]"/>
         <field description="Select L/H counter. Do not set this bit if UNIFY = 1."
                format="enum"
                enum="d1e126480"
                id="SCT0@EVENT1-CTRL@HEVENT"
                offset="[4]"/>
         <field description="Input/output select" format="enum" enum="d1e126526"
                id="SCT0@EVENT1-CTRL@OUTSEL"
                offset="[5]"/>
         <field description="Selects the input or output signal number associated with this event (if any). Do not select an input in this register if CKMODE is 1x. In this case the clock input is an implicit ingredient of every event."
                format="hex0x"
                id="SCT0@EVENT1-CTRL@IOSEL"
                offset="[9:6]"/>
         <field description="Selects the I/O condition for event n. (The detection of edges on outputs lag the conditions that switch the outputs by one SCT clock). In order to guarantee proper edge/state detection, an input must have a minimum pulse width of at least one SCT clock period ."
                format="enum"
                enum="d1e126590"
                id="SCT0@EVENT1-CTRL@IOCOND"
                offset="[11:10]"/>
         <field description="Selects how the specified match and I/O condition are used and combined."
                format="enum"
                enum="d1e126661"
                id="SCT0@EVENT1-CTRL@COMBMODE"
                offset="[13:12]"/>
         <field description="This bit controls how the STATEV value modifies the state selected by HEVENT when this event is the highest-numbered event occurring for that state."
                format="enum"
                enum="d1e126731"
                id="SCT0@EVENT1-CTRL@STATELD"
                offset="[14]"/>
         <field description="This value is loaded into or added to the state selected by HEVENT, depending on STATELD, when this event is the highest-numbered event occurring for that state. If STATELD and STATEV are both zero, there is no change to the STATE value."
                format="hex0x"
                id="SCT0@EVENT1-CTRL@STATEV"
                offset="[19:15]"/>
         <field description="If this bit is one and the COMBMODE field specifies a match component to the triggering of this event, then a match is considered to be active whenever the counter value is GREATER THAN OR EQUAL TO the value specified in the match register when counting up, LESS THEN OR EQUAL TO the match value when counting down. If this bit is zero, a match is only be active during the cycle when the counter is equal to the match value."
                format="hex0x"
                id="SCT0@EVENT1-CTRL@MATCHMEM"
                offset="[20]"/>
         <field description="Direction qualifier for event generation. This field only applies when the counters are operating in BIDIR mode. If BIDIR = 0, the SCT ignores this field. Value 0x3 is reserved."
                format="enum"
                enum="d1e126813"
                id="SCT0@EVENT1-CTRL@DIRECTION"
                offset="[22:21]"/>
      </register>
      <register description="SCT event state register 0" format="hex0x" id="SCT0@EVENT2-STATE"
                offset="0x310"
                size="4">
         <field description="If bit m is one, event n happens in state m of the counter selected by the HEVENT bit (n = event number, m = state number; state 0 = bit 0, state 1= bit 1, etc.). The number of bits = number of states in this SCT."
                format="hex0x"
                id="SCT0@EVENT2-STATE@STATEMSKn"
                offset="[15:0]"/>
      </register>
      <register description="SCT event control register 0" format="hex0x" id="SCT0@EVENT2-CTRL"
                offset="0x314"
                size="4">
         <field description="Selects the Match register associated with this event (if any). A match can occur only when the counter selected by the HEVENT bit is running."
                format="hex0x"
                id="SCT0@EVENT2-CTRL@MATCHSEL"
                offset="[3:0]"/>
         <field description="Select L/H counter. Do not set this bit if UNIFY = 1."
                format="enum"
                enum="d1e126480"
                id="SCT0@EVENT2-CTRL@HEVENT"
                offset="[4]"/>
         <field description="Input/output select" format="enum" enum="d1e126526"
                id="SCT0@EVENT2-CTRL@OUTSEL"
                offset="[5]"/>
         <field description="Selects the input or output signal number associated with this event (if any). Do not select an input in this register if CKMODE is 1x. In this case the clock input is an implicit ingredient of every event."
                format="hex0x"
                id="SCT0@EVENT2-CTRL@IOSEL"
                offset="[9:6]"/>
         <field description="Selects the I/O condition for event n. (The detection of edges on outputs lag the conditions that switch the outputs by one SCT clock). In order to guarantee proper edge/state detection, an input must have a minimum pulse width of at least one SCT clock period ."
                format="enum"
                enum="d1e126590"
                id="SCT0@EVENT2-CTRL@IOCOND"
                offset="[11:10]"/>
         <field description="Selects how the specified match and I/O condition are used and combined."
                format="enum"
                enum="d1e126661"
                id="SCT0@EVENT2-CTRL@COMBMODE"
                offset="[13:12]"/>
         <field description="This bit controls how the STATEV value modifies the state selected by HEVENT when this event is the highest-numbered event occurring for that state."
                format="enum"
                enum="d1e126731"
                id="SCT0@EVENT2-CTRL@STATELD"
                offset="[14]"/>
         <field description="This value is loaded into or added to the state selected by HEVENT, depending on STATELD, when this event is the highest-numbered event occurring for that state. If STATELD and STATEV are both zero, there is no change to the STATE value."
                format="hex0x"
                id="SCT0@EVENT2-CTRL@STATEV"
                offset="[19:15]"/>
         <field description="If this bit is one and the COMBMODE field specifies a match component to the triggering of this event, then a match is considered to be active whenever the counter value is GREATER THAN OR EQUAL TO the value specified in the match register when counting up, LESS THEN OR EQUAL TO the match value when counting down. If this bit is zero, a match is only be active during the cycle when the counter is equal to the match value."
                format="hex0x"
                id="SCT0@EVENT2-CTRL@MATCHMEM"
                offset="[20]"/>
         <field description="Direction qualifier for event generation. This field only applies when the counters are operating in BIDIR mode. If BIDIR = 0, the SCT ignores this field. Value 0x3 is reserved."
                format="enum"
                enum="d1e126813"
                id="SCT0@EVENT2-CTRL@DIRECTION"
                offset="[22:21]"/>
      </register>
      <register description="SCT event state register 0" format="hex0x" id="SCT0@EVENT3-STATE"
                offset="0x318"
                size="4">
         <field description="If bit m is one, event n happens in state m of the counter selected by the HEVENT bit (n = event number, m = state number; state 0 = bit 0, state 1= bit 1, etc.). The number of bits = number of states in this SCT."
                format="hex0x"
                id="SCT0@EVENT3-STATE@STATEMSKn"
                offset="[15:0]"/>
      </register>
      <register description="SCT event control register 0" format="hex0x" id="SCT0@EVENT3-CTRL"
                offset="0x31c"
                size="4">
         <field description="Selects the Match register associated with this event (if any). A match can occur only when the counter selected by the HEVENT bit is running."
                format="hex0x"
                id="SCT0@EVENT3-CTRL@MATCHSEL"
                offset="[3:0]"/>
         <field description="Select L/H counter. Do not set this bit if UNIFY = 1."
                format="enum"
                enum="d1e126480"
                id="SCT0@EVENT3-CTRL@HEVENT"
                offset="[4]"/>
         <field description="Input/output select" format="enum" enum="d1e126526"
                id="SCT0@EVENT3-CTRL@OUTSEL"
                offset="[5]"/>
         <field description="Selects the input or output signal number associated with this event (if any). Do not select an input in this register if CKMODE is 1x. In this case the clock input is an implicit ingredient of every event."
                format="hex0x"
                id="SCT0@EVENT3-CTRL@IOSEL"
                offset="[9:6]"/>
         <field description="Selects the I/O condition for event n. (The detection of edges on outputs lag the conditions that switch the outputs by one SCT clock). In order to guarantee proper edge/state detection, an input must have a minimum pulse width of at least one SCT clock period ."
                format="enum"
                enum="d1e126590"
                id="SCT0@EVENT3-CTRL@IOCOND"
                offset="[11:10]"/>
         <field description="Selects how the specified match and I/O condition are used and combined."
                format="enum"
                enum="d1e126661"
                id="SCT0@EVENT3-CTRL@COMBMODE"
                offset="[13:12]"/>
         <field description="This bit controls how the STATEV value modifies the state selected by HEVENT when this event is the highest-numbered event occurring for that state."
                format="enum"
                enum="d1e126731"
                id="SCT0@EVENT3-CTRL@STATELD"
                offset="[14]"/>
         <field description="This value is loaded into or added to the state selected by HEVENT, depending on STATELD, when this event is the highest-numbered event occurring for that state. If STATELD and STATEV are both zero, there is no change to the STATE value."
                format="hex0x"
                id="SCT0@EVENT3-CTRL@STATEV"
                offset="[19:15]"/>
         <field description="If this bit is one and the COMBMODE field specifies a match component to the triggering of this event, then a match is considered to be active whenever the counter value is GREATER THAN OR EQUAL TO the value specified in the match register when counting up, LESS THEN OR EQUAL TO the match value when counting down. If this bit is zero, a match is only be active during the cycle when the counter is equal to the match value."
                format="hex0x"
                id="SCT0@EVENT3-CTRL@MATCHMEM"
                offset="[20]"/>
         <field description="Direction qualifier for event generation. This field only applies when the counters are operating in BIDIR mode. If BIDIR = 0, the SCT ignores this field. Value 0x3 is reserved."
                format="enum"
                enum="d1e126813"
                id="SCT0@EVENT3-CTRL@DIRECTION"
                offset="[22:21]"/>
      </register>
      <register description="SCT event state register 0" format="hex0x" id="SCT0@EVENT4-STATE"
                offset="0x320"
                size="4">
         <field description="If bit m is one, event n happens in state m of the counter selected by the HEVENT bit (n = event number, m = state number; state 0 = bit 0, state 1= bit 1, etc.). The number of bits = number of states in this SCT."
                format="hex0x"
                id="SCT0@EVENT4-STATE@STATEMSKn"
                offset="[15:0]"/>
      </register>
      <register description="SCT event control register 0" format="hex0x" id="SCT0@EVENT4-CTRL"
                offset="0x324"
                size="4">
         <field description="Selects the Match register associated with this event (if any). A match can occur only when the counter selected by the HEVENT bit is running."
                format="hex0x"
                id="SCT0@EVENT4-CTRL@MATCHSEL"
                offset="[3:0]"/>
         <field description="Select L/H counter. Do not set this bit if UNIFY = 1."
                format="enum"
                enum="d1e126480"
                id="SCT0@EVENT4-CTRL@HEVENT"
                offset="[4]"/>
         <field description="Input/output select" format="enum" enum="d1e126526"
                id="SCT0@EVENT4-CTRL@OUTSEL"
                offset="[5]"/>
         <field description="Selects the input or output signal number associated with this event (if any). Do not select an input in this register if CKMODE is 1x. In this case the clock input is an implicit ingredient of every event."
                format="hex0x"
                id="SCT0@EVENT4-CTRL@IOSEL"
                offset="[9:6]"/>
         <field description="Selects the I/O condition for event n. (The detection of edges on outputs lag the conditions that switch the outputs by one SCT clock). In order to guarantee proper edge/state detection, an input must have a minimum pulse width of at least one SCT clock period ."
                format="enum"
                enum="d1e126590"
                id="SCT0@EVENT4-CTRL@IOCOND"
                offset="[11:10]"/>
         <field description="Selects how the specified match and I/O condition are used and combined."
                format="enum"
                enum="d1e126661"
                id="SCT0@EVENT4-CTRL@COMBMODE"
                offset="[13:12]"/>
         <field description="This bit controls how the STATEV value modifies the state selected by HEVENT when this event is the highest-numbered event occurring for that state."
                format="enum"
                enum="d1e126731"
                id="SCT0@EVENT4-CTRL@STATELD"
                offset="[14]"/>
         <field description="This value is loaded into or added to the state selected by HEVENT, depending on STATELD, when this event is the highest-numbered event occurring for that state. If STATELD and STATEV are both zero, there is no change to the STATE value."
                format="hex0x"
                id="SCT0@EVENT4-CTRL@STATEV"
                offset="[19:15]"/>
         <field description="If this bit is one and the COMBMODE field specifies a match component to the triggering of this event, then a match is considered to be active whenever the counter value is GREATER THAN OR EQUAL TO the value specified in the match register when counting up, LESS THEN OR EQUAL TO the match value when counting down. If this bit is zero, a match is only be active during the cycle when the counter is equal to the match value."
                format="hex0x"
                id="SCT0@EVENT4-CTRL@MATCHMEM"
                offset="[20]"/>
         <field description="Direction qualifier for event generation. This field only applies when the counters are operating in BIDIR mode. If BIDIR = 0, the SCT ignores this field. Value 0x3 is reserved."
                format="enum"
                enum="d1e126813"
                id="SCT0@EVENT4-CTRL@DIRECTION"
                offset="[22:21]"/>
      </register>
      <register description="SCT event state register 0" format="hex0x" id="SCT0@EVENT5-STATE"
                offset="0x328"
                size="4">
         <field description="If bit m is one, event n happens in state m of the counter selected by the HEVENT bit (n = event number, m = state number; state 0 = bit 0, state 1= bit 1, etc.). The number of bits = number of states in this SCT."
                format="hex0x"
                id="SCT0@EVENT5-STATE@STATEMSKn"
                offset="[15:0]"/>
      </register>
      <register description="SCT event control register 0" format="hex0x" id="SCT0@EVENT5-CTRL"
                offset="0x32c"
                size="4">
         <field description="Selects the Match register associated with this event (if any). A match can occur only when the counter selected by the HEVENT bit is running."
                format="hex0x"
                id="SCT0@EVENT5-CTRL@MATCHSEL"
                offset="[3:0]"/>
         <field description="Select L/H counter. Do not set this bit if UNIFY = 1."
                format="enum"
                enum="d1e126480"
                id="SCT0@EVENT5-CTRL@HEVENT"
                offset="[4]"/>
         <field description="Input/output select" format="enum" enum="d1e126526"
                id="SCT0@EVENT5-CTRL@OUTSEL"
                offset="[5]"/>
         <field description="Selects the input or output signal number associated with this event (if any). Do not select an input in this register if CKMODE is 1x. In this case the clock input is an implicit ingredient of every event."
                format="hex0x"
                id="SCT0@EVENT5-CTRL@IOSEL"
                offset="[9:6]"/>
         <field description="Selects the I/O condition for event n. (The detection of edges on outputs lag the conditions that switch the outputs by one SCT clock). In order to guarantee proper edge/state detection, an input must have a minimum pulse width of at least one SCT clock period ."
                format="enum"
                enum="d1e126590"
                id="SCT0@EVENT5-CTRL@IOCOND"
                offset="[11:10]"/>
         <field description="Selects how the specified match and I/O condition are used and combined."
                format="enum"
                enum="d1e126661"
                id="SCT0@EVENT5-CTRL@COMBMODE"
                offset="[13:12]"/>
         <field description="This bit controls how the STATEV value modifies the state selected by HEVENT when this event is the highest-numbered event occurring for that state."
                format="enum"
                enum="d1e126731"
                id="SCT0@EVENT5-CTRL@STATELD"
                offset="[14]"/>
         <field description="This value is loaded into or added to the state selected by HEVENT, depending on STATELD, when this event is the highest-numbered event occurring for that state. If STATELD and STATEV are both zero, there is no change to the STATE value."
                format="hex0x"
                id="SCT0@EVENT5-CTRL@STATEV"
                offset="[19:15]"/>
         <field description="If this bit is one and the COMBMODE field specifies a match component to the triggering of this event, then a match is considered to be active whenever the counter value is GREATER THAN OR EQUAL TO the value specified in the match register when counting up, LESS THEN OR EQUAL TO the match value when counting down. If this bit is zero, a match is only be active during the cycle when the counter is equal to the match value."
                format="hex0x"
                id="SCT0@EVENT5-CTRL@MATCHMEM"
                offset="[20]"/>
         <field description="Direction qualifier for event generation. This field only applies when the counters are operating in BIDIR mode. If BIDIR = 0, the SCT ignores this field. Value 0x3 is reserved."
                format="enum"
                enum="d1e126813"
                id="SCT0@EVENT5-CTRL@DIRECTION"
                offset="[22:21]"/>
      </register>
      <register description="SCT event state register 0" format="hex0x" id="SCT0@EVENT6-STATE"
                offset="0x330"
                size="4">
         <field description="If bit m is one, event n happens in state m of the counter selected by the HEVENT bit (n = event number, m = state number; state 0 = bit 0, state 1= bit 1, etc.). The number of bits = number of states in this SCT."
                format="hex0x"
                id="SCT0@EVENT6-STATE@STATEMSKn"
                offset="[15:0]"/>
      </register>
      <register description="SCT event control register 0" format="hex0x" id="SCT0@EVENT6-CTRL"
                offset="0x334"
                size="4">
         <field description="Selects the Match register associated with this event (if any). A match can occur only when the counter selected by the HEVENT bit is running."
                format="hex0x"
                id="SCT0@EVENT6-CTRL@MATCHSEL"
                offset="[3:0]"/>
         <field description="Select L/H counter. Do not set this bit if UNIFY = 1."
                format="enum"
                enum="d1e126480"
                id="SCT0@EVENT6-CTRL@HEVENT"
                offset="[4]"/>
         <field description="Input/output select" format="enum" enum="d1e126526"
                id="SCT0@EVENT6-CTRL@OUTSEL"
                offset="[5]"/>
         <field description="Selects the input or output signal number associated with this event (if any). Do not select an input in this register if CKMODE is 1x. In this case the clock input is an implicit ingredient of every event."
                format="hex0x"
                id="SCT0@EVENT6-CTRL@IOSEL"
                offset="[9:6]"/>
         <field description="Selects the I/O condition for event n. (The detection of edges on outputs lag the conditions that switch the outputs by one SCT clock). In order to guarantee proper edge/state detection, an input must have a minimum pulse width of at least one SCT clock period ."
                format="enum"
                enum="d1e126590"
                id="SCT0@EVENT6-CTRL@IOCOND"
                offset="[11:10]"/>
         <field description="Selects how the specified match and I/O condition are used and combined."
                format="enum"
                enum="d1e126661"
                id="SCT0@EVENT6-CTRL@COMBMODE"
                offset="[13:12]"/>
         <field description="This bit controls how the STATEV value modifies the state selected by HEVENT when this event is the highest-numbered event occurring for that state."
                format="enum"
                enum="d1e126731"
                id="SCT0@EVENT6-CTRL@STATELD"
                offset="[14]"/>
         <field description="This value is loaded into or added to the state selected by HEVENT, depending on STATELD, when this event is the highest-numbered event occurring for that state. If STATELD and STATEV are both zero, there is no change to the STATE value."
                format="hex0x"
                id="SCT0@EVENT6-CTRL@STATEV"
                offset="[19:15]"/>
         <field description="If this bit is one and the COMBMODE field specifies a match component to the triggering of this event, then a match is considered to be active whenever the counter value is GREATER THAN OR EQUAL TO the value specified in the match register when counting up, LESS THEN OR EQUAL TO the match value when counting down. If this bit is zero, a match is only be active during the cycle when the counter is equal to the match value."
                format="hex0x"
                id="SCT0@EVENT6-CTRL@MATCHMEM"
                offset="[20]"/>
         <field description="Direction qualifier for event generation. This field only applies when the counters are operating in BIDIR mode. If BIDIR = 0, the SCT ignores this field. Value 0x3 is reserved."
                format="enum"
                enum="d1e126813"
                id="SCT0@EVENT6-CTRL@DIRECTION"
                offset="[22:21]"/>
      </register>
      <register description="SCT event state register 0" format="hex0x" id="SCT0@EVENT7-STATE"
                offset="0x338"
                size="4">
         <field description="If bit m is one, event n happens in state m of the counter selected by the HEVENT bit (n = event number, m = state number; state 0 = bit 0, state 1= bit 1, etc.). The number of bits = number of states in this SCT."
                format="hex0x"
                id="SCT0@EVENT7-STATE@STATEMSKn"
                offset="[15:0]"/>
      </register>
      <register description="SCT event control register 0" format="hex0x" id="SCT0@EVENT7-CTRL"
                offset="0x33c"
                size="4">
         <field description="Selects the Match register associated with this event (if any). A match can occur only when the counter selected by the HEVENT bit is running."
                format="hex0x"
                id="SCT0@EVENT7-CTRL@MATCHSEL"
                offset="[3:0]"/>
         <field description="Select L/H counter. Do not set this bit if UNIFY = 1."
                format="enum"
                enum="d1e126480"
                id="SCT0@EVENT7-CTRL@HEVENT"
                offset="[4]"/>
         <field description="Input/output select" format="enum" enum="d1e126526"
                id="SCT0@EVENT7-CTRL@OUTSEL"
                offset="[5]"/>
         <field description="Selects the input or output signal number associated with this event (if any). Do not select an input in this register if CKMODE is 1x. In this case the clock input is an implicit ingredient of every event."
                format="hex0x"
                id="SCT0@EVENT7-CTRL@IOSEL"
                offset="[9:6]"/>
         <field description="Selects the I/O condition for event n. (The detection of edges on outputs lag the conditions that switch the outputs by one SCT clock). In order to guarantee proper edge/state detection, an input must have a minimum pulse width of at least one SCT clock period ."
                format="enum"
                enum="d1e126590"
                id="SCT0@EVENT7-CTRL@IOCOND"
                offset="[11:10]"/>
         <field description="Selects how the specified match and I/O condition are used and combined."
                format="enum"
                enum="d1e126661"
                id="SCT0@EVENT7-CTRL@COMBMODE"
                offset="[13:12]"/>
         <field description="This bit controls how the STATEV value modifies the state selected by HEVENT when this event is the highest-numbered event occurring for that state."
                format="enum"
                enum="d1e126731"
                id="SCT0@EVENT7-CTRL@STATELD"
                offset="[14]"/>
         <field description="This value is loaded into or added to the state selected by HEVENT, depending on STATELD, when this event is the highest-numbered event occurring for that state. If STATELD and STATEV are both zero, there is no change to the STATE value."
                format="hex0x"
                id="SCT0@EVENT7-CTRL@STATEV"
                offset="[19:15]"/>
         <field description="If this bit is one and the COMBMODE field specifies a match component to the triggering of this event, then a match is considered to be active whenever the counter value is GREATER THAN OR EQUAL TO the value specified in the match register when counting up, LESS THEN OR EQUAL TO the match value when counting down. If this bit is zero, a match is only be active during the cycle when the counter is equal to the match value."
                format="hex0x"
                id="SCT0@EVENT7-CTRL@MATCHMEM"
                offset="[20]"/>
         <field description="Direction qualifier for event generation. This field only applies when the counters are operating in BIDIR mode. If BIDIR = 0, the SCT ignores this field. Value 0x3 is reserved."
                format="enum"
                enum="d1e126813"
                id="SCT0@EVENT7-CTRL@DIRECTION"
                offset="[22:21]"/>
      </register>
      <register description="SCT event state register 0" format="hex0x" id="SCT0@EVENT8-STATE"
                offset="0x340"
                size="4">
         <field description="If bit m is one, event n happens in state m of the counter selected by the HEVENT bit (n = event number, m = state number; state 0 = bit 0, state 1= bit 1, etc.). The number of bits = number of states in this SCT."
                format="hex0x"
                id="SCT0@EVENT8-STATE@STATEMSKn"
                offset="[15:0]"/>
      </register>
      <register description="SCT event control register 0" format="hex0x" id="SCT0@EVENT8-CTRL"
                offset="0x344"
                size="4">
         <field description="Selects the Match register associated with this event (if any). A match can occur only when the counter selected by the HEVENT bit is running."
                format="hex0x"
                id="SCT0@EVENT8-CTRL@MATCHSEL"
                offset="[3:0]"/>
         <field description="Select L/H counter. Do not set this bit if UNIFY = 1."
                format="enum"
                enum="d1e126480"
                id="SCT0@EVENT8-CTRL@HEVENT"
                offset="[4]"/>
         <field description="Input/output select" format="enum" enum="d1e126526"
                id="SCT0@EVENT8-CTRL@OUTSEL"
                offset="[5]"/>
         <field description="Selects the input or output signal number associated with this event (if any). Do not select an input in this register if CKMODE is 1x. In this case the clock input is an implicit ingredient of every event."
                format="hex0x"
                id="SCT0@EVENT8-CTRL@IOSEL"
                offset="[9:6]"/>
         <field description="Selects the I/O condition for event n. (The detection of edges on outputs lag the conditions that switch the outputs by one SCT clock). In order to guarantee proper edge/state detection, an input must have a minimum pulse width of at least one SCT clock period ."
                format="enum"
                enum="d1e126590"
                id="SCT0@EVENT8-CTRL@IOCOND"
                offset="[11:10]"/>
         <field description="Selects how the specified match and I/O condition are used and combined."
                format="enum"
                enum="d1e126661"
                id="SCT0@EVENT8-CTRL@COMBMODE"
                offset="[13:12]"/>
         <field description="This bit controls how the STATEV value modifies the state selected by HEVENT when this event is the highest-numbered event occurring for that state."
                format="enum"
                enum="d1e126731"
                id="SCT0@EVENT8-CTRL@STATELD"
                offset="[14]"/>
         <field description="This value is loaded into or added to the state selected by HEVENT, depending on STATELD, when this event is the highest-numbered event occurring for that state. If STATELD and STATEV are both zero, there is no change to the STATE value."
                format="hex0x"
                id="SCT0@EVENT8-CTRL@STATEV"
                offset="[19:15]"/>
         <field description="If this bit is one and the COMBMODE field specifies a match component to the triggering of this event, then a match is considered to be active whenever the counter value is GREATER THAN OR EQUAL TO the value specified in the match register when counting up, LESS THEN OR EQUAL TO the match value when counting down. If this bit is zero, a match is only be active during the cycle when the counter is equal to the match value."
                format="hex0x"
                id="SCT0@EVENT8-CTRL@MATCHMEM"
                offset="[20]"/>
         <field description="Direction qualifier for event generation. This field only applies when the counters are operating in BIDIR mode. If BIDIR = 0, the SCT ignores this field. Value 0x3 is reserved."
                format="enum"
                enum="d1e126813"
                id="SCT0@EVENT8-CTRL@DIRECTION"
                offset="[22:21]"/>
      </register>
      <register description="SCT event state register 0" format="hex0x" id="SCT0@EVENT9-STATE"
                offset="0x348"
                size="4">
         <field description="If bit m is one, event n happens in state m of the counter selected by the HEVENT bit (n = event number, m = state number; state 0 = bit 0, state 1= bit 1, etc.). The number of bits = number of states in this SCT."
                format="hex0x"
                id="SCT0@EVENT9-STATE@STATEMSKn"
                offset="[15:0]"/>
      </register>
      <register description="SCT event control register 0" format="hex0x" id="SCT0@EVENT9-CTRL"
                offset="0x34c"
                size="4">
         <field description="Selects the Match register associated with this event (if any). A match can occur only when the counter selected by the HEVENT bit is running."
                format="hex0x"
                id="SCT0@EVENT9-CTRL@MATCHSEL"
                offset="[3:0]"/>
         <field description="Select L/H counter. Do not set this bit if UNIFY = 1."
                format="enum"
                enum="d1e126480"
                id="SCT0@EVENT9-CTRL@HEVENT"
                offset="[4]"/>
         <field description="Input/output select" format="enum" enum="d1e126526"
                id="SCT0@EVENT9-CTRL@OUTSEL"
                offset="[5]"/>
         <field description="Selects the input or output signal number associated with this event (if any). Do not select an input in this register if CKMODE is 1x. In this case the clock input is an implicit ingredient of every event."
                format="hex0x"
                id="SCT0@EVENT9-CTRL@IOSEL"
                offset="[9:6]"/>
         <field description="Selects the I/O condition for event n. (The detection of edges on outputs lag the conditions that switch the outputs by one SCT clock). In order to guarantee proper edge/state detection, an input must have a minimum pulse width of at least one SCT clock period ."
                format="enum"
                enum="d1e126590"
                id="SCT0@EVENT9-CTRL@IOCOND"
                offset="[11:10]"/>
         <field description="Selects how the specified match and I/O condition are used and combined."
                format="enum"
                enum="d1e126661"
                id="SCT0@EVENT9-CTRL@COMBMODE"
                offset="[13:12]"/>
         <field description="This bit controls how the STATEV value modifies the state selected by HEVENT when this event is the highest-numbered event occurring for that state."
                format="enum"
                enum="d1e126731"
                id="SCT0@EVENT9-CTRL@STATELD"
                offset="[14]"/>
         <field description="This value is loaded into or added to the state selected by HEVENT, depending on STATELD, when this event is the highest-numbered event occurring for that state. If STATELD and STATEV are both zero, there is no change to the STATE value."
                format="hex0x"
                id="SCT0@EVENT9-CTRL@STATEV"
                offset="[19:15]"/>
         <field description="If this bit is one and the COMBMODE field specifies a match component to the triggering of this event, then a match is considered to be active whenever the counter value is GREATER THAN OR EQUAL TO the value specified in the match register when counting up, LESS THEN OR EQUAL TO the match value when counting down. If this bit is zero, a match is only be active during the cycle when the counter is equal to the match value."
                format="hex0x"
                id="SCT0@EVENT9-CTRL@MATCHMEM"
                offset="[20]"/>
         <field description="Direction qualifier for event generation. This field only applies when the counters are operating in BIDIR mode. If BIDIR = 0, the SCT ignores this field. Value 0x3 is reserved."
                format="enum"
                enum="d1e126813"
                id="SCT0@EVENT9-CTRL@DIRECTION"
                offset="[22:21]"/>
      </register>
      <register description="SCT output 0 set register" format="hex0x" id="SCT0@OUT0-SET"
                offset="0x500"
                size="4">
         <field description="A 1 in bit m selects event m to set output n (or clear it if SETCLRn = 0x1 or 0x2) output 0 = bit 0, output 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register."
                format="hex0x"
                id="SCT0@OUT0-SET@SET"
                offset="[15:0]"/>
      </register>
      <register description="SCT output 0 clear register" format="hex0x" id="SCT0@OUT0-CLR"
                offset="0x504"
                size="4">
         <field description="A 1 in bit m selects event m to clear output n (or set it if SETCLRn = 0x1 or 0x2) event 0 = bit 0, event 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register."
                format="hex0x"
                id="SCT0@OUT0-CLR@CLR"
                offset="[15:0]"/>
      </register>
      <register description="SCT output 0 set register" format="hex0x" id="SCT0@OUT1-SET"
                offset="0x508"
                size="4">
         <field description="A 1 in bit m selects event m to set output n (or clear it if SETCLRn = 0x1 or 0x2) output 0 = bit 0, output 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register."
                format="hex0x"
                id="SCT0@OUT1-SET@SET"
                offset="[15:0]"/>
      </register>
      <register description="SCT output 0 clear register" format="hex0x" id="SCT0@OUT1-CLR"
                offset="0x50c"
                size="4">
         <field description="A 1 in bit m selects event m to clear output n (or set it if SETCLRn = 0x1 or 0x2) event 0 = bit 0, event 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register."
                format="hex0x"
                id="SCT0@OUT1-CLR@CLR"
                offset="[15:0]"/>
      </register>
      <register description="SCT output 0 set register" format="hex0x" id="SCT0@OUT2-SET"
                offset="0x510"
                size="4">
         <field description="A 1 in bit m selects event m to set output n (or clear it if SETCLRn = 0x1 or 0x2) output 0 = bit 0, output 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register."
                format="hex0x"
                id="SCT0@OUT2-SET@SET"
                offset="[15:0]"/>
      </register>
      <register description="SCT output 0 clear register" format="hex0x" id="SCT0@OUT2-CLR"
                offset="0x514"
                size="4">
         <field description="A 1 in bit m selects event m to clear output n (or set it if SETCLRn = 0x1 or 0x2) event 0 = bit 0, event 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register."
                format="hex0x"
                id="SCT0@OUT2-CLR@CLR"
                offset="[15:0]"/>
      </register>
      <register description="SCT output 0 set register" format="hex0x" id="SCT0@OUT3-SET"
                offset="0x518"
                size="4">
         <field description="A 1 in bit m selects event m to set output n (or clear it if SETCLRn = 0x1 or 0x2) output 0 = bit 0, output 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register."
                format="hex0x"
                id="SCT0@OUT3-SET@SET"
                offset="[15:0]"/>
      </register>
      <register description="SCT output 0 clear register" format="hex0x" id="SCT0@OUT3-CLR"
                offset="0x51c"
                size="4">
         <field description="A 1 in bit m selects event m to clear output n (or set it if SETCLRn = 0x1 or 0x2) event 0 = bit 0, event 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register."
                format="hex0x"
                id="SCT0@OUT3-CLR@CLR"
                offset="[15:0]"/>
      </register>
      <register description="SCT output 0 set register" format="hex0x" id="SCT0@OUT4-SET"
                offset="0x520"
                size="4">
         <field description="A 1 in bit m selects event m to set output n (or clear it if SETCLRn = 0x1 or 0x2) output 0 = bit 0, output 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register."
                format="hex0x"
                id="SCT0@OUT4-SET@SET"
                offset="[15:0]"/>
      </register>
      <register description="SCT output 0 clear register" format="hex0x" id="SCT0@OUT4-CLR"
                offset="0x524"
                size="4">
         <field description="A 1 in bit m selects event m to clear output n (or set it if SETCLRn = 0x1 or 0x2) event 0 = bit 0, event 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register."
                format="hex0x"
                id="SCT0@OUT4-CLR@CLR"
                offset="[15:0]"/>
      </register>
      <register description="SCT output 0 set register" format="hex0x" id="SCT0@OUT5-SET"
                offset="0x528"
                size="4">
         <field description="A 1 in bit m selects event m to set output n (or clear it if SETCLRn = 0x1 or 0x2) output 0 = bit 0, output 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register."
                format="hex0x"
                id="SCT0@OUT5-SET@SET"
                offset="[15:0]"/>
      </register>
      <register description="SCT output 0 clear register" format="hex0x" id="SCT0@OUT5-CLR"
                offset="0x52c"
                size="4">
         <field description="A 1 in bit m selects event m to clear output n (or set it if SETCLRn = 0x1 or 0x2) event 0 = bit 0, event 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register."
                format="hex0x"
                id="SCT0@OUT5-CLR@CLR"
                offset="[15:0]"/>
      </register>
      <register description="SCT output 0 set register" format="hex0x" id="SCT0@OUT6-SET"
                offset="0x530"
                size="4">
         <field description="A 1 in bit m selects event m to set output n (or clear it if SETCLRn = 0x1 or 0x2) output 0 = bit 0, output 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register."
                format="hex0x"
                id="SCT0@OUT6-SET@SET"
                offset="[15:0]"/>
      </register>
      <register description="SCT output 0 clear register" format="hex0x" id="SCT0@OUT6-CLR"
                offset="0x534"
                size="4">
         <field description="A 1 in bit m selects event m to clear output n (or set it if SETCLRn = 0x1 or 0x2) event 0 = bit 0, event 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register."
                format="hex0x"
                id="SCT0@OUT6-CLR@CLR"
                offset="[15:0]"/>
      </register>
      <register description="SCT output 0 set register" format="hex0x" id="SCT0@OUT7-SET"
                offset="0x538"
                size="4">
         <field description="A 1 in bit m selects event m to set output n (or clear it if SETCLRn = 0x1 or 0x2) output 0 = bit 0, output 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register."
                format="hex0x"
                id="SCT0@OUT7-SET@SET"
                offset="[15:0]"/>
      </register>
      <register description="SCT output 0 clear register" format="hex0x" id="SCT0@OUT7-CLR"
                offset="0x53c"
                size="4">
         <field description="A 1 in bit m selects event m to clear output n (or set it if SETCLRn = 0x1 or 0x2) event 0 = bit 0, event 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register."
                format="hex0x"
                id="SCT0@OUT7-CLR@CLR"
                offset="[15:0]"/>
      </register>
      <register description="SCT output 0 set register" format="hex0x" id="SCT0@OUT8-SET"
                offset="0x540"
                size="4">
         <field description="A 1 in bit m selects event m to set output n (or clear it if SETCLRn = 0x1 or 0x2) output 0 = bit 0, output 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register."
                format="hex0x"
                id="SCT0@OUT8-SET@SET"
                offset="[15:0]"/>
      </register>
      <register description="SCT output 0 clear register" format="hex0x" id="SCT0@OUT8-CLR"
                offset="0x544"
                size="4">
         <field description="A 1 in bit m selects event m to clear output n (or set it if SETCLRn = 0x1 or 0x2) event 0 = bit 0, event 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register."
                format="hex0x"
                id="SCT0@OUT8-CLR@CLR"
                offset="[15:0]"/>
      </register>
      <register description="SCT output 0 set register" format="hex0x" id="SCT0@OUT9-SET"
                offset="0x548"
                size="4">
         <field description="A 1 in bit m selects event m to set output n (or clear it if SETCLRn = 0x1 or 0x2) output 0 = bit 0, output 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register."
                format="hex0x"
                id="SCT0@OUT9-SET@SET"
                offset="[15:0]"/>
      </register>
      <register description="SCT output 0 clear register" format="hex0x" id="SCT0@OUT9-CLR"
                offset="0x54c"
                size="4">
         <field description="A 1 in bit m selects event m to clear output n (or set it if SETCLRn = 0x1 or 0x2) event 0 = bit 0, event 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register."
                format="hex0x"
                id="SCT0@OUT9-CLR@CLR"
                offset="[15:0]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x Flexcomm serial communication"
               id="FLEXCOMM0"
               size="0x1000">
      <register description="Peripheral Select and Flexcomm ID register." format="hex0x"
                id="FLEXCOMM0@PSELID"
                offset="0xff8"
                size="4">
         <field description="Peripheral Select. This field is writable by software."
                format="enum"
                enum="d1e127054"
                id="FLEXCOMM0@PSELID@PERSEL"
                offset="[2:0]"/>
         <field description="Lock the peripheral select. This field is writable by software."
                format="enum"
                enum="d1e127149"
                id="FLEXCOMM0@PSELID@LOCK"
                offset="[3]"/>
         <field description="USART present indicator. This field is Read-only." format="enum"
                enum="d1e127195"
                id="FLEXCOMM0@PSELID@USARTPRESENT"
                offset="[4]"/>
         <field description="SPI present indicator. This field is Read-only." format="enum"
                enum="d1e127241"
                id="FLEXCOMM0@PSELID@SPIPRESENT"
                offset="[5]"/>
         <field description="I2C present indicator. This field is Read-only." format="enum"
                enum="d1e127287"
                id="FLEXCOMM0@PSELID@I2CPRESENT"
                offset="[6]"/>
         <field description="I 2S present indicator. This field is Read-only." format="enum"
                enum="d1e127334"
                id="FLEXCOMM0@PSELID@I2SPRESENT"
                offset="[7]"/>
         <field description="Flexcomm ID." format="hex0x" id="FLEXCOMM0@PSELID@ID"
                offset="[31:12]"/>
      </register>
      <register description="Peripheral identification register." format="hex0x"
                id="FLEXCOMM0@PID"
                offset="0xffc"
                size="4">
         <field description="Minor revision of module implementation." format="hex0x"
                id="FLEXCOMM0@PID@Minor-Rev"
                offset="[11:8]"/>
         <field description="Major revision of module implementation." format="hex0x"
                id="FLEXCOMM0@PID@Major-Rev"
                offset="[15:12]"/>
         <field description="Module identifier for the selected function." format="hex0x"
                id="FLEXCOMM0@PID@ID"
                offset="[31:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x Flexcomm serial communication"
               id="FLEXCOMM1"
               size="0x1000">
      <register description="Peripheral Select and Flexcomm ID register." format="hex0x"
                id="FLEXCOMM0@PSELID"
                offset="0xff8"
                size="4">
         <field description="Peripheral Select. This field is writable by software."
                format="enum"
                enum="d1e127054"
                id="FLEXCOMM0@PSELID@PERSEL"
                offset="[2:0]"/>
         <field description="Lock the peripheral select. This field is writable by software."
                format="enum"
                enum="d1e127149"
                id="FLEXCOMM0@PSELID@LOCK"
                offset="[3]"/>
         <field description="USART present indicator. This field is Read-only." format="enum"
                enum="d1e127195"
                id="FLEXCOMM0@PSELID@USARTPRESENT"
                offset="[4]"/>
         <field description="SPI present indicator. This field is Read-only." format="enum"
                enum="d1e127241"
                id="FLEXCOMM0@PSELID@SPIPRESENT"
                offset="[5]"/>
         <field description="I2C present indicator. This field is Read-only." format="enum"
                enum="d1e127287"
                id="FLEXCOMM0@PSELID@I2CPRESENT"
                offset="[6]"/>
         <field description="I 2S present indicator. This field is Read-only." format="enum"
                enum="d1e127334"
                id="FLEXCOMM0@PSELID@I2SPRESENT"
                offset="[7]"/>
         <field description="Flexcomm ID." format="hex0x" id="FLEXCOMM0@PSELID@ID"
                offset="[31:12]"/>
      </register>
      <register description="Peripheral identification register." format="hex0x"
                id="FLEXCOMM0@PID"
                offset="0xffc"
                size="4">
         <field description="Minor revision of module implementation." format="hex0x"
                id="FLEXCOMM0@PID@Minor-Rev"
                offset="[11:8]"/>
         <field description="Major revision of module implementation." format="hex0x"
                id="FLEXCOMM0@PID@Major-Rev"
                offset="[15:12]"/>
         <field description="Module identifier for the selected function." format="hex0x"
                id="FLEXCOMM0@PID@ID"
                offset="[31:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x Flexcomm serial communication"
               id="FLEXCOMM2"
               size="0x1000">
      <register description="Peripheral Select and Flexcomm ID register." format="hex0x"
                id="FLEXCOMM0@PSELID"
                offset="0xff8"
                size="4">
         <field description="Peripheral Select. This field is writable by software."
                format="enum"
                enum="d1e127054"
                id="FLEXCOMM0@PSELID@PERSEL"
                offset="[2:0]"/>
         <field description="Lock the peripheral select. This field is writable by software."
                format="enum"
                enum="d1e127149"
                id="FLEXCOMM0@PSELID@LOCK"
                offset="[3]"/>
         <field description="USART present indicator. This field is Read-only." format="enum"
                enum="d1e127195"
                id="FLEXCOMM0@PSELID@USARTPRESENT"
                offset="[4]"/>
         <field description="SPI present indicator. This field is Read-only." format="enum"
                enum="d1e127241"
                id="FLEXCOMM0@PSELID@SPIPRESENT"
                offset="[5]"/>
         <field description="I2C present indicator. This field is Read-only." format="enum"
                enum="d1e127287"
                id="FLEXCOMM0@PSELID@I2CPRESENT"
                offset="[6]"/>
         <field description="I 2S present indicator. This field is Read-only." format="enum"
                enum="d1e127334"
                id="FLEXCOMM0@PSELID@I2SPRESENT"
                offset="[7]"/>
         <field description="Flexcomm ID." format="hex0x" id="FLEXCOMM0@PSELID@ID"
                offset="[31:12]"/>
      </register>
      <register description="Peripheral identification register." format="hex0x"
                id="FLEXCOMM0@PID"
                offset="0xffc"
                size="4">
         <field description="Minor revision of module implementation." format="hex0x"
                id="FLEXCOMM0@PID@Minor-Rev"
                offset="[11:8]"/>
         <field description="Major revision of module implementation." format="hex0x"
                id="FLEXCOMM0@PID@Major-Rev"
                offset="[15:12]"/>
         <field description="Module identifier for the selected function." format="hex0x"
                id="FLEXCOMM0@PID@ID"
                offset="[31:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x Flexcomm serial communication"
               id="FLEXCOMM3"
               size="0x1000">
      <register description="Peripheral Select and Flexcomm ID register." format="hex0x"
                id="FLEXCOMM0@PSELID"
                offset="0xff8"
                size="4">
         <field description="Peripheral Select. This field is writable by software."
                format="enum"
                enum="d1e127054"
                id="FLEXCOMM0@PSELID@PERSEL"
                offset="[2:0]"/>
         <field description="Lock the peripheral select. This field is writable by software."
                format="enum"
                enum="d1e127149"
                id="FLEXCOMM0@PSELID@LOCK"
                offset="[3]"/>
         <field description="USART present indicator. This field is Read-only." format="enum"
                enum="d1e127195"
                id="FLEXCOMM0@PSELID@USARTPRESENT"
                offset="[4]"/>
         <field description="SPI present indicator. This field is Read-only." format="enum"
                enum="d1e127241"
                id="FLEXCOMM0@PSELID@SPIPRESENT"
                offset="[5]"/>
         <field description="I2C present indicator. This field is Read-only." format="enum"
                enum="d1e127287"
                id="FLEXCOMM0@PSELID@I2CPRESENT"
                offset="[6]"/>
         <field description="I 2S present indicator. This field is Read-only." format="enum"
                enum="d1e127334"
                id="FLEXCOMM0@PSELID@I2SPRESENT"
                offset="[7]"/>
         <field description="Flexcomm ID." format="hex0x" id="FLEXCOMM0@PSELID@ID"
                offset="[31:12]"/>
      </register>
      <register description="Peripheral identification register." format="hex0x"
                id="FLEXCOMM0@PID"
                offset="0xffc"
                size="4">
         <field description="Minor revision of module implementation." format="hex0x"
                id="FLEXCOMM0@PID@Minor-Rev"
                offset="[11:8]"/>
         <field description="Major revision of module implementation." format="hex0x"
                id="FLEXCOMM0@PID@Major-Rev"
                offset="[15:12]"/>
         <field description="Module identifier for the selected function." format="hex0x"
                id="FLEXCOMM0@PID@ID"
                offset="[31:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x Flexcomm serial communication"
               id="FLEXCOMM4"
               size="0x1000">
      <register description="Peripheral Select and Flexcomm ID register." format="hex0x"
                id="FLEXCOMM0@PSELID"
                offset="0xff8"
                size="4">
         <field description="Peripheral Select. This field is writable by software."
                format="enum"
                enum="d1e127054"
                id="FLEXCOMM0@PSELID@PERSEL"
                offset="[2:0]"/>
         <field description="Lock the peripheral select. This field is writable by software."
                format="enum"
                enum="d1e127149"
                id="FLEXCOMM0@PSELID@LOCK"
                offset="[3]"/>
         <field description="USART present indicator. This field is Read-only." format="enum"
                enum="d1e127195"
                id="FLEXCOMM0@PSELID@USARTPRESENT"
                offset="[4]"/>
         <field description="SPI present indicator. This field is Read-only." format="enum"
                enum="d1e127241"
                id="FLEXCOMM0@PSELID@SPIPRESENT"
                offset="[5]"/>
         <field description="I2C present indicator. This field is Read-only." format="enum"
                enum="d1e127287"
                id="FLEXCOMM0@PSELID@I2CPRESENT"
                offset="[6]"/>
         <field description="I 2S present indicator. This field is Read-only." format="enum"
                enum="d1e127334"
                id="FLEXCOMM0@PSELID@I2SPRESENT"
                offset="[7]"/>
         <field description="Flexcomm ID." format="hex0x" id="FLEXCOMM0@PSELID@ID"
                offset="[31:12]"/>
      </register>
      <register description="Peripheral identification register." format="hex0x"
                id="FLEXCOMM0@PID"
                offset="0xffc"
                size="4">
         <field description="Minor revision of module implementation." format="hex0x"
                id="FLEXCOMM0@PID@Minor-Rev"
                offset="[11:8]"/>
         <field description="Major revision of module implementation." format="hex0x"
                id="FLEXCOMM0@PID@Major-Rev"
                offset="[15:12]"/>
         <field description="Module identifier for the selected function." format="hex0x"
                id="FLEXCOMM0@PID@ID"
                offset="[31:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x Flexcomm serial communication"
               id="FLEXCOMM5"
               size="0x1000">
      <register description="Peripheral Select and Flexcomm ID register." format="hex0x"
                id="FLEXCOMM0@PSELID"
                offset="0xff8"
                size="4">
         <field description="Peripheral Select. This field is writable by software."
                format="enum"
                enum="d1e127054"
                id="FLEXCOMM0@PSELID@PERSEL"
                offset="[2:0]"/>
         <field description="Lock the peripheral select. This field is writable by software."
                format="enum"
                enum="d1e127149"
                id="FLEXCOMM0@PSELID@LOCK"
                offset="[3]"/>
         <field description="USART present indicator. This field is Read-only." format="enum"
                enum="d1e127195"
                id="FLEXCOMM0@PSELID@USARTPRESENT"
                offset="[4]"/>
         <field description="SPI present indicator. This field is Read-only." format="enum"
                enum="d1e127241"
                id="FLEXCOMM0@PSELID@SPIPRESENT"
                offset="[5]"/>
         <field description="I2C present indicator. This field is Read-only." format="enum"
                enum="d1e127287"
                id="FLEXCOMM0@PSELID@I2CPRESENT"
                offset="[6]"/>
         <field description="I 2S present indicator. This field is Read-only." format="enum"
                enum="d1e127334"
                id="FLEXCOMM0@PSELID@I2SPRESENT"
                offset="[7]"/>
         <field description="Flexcomm ID." format="hex0x" id="FLEXCOMM0@PSELID@ID"
                offset="[31:12]"/>
      </register>
      <register description="Peripheral identification register." format="hex0x"
                id="FLEXCOMM0@PID"
                offset="0xffc"
                size="4">
         <field description="Minor revision of module implementation." format="hex0x"
                id="FLEXCOMM0@PID@Minor-Rev"
                offset="[11:8]"/>
         <field description="Major revision of module implementation." format="hex0x"
                id="FLEXCOMM0@PID@Major-Rev"
                offset="[15:12]"/>
         <field description="Module identifier for the selected function." format="hex0x"
                id="FLEXCOMM0@PID@ID"
                offset="[31:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x Flexcomm serial communication"
               id="FLEXCOMM6"
               size="0x1000">
      <register description="Peripheral Select and Flexcomm ID register." format="hex0x"
                id="FLEXCOMM0@PSELID"
                offset="0xff8"
                size="4">
         <field description="Peripheral Select. This field is writable by software."
                format="enum"
                enum="d1e127054"
                id="FLEXCOMM0@PSELID@PERSEL"
                offset="[2:0]"/>
         <field description="Lock the peripheral select. This field is writable by software."
                format="enum"
                enum="d1e127149"
                id="FLEXCOMM0@PSELID@LOCK"
                offset="[3]"/>
         <field description="USART present indicator. This field is Read-only." format="enum"
                enum="d1e127195"
                id="FLEXCOMM0@PSELID@USARTPRESENT"
                offset="[4]"/>
         <field description="SPI present indicator. This field is Read-only." format="enum"
                enum="d1e127241"
                id="FLEXCOMM0@PSELID@SPIPRESENT"
                offset="[5]"/>
         <field description="I2C present indicator. This field is Read-only." format="enum"
                enum="d1e127287"
                id="FLEXCOMM0@PSELID@I2CPRESENT"
                offset="[6]"/>
         <field description="I 2S present indicator. This field is Read-only." format="enum"
                enum="d1e127334"
                id="FLEXCOMM0@PSELID@I2SPRESENT"
                offset="[7]"/>
         <field description="Flexcomm ID." format="hex0x" id="FLEXCOMM0@PSELID@ID"
                offset="[31:12]"/>
      </register>
      <register description="Peripheral identification register." format="hex0x"
                id="FLEXCOMM0@PID"
                offset="0xffc"
                size="4">
         <field description="Minor revision of module implementation." format="hex0x"
                id="FLEXCOMM0@PID@Minor-Rev"
                offset="[11:8]"/>
         <field description="Major revision of module implementation." format="hex0x"
                id="FLEXCOMM0@PID@Major-Rev"
                offset="[15:12]"/>
         <field description="Module identifier for the selected function." format="hex0x"
                id="FLEXCOMM0@PID@ID"
                offset="[31:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x Flexcomm serial communication"
               id="FLEXCOMM7"
               size="0x1000">
      <register description="Peripheral Select and Flexcomm ID register." format="hex0x"
                id="FLEXCOMM0@PSELID"
                offset="0xff8"
                size="4">
         <field description="Peripheral Select. This field is writable by software."
                format="enum"
                enum="d1e127054"
                id="FLEXCOMM0@PSELID@PERSEL"
                offset="[2:0]"/>
         <field description="Lock the peripheral select. This field is writable by software."
                format="enum"
                enum="d1e127149"
                id="FLEXCOMM0@PSELID@LOCK"
                offset="[3]"/>
         <field description="USART present indicator. This field is Read-only." format="enum"
                enum="d1e127195"
                id="FLEXCOMM0@PSELID@USARTPRESENT"
                offset="[4]"/>
         <field description="SPI present indicator. This field is Read-only." format="enum"
                enum="d1e127241"
                id="FLEXCOMM0@PSELID@SPIPRESENT"
                offset="[5]"/>
         <field description="I2C present indicator. This field is Read-only." format="enum"
                enum="d1e127287"
                id="FLEXCOMM0@PSELID@I2CPRESENT"
                offset="[6]"/>
         <field description="I 2S present indicator. This field is Read-only." format="enum"
                enum="d1e127334"
                id="FLEXCOMM0@PSELID@I2SPRESENT"
                offset="[7]"/>
         <field description="Flexcomm ID." format="hex0x" id="FLEXCOMM0@PSELID@ID"
                offset="[31:12]"/>
      </register>
      <register description="Peripheral identification register." format="hex0x"
                id="FLEXCOMM0@PID"
                offset="0xffc"
                size="4">
         <field description="Minor revision of module implementation." format="hex0x"
                id="FLEXCOMM0@PID@Minor-Rev"
                offset="[11:8]"/>
         <field description="Major revision of module implementation." format="hex0x"
                id="FLEXCOMM0@PID@Major-Rev"
                offset="[15:12]"/>
         <field description="Module identifier for the selected function." format="hex0x"
                id="FLEXCOMM0@PID@ID"
                offset="[31:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x Flexcomm serial communication"
               id="FLEXCOMM8"
               size="0x1000">
      <register description="Peripheral Select and Flexcomm ID register." format="hex0x"
                id="FLEXCOMM0@PSELID"
                offset="0xff8"
                size="4">
         <field description="Peripheral Select. This field is writable by software."
                format="enum"
                enum="d1e127054"
                id="FLEXCOMM0@PSELID@PERSEL"
                offset="[2:0]"/>
         <field description="Lock the peripheral select. This field is writable by software."
                format="enum"
                enum="d1e127149"
                id="FLEXCOMM0@PSELID@LOCK"
                offset="[3]"/>
         <field description="USART present indicator. This field is Read-only." format="enum"
                enum="d1e127195"
                id="FLEXCOMM0@PSELID@USARTPRESENT"
                offset="[4]"/>
         <field description="SPI present indicator. This field is Read-only." format="enum"
                enum="d1e127241"
                id="FLEXCOMM0@PSELID@SPIPRESENT"
                offset="[5]"/>
         <field description="I2C present indicator. This field is Read-only." format="enum"
                enum="d1e127287"
                id="FLEXCOMM0@PSELID@I2CPRESENT"
                offset="[6]"/>
         <field description="I 2S present indicator. This field is Read-only." format="enum"
                enum="d1e127334"
                id="FLEXCOMM0@PSELID@I2SPRESENT"
                offset="[7]"/>
         <field description="Flexcomm ID." format="hex0x" id="FLEXCOMM0@PSELID@ID"
                offset="[31:12]"/>
      </register>
      <register description="Peripheral identification register." format="hex0x"
                id="FLEXCOMM0@PID"
                offset="0xffc"
                size="4">
         <field description="Minor revision of module implementation." format="hex0x"
                id="FLEXCOMM0@PID@Minor-Rev"
                offset="[11:8]"/>
         <field description="Major revision of module implementation." format="hex0x"
                id="FLEXCOMM0@PID@Major-Rev"
                offset="[15:12]"/>
         <field description="Module identifier for the selected function." format="hex0x"
                id="FLEXCOMM0@PID@ID"
                offset="[31:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x Flexcomm serial communication"
               id="FLEXCOMM9"
               size="0x1000">
      <register description="Peripheral Select and Flexcomm ID register." format="hex0x"
                id="FLEXCOMM0@PSELID"
                offset="0xff8"
                size="4">
         <field description="Peripheral Select. This field is writable by software."
                format="enum"
                enum="d1e127054"
                id="FLEXCOMM0@PSELID@PERSEL"
                offset="[2:0]"/>
         <field description="Lock the peripheral select. This field is writable by software."
                format="enum"
                enum="d1e127149"
                id="FLEXCOMM0@PSELID@LOCK"
                offset="[3]"/>
         <field description="USART present indicator. This field is Read-only." format="enum"
                enum="d1e127195"
                id="FLEXCOMM0@PSELID@USARTPRESENT"
                offset="[4]"/>
         <field description="SPI present indicator. This field is Read-only." format="enum"
                enum="d1e127241"
                id="FLEXCOMM0@PSELID@SPIPRESENT"
                offset="[5]"/>
         <field description="I2C present indicator. This field is Read-only." format="enum"
                enum="d1e127287"
                id="FLEXCOMM0@PSELID@I2CPRESENT"
                offset="[6]"/>
         <field description="I 2S present indicator. This field is Read-only." format="enum"
                enum="d1e127334"
                id="FLEXCOMM0@PSELID@I2SPRESENT"
                offset="[7]"/>
         <field description="Flexcomm ID." format="hex0x" id="FLEXCOMM0@PSELID@ID"
                offset="[31:12]"/>
      </register>
      <register description="Peripheral identification register." format="hex0x"
                id="FLEXCOMM0@PID"
                offset="0xffc"
                size="4">
         <field description="Minor revision of module implementation." format="hex0x"
                id="FLEXCOMM0@PID@Minor-Rev"
                offset="[11:8]"/>
         <field description="Major revision of module implementation." format="hex0x"
                id="FLEXCOMM0@PID@Major-Rev"
                offset="[15:12]"/>
         <field description="Module identifier for the selected function." format="hex0x"
                id="FLEXCOMM0@PID@ID"
                offset="[31:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x I2C-bus interfaces" id="I2C0"
               size="0x1000">
      <register description="Configuration for shared functions." format="hex0x" id="I2C0@CFG"
                offset="0x800"
                size="4">
         <field description="Master Enable. When disabled, configurations settings for the Master function are not changed, but the Master function is internally reset."
                format="enum"
                enum="d1e127889"
                id="I2C0@CFG@MSTEN"
                offset="[0]"/>
         <field description="Slave Enable. When disabled, configurations settings for the Slave function are not changed, but the Slave function is internally reset."
                format="enum"
                enum="d1e127935"
                id="I2C0@CFG@SLVEN"
                offset="[1]"/>
         <field description="Monitor Enable. When disabled, configurations settings for the Monitor function are not changed, but the Monitor function is internally reset."
                format="enum"
                enum="d1e127981"
                id="I2C0@CFG@MONEN"
                offset="[2]"/>
         <field description="I2C bus Time-out Enable. When disabled, the time-out function is internally reset."
                format="enum"
                enum="d1e128027"
                id="I2C0@CFG@TIMEOUTEN"
                offset="[3]"/>
         <field description="Monitor function Clock Stretching." format="enum" enum="d1e128073"
                id="I2C0@CFG@MONCLKSTR"
                offset="[4]"/>
         <field description="High-speed mode Capable enable. Since High Speed mode alters the way I2C pins drive and filter, as well as the timing for certain I2C signalling, enabling High-speed mode applies to all functions: Master, Slave, and Monitor."
                format="enum"
                enum="d1e128120"
                id="I2C0@CFG@HSCAPABLE"
                offset="[5]"/>
      </register>
      <register description="Status register for Master, Slave, and Monitor functions."
                format="hex0x"
                id="I2C0@STAT"
                offset="0x804"
                size="4">
         <field description="Master Pending. Indicates that the Master is waiting to continue communication on the I2C-bus (pending) or is idle. When the master is pending, the MSTSTATE bits indicate what type of software service if any the master expects. This flag will cause an interrupt when set if, enabled via the INTENSET register. The MSTPENDING flag is not set when the DMA is handling an event (if the MSTDMA bit in the MSTCTL register is set). If the master is in the idle state, and no communication is needed, mask this interrupt."
                format="enum"
                enum="d1e128194"
                id="I2C0@STAT@MSTPENDING"
                offset="[0]"/>
         <field description="Master State code. The master state code reflects the master state when the MSTPENDING bit is set, that is the master is pending or in the idle state. Each value of this field indicates a specific required service for the Master function. All other values are reserved. See Table 400 for details of state values and appropriate responses."
                format="enum"
                enum="d1e128240"
                id="I2C0@STAT@MSTSTATE"
                offset="[3:1]"/>
         <field description="Master Arbitration Loss flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE."
                format="enum"
                enum="d1e128322"
                id="I2C0@STAT@MSTARBLOSS"
                offset="[4]"/>
         <field description="Master Start/Stop Error flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE."
                format="enum"
                enum="d1e128368"
                id="I2C0@STAT@MSTSTSTPERR"
                offset="[6]"/>
         <field description="Slave Pending. Indicates that the Slave function is waiting to continue communication on the I2C-bus and needs software service. This flag will cause an interrupt when set if enabled via INTENSET. The SLVPENDING flag is not set when the DMA is handling an event (if the SLVDMA bit in the SLVCTL register is set). The SLVPENDING flag is read-only and is automatically cleared when a 1 is written to the SLVCONTINUE bit in the SLVCTL register. The point in time when SlvPending is set depends on whether the I2C interface is in HSCAPABLE mode. See Section 25.7.2.2.2. When the I2C interface is configured to be HSCAPABLE, HS master codes are detected automatically. Due to the requirements of the HS I2C specification, slave addresses must also be detected automatically, since the address must be acknowledged before the clock can be stretched."
                format="enum"
                enum="d1e128414"
                id="I2C0@STAT@SLVPENDING"
                offset="[8]"/>
         <field description="Slave State code. Each value of this field indicates a specific required service for the Slave function. All other values are reserved. See Table 401 for state values and actions. note that the occurrence of some states and how they are handled are affected by DMA mode and Automatic Operation modes."
                format="enum"
                enum="d1e128461"
                id="I2C0@STAT@SLVSTATE"
                offset="[10:9]"/>
         <field description="Slave Not Stretching. Indicates when the slave function is stretching the I2C clock. This is needed in order to gracefully invoke Deep Sleep or Power-down modes during slave operation. This read-only flag reflects the slave function status in real time."
                format="enum"
                enum="d1e128519"
                id="I2C0@STAT@SLVNOTSTR"
                offset="[11]"/>
         <field description="Slave address match Index. This field is valid when the I2C slave function has been selected by receiving an address that matches one of the slave addresses defined by any enabled slave address registers, and provides an identification of the address that was matched. It is possible that more than one address could be matched, but only one match can be reported here."
                format="enum"
                enum="d1e128565"
                id="I2C0@STAT@SLVIDX"
                offset="[13:12]"/>
         <field description="Slave selected flag. SLVSEL is set after an address match when software tells the Slave function to acknowledge the address, or when the address has been automatically acknowledged. It is cleared when another address cycle presents an address that does not match an enabled address on the Slave function, when slave software decides to NACK a matched address, when there is a Stop detected on the bus, when the master NACKs slave data, and in some combinations of Automatic Operation. SLVSEL is not cleared if software NACKs data."
                format="enum"
                enum="d1e128635"
                id="I2C0@STAT@SLVSEL"
                offset="[14]"/>
         <field description="Slave Deselected flag. This flag will cause an interrupt when set if enabled via INTENSET. This flag can be cleared by writing a 1 to this bit."
                format="enum"
                enum="d1e128681"
                id="I2C0@STAT@SLVDESEL"
                offset="[15]"/>
         <field description="Monitor Ready. This flag is cleared when the MONRXDAT register is read."
                format="enum"
                enum="d1e128727"
                id="I2C0@STAT@MONRDY"
                offset="[16]"/>
         <field description="Monitor Overflow flag." format="enum" enum="d1e128774"
                id="I2C0@STAT@MONOV"
                offset="[17]"/>
         <field description="Monitor Active flag. Indicates when the Monitor function considers the I 2C bus to be active. Active is defined here as when some Master is on the bus: a bus Start has occurred more recently than a bus Stop."
                format="enum"
                enum="d1e128820"
                id="I2C0@STAT@MONACTIVE"
                offset="[18]"/>
         <field description="Monitor Idle flag. This flag is set when the Monitor function sees the I2C bus change from active to inactive. This can be used by software to decide when to process data accumulated by the Monitor function. This flag will cause an interrupt when set if enabled via the INTENSET register. The flag can be cleared by writing a 1 to this bit."
                format="enum"
                enum="d1e128866"
                id="I2C0@STAT@MONIDLE"
                offset="[19]"/>
         <field description="Event Time-out Interrupt flag. Indicates when the time between events has been longer than the time specified by the TIMEOUT register. Events include Start, Stop, and clock edges. The flag is cleared by writing a 1 to this bit. No time-out is created when the I2C-bus is idle."
                format="enum"
                enum="d1e128912"
                id="I2C0@STAT@EVENTTIMEOUT"
                offset="[24]"/>
         <field description="SCL Time-out Interrupt flag. Indicates when SCL has remained low longer than the time specific by the TIMEOUT register. The flag is cleared by writing a 1 to this bit."
                format="enum"
                enum="d1e128958"
                id="I2C0@STAT@SCLTIMEOUT"
                offset="[25]"/>
      </register>
      <register description="Interrupt Enable Set and read register." format="hex0x"
                id="I2C0@INTENSET"
                offset="0x808"
                size="4">
         <field description="Master Pending interrupt Enable." format="enum" enum="d1e129032"
                id="I2C0@INTENSET@MSTPENDINGEN"
                offset="[0]"/>
         <field description="Master Arbitration Loss interrupt Enable." format="enum"
                enum="d1e129078"
                id="I2C0@INTENSET@MSTARBLOSSEN"
                offset="[4]"/>
         <field description="Master Start/Stop Error interrupt Enable." format="enum"
                enum="d1e129124"
                id="I2C0@INTENSET@MSTSTSTPERREN"
                offset="[6]"/>
         <field description="Slave Pending interrupt Enable." format="enum" enum="d1e129170"
                id="I2C0@INTENSET@SLVPENDINGEN"
                offset="[8]"/>
         <field description="Slave Not Stretching interrupt Enable." format="enum"
                enum="d1e129216"
                id="I2C0@INTENSET@SLVNOTSTREN"
                offset="[11]"/>
         <field description="Slave Deselect interrupt Enable." format="enum" enum="d1e129263"
                id="I2C0@INTENSET@SLVDESELEN"
                offset="[15]"/>
         <field description="Monitor data Ready interrupt Enable." format="enum"
                enum="d1e129309"
                id="I2C0@INTENSET@MONRDYEN"
                offset="[16]"/>
         <field description="Monitor Overrun interrupt Enable." format="enum" enum="d1e129355"
                id="I2C0@INTENSET@MONOVEN"
                offset="[17]"/>
         <field description="Monitor Idle interrupt Enable." format="enum" enum="d1e129401"
                id="I2C0@INTENSET@MONIDLEEN"
                offset="[19]"/>
         <field description="Event time-out interrupt Enable." format="enum" enum="d1e129447"
                id="I2C0@INTENSET@EVENTTIMEOUTEN"
                offset="[24]"/>
         <field description="SCL time-out interrupt Enable." format="enum" enum="d1e129493"
                id="I2C0@INTENSET@SCLTIMEOUTEN"
                offset="[25]"/>
      </register>
      <register description="Interrupt Enable Clear register." format="hex0x"
                id="I2C0@INTENCLR"
                offset="0x80c"
                writeOnly="true"
                size="4">
         <field description="Master Pending interrupt clear. Writing 1 to this bit clears the corresponding bit in the INTENSET register if implemented."
                format="hex0x"
                id="I2C0@INTENCLR@MSTPENDINGCLR"
                offset="[0]"/>
         <field description="Master Arbitration Loss interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MSTARBLOSSCLR"
                offset="[4]"/>
         <field description="Master Start/Stop Error interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MSTSTSTPERRCLR"
                offset="[6]"/>
         <field description="Slave Pending interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@SLVPENDINGCLR"
                offset="[8]"/>
         <field description="Slave Not Stretching interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@SLVNOTSTRCLR"
                offset="[11]"/>
         <field description="Slave Deselect interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@SLVDESELCLR"
                offset="[15]"/>
         <field description="Monitor data Ready interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MONRDYCLR"
                offset="[16]"/>
         <field description="Monitor Overrun interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MONOVCLR"
                offset="[17]"/>
         <field description="Monitor Idle interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MONIDLECLR"
                offset="[19]"/>
         <field description="Event time-out interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@EVENTTIMEOUTCLR"
                offset="[24]"/>
         <field description="SCL time-out interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@SCLTIMEOUTCLR"
                offset="[25]"/>
      </register>
      <register description="Time-out value register." format="hex0x" id="I2C0@TIMEOUT"
                offset="0x810"
                size="4">
         <field description="Time-out time value, bottom four bits. These are hard-wired to 0xF. This gives a minimum time-out of 16 I2C function clocks and also a time-out resolution of 16 I2C function clocks."
                format="hex0x"
                id="I2C0@TIMEOUT@TOMIN"
                offset="[3:0]"/>
         <field description="Time-out time value. Specifies the time-out interval value in increments of 16 I 2C function clocks, as defined by the CLKDIV register. To change this value while I2C is in operation, disable all time-outs, write a new value to TIMEOUT, then re-enable time-outs. 0x000 = A time-out will occur after 16 counts of the I2C function clock. 0x001 = A time-out will occur after 32 counts of the I2C function clock. 0xFFF = A time-out will occur after 65,536 counts of the I2C function clock."
                format="hex0x"
                id="I2C0@TIMEOUT@TO"
                offset="[15:4]"/>
      </register>
      <register description="Clock pre-divider for the entire I2C interface. This determines what time increments are used for the MSTTIME register, and controls some timing of the Slave function."
                format="hex0x"
                id="I2C0@CLKDIV"
                offset="0x814"
                size="4">
         <field description="This field controls how the Flexcomm clock (FCLK) is used by the I2C functions that need an internal clock in order to operate. 0x0000 = FCLK is used directly by the I2C. 0x0001 = FCLK is divided by 2 before use. 0x0002 = FCLK is divided by 3 before use. 0xFFFF = FCLK is divided by 65,536 before use."
                format="hex0x"
                id="I2C0@CLKDIV@DIVVAL"
                offset="[15:0]"/>
      </register>
      <register description="Interrupt Status register for Master, Slave, and Monitor functions."
                format="hex0x"
                id="I2C0@INTSTAT"
                offset="0x818"
                readOnly="true"
                size="4">
         <field description="Master Pending." format="hex0x" id="I2C0@INTSTAT@MSTPENDING"
                offset="[0]"/>
         <field description="Master Arbitration Loss flag." format="hex0x"
                id="I2C0@INTSTAT@MSTARBLOSS"
                offset="[4]"/>
         <field description="Master Start/Stop Error flag." format="hex0x"
                id="I2C0@INTSTAT@MSTSTSTPERR"
                offset="[6]"/>
         <field description="Slave Pending." format="hex0x" id="I2C0@INTSTAT@SLVPENDING"
                offset="[8]"/>
         <field description="Slave Not Stretching status." format="hex0x"
                id="I2C0@INTSTAT@SLVNOTSTR"
                offset="[11]"/>
         <field description="Slave Deselected flag." format="hex0x" id="I2C0@INTSTAT@SLVDESEL"
                offset="[15]"/>
         <field description="Monitor Ready." format="hex0x" id="I2C0@INTSTAT@MONRDY"
                offset="[16]"/>
         <field description="Monitor Overflow flag." format="hex0x" id="I2C0@INTSTAT@MONOV"
                offset="[17]"/>
         <field description="Monitor Idle flag." format="hex0x" id="I2C0@INTSTAT@MONIDLE"
                offset="[19]"/>
         <field description="Event time-out Interrupt flag." format="hex0x"
                id="I2C0@INTSTAT@EVENTTIMEOUT"
                offset="[24]"/>
         <field description="SCL time-out Interrupt flag." format="hex0x"
                id="I2C0@INTSTAT@SCLTIMEOUT"
                offset="[25]"/>
      </register>
      <register description="Master control register." format="hex0x" id="I2C0@MSTCTL"
                offset="0x820"
                size="4">
         <field description="Master Continue. This bit is write-only." format="enum"
                enum="d1e130132"
                id="I2C0@MSTCTL@MSTCONTINUE"
                offset="[0]"/>
         <field description="Master Start control. This bit is write-only." format="enum"
                enum="d1e130178"
                id="I2C0@MSTCTL@MSTSTART"
                offset="[1]"/>
         <field description="Master Stop control. This bit is write-only." format="enum"
                enum="d1e130224"
                id="I2C0@MSTCTL@MSTSTOP"
                offset="[2]"/>
         <field description="Master DMA enable. Data operations of the I2C can be performed with DMA. Protocol type operations such as Start, address, Stop, and address match must always be done with software, typically via an interrupt. Address acknowledgement must also be done by software except when the I2C is configured to be HSCAPABLE (and address acknowledgement is handled entirely by hardware) or when Automatic Operation is enabled. When a DMA data transfer is complete, MSTDMA must be cleared prior to beginning the next operation, typically a Start or Stop.This bit is read/write."
                format="enum"
                enum="d1e130270"
                id="I2C0@MSTCTL@MSTDMA"
                offset="[3]"/>
      </register>
      <register description="Master timing configuration." format="hex0x" id="I2C0@MSTTIME"
                offset="0x824"
                size="4">
         <field description="Master SCL Low time. Specifies the minimum low time that will be asserted by this master on SCL. Other devices on the bus (masters or slaves) could lengthen this time. This corresponds to the parameter t LOW in the I2C bus specification. I2C bus specification parameters tBUF and tSU;STA have the same values and are also controlled by MSTSCLLOW."
                format="enum"
                enum="d1e130344"
                id="I2C0@MSTTIME@MSTSCLLOW"
                offset="[2:0]"/>
         <field description="Master SCL High time. Specifies the minimum high time that will be asserted by this master on SCL. Other masters in a multi-master system could shorten this time. This corresponds to the parameter tHIGH in the I2C bus specification. I2C bus specification parameters tSU;STO and tHD;STA have the same values and are also controlled by MSTSCLHIGH."
                format="enum"
                enum="d1e130463"
                id="I2C0@MSTTIME@MSTSCLHIGH"
                offset="[6:4]"/>
      </register>
      <register description="Combined Master receiver and transmitter data register."
                format="hex0x"
                id="I2C0@MSTDAT"
                offset="0x828"
                size="4">
         <field description="Master function data register. Read: read the most recently received data for the Master function. Write: transmit data using the Master function."
                format="hex0x"
                id="I2C0@MSTDAT@DATA"
                offset="[7:0]"/>
      </register>
      <register description="Slave control register." format="hex0x" id="I2C0@SLVCTL"
                offset="0x840"
                size="4">
         <field description="Slave Continue." format="enum" enum="d1e130656"
                id="I2C0@SLVCTL@SLVCONTINUE"
                offset="[0]"/>
         <field description="Slave NACK." format="enum" enum="d1e130702"
                id="I2C0@SLVCTL@SLVNACK"
                offset="[1]"/>
         <field description="Slave DMA enable." format="enum" enum="d1e130748"
                id="I2C0@SLVCTL@SLVDMA"
                offset="[3]"/>
         <field description="Automatic Acknowledge.When this bit is set, it will cause an I2C header which matches SLVADR0 and the direction set by AUTOMATCHREAD to be ACKed immediately; this is used with DMA to allow processing of the data without intervention. If this bit is clear and a header matches SLVADR0, the behavior is controlled by AUTONACK in the SLVADR0 register: allowing NACK or interrupt."
                format="enum"
                enum="d1e130794"
                id="I2C0@SLVCTL@AUTOACK"
                offset="[8]"/>
         <field description="When AUTOACK is set, this bit controls whether it matches a read or write request on the next header with an address matching SLVADR0. Since DMA needs to be configured to match the transfer direction, the direction needs to be specified. This bit allows a direction to be chosen for the next operation."
                format="enum"
                enum="d1e130840"
                id="I2C0@SLVCTL@AUTOMATCHREAD"
                offset="[9]"/>
      </register>
      <register description="Combined Slave receiver and transmitter data register."
                format="hex0x"
                id="I2C0@SLVDAT"
                offset="0x844"
                size="4">
         <field description="Slave function data register. Read: read the most recently received data for the Slave function. Write: transmit data using the Slave function."
                format="hex0x"
                id="I2C0@SLVDAT@DATA"
                offset="[7:0]"/>
      </register>
      <register description="Slave address register." format="hex0x" id="I2C0@SLVADR0"
                offset="0x848"
                size="4">
         <field description="Slave Address n Disable." format="enum" enum="d1e130967"
                id="I2C0@SLVADR0@SADISABLE"
                offset="[0]"/>
         <field description="Slave Address. Seven bit slave address that is compared to received addresses if enabled."
                format="hex0x"
                id="I2C0@SLVADR0@SLVADR"
                offset="[7:1]"/>
         <field description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations."
                format="enum"
                enum="d1e131031"
                id="I2C0@SLVADR0@AUTONACK"
                offset="[15]"/>
      </register>
      <register description="Slave address register." format="hex0x" id="I2C0@SLVADR1"
                offset="0x84c"
                size="4">
         <field description="Slave Address n Disable." format="enum" enum="d1e130967"
                id="I2C0@SLVADR1@SADISABLE"
                offset="[0]"/>
         <field description="Slave Address. Seven bit slave address that is compared to received addresses if enabled."
                format="hex0x"
                id="I2C0@SLVADR1@SLVADR"
                offset="[7:1]"/>
         <field description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations."
                format="enum"
                enum="d1e131031"
                id="I2C0@SLVADR1@AUTONACK"
                offset="[15]"/>
      </register>
      <register description="Slave address register." format="hex0x" id="I2C0@SLVADR2"
                offset="0x850"
                size="4">
         <field description="Slave Address n Disable." format="enum" enum="d1e130967"
                id="I2C0@SLVADR2@SADISABLE"
                offset="[0]"/>
         <field description="Slave Address. Seven bit slave address that is compared to received addresses if enabled."
                format="hex0x"
                id="I2C0@SLVADR2@SLVADR"
                offset="[7:1]"/>
         <field description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations."
                format="enum"
                enum="d1e131031"
                id="I2C0@SLVADR2@AUTONACK"
                offset="[15]"/>
      </register>
      <register description="Slave address register." format="hex0x" id="I2C0@SLVADR3"
                offset="0x854"
                size="4">
         <field description="Slave Address n Disable." format="enum" enum="d1e130967"
                id="I2C0@SLVADR3@SADISABLE"
                offset="[0]"/>
         <field description="Slave Address. Seven bit slave address that is compared to received addresses if enabled."
                format="hex0x"
                id="I2C0@SLVADR3@SLVADR"
                offset="[7:1]"/>
         <field description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations."
                format="enum"
                enum="d1e131031"
                id="I2C0@SLVADR3@AUTONACK"
                offset="[15]"/>
      </register>
      <register description="Slave Qualification for address 0." format="hex0x"
                id="I2C0@SLVQUAL0"
                offset="0x858"
                size="4">
         <field description="Qualify mode for slave address 0." format="enum" enum="d1e131105"
                id="I2C0@SLVQUAL0@QUALMODE0"
                offset="[0]"/>
         <field description="Slave address Qualifier for address 0. A value of 0 causes the address in SLVADR0 to be used as-is, assuming that it is enabled. If QUALMODE0 = 0, any bit in this field which is set to 1 will cause an automatic match of the corresponding bit of the received address when it is compared to the SLVADR0 register. If QUALMODE0 = 1, an address range is matched for address 0. This range extends from the value defined by SLVADR0 to the address defined by SLVQUAL0 (address matches when SLVADR0[7:1] &lt;= received address &lt;= SLVQUAL0[7:1])."
                format="hex0x"
                id="I2C0@SLVQUAL0@SLVQUAL0"
                offset="[7:1]"/>
      </register>
      <register description="Monitor receiver data register." format="hex0x" id="I2C0@MONRXDAT"
                offset="0x880"
                readOnly="true"
                size="4">
         <field description="Monitor function Receiver Data. This reflects every data byte that passes on the I2C pins."
                format="hex0x"
                id="I2C0@MONRXDAT@MONRXDAT"
                offset="[7:0]"/>
         <field description="Monitor Received Start." format="enum" enum="d1e131215"
                id="I2C0@MONRXDAT@MONSTART"
                offset="[8]"/>
         <field description="Monitor Received Repeated Start." format="enum" enum="d1e131261"
                id="I2C0@MONRXDAT@MONRESTART"
                offset="[9]"/>
         <field description="Monitor Received NACK." format="enum" enum="d1e131307"
                id="I2C0@MONRXDAT@MONNACK"
                offset="[10]"/>
      </register>
      <register description="Peripheral identification register." format="hex0x" id="I2C0@ID"
                offset="0xffc"
                readOnly="true"
                size="4">
         <field description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture."
                format="hex0x"
                id="I2C0@ID@APERTURE"
                offset="[7:0]"/>
         <field description="Minor revision of module implementation." format="hex0x"
                id="I2C0@ID@MINOR-REV"
                offset="[11:8]"/>
         <field description="Major revision of module implementation." format="hex0x"
                id="I2C0@ID@MAJOR-REV"
                offset="[15:12]"/>
         <field description="Module identifier for the selected function." format="hex0x"
                id="I2C0@ID@ID"
                offset="[31:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x I2C-bus interfaces" id="I2C1"
               size="0x1000">
      <register description="Configuration for shared functions." format="hex0x" id="I2C0@CFG"
                offset="0x800"
                size="4">
         <field description="Master Enable. When disabled, configurations settings for the Master function are not changed, but the Master function is internally reset."
                format="enum"
                enum="d1e127889"
                id="I2C0@CFG@MSTEN"
                offset="[0]"/>
         <field description="Slave Enable. When disabled, configurations settings for the Slave function are not changed, but the Slave function is internally reset."
                format="enum"
                enum="d1e127935"
                id="I2C0@CFG@SLVEN"
                offset="[1]"/>
         <field description="Monitor Enable. When disabled, configurations settings for the Monitor function are not changed, but the Monitor function is internally reset."
                format="enum"
                enum="d1e127981"
                id="I2C0@CFG@MONEN"
                offset="[2]"/>
         <field description="I2C bus Time-out Enable. When disabled, the time-out function is internally reset."
                format="enum"
                enum="d1e128027"
                id="I2C0@CFG@TIMEOUTEN"
                offset="[3]"/>
         <field description="Monitor function Clock Stretching." format="enum" enum="d1e128073"
                id="I2C0@CFG@MONCLKSTR"
                offset="[4]"/>
         <field description="High-speed mode Capable enable. Since High Speed mode alters the way I2C pins drive and filter, as well as the timing for certain I2C signalling, enabling High-speed mode applies to all functions: Master, Slave, and Monitor."
                format="enum"
                enum="d1e128120"
                id="I2C0@CFG@HSCAPABLE"
                offset="[5]"/>
      </register>
      <register description="Status register for Master, Slave, and Monitor functions."
                format="hex0x"
                id="I2C0@STAT"
                offset="0x804"
                size="4">
         <field description="Master Pending. Indicates that the Master is waiting to continue communication on the I2C-bus (pending) or is idle. When the master is pending, the MSTSTATE bits indicate what type of software service if any the master expects. This flag will cause an interrupt when set if, enabled via the INTENSET register. The MSTPENDING flag is not set when the DMA is handling an event (if the MSTDMA bit in the MSTCTL register is set). If the master is in the idle state, and no communication is needed, mask this interrupt."
                format="enum"
                enum="d1e128194"
                id="I2C0@STAT@MSTPENDING"
                offset="[0]"/>
         <field description="Master State code. The master state code reflects the master state when the MSTPENDING bit is set, that is the master is pending or in the idle state. Each value of this field indicates a specific required service for the Master function. All other values are reserved. See Table 400 for details of state values and appropriate responses."
                format="enum"
                enum="d1e128240"
                id="I2C0@STAT@MSTSTATE"
                offset="[3:1]"/>
         <field description="Master Arbitration Loss flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE."
                format="enum"
                enum="d1e128322"
                id="I2C0@STAT@MSTARBLOSS"
                offset="[4]"/>
         <field description="Master Start/Stop Error flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE."
                format="enum"
                enum="d1e128368"
                id="I2C0@STAT@MSTSTSTPERR"
                offset="[6]"/>
         <field description="Slave Pending. Indicates that the Slave function is waiting to continue communication on the I2C-bus and needs software service. This flag will cause an interrupt when set if enabled via INTENSET. The SLVPENDING flag is not set when the DMA is handling an event (if the SLVDMA bit in the SLVCTL register is set). The SLVPENDING flag is read-only and is automatically cleared when a 1 is written to the SLVCONTINUE bit in the SLVCTL register. The point in time when SlvPending is set depends on whether the I2C interface is in HSCAPABLE mode. See Section 25.7.2.2.2. When the I2C interface is configured to be HSCAPABLE, HS master codes are detected automatically. Due to the requirements of the HS I2C specification, slave addresses must also be detected automatically, since the address must be acknowledged before the clock can be stretched."
                format="enum"
                enum="d1e128414"
                id="I2C0@STAT@SLVPENDING"
                offset="[8]"/>
         <field description="Slave State code. Each value of this field indicates a specific required service for the Slave function. All other values are reserved. See Table 401 for state values and actions. note that the occurrence of some states and how they are handled are affected by DMA mode and Automatic Operation modes."
                format="enum"
                enum="d1e128461"
                id="I2C0@STAT@SLVSTATE"
                offset="[10:9]"/>
         <field description="Slave Not Stretching. Indicates when the slave function is stretching the I2C clock. This is needed in order to gracefully invoke Deep Sleep or Power-down modes during slave operation. This read-only flag reflects the slave function status in real time."
                format="enum"
                enum="d1e128519"
                id="I2C0@STAT@SLVNOTSTR"
                offset="[11]"/>
         <field description="Slave address match Index. This field is valid when the I2C slave function has been selected by receiving an address that matches one of the slave addresses defined by any enabled slave address registers, and provides an identification of the address that was matched. It is possible that more than one address could be matched, but only one match can be reported here."
                format="enum"
                enum="d1e128565"
                id="I2C0@STAT@SLVIDX"
                offset="[13:12]"/>
         <field description="Slave selected flag. SLVSEL is set after an address match when software tells the Slave function to acknowledge the address, or when the address has been automatically acknowledged. It is cleared when another address cycle presents an address that does not match an enabled address on the Slave function, when slave software decides to NACK a matched address, when there is a Stop detected on the bus, when the master NACKs slave data, and in some combinations of Automatic Operation. SLVSEL is not cleared if software NACKs data."
                format="enum"
                enum="d1e128635"
                id="I2C0@STAT@SLVSEL"
                offset="[14]"/>
         <field description="Slave Deselected flag. This flag will cause an interrupt when set if enabled via INTENSET. This flag can be cleared by writing a 1 to this bit."
                format="enum"
                enum="d1e128681"
                id="I2C0@STAT@SLVDESEL"
                offset="[15]"/>
         <field description="Monitor Ready. This flag is cleared when the MONRXDAT register is read."
                format="enum"
                enum="d1e128727"
                id="I2C0@STAT@MONRDY"
                offset="[16]"/>
         <field description="Monitor Overflow flag." format="enum" enum="d1e128774"
                id="I2C0@STAT@MONOV"
                offset="[17]"/>
         <field description="Monitor Active flag. Indicates when the Monitor function considers the I 2C bus to be active. Active is defined here as when some Master is on the bus: a bus Start has occurred more recently than a bus Stop."
                format="enum"
                enum="d1e128820"
                id="I2C0@STAT@MONACTIVE"
                offset="[18]"/>
         <field description="Monitor Idle flag. This flag is set when the Monitor function sees the I2C bus change from active to inactive. This can be used by software to decide when to process data accumulated by the Monitor function. This flag will cause an interrupt when set if enabled via the INTENSET register. The flag can be cleared by writing a 1 to this bit."
                format="enum"
                enum="d1e128866"
                id="I2C0@STAT@MONIDLE"
                offset="[19]"/>
         <field description="Event Time-out Interrupt flag. Indicates when the time between events has been longer than the time specified by the TIMEOUT register. Events include Start, Stop, and clock edges. The flag is cleared by writing a 1 to this bit. No time-out is created when the I2C-bus is idle."
                format="enum"
                enum="d1e128912"
                id="I2C0@STAT@EVENTTIMEOUT"
                offset="[24]"/>
         <field description="SCL Time-out Interrupt flag. Indicates when SCL has remained low longer than the time specific by the TIMEOUT register. The flag is cleared by writing a 1 to this bit."
                format="enum"
                enum="d1e128958"
                id="I2C0@STAT@SCLTIMEOUT"
                offset="[25]"/>
      </register>
      <register description="Interrupt Enable Set and read register." format="hex0x"
                id="I2C0@INTENSET"
                offset="0x808"
                size="4">
         <field description="Master Pending interrupt Enable." format="enum" enum="d1e129032"
                id="I2C0@INTENSET@MSTPENDINGEN"
                offset="[0]"/>
         <field description="Master Arbitration Loss interrupt Enable." format="enum"
                enum="d1e129078"
                id="I2C0@INTENSET@MSTARBLOSSEN"
                offset="[4]"/>
         <field description="Master Start/Stop Error interrupt Enable." format="enum"
                enum="d1e129124"
                id="I2C0@INTENSET@MSTSTSTPERREN"
                offset="[6]"/>
         <field description="Slave Pending interrupt Enable." format="enum" enum="d1e129170"
                id="I2C0@INTENSET@SLVPENDINGEN"
                offset="[8]"/>
         <field description="Slave Not Stretching interrupt Enable." format="enum"
                enum="d1e129216"
                id="I2C0@INTENSET@SLVNOTSTREN"
                offset="[11]"/>
         <field description="Slave Deselect interrupt Enable." format="enum" enum="d1e129263"
                id="I2C0@INTENSET@SLVDESELEN"
                offset="[15]"/>
         <field description="Monitor data Ready interrupt Enable." format="enum"
                enum="d1e129309"
                id="I2C0@INTENSET@MONRDYEN"
                offset="[16]"/>
         <field description="Monitor Overrun interrupt Enable." format="enum" enum="d1e129355"
                id="I2C0@INTENSET@MONOVEN"
                offset="[17]"/>
         <field description="Monitor Idle interrupt Enable." format="enum" enum="d1e129401"
                id="I2C0@INTENSET@MONIDLEEN"
                offset="[19]"/>
         <field description="Event time-out interrupt Enable." format="enum" enum="d1e129447"
                id="I2C0@INTENSET@EVENTTIMEOUTEN"
                offset="[24]"/>
         <field description="SCL time-out interrupt Enable." format="enum" enum="d1e129493"
                id="I2C0@INTENSET@SCLTIMEOUTEN"
                offset="[25]"/>
      </register>
      <register description="Interrupt Enable Clear register." format="hex0x"
                id="I2C0@INTENCLR"
                offset="0x80c"
                writeOnly="true"
                size="4">
         <field description="Master Pending interrupt clear. Writing 1 to this bit clears the corresponding bit in the INTENSET register if implemented."
                format="hex0x"
                id="I2C0@INTENCLR@MSTPENDINGCLR"
                offset="[0]"/>
         <field description="Master Arbitration Loss interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MSTARBLOSSCLR"
                offset="[4]"/>
         <field description="Master Start/Stop Error interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MSTSTSTPERRCLR"
                offset="[6]"/>
         <field description="Slave Pending interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@SLVPENDINGCLR"
                offset="[8]"/>
         <field description="Slave Not Stretching interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@SLVNOTSTRCLR"
                offset="[11]"/>
         <field description="Slave Deselect interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@SLVDESELCLR"
                offset="[15]"/>
         <field description="Monitor data Ready interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MONRDYCLR"
                offset="[16]"/>
         <field description="Monitor Overrun interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MONOVCLR"
                offset="[17]"/>
         <field description="Monitor Idle interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MONIDLECLR"
                offset="[19]"/>
         <field description="Event time-out interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@EVENTTIMEOUTCLR"
                offset="[24]"/>
         <field description="SCL time-out interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@SCLTIMEOUTCLR"
                offset="[25]"/>
      </register>
      <register description="Time-out value register." format="hex0x" id="I2C0@TIMEOUT"
                offset="0x810"
                size="4">
         <field description="Time-out time value, bottom four bits. These are hard-wired to 0xF. This gives a minimum time-out of 16 I2C function clocks and also a time-out resolution of 16 I2C function clocks."
                format="hex0x"
                id="I2C0@TIMEOUT@TOMIN"
                offset="[3:0]"/>
         <field description="Time-out time value. Specifies the time-out interval value in increments of 16 I 2C function clocks, as defined by the CLKDIV register. To change this value while I2C is in operation, disable all time-outs, write a new value to TIMEOUT, then re-enable time-outs. 0x000 = A time-out will occur after 16 counts of the I2C function clock. 0x001 = A time-out will occur after 32 counts of the I2C function clock. 0xFFF = A time-out will occur after 65,536 counts of the I2C function clock."
                format="hex0x"
                id="I2C0@TIMEOUT@TO"
                offset="[15:4]"/>
      </register>
      <register description="Clock pre-divider for the entire I2C interface. This determines what time increments are used for the MSTTIME register, and controls some timing of the Slave function."
                format="hex0x"
                id="I2C0@CLKDIV"
                offset="0x814"
                size="4">
         <field description="This field controls how the Flexcomm clock (FCLK) is used by the I2C functions that need an internal clock in order to operate. 0x0000 = FCLK is used directly by the I2C. 0x0001 = FCLK is divided by 2 before use. 0x0002 = FCLK is divided by 3 before use. 0xFFFF = FCLK is divided by 65,536 before use."
                format="hex0x"
                id="I2C0@CLKDIV@DIVVAL"
                offset="[15:0]"/>
      </register>
      <register description="Interrupt Status register for Master, Slave, and Monitor functions."
                format="hex0x"
                id="I2C0@INTSTAT"
                offset="0x818"
                readOnly="true"
                size="4">
         <field description="Master Pending." format="hex0x" id="I2C0@INTSTAT@MSTPENDING"
                offset="[0]"/>
         <field description="Master Arbitration Loss flag." format="hex0x"
                id="I2C0@INTSTAT@MSTARBLOSS"
                offset="[4]"/>
         <field description="Master Start/Stop Error flag." format="hex0x"
                id="I2C0@INTSTAT@MSTSTSTPERR"
                offset="[6]"/>
         <field description="Slave Pending." format="hex0x" id="I2C0@INTSTAT@SLVPENDING"
                offset="[8]"/>
         <field description="Slave Not Stretching status." format="hex0x"
                id="I2C0@INTSTAT@SLVNOTSTR"
                offset="[11]"/>
         <field description="Slave Deselected flag." format="hex0x" id="I2C0@INTSTAT@SLVDESEL"
                offset="[15]"/>
         <field description="Monitor Ready." format="hex0x" id="I2C0@INTSTAT@MONRDY"
                offset="[16]"/>
         <field description="Monitor Overflow flag." format="hex0x" id="I2C0@INTSTAT@MONOV"
                offset="[17]"/>
         <field description="Monitor Idle flag." format="hex0x" id="I2C0@INTSTAT@MONIDLE"
                offset="[19]"/>
         <field description="Event time-out Interrupt flag." format="hex0x"
                id="I2C0@INTSTAT@EVENTTIMEOUT"
                offset="[24]"/>
         <field description="SCL time-out Interrupt flag." format="hex0x"
                id="I2C0@INTSTAT@SCLTIMEOUT"
                offset="[25]"/>
      </register>
      <register description="Master control register." format="hex0x" id="I2C0@MSTCTL"
                offset="0x820"
                size="4">
         <field description="Master Continue. This bit is write-only." format="enum"
                enum="d1e130132"
                id="I2C0@MSTCTL@MSTCONTINUE"
                offset="[0]"/>
         <field description="Master Start control. This bit is write-only." format="enum"
                enum="d1e130178"
                id="I2C0@MSTCTL@MSTSTART"
                offset="[1]"/>
         <field description="Master Stop control. This bit is write-only." format="enum"
                enum="d1e130224"
                id="I2C0@MSTCTL@MSTSTOP"
                offset="[2]"/>
         <field description="Master DMA enable. Data operations of the I2C can be performed with DMA. Protocol type operations such as Start, address, Stop, and address match must always be done with software, typically via an interrupt. Address acknowledgement must also be done by software except when the I2C is configured to be HSCAPABLE (and address acknowledgement is handled entirely by hardware) or when Automatic Operation is enabled. When a DMA data transfer is complete, MSTDMA must be cleared prior to beginning the next operation, typically a Start or Stop.This bit is read/write."
                format="enum"
                enum="d1e130270"
                id="I2C0@MSTCTL@MSTDMA"
                offset="[3]"/>
      </register>
      <register description="Master timing configuration." format="hex0x" id="I2C0@MSTTIME"
                offset="0x824"
                size="4">
         <field description="Master SCL Low time. Specifies the minimum low time that will be asserted by this master on SCL. Other devices on the bus (masters or slaves) could lengthen this time. This corresponds to the parameter t LOW in the I2C bus specification. I2C bus specification parameters tBUF and tSU;STA have the same values and are also controlled by MSTSCLLOW."
                format="enum"
                enum="d1e130344"
                id="I2C0@MSTTIME@MSTSCLLOW"
                offset="[2:0]"/>
         <field description="Master SCL High time. Specifies the minimum high time that will be asserted by this master on SCL. Other masters in a multi-master system could shorten this time. This corresponds to the parameter tHIGH in the I2C bus specification. I2C bus specification parameters tSU;STO and tHD;STA have the same values and are also controlled by MSTSCLHIGH."
                format="enum"
                enum="d1e130463"
                id="I2C0@MSTTIME@MSTSCLHIGH"
                offset="[6:4]"/>
      </register>
      <register description="Combined Master receiver and transmitter data register."
                format="hex0x"
                id="I2C0@MSTDAT"
                offset="0x828"
                size="4">
         <field description="Master function data register. Read: read the most recently received data for the Master function. Write: transmit data using the Master function."
                format="hex0x"
                id="I2C0@MSTDAT@DATA"
                offset="[7:0]"/>
      </register>
      <register description="Slave control register." format="hex0x" id="I2C0@SLVCTL"
                offset="0x840"
                size="4">
         <field description="Slave Continue." format="enum" enum="d1e130656"
                id="I2C0@SLVCTL@SLVCONTINUE"
                offset="[0]"/>
         <field description="Slave NACK." format="enum" enum="d1e130702"
                id="I2C0@SLVCTL@SLVNACK"
                offset="[1]"/>
         <field description="Slave DMA enable." format="enum" enum="d1e130748"
                id="I2C0@SLVCTL@SLVDMA"
                offset="[3]"/>
         <field description="Automatic Acknowledge.When this bit is set, it will cause an I2C header which matches SLVADR0 and the direction set by AUTOMATCHREAD to be ACKed immediately; this is used with DMA to allow processing of the data without intervention. If this bit is clear and a header matches SLVADR0, the behavior is controlled by AUTONACK in the SLVADR0 register: allowing NACK or interrupt."
                format="enum"
                enum="d1e130794"
                id="I2C0@SLVCTL@AUTOACK"
                offset="[8]"/>
         <field description="When AUTOACK is set, this bit controls whether it matches a read or write request on the next header with an address matching SLVADR0. Since DMA needs to be configured to match the transfer direction, the direction needs to be specified. This bit allows a direction to be chosen for the next operation."
                format="enum"
                enum="d1e130840"
                id="I2C0@SLVCTL@AUTOMATCHREAD"
                offset="[9]"/>
      </register>
      <register description="Combined Slave receiver and transmitter data register."
                format="hex0x"
                id="I2C0@SLVDAT"
                offset="0x844"
                size="4">
         <field description="Slave function data register. Read: read the most recently received data for the Slave function. Write: transmit data using the Slave function."
                format="hex0x"
                id="I2C0@SLVDAT@DATA"
                offset="[7:0]"/>
      </register>
      <register description="Slave address register." format="hex0x" id="I2C0@SLVADR0"
                offset="0x848"
                size="4">
         <field description="Slave Address n Disable." format="enum" enum="d1e130967"
                id="I2C0@SLVADR0@SADISABLE"
                offset="[0]"/>
         <field description="Slave Address. Seven bit slave address that is compared to received addresses if enabled."
                format="hex0x"
                id="I2C0@SLVADR0@SLVADR"
                offset="[7:1]"/>
         <field description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations."
                format="enum"
                enum="d1e131031"
                id="I2C0@SLVADR0@AUTONACK"
                offset="[15]"/>
      </register>
      <register description="Slave address register." format="hex0x" id="I2C0@SLVADR1"
                offset="0x84c"
                size="4">
         <field description="Slave Address n Disable." format="enum" enum="d1e130967"
                id="I2C0@SLVADR1@SADISABLE"
                offset="[0]"/>
         <field description="Slave Address. Seven bit slave address that is compared to received addresses if enabled."
                format="hex0x"
                id="I2C0@SLVADR1@SLVADR"
                offset="[7:1]"/>
         <field description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations."
                format="enum"
                enum="d1e131031"
                id="I2C0@SLVADR1@AUTONACK"
                offset="[15]"/>
      </register>
      <register description="Slave address register." format="hex0x" id="I2C0@SLVADR2"
                offset="0x850"
                size="4">
         <field description="Slave Address n Disable." format="enum" enum="d1e130967"
                id="I2C0@SLVADR2@SADISABLE"
                offset="[0]"/>
         <field description="Slave Address. Seven bit slave address that is compared to received addresses if enabled."
                format="hex0x"
                id="I2C0@SLVADR2@SLVADR"
                offset="[7:1]"/>
         <field description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations."
                format="enum"
                enum="d1e131031"
                id="I2C0@SLVADR2@AUTONACK"
                offset="[15]"/>
      </register>
      <register description="Slave address register." format="hex0x" id="I2C0@SLVADR3"
                offset="0x854"
                size="4">
         <field description="Slave Address n Disable." format="enum" enum="d1e130967"
                id="I2C0@SLVADR3@SADISABLE"
                offset="[0]"/>
         <field description="Slave Address. Seven bit slave address that is compared to received addresses if enabled."
                format="hex0x"
                id="I2C0@SLVADR3@SLVADR"
                offset="[7:1]"/>
         <field description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations."
                format="enum"
                enum="d1e131031"
                id="I2C0@SLVADR3@AUTONACK"
                offset="[15]"/>
      </register>
      <register description="Slave Qualification for address 0." format="hex0x"
                id="I2C0@SLVQUAL0"
                offset="0x858"
                size="4">
         <field description="Qualify mode for slave address 0." format="enum" enum="d1e131105"
                id="I2C0@SLVQUAL0@QUALMODE0"
                offset="[0]"/>
         <field description="Slave address Qualifier for address 0. A value of 0 causes the address in SLVADR0 to be used as-is, assuming that it is enabled. If QUALMODE0 = 0, any bit in this field which is set to 1 will cause an automatic match of the corresponding bit of the received address when it is compared to the SLVADR0 register. If QUALMODE0 = 1, an address range is matched for address 0. This range extends from the value defined by SLVADR0 to the address defined by SLVQUAL0 (address matches when SLVADR0[7:1] &lt;= received address &lt;= SLVQUAL0[7:1])."
                format="hex0x"
                id="I2C0@SLVQUAL0@SLVQUAL0"
                offset="[7:1]"/>
      </register>
      <register description="Monitor receiver data register." format="hex0x" id="I2C0@MONRXDAT"
                offset="0x880"
                readOnly="true"
                size="4">
         <field description="Monitor function Receiver Data. This reflects every data byte that passes on the I2C pins."
                format="hex0x"
                id="I2C0@MONRXDAT@MONRXDAT"
                offset="[7:0]"/>
         <field description="Monitor Received Start." format="enum" enum="d1e131215"
                id="I2C0@MONRXDAT@MONSTART"
                offset="[8]"/>
         <field description="Monitor Received Repeated Start." format="enum" enum="d1e131261"
                id="I2C0@MONRXDAT@MONRESTART"
                offset="[9]"/>
         <field description="Monitor Received NACK." format="enum" enum="d1e131307"
                id="I2C0@MONRXDAT@MONNACK"
                offset="[10]"/>
      </register>
      <register description="Peripheral identification register." format="hex0x" id="I2C0@ID"
                offset="0xffc"
                readOnly="true"
                size="4">
         <field description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture."
                format="hex0x"
                id="I2C0@ID@APERTURE"
                offset="[7:0]"/>
         <field description="Minor revision of module implementation." format="hex0x"
                id="I2C0@ID@MINOR-REV"
                offset="[11:8]"/>
         <field description="Major revision of module implementation." format="hex0x"
                id="I2C0@ID@MAJOR-REV"
                offset="[15:12]"/>
         <field description="Module identifier for the selected function." format="hex0x"
                id="I2C0@ID@ID"
                offset="[31:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x I2C-bus interfaces" id="I2C2"
               size="0x1000">
      <register description="Configuration for shared functions." format="hex0x" id="I2C0@CFG"
                offset="0x800"
                size="4">
         <field description="Master Enable. When disabled, configurations settings for the Master function are not changed, but the Master function is internally reset."
                format="enum"
                enum="d1e127889"
                id="I2C0@CFG@MSTEN"
                offset="[0]"/>
         <field description="Slave Enable. When disabled, configurations settings for the Slave function are not changed, but the Slave function is internally reset."
                format="enum"
                enum="d1e127935"
                id="I2C0@CFG@SLVEN"
                offset="[1]"/>
         <field description="Monitor Enable. When disabled, configurations settings for the Monitor function are not changed, but the Monitor function is internally reset."
                format="enum"
                enum="d1e127981"
                id="I2C0@CFG@MONEN"
                offset="[2]"/>
         <field description="I2C bus Time-out Enable. When disabled, the time-out function is internally reset."
                format="enum"
                enum="d1e128027"
                id="I2C0@CFG@TIMEOUTEN"
                offset="[3]"/>
         <field description="Monitor function Clock Stretching." format="enum" enum="d1e128073"
                id="I2C0@CFG@MONCLKSTR"
                offset="[4]"/>
         <field description="High-speed mode Capable enable. Since High Speed mode alters the way I2C pins drive and filter, as well as the timing for certain I2C signalling, enabling High-speed mode applies to all functions: Master, Slave, and Monitor."
                format="enum"
                enum="d1e128120"
                id="I2C0@CFG@HSCAPABLE"
                offset="[5]"/>
      </register>
      <register description="Status register for Master, Slave, and Monitor functions."
                format="hex0x"
                id="I2C0@STAT"
                offset="0x804"
                size="4">
         <field description="Master Pending. Indicates that the Master is waiting to continue communication on the I2C-bus (pending) or is idle. When the master is pending, the MSTSTATE bits indicate what type of software service if any the master expects. This flag will cause an interrupt when set if, enabled via the INTENSET register. The MSTPENDING flag is not set when the DMA is handling an event (if the MSTDMA bit in the MSTCTL register is set). If the master is in the idle state, and no communication is needed, mask this interrupt."
                format="enum"
                enum="d1e128194"
                id="I2C0@STAT@MSTPENDING"
                offset="[0]"/>
         <field description="Master State code. The master state code reflects the master state when the MSTPENDING bit is set, that is the master is pending or in the idle state. Each value of this field indicates a specific required service for the Master function. All other values are reserved. See Table 400 for details of state values and appropriate responses."
                format="enum"
                enum="d1e128240"
                id="I2C0@STAT@MSTSTATE"
                offset="[3:1]"/>
         <field description="Master Arbitration Loss flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE."
                format="enum"
                enum="d1e128322"
                id="I2C0@STAT@MSTARBLOSS"
                offset="[4]"/>
         <field description="Master Start/Stop Error flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE."
                format="enum"
                enum="d1e128368"
                id="I2C0@STAT@MSTSTSTPERR"
                offset="[6]"/>
         <field description="Slave Pending. Indicates that the Slave function is waiting to continue communication on the I2C-bus and needs software service. This flag will cause an interrupt when set if enabled via INTENSET. The SLVPENDING flag is not set when the DMA is handling an event (if the SLVDMA bit in the SLVCTL register is set). The SLVPENDING flag is read-only and is automatically cleared when a 1 is written to the SLVCONTINUE bit in the SLVCTL register. The point in time when SlvPending is set depends on whether the I2C interface is in HSCAPABLE mode. See Section 25.7.2.2.2. When the I2C interface is configured to be HSCAPABLE, HS master codes are detected automatically. Due to the requirements of the HS I2C specification, slave addresses must also be detected automatically, since the address must be acknowledged before the clock can be stretched."
                format="enum"
                enum="d1e128414"
                id="I2C0@STAT@SLVPENDING"
                offset="[8]"/>
         <field description="Slave State code. Each value of this field indicates a specific required service for the Slave function. All other values are reserved. See Table 401 for state values and actions. note that the occurrence of some states and how they are handled are affected by DMA mode and Automatic Operation modes."
                format="enum"
                enum="d1e128461"
                id="I2C0@STAT@SLVSTATE"
                offset="[10:9]"/>
         <field description="Slave Not Stretching. Indicates when the slave function is stretching the I2C clock. This is needed in order to gracefully invoke Deep Sleep or Power-down modes during slave operation. This read-only flag reflects the slave function status in real time."
                format="enum"
                enum="d1e128519"
                id="I2C0@STAT@SLVNOTSTR"
                offset="[11]"/>
         <field description="Slave address match Index. This field is valid when the I2C slave function has been selected by receiving an address that matches one of the slave addresses defined by any enabled slave address registers, and provides an identification of the address that was matched. It is possible that more than one address could be matched, but only one match can be reported here."
                format="enum"
                enum="d1e128565"
                id="I2C0@STAT@SLVIDX"
                offset="[13:12]"/>
         <field description="Slave selected flag. SLVSEL is set after an address match when software tells the Slave function to acknowledge the address, or when the address has been automatically acknowledged. It is cleared when another address cycle presents an address that does not match an enabled address on the Slave function, when slave software decides to NACK a matched address, when there is a Stop detected on the bus, when the master NACKs slave data, and in some combinations of Automatic Operation. SLVSEL is not cleared if software NACKs data."
                format="enum"
                enum="d1e128635"
                id="I2C0@STAT@SLVSEL"
                offset="[14]"/>
         <field description="Slave Deselected flag. This flag will cause an interrupt when set if enabled via INTENSET. This flag can be cleared by writing a 1 to this bit."
                format="enum"
                enum="d1e128681"
                id="I2C0@STAT@SLVDESEL"
                offset="[15]"/>
         <field description="Monitor Ready. This flag is cleared when the MONRXDAT register is read."
                format="enum"
                enum="d1e128727"
                id="I2C0@STAT@MONRDY"
                offset="[16]"/>
         <field description="Monitor Overflow flag." format="enum" enum="d1e128774"
                id="I2C0@STAT@MONOV"
                offset="[17]"/>
         <field description="Monitor Active flag. Indicates when the Monitor function considers the I 2C bus to be active. Active is defined here as when some Master is on the bus: a bus Start has occurred more recently than a bus Stop."
                format="enum"
                enum="d1e128820"
                id="I2C0@STAT@MONACTIVE"
                offset="[18]"/>
         <field description="Monitor Idle flag. This flag is set when the Monitor function sees the I2C bus change from active to inactive. This can be used by software to decide when to process data accumulated by the Monitor function. This flag will cause an interrupt when set if enabled via the INTENSET register. The flag can be cleared by writing a 1 to this bit."
                format="enum"
                enum="d1e128866"
                id="I2C0@STAT@MONIDLE"
                offset="[19]"/>
         <field description="Event Time-out Interrupt flag. Indicates when the time between events has been longer than the time specified by the TIMEOUT register. Events include Start, Stop, and clock edges. The flag is cleared by writing a 1 to this bit. No time-out is created when the I2C-bus is idle."
                format="enum"
                enum="d1e128912"
                id="I2C0@STAT@EVENTTIMEOUT"
                offset="[24]"/>
         <field description="SCL Time-out Interrupt flag. Indicates when SCL has remained low longer than the time specific by the TIMEOUT register. The flag is cleared by writing a 1 to this bit."
                format="enum"
                enum="d1e128958"
                id="I2C0@STAT@SCLTIMEOUT"
                offset="[25]"/>
      </register>
      <register description="Interrupt Enable Set and read register." format="hex0x"
                id="I2C0@INTENSET"
                offset="0x808"
                size="4">
         <field description="Master Pending interrupt Enable." format="enum" enum="d1e129032"
                id="I2C0@INTENSET@MSTPENDINGEN"
                offset="[0]"/>
         <field description="Master Arbitration Loss interrupt Enable." format="enum"
                enum="d1e129078"
                id="I2C0@INTENSET@MSTARBLOSSEN"
                offset="[4]"/>
         <field description="Master Start/Stop Error interrupt Enable." format="enum"
                enum="d1e129124"
                id="I2C0@INTENSET@MSTSTSTPERREN"
                offset="[6]"/>
         <field description="Slave Pending interrupt Enable." format="enum" enum="d1e129170"
                id="I2C0@INTENSET@SLVPENDINGEN"
                offset="[8]"/>
         <field description="Slave Not Stretching interrupt Enable." format="enum"
                enum="d1e129216"
                id="I2C0@INTENSET@SLVNOTSTREN"
                offset="[11]"/>
         <field description="Slave Deselect interrupt Enable." format="enum" enum="d1e129263"
                id="I2C0@INTENSET@SLVDESELEN"
                offset="[15]"/>
         <field description="Monitor data Ready interrupt Enable." format="enum"
                enum="d1e129309"
                id="I2C0@INTENSET@MONRDYEN"
                offset="[16]"/>
         <field description="Monitor Overrun interrupt Enable." format="enum" enum="d1e129355"
                id="I2C0@INTENSET@MONOVEN"
                offset="[17]"/>
         <field description="Monitor Idle interrupt Enable." format="enum" enum="d1e129401"
                id="I2C0@INTENSET@MONIDLEEN"
                offset="[19]"/>
         <field description="Event time-out interrupt Enable." format="enum" enum="d1e129447"
                id="I2C0@INTENSET@EVENTTIMEOUTEN"
                offset="[24]"/>
         <field description="SCL time-out interrupt Enable." format="enum" enum="d1e129493"
                id="I2C0@INTENSET@SCLTIMEOUTEN"
                offset="[25]"/>
      </register>
      <register description="Interrupt Enable Clear register." format="hex0x"
                id="I2C0@INTENCLR"
                offset="0x80c"
                writeOnly="true"
                size="4">
         <field description="Master Pending interrupt clear. Writing 1 to this bit clears the corresponding bit in the INTENSET register if implemented."
                format="hex0x"
                id="I2C0@INTENCLR@MSTPENDINGCLR"
                offset="[0]"/>
         <field description="Master Arbitration Loss interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MSTARBLOSSCLR"
                offset="[4]"/>
         <field description="Master Start/Stop Error interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MSTSTSTPERRCLR"
                offset="[6]"/>
         <field description="Slave Pending interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@SLVPENDINGCLR"
                offset="[8]"/>
         <field description="Slave Not Stretching interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@SLVNOTSTRCLR"
                offset="[11]"/>
         <field description="Slave Deselect interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@SLVDESELCLR"
                offset="[15]"/>
         <field description="Monitor data Ready interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MONRDYCLR"
                offset="[16]"/>
         <field description="Monitor Overrun interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MONOVCLR"
                offset="[17]"/>
         <field description="Monitor Idle interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MONIDLECLR"
                offset="[19]"/>
         <field description="Event time-out interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@EVENTTIMEOUTCLR"
                offset="[24]"/>
         <field description="SCL time-out interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@SCLTIMEOUTCLR"
                offset="[25]"/>
      </register>
      <register description="Time-out value register." format="hex0x" id="I2C0@TIMEOUT"
                offset="0x810"
                size="4">
         <field description="Time-out time value, bottom four bits. These are hard-wired to 0xF. This gives a minimum time-out of 16 I2C function clocks and also a time-out resolution of 16 I2C function clocks."
                format="hex0x"
                id="I2C0@TIMEOUT@TOMIN"
                offset="[3:0]"/>
         <field description="Time-out time value. Specifies the time-out interval value in increments of 16 I 2C function clocks, as defined by the CLKDIV register. To change this value while I2C is in operation, disable all time-outs, write a new value to TIMEOUT, then re-enable time-outs. 0x000 = A time-out will occur after 16 counts of the I2C function clock. 0x001 = A time-out will occur after 32 counts of the I2C function clock. 0xFFF = A time-out will occur after 65,536 counts of the I2C function clock."
                format="hex0x"
                id="I2C0@TIMEOUT@TO"
                offset="[15:4]"/>
      </register>
      <register description="Clock pre-divider for the entire I2C interface. This determines what time increments are used for the MSTTIME register, and controls some timing of the Slave function."
                format="hex0x"
                id="I2C0@CLKDIV"
                offset="0x814"
                size="4">
         <field description="This field controls how the Flexcomm clock (FCLK) is used by the I2C functions that need an internal clock in order to operate. 0x0000 = FCLK is used directly by the I2C. 0x0001 = FCLK is divided by 2 before use. 0x0002 = FCLK is divided by 3 before use. 0xFFFF = FCLK is divided by 65,536 before use."
                format="hex0x"
                id="I2C0@CLKDIV@DIVVAL"
                offset="[15:0]"/>
      </register>
      <register description="Interrupt Status register for Master, Slave, and Monitor functions."
                format="hex0x"
                id="I2C0@INTSTAT"
                offset="0x818"
                readOnly="true"
                size="4">
         <field description="Master Pending." format="hex0x" id="I2C0@INTSTAT@MSTPENDING"
                offset="[0]"/>
         <field description="Master Arbitration Loss flag." format="hex0x"
                id="I2C0@INTSTAT@MSTARBLOSS"
                offset="[4]"/>
         <field description="Master Start/Stop Error flag." format="hex0x"
                id="I2C0@INTSTAT@MSTSTSTPERR"
                offset="[6]"/>
         <field description="Slave Pending." format="hex0x" id="I2C0@INTSTAT@SLVPENDING"
                offset="[8]"/>
         <field description="Slave Not Stretching status." format="hex0x"
                id="I2C0@INTSTAT@SLVNOTSTR"
                offset="[11]"/>
         <field description="Slave Deselected flag." format="hex0x" id="I2C0@INTSTAT@SLVDESEL"
                offset="[15]"/>
         <field description="Monitor Ready." format="hex0x" id="I2C0@INTSTAT@MONRDY"
                offset="[16]"/>
         <field description="Monitor Overflow flag." format="hex0x" id="I2C0@INTSTAT@MONOV"
                offset="[17]"/>
         <field description="Monitor Idle flag." format="hex0x" id="I2C0@INTSTAT@MONIDLE"
                offset="[19]"/>
         <field description="Event time-out Interrupt flag." format="hex0x"
                id="I2C0@INTSTAT@EVENTTIMEOUT"
                offset="[24]"/>
         <field description="SCL time-out Interrupt flag." format="hex0x"
                id="I2C0@INTSTAT@SCLTIMEOUT"
                offset="[25]"/>
      </register>
      <register description="Master control register." format="hex0x" id="I2C0@MSTCTL"
                offset="0x820"
                size="4">
         <field description="Master Continue. This bit is write-only." format="enum"
                enum="d1e130132"
                id="I2C0@MSTCTL@MSTCONTINUE"
                offset="[0]"/>
         <field description="Master Start control. This bit is write-only." format="enum"
                enum="d1e130178"
                id="I2C0@MSTCTL@MSTSTART"
                offset="[1]"/>
         <field description="Master Stop control. This bit is write-only." format="enum"
                enum="d1e130224"
                id="I2C0@MSTCTL@MSTSTOP"
                offset="[2]"/>
         <field description="Master DMA enable. Data operations of the I2C can be performed with DMA. Protocol type operations such as Start, address, Stop, and address match must always be done with software, typically via an interrupt. Address acknowledgement must also be done by software except when the I2C is configured to be HSCAPABLE (and address acknowledgement is handled entirely by hardware) or when Automatic Operation is enabled. When a DMA data transfer is complete, MSTDMA must be cleared prior to beginning the next operation, typically a Start or Stop.This bit is read/write."
                format="enum"
                enum="d1e130270"
                id="I2C0@MSTCTL@MSTDMA"
                offset="[3]"/>
      </register>
      <register description="Master timing configuration." format="hex0x" id="I2C0@MSTTIME"
                offset="0x824"
                size="4">
         <field description="Master SCL Low time. Specifies the minimum low time that will be asserted by this master on SCL. Other devices on the bus (masters or slaves) could lengthen this time. This corresponds to the parameter t LOW in the I2C bus specification. I2C bus specification parameters tBUF and tSU;STA have the same values and are also controlled by MSTSCLLOW."
                format="enum"
                enum="d1e130344"
                id="I2C0@MSTTIME@MSTSCLLOW"
                offset="[2:0]"/>
         <field description="Master SCL High time. Specifies the minimum high time that will be asserted by this master on SCL. Other masters in a multi-master system could shorten this time. This corresponds to the parameter tHIGH in the I2C bus specification. I2C bus specification parameters tSU;STO and tHD;STA have the same values and are also controlled by MSTSCLHIGH."
                format="enum"
                enum="d1e130463"
                id="I2C0@MSTTIME@MSTSCLHIGH"
                offset="[6:4]"/>
      </register>
      <register description="Combined Master receiver and transmitter data register."
                format="hex0x"
                id="I2C0@MSTDAT"
                offset="0x828"
                size="4">
         <field description="Master function data register. Read: read the most recently received data for the Master function. Write: transmit data using the Master function."
                format="hex0x"
                id="I2C0@MSTDAT@DATA"
                offset="[7:0]"/>
      </register>
      <register description="Slave control register." format="hex0x" id="I2C0@SLVCTL"
                offset="0x840"
                size="4">
         <field description="Slave Continue." format="enum" enum="d1e130656"
                id="I2C0@SLVCTL@SLVCONTINUE"
                offset="[0]"/>
         <field description="Slave NACK." format="enum" enum="d1e130702"
                id="I2C0@SLVCTL@SLVNACK"
                offset="[1]"/>
         <field description="Slave DMA enable." format="enum" enum="d1e130748"
                id="I2C0@SLVCTL@SLVDMA"
                offset="[3]"/>
         <field description="Automatic Acknowledge.When this bit is set, it will cause an I2C header which matches SLVADR0 and the direction set by AUTOMATCHREAD to be ACKed immediately; this is used with DMA to allow processing of the data without intervention. If this bit is clear and a header matches SLVADR0, the behavior is controlled by AUTONACK in the SLVADR0 register: allowing NACK or interrupt."
                format="enum"
                enum="d1e130794"
                id="I2C0@SLVCTL@AUTOACK"
                offset="[8]"/>
         <field description="When AUTOACK is set, this bit controls whether it matches a read or write request on the next header with an address matching SLVADR0. Since DMA needs to be configured to match the transfer direction, the direction needs to be specified. This bit allows a direction to be chosen for the next operation."
                format="enum"
                enum="d1e130840"
                id="I2C0@SLVCTL@AUTOMATCHREAD"
                offset="[9]"/>
      </register>
      <register description="Combined Slave receiver and transmitter data register."
                format="hex0x"
                id="I2C0@SLVDAT"
                offset="0x844"
                size="4">
         <field description="Slave function data register. Read: read the most recently received data for the Slave function. Write: transmit data using the Slave function."
                format="hex0x"
                id="I2C0@SLVDAT@DATA"
                offset="[7:0]"/>
      </register>
      <register description="Slave address register." format="hex0x" id="I2C0@SLVADR0"
                offset="0x848"
                size="4">
         <field description="Slave Address n Disable." format="enum" enum="d1e130967"
                id="I2C0@SLVADR0@SADISABLE"
                offset="[0]"/>
         <field description="Slave Address. Seven bit slave address that is compared to received addresses if enabled."
                format="hex0x"
                id="I2C0@SLVADR0@SLVADR"
                offset="[7:1]"/>
         <field description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations."
                format="enum"
                enum="d1e131031"
                id="I2C0@SLVADR0@AUTONACK"
                offset="[15]"/>
      </register>
      <register description="Slave address register." format="hex0x" id="I2C0@SLVADR1"
                offset="0x84c"
                size="4">
         <field description="Slave Address n Disable." format="enum" enum="d1e130967"
                id="I2C0@SLVADR1@SADISABLE"
                offset="[0]"/>
         <field description="Slave Address. Seven bit slave address that is compared to received addresses if enabled."
                format="hex0x"
                id="I2C0@SLVADR1@SLVADR"
                offset="[7:1]"/>
         <field description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations."
                format="enum"
                enum="d1e131031"
                id="I2C0@SLVADR1@AUTONACK"
                offset="[15]"/>
      </register>
      <register description="Slave address register." format="hex0x" id="I2C0@SLVADR2"
                offset="0x850"
                size="4">
         <field description="Slave Address n Disable." format="enum" enum="d1e130967"
                id="I2C0@SLVADR2@SADISABLE"
                offset="[0]"/>
         <field description="Slave Address. Seven bit slave address that is compared to received addresses if enabled."
                format="hex0x"
                id="I2C0@SLVADR2@SLVADR"
                offset="[7:1]"/>
         <field description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations."
                format="enum"
                enum="d1e131031"
                id="I2C0@SLVADR2@AUTONACK"
                offset="[15]"/>
      </register>
      <register description="Slave address register." format="hex0x" id="I2C0@SLVADR3"
                offset="0x854"
                size="4">
         <field description="Slave Address n Disable." format="enum" enum="d1e130967"
                id="I2C0@SLVADR3@SADISABLE"
                offset="[0]"/>
         <field description="Slave Address. Seven bit slave address that is compared to received addresses if enabled."
                format="hex0x"
                id="I2C0@SLVADR3@SLVADR"
                offset="[7:1]"/>
         <field description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations."
                format="enum"
                enum="d1e131031"
                id="I2C0@SLVADR3@AUTONACK"
                offset="[15]"/>
      </register>
      <register description="Slave Qualification for address 0." format="hex0x"
                id="I2C0@SLVQUAL0"
                offset="0x858"
                size="4">
         <field description="Qualify mode for slave address 0." format="enum" enum="d1e131105"
                id="I2C0@SLVQUAL0@QUALMODE0"
                offset="[0]"/>
         <field description="Slave address Qualifier for address 0. A value of 0 causes the address in SLVADR0 to be used as-is, assuming that it is enabled. If QUALMODE0 = 0, any bit in this field which is set to 1 will cause an automatic match of the corresponding bit of the received address when it is compared to the SLVADR0 register. If QUALMODE0 = 1, an address range is matched for address 0. This range extends from the value defined by SLVADR0 to the address defined by SLVQUAL0 (address matches when SLVADR0[7:1] &lt;= received address &lt;= SLVQUAL0[7:1])."
                format="hex0x"
                id="I2C0@SLVQUAL0@SLVQUAL0"
                offset="[7:1]"/>
      </register>
      <register description="Monitor receiver data register." format="hex0x" id="I2C0@MONRXDAT"
                offset="0x880"
                readOnly="true"
                size="4">
         <field description="Monitor function Receiver Data. This reflects every data byte that passes on the I2C pins."
                format="hex0x"
                id="I2C0@MONRXDAT@MONRXDAT"
                offset="[7:0]"/>
         <field description="Monitor Received Start." format="enum" enum="d1e131215"
                id="I2C0@MONRXDAT@MONSTART"
                offset="[8]"/>
         <field description="Monitor Received Repeated Start." format="enum" enum="d1e131261"
                id="I2C0@MONRXDAT@MONRESTART"
                offset="[9]"/>
         <field description="Monitor Received NACK." format="enum" enum="d1e131307"
                id="I2C0@MONRXDAT@MONNACK"
                offset="[10]"/>
      </register>
      <register description="Peripheral identification register." format="hex0x" id="I2C0@ID"
                offset="0xffc"
                readOnly="true"
                size="4">
         <field description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture."
                format="hex0x"
                id="I2C0@ID@APERTURE"
                offset="[7:0]"/>
         <field description="Minor revision of module implementation." format="hex0x"
                id="I2C0@ID@MINOR-REV"
                offset="[11:8]"/>
         <field description="Major revision of module implementation." format="hex0x"
                id="I2C0@ID@MAJOR-REV"
                offset="[15:12]"/>
         <field description="Module identifier for the selected function." format="hex0x"
                id="I2C0@ID@ID"
                offset="[31:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x I2C-bus interfaces" id="I2C3"
               size="0x1000">
      <register description="Configuration for shared functions." format="hex0x" id="I2C0@CFG"
                offset="0x800"
                size="4">
         <field description="Master Enable. When disabled, configurations settings for the Master function are not changed, but the Master function is internally reset."
                format="enum"
                enum="d1e127889"
                id="I2C0@CFG@MSTEN"
                offset="[0]"/>
         <field description="Slave Enable. When disabled, configurations settings for the Slave function are not changed, but the Slave function is internally reset."
                format="enum"
                enum="d1e127935"
                id="I2C0@CFG@SLVEN"
                offset="[1]"/>
         <field description="Monitor Enable. When disabled, configurations settings for the Monitor function are not changed, but the Monitor function is internally reset."
                format="enum"
                enum="d1e127981"
                id="I2C0@CFG@MONEN"
                offset="[2]"/>
         <field description="I2C bus Time-out Enable. When disabled, the time-out function is internally reset."
                format="enum"
                enum="d1e128027"
                id="I2C0@CFG@TIMEOUTEN"
                offset="[3]"/>
         <field description="Monitor function Clock Stretching." format="enum" enum="d1e128073"
                id="I2C0@CFG@MONCLKSTR"
                offset="[4]"/>
         <field description="High-speed mode Capable enable. Since High Speed mode alters the way I2C pins drive and filter, as well as the timing for certain I2C signalling, enabling High-speed mode applies to all functions: Master, Slave, and Monitor."
                format="enum"
                enum="d1e128120"
                id="I2C0@CFG@HSCAPABLE"
                offset="[5]"/>
      </register>
      <register description="Status register for Master, Slave, and Monitor functions."
                format="hex0x"
                id="I2C0@STAT"
                offset="0x804"
                size="4">
         <field description="Master Pending. Indicates that the Master is waiting to continue communication on the I2C-bus (pending) or is idle. When the master is pending, the MSTSTATE bits indicate what type of software service if any the master expects. This flag will cause an interrupt when set if, enabled via the INTENSET register. The MSTPENDING flag is not set when the DMA is handling an event (if the MSTDMA bit in the MSTCTL register is set). If the master is in the idle state, and no communication is needed, mask this interrupt."
                format="enum"
                enum="d1e128194"
                id="I2C0@STAT@MSTPENDING"
                offset="[0]"/>
         <field description="Master State code. The master state code reflects the master state when the MSTPENDING bit is set, that is the master is pending or in the idle state. Each value of this field indicates a specific required service for the Master function. All other values are reserved. See Table 400 for details of state values and appropriate responses."
                format="enum"
                enum="d1e128240"
                id="I2C0@STAT@MSTSTATE"
                offset="[3:1]"/>
         <field description="Master Arbitration Loss flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE."
                format="enum"
                enum="d1e128322"
                id="I2C0@STAT@MSTARBLOSS"
                offset="[4]"/>
         <field description="Master Start/Stop Error flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE."
                format="enum"
                enum="d1e128368"
                id="I2C0@STAT@MSTSTSTPERR"
                offset="[6]"/>
         <field description="Slave Pending. Indicates that the Slave function is waiting to continue communication on the I2C-bus and needs software service. This flag will cause an interrupt when set if enabled via INTENSET. The SLVPENDING flag is not set when the DMA is handling an event (if the SLVDMA bit in the SLVCTL register is set). The SLVPENDING flag is read-only and is automatically cleared when a 1 is written to the SLVCONTINUE bit in the SLVCTL register. The point in time when SlvPending is set depends on whether the I2C interface is in HSCAPABLE mode. See Section 25.7.2.2.2. When the I2C interface is configured to be HSCAPABLE, HS master codes are detected automatically. Due to the requirements of the HS I2C specification, slave addresses must also be detected automatically, since the address must be acknowledged before the clock can be stretched."
                format="enum"
                enum="d1e128414"
                id="I2C0@STAT@SLVPENDING"
                offset="[8]"/>
         <field description="Slave State code. Each value of this field indicates a specific required service for the Slave function. All other values are reserved. See Table 401 for state values and actions. note that the occurrence of some states and how they are handled are affected by DMA mode and Automatic Operation modes."
                format="enum"
                enum="d1e128461"
                id="I2C0@STAT@SLVSTATE"
                offset="[10:9]"/>
         <field description="Slave Not Stretching. Indicates when the slave function is stretching the I2C clock. This is needed in order to gracefully invoke Deep Sleep or Power-down modes during slave operation. This read-only flag reflects the slave function status in real time."
                format="enum"
                enum="d1e128519"
                id="I2C0@STAT@SLVNOTSTR"
                offset="[11]"/>
         <field description="Slave address match Index. This field is valid when the I2C slave function has been selected by receiving an address that matches one of the slave addresses defined by any enabled slave address registers, and provides an identification of the address that was matched. It is possible that more than one address could be matched, but only one match can be reported here."
                format="enum"
                enum="d1e128565"
                id="I2C0@STAT@SLVIDX"
                offset="[13:12]"/>
         <field description="Slave selected flag. SLVSEL is set after an address match when software tells the Slave function to acknowledge the address, or when the address has been automatically acknowledged. It is cleared when another address cycle presents an address that does not match an enabled address on the Slave function, when slave software decides to NACK a matched address, when there is a Stop detected on the bus, when the master NACKs slave data, and in some combinations of Automatic Operation. SLVSEL is not cleared if software NACKs data."
                format="enum"
                enum="d1e128635"
                id="I2C0@STAT@SLVSEL"
                offset="[14]"/>
         <field description="Slave Deselected flag. This flag will cause an interrupt when set if enabled via INTENSET. This flag can be cleared by writing a 1 to this bit."
                format="enum"
                enum="d1e128681"
                id="I2C0@STAT@SLVDESEL"
                offset="[15]"/>
         <field description="Monitor Ready. This flag is cleared when the MONRXDAT register is read."
                format="enum"
                enum="d1e128727"
                id="I2C0@STAT@MONRDY"
                offset="[16]"/>
         <field description="Monitor Overflow flag." format="enum" enum="d1e128774"
                id="I2C0@STAT@MONOV"
                offset="[17]"/>
         <field description="Monitor Active flag. Indicates when the Monitor function considers the I 2C bus to be active. Active is defined here as when some Master is on the bus: a bus Start has occurred more recently than a bus Stop."
                format="enum"
                enum="d1e128820"
                id="I2C0@STAT@MONACTIVE"
                offset="[18]"/>
         <field description="Monitor Idle flag. This flag is set when the Monitor function sees the I2C bus change from active to inactive. This can be used by software to decide when to process data accumulated by the Monitor function. This flag will cause an interrupt when set if enabled via the INTENSET register. The flag can be cleared by writing a 1 to this bit."
                format="enum"
                enum="d1e128866"
                id="I2C0@STAT@MONIDLE"
                offset="[19]"/>
         <field description="Event Time-out Interrupt flag. Indicates when the time between events has been longer than the time specified by the TIMEOUT register. Events include Start, Stop, and clock edges. The flag is cleared by writing a 1 to this bit. No time-out is created when the I2C-bus is idle."
                format="enum"
                enum="d1e128912"
                id="I2C0@STAT@EVENTTIMEOUT"
                offset="[24]"/>
         <field description="SCL Time-out Interrupt flag. Indicates when SCL has remained low longer than the time specific by the TIMEOUT register. The flag is cleared by writing a 1 to this bit."
                format="enum"
                enum="d1e128958"
                id="I2C0@STAT@SCLTIMEOUT"
                offset="[25]"/>
      </register>
      <register description="Interrupt Enable Set and read register." format="hex0x"
                id="I2C0@INTENSET"
                offset="0x808"
                size="4">
         <field description="Master Pending interrupt Enable." format="enum" enum="d1e129032"
                id="I2C0@INTENSET@MSTPENDINGEN"
                offset="[0]"/>
         <field description="Master Arbitration Loss interrupt Enable." format="enum"
                enum="d1e129078"
                id="I2C0@INTENSET@MSTARBLOSSEN"
                offset="[4]"/>
         <field description="Master Start/Stop Error interrupt Enable." format="enum"
                enum="d1e129124"
                id="I2C0@INTENSET@MSTSTSTPERREN"
                offset="[6]"/>
         <field description="Slave Pending interrupt Enable." format="enum" enum="d1e129170"
                id="I2C0@INTENSET@SLVPENDINGEN"
                offset="[8]"/>
         <field description="Slave Not Stretching interrupt Enable." format="enum"
                enum="d1e129216"
                id="I2C0@INTENSET@SLVNOTSTREN"
                offset="[11]"/>
         <field description="Slave Deselect interrupt Enable." format="enum" enum="d1e129263"
                id="I2C0@INTENSET@SLVDESELEN"
                offset="[15]"/>
         <field description="Monitor data Ready interrupt Enable." format="enum"
                enum="d1e129309"
                id="I2C0@INTENSET@MONRDYEN"
                offset="[16]"/>
         <field description="Monitor Overrun interrupt Enable." format="enum" enum="d1e129355"
                id="I2C0@INTENSET@MONOVEN"
                offset="[17]"/>
         <field description="Monitor Idle interrupt Enable." format="enum" enum="d1e129401"
                id="I2C0@INTENSET@MONIDLEEN"
                offset="[19]"/>
         <field description="Event time-out interrupt Enable." format="enum" enum="d1e129447"
                id="I2C0@INTENSET@EVENTTIMEOUTEN"
                offset="[24]"/>
         <field description="SCL time-out interrupt Enable." format="enum" enum="d1e129493"
                id="I2C0@INTENSET@SCLTIMEOUTEN"
                offset="[25]"/>
      </register>
      <register description="Interrupt Enable Clear register." format="hex0x"
                id="I2C0@INTENCLR"
                offset="0x80c"
                writeOnly="true"
                size="4">
         <field description="Master Pending interrupt clear. Writing 1 to this bit clears the corresponding bit in the INTENSET register if implemented."
                format="hex0x"
                id="I2C0@INTENCLR@MSTPENDINGCLR"
                offset="[0]"/>
         <field description="Master Arbitration Loss interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MSTARBLOSSCLR"
                offset="[4]"/>
         <field description="Master Start/Stop Error interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MSTSTSTPERRCLR"
                offset="[6]"/>
         <field description="Slave Pending interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@SLVPENDINGCLR"
                offset="[8]"/>
         <field description="Slave Not Stretching interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@SLVNOTSTRCLR"
                offset="[11]"/>
         <field description="Slave Deselect interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@SLVDESELCLR"
                offset="[15]"/>
         <field description="Monitor data Ready interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MONRDYCLR"
                offset="[16]"/>
         <field description="Monitor Overrun interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MONOVCLR"
                offset="[17]"/>
         <field description="Monitor Idle interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MONIDLECLR"
                offset="[19]"/>
         <field description="Event time-out interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@EVENTTIMEOUTCLR"
                offset="[24]"/>
         <field description="SCL time-out interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@SCLTIMEOUTCLR"
                offset="[25]"/>
      </register>
      <register description="Time-out value register." format="hex0x" id="I2C0@TIMEOUT"
                offset="0x810"
                size="4">
         <field description="Time-out time value, bottom four bits. These are hard-wired to 0xF. This gives a minimum time-out of 16 I2C function clocks and also a time-out resolution of 16 I2C function clocks."
                format="hex0x"
                id="I2C0@TIMEOUT@TOMIN"
                offset="[3:0]"/>
         <field description="Time-out time value. Specifies the time-out interval value in increments of 16 I 2C function clocks, as defined by the CLKDIV register. To change this value while I2C is in operation, disable all time-outs, write a new value to TIMEOUT, then re-enable time-outs. 0x000 = A time-out will occur after 16 counts of the I2C function clock. 0x001 = A time-out will occur after 32 counts of the I2C function clock. 0xFFF = A time-out will occur after 65,536 counts of the I2C function clock."
                format="hex0x"
                id="I2C0@TIMEOUT@TO"
                offset="[15:4]"/>
      </register>
      <register description="Clock pre-divider for the entire I2C interface. This determines what time increments are used for the MSTTIME register, and controls some timing of the Slave function."
                format="hex0x"
                id="I2C0@CLKDIV"
                offset="0x814"
                size="4">
         <field description="This field controls how the Flexcomm clock (FCLK) is used by the I2C functions that need an internal clock in order to operate. 0x0000 = FCLK is used directly by the I2C. 0x0001 = FCLK is divided by 2 before use. 0x0002 = FCLK is divided by 3 before use. 0xFFFF = FCLK is divided by 65,536 before use."
                format="hex0x"
                id="I2C0@CLKDIV@DIVVAL"
                offset="[15:0]"/>
      </register>
      <register description="Interrupt Status register for Master, Slave, and Monitor functions."
                format="hex0x"
                id="I2C0@INTSTAT"
                offset="0x818"
                readOnly="true"
                size="4">
         <field description="Master Pending." format="hex0x" id="I2C0@INTSTAT@MSTPENDING"
                offset="[0]"/>
         <field description="Master Arbitration Loss flag." format="hex0x"
                id="I2C0@INTSTAT@MSTARBLOSS"
                offset="[4]"/>
         <field description="Master Start/Stop Error flag." format="hex0x"
                id="I2C0@INTSTAT@MSTSTSTPERR"
                offset="[6]"/>
         <field description="Slave Pending." format="hex0x" id="I2C0@INTSTAT@SLVPENDING"
                offset="[8]"/>
         <field description="Slave Not Stretching status." format="hex0x"
                id="I2C0@INTSTAT@SLVNOTSTR"
                offset="[11]"/>
         <field description="Slave Deselected flag." format="hex0x" id="I2C0@INTSTAT@SLVDESEL"
                offset="[15]"/>
         <field description="Monitor Ready." format="hex0x" id="I2C0@INTSTAT@MONRDY"
                offset="[16]"/>
         <field description="Monitor Overflow flag." format="hex0x" id="I2C0@INTSTAT@MONOV"
                offset="[17]"/>
         <field description="Monitor Idle flag." format="hex0x" id="I2C0@INTSTAT@MONIDLE"
                offset="[19]"/>
         <field description="Event time-out Interrupt flag." format="hex0x"
                id="I2C0@INTSTAT@EVENTTIMEOUT"
                offset="[24]"/>
         <field description="SCL time-out Interrupt flag." format="hex0x"
                id="I2C0@INTSTAT@SCLTIMEOUT"
                offset="[25]"/>
      </register>
      <register description="Master control register." format="hex0x" id="I2C0@MSTCTL"
                offset="0x820"
                size="4">
         <field description="Master Continue. This bit is write-only." format="enum"
                enum="d1e130132"
                id="I2C0@MSTCTL@MSTCONTINUE"
                offset="[0]"/>
         <field description="Master Start control. This bit is write-only." format="enum"
                enum="d1e130178"
                id="I2C0@MSTCTL@MSTSTART"
                offset="[1]"/>
         <field description="Master Stop control. This bit is write-only." format="enum"
                enum="d1e130224"
                id="I2C0@MSTCTL@MSTSTOP"
                offset="[2]"/>
         <field description="Master DMA enable. Data operations of the I2C can be performed with DMA. Protocol type operations such as Start, address, Stop, and address match must always be done with software, typically via an interrupt. Address acknowledgement must also be done by software except when the I2C is configured to be HSCAPABLE (and address acknowledgement is handled entirely by hardware) or when Automatic Operation is enabled. When a DMA data transfer is complete, MSTDMA must be cleared prior to beginning the next operation, typically a Start or Stop.This bit is read/write."
                format="enum"
                enum="d1e130270"
                id="I2C0@MSTCTL@MSTDMA"
                offset="[3]"/>
      </register>
      <register description="Master timing configuration." format="hex0x" id="I2C0@MSTTIME"
                offset="0x824"
                size="4">
         <field description="Master SCL Low time. Specifies the minimum low time that will be asserted by this master on SCL. Other devices on the bus (masters or slaves) could lengthen this time. This corresponds to the parameter t LOW in the I2C bus specification. I2C bus specification parameters tBUF and tSU;STA have the same values and are also controlled by MSTSCLLOW."
                format="enum"
                enum="d1e130344"
                id="I2C0@MSTTIME@MSTSCLLOW"
                offset="[2:0]"/>
         <field description="Master SCL High time. Specifies the minimum high time that will be asserted by this master on SCL. Other masters in a multi-master system could shorten this time. This corresponds to the parameter tHIGH in the I2C bus specification. I2C bus specification parameters tSU;STO and tHD;STA have the same values and are also controlled by MSTSCLHIGH."
                format="enum"
                enum="d1e130463"
                id="I2C0@MSTTIME@MSTSCLHIGH"
                offset="[6:4]"/>
      </register>
      <register description="Combined Master receiver and transmitter data register."
                format="hex0x"
                id="I2C0@MSTDAT"
                offset="0x828"
                size="4">
         <field description="Master function data register. Read: read the most recently received data for the Master function. Write: transmit data using the Master function."
                format="hex0x"
                id="I2C0@MSTDAT@DATA"
                offset="[7:0]"/>
      </register>
      <register description="Slave control register." format="hex0x" id="I2C0@SLVCTL"
                offset="0x840"
                size="4">
         <field description="Slave Continue." format="enum" enum="d1e130656"
                id="I2C0@SLVCTL@SLVCONTINUE"
                offset="[0]"/>
         <field description="Slave NACK." format="enum" enum="d1e130702"
                id="I2C0@SLVCTL@SLVNACK"
                offset="[1]"/>
         <field description="Slave DMA enable." format="enum" enum="d1e130748"
                id="I2C0@SLVCTL@SLVDMA"
                offset="[3]"/>
         <field description="Automatic Acknowledge.When this bit is set, it will cause an I2C header which matches SLVADR0 and the direction set by AUTOMATCHREAD to be ACKed immediately; this is used with DMA to allow processing of the data without intervention. If this bit is clear and a header matches SLVADR0, the behavior is controlled by AUTONACK in the SLVADR0 register: allowing NACK or interrupt."
                format="enum"
                enum="d1e130794"
                id="I2C0@SLVCTL@AUTOACK"
                offset="[8]"/>
         <field description="When AUTOACK is set, this bit controls whether it matches a read or write request on the next header with an address matching SLVADR0. Since DMA needs to be configured to match the transfer direction, the direction needs to be specified. This bit allows a direction to be chosen for the next operation."
                format="enum"
                enum="d1e130840"
                id="I2C0@SLVCTL@AUTOMATCHREAD"
                offset="[9]"/>
      </register>
      <register description="Combined Slave receiver and transmitter data register."
                format="hex0x"
                id="I2C0@SLVDAT"
                offset="0x844"
                size="4">
         <field description="Slave function data register. Read: read the most recently received data for the Slave function. Write: transmit data using the Slave function."
                format="hex0x"
                id="I2C0@SLVDAT@DATA"
                offset="[7:0]"/>
      </register>
      <register description="Slave address register." format="hex0x" id="I2C0@SLVADR0"
                offset="0x848"
                size="4">
         <field description="Slave Address n Disable." format="enum" enum="d1e130967"
                id="I2C0@SLVADR0@SADISABLE"
                offset="[0]"/>
         <field description="Slave Address. Seven bit slave address that is compared to received addresses if enabled."
                format="hex0x"
                id="I2C0@SLVADR0@SLVADR"
                offset="[7:1]"/>
         <field description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations."
                format="enum"
                enum="d1e131031"
                id="I2C0@SLVADR0@AUTONACK"
                offset="[15]"/>
      </register>
      <register description="Slave address register." format="hex0x" id="I2C0@SLVADR1"
                offset="0x84c"
                size="4">
         <field description="Slave Address n Disable." format="enum" enum="d1e130967"
                id="I2C0@SLVADR1@SADISABLE"
                offset="[0]"/>
         <field description="Slave Address. Seven bit slave address that is compared to received addresses if enabled."
                format="hex0x"
                id="I2C0@SLVADR1@SLVADR"
                offset="[7:1]"/>
         <field description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations."
                format="enum"
                enum="d1e131031"
                id="I2C0@SLVADR1@AUTONACK"
                offset="[15]"/>
      </register>
      <register description="Slave address register." format="hex0x" id="I2C0@SLVADR2"
                offset="0x850"
                size="4">
         <field description="Slave Address n Disable." format="enum" enum="d1e130967"
                id="I2C0@SLVADR2@SADISABLE"
                offset="[0]"/>
         <field description="Slave Address. Seven bit slave address that is compared to received addresses if enabled."
                format="hex0x"
                id="I2C0@SLVADR2@SLVADR"
                offset="[7:1]"/>
         <field description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations."
                format="enum"
                enum="d1e131031"
                id="I2C0@SLVADR2@AUTONACK"
                offset="[15]"/>
      </register>
      <register description="Slave address register." format="hex0x" id="I2C0@SLVADR3"
                offset="0x854"
                size="4">
         <field description="Slave Address n Disable." format="enum" enum="d1e130967"
                id="I2C0@SLVADR3@SADISABLE"
                offset="[0]"/>
         <field description="Slave Address. Seven bit slave address that is compared to received addresses if enabled."
                format="hex0x"
                id="I2C0@SLVADR3@SLVADR"
                offset="[7:1]"/>
         <field description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations."
                format="enum"
                enum="d1e131031"
                id="I2C0@SLVADR3@AUTONACK"
                offset="[15]"/>
      </register>
      <register description="Slave Qualification for address 0." format="hex0x"
                id="I2C0@SLVQUAL0"
                offset="0x858"
                size="4">
         <field description="Qualify mode for slave address 0." format="enum" enum="d1e131105"
                id="I2C0@SLVQUAL0@QUALMODE0"
                offset="[0]"/>
         <field description="Slave address Qualifier for address 0. A value of 0 causes the address in SLVADR0 to be used as-is, assuming that it is enabled. If QUALMODE0 = 0, any bit in this field which is set to 1 will cause an automatic match of the corresponding bit of the received address when it is compared to the SLVADR0 register. If QUALMODE0 = 1, an address range is matched for address 0. This range extends from the value defined by SLVADR0 to the address defined by SLVQUAL0 (address matches when SLVADR0[7:1] &lt;= received address &lt;= SLVQUAL0[7:1])."
                format="hex0x"
                id="I2C0@SLVQUAL0@SLVQUAL0"
                offset="[7:1]"/>
      </register>
      <register description="Monitor receiver data register." format="hex0x" id="I2C0@MONRXDAT"
                offset="0x880"
                readOnly="true"
                size="4">
         <field description="Monitor function Receiver Data. This reflects every data byte that passes on the I2C pins."
                format="hex0x"
                id="I2C0@MONRXDAT@MONRXDAT"
                offset="[7:0]"/>
         <field description="Monitor Received Start." format="enum" enum="d1e131215"
                id="I2C0@MONRXDAT@MONSTART"
                offset="[8]"/>
         <field description="Monitor Received Repeated Start." format="enum" enum="d1e131261"
                id="I2C0@MONRXDAT@MONRESTART"
                offset="[9]"/>
         <field description="Monitor Received NACK." format="enum" enum="d1e131307"
                id="I2C0@MONRXDAT@MONNACK"
                offset="[10]"/>
      </register>
      <register description="Peripheral identification register." format="hex0x" id="I2C0@ID"
                offset="0xffc"
                readOnly="true"
                size="4">
         <field description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture."
                format="hex0x"
                id="I2C0@ID@APERTURE"
                offset="[7:0]"/>
         <field description="Minor revision of module implementation." format="hex0x"
                id="I2C0@ID@MINOR-REV"
                offset="[11:8]"/>
         <field description="Major revision of module implementation." format="hex0x"
                id="I2C0@ID@MAJOR-REV"
                offset="[15:12]"/>
         <field description="Module identifier for the selected function." format="hex0x"
                id="I2C0@ID@ID"
                offset="[31:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x I2C-bus interfaces" id="I2C4"
               size="0x1000">
      <register description="Configuration for shared functions." format="hex0x" id="I2C0@CFG"
                offset="0x800"
                size="4">
         <field description="Master Enable. When disabled, configurations settings for the Master function are not changed, but the Master function is internally reset."
                format="enum"
                enum="d1e127889"
                id="I2C0@CFG@MSTEN"
                offset="[0]"/>
         <field description="Slave Enable. When disabled, configurations settings for the Slave function are not changed, but the Slave function is internally reset."
                format="enum"
                enum="d1e127935"
                id="I2C0@CFG@SLVEN"
                offset="[1]"/>
         <field description="Monitor Enable. When disabled, configurations settings for the Monitor function are not changed, but the Monitor function is internally reset."
                format="enum"
                enum="d1e127981"
                id="I2C0@CFG@MONEN"
                offset="[2]"/>
         <field description="I2C bus Time-out Enable. When disabled, the time-out function is internally reset."
                format="enum"
                enum="d1e128027"
                id="I2C0@CFG@TIMEOUTEN"
                offset="[3]"/>
         <field description="Monitor function Clock Stretching." format="enum" enum="d1e128073"
                id="I2C0@CFG@MONCLKSTR"
                offset="[4]"/>
         <field description="High-speed mode Capable enable. Since High Speed mode alters the way I2C pins drive and filter, as well as the timing for certain I2C signalling, enabling High-speed mode applies to all functions: Master, Slave, and Monitor."
                format="enum"
                enum="d1e128120"
                id="I2C0@CFG@HSCAPABLE"
                offset="[5]"/>
      </register>
      <register description="Status register for Master, Slave, and Monitor functions."
                format="hex0x"
                id="I2C0@STAT"
                offset="0x804"
                size="4">
         <field description="Master Pending. Indicates that the Master is waiting to continue communication on the I2C-bus (pending) or is idle. When the master is pending, the MSTSTATE bits indicate what type of software service if any the master expects. This flag will cause an interrupt when set if, enabled via the INTENSET register. The MSTPENDING flag is not set when the DMA is handling an event (if the MSTDMA bit in the MSTCTL register is set). If the master is in the idle state, and no communication is needed, mask this interrupt."
                format="enum"
                enum="d1e128194"
                id="I2C0@STAT@MSTPENDING"
                offset="[0]"/>
         <field description="Master State code. The master state code reflects the master state when the MSTPENDING bit is set, that is the master is pending or in the idle state. Each value of this field indicates a specific required service for the Master function. All other values are reserved. See Table 400 for details of state values and appropriate responses."
                format="enum"
                enum="d1e128240"
                id="I2C0@STAT@MSTSTATE"
                offset="[3:1]"/>
         <field description="Master Arbitration Loss flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE."
                format="enum"
                enum="d1e128322"
                id="I2C0@STAT@MSTARBLOSS"
                offset="[4]"/>
         <field description="Master Start/Stop Error flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE."
                format="enum"
                enum="d1e128368"
                id="I2C0@STAT@MSTSTSTPERR"
                offset="[6]"/>
         <field description="Slave Pending. Indicates that the Slave function is waiting to continue communication on the I2C-bus and needs software service. This flag will cause an interrupt when set if enabled via INTENSET. The SLVPENDING flag is not set when the DMA is handling an event (if the SLVDMA bit in the SLVCTL register is set). The SLVPENDING flag is read-only and is automatically cleared when a 1 is written to the SLVCONTINUE bit in the SLVCTL register. The point in time when SlvPending is set depends on whether the I2C interface is in HSCAPABLE mode. See Section 25.7.2.2.2. When the I2C interface is configured to be HSCAPABLE, HS master codes are detected automatically. Due to the requirements of the HS I2C specification, slave addresses must also be detected automatically, since the address must be acknowledged before the clock can be stretched."
                format="enum"
                enum="d1e128414"
                id="I2C0@STAT@SLVPENDING"
                offset="[8]"/>
         <field description="Slave State code. Each value of this field indicates a specific required service for the Slave function. All other values are reserved. See Table 401 for state values and actions. note that the occurrence of some states and how they are handled are affected by DMA mode and Automatic Operation modes."
                format="enum"
                enum="d1e128461"
                id="I2C0@STAT@SLVSTATE"
                offset="[10:9]"/>
         <field description="Slave Not Stretching. Indicates when the slave function is stretching the I2C clock. This is needed in order to gracefully invoke Deep Sleep or Power-down modes during slave operation. This read-only flag reflects the slave function status in real time."
                format="enum"
                enum="d1e128519"
                id="I2C0@STAT@SLVNOTSTR"
                offset="[11]"/>
         <field description="Slave address match Index. This field is valid when the I2C slave function has been selected by receiving an address that matches one of the slave addresses defined by any enabled slave address registers, and provides an identification of the address that was matched. It is possible that more than one address could be matched, but only one match can be reported here."
                format="enum"
                enum="d1e128565"
                id="I2C0@STAT@SLVIDX"
                offset="[13:12]"/>
         <field description="Slave selected flag. SLVSEL is set after an address match when software tells the Slave function to acknowledge the address, or when the address has been automatically acknowledged. It is cleared when another address cycle presents an address that does not match an enabled address on the Slave function, when slave software decides to NACK a matched address, when there is a Stop detected on the bus, when the master NACKs slave data, and in some combinations of Automatic Operation. SLVSEL is not cleared if software NACKs data."
                format="enum"
                enum="d1e128635"
                id="I2C0@STAT@SLVSEL"
                offset="[14]"/>
         <field description="Slave Deselected flag. This flag will cause an interrupt when set if enabled via INTENSET. This flag can be cleared by writing a 1 to this bit."
                format="enum"
                enum="d1e128681"
                id="I2C0@STAT@SLVDESEL"
                offset="[15]"/>
         <field description="Monitor Ready. This flag is cleared when the MONRXDAT register is read."
                format="enum"
                enum="d1e128727"
                id="I2C0@STAT@MONRDY"
                offset="[16]"/>
         <field description="Monitor Overflow flag." format="enum" enum="d1e128774"
                id="I2C0@STAT@MONOV"
                offset="[17]"/>
         <field description="Monitor Active flag. Indicates when the Monitor function considers the I 2C bus to be active. Active is defined here as when some Master is on the bus: a bus Start has occurred more recently than a bus Stop."
                format="enum"
                enum="d1e128820"
                id="I2C0@STAT@MONACTIVE"
                offset="[18]"/>
         <field description="Monitor Idle flag. This flag is set when the Monitor function sees the I2C bus change from active to inactive. This can be used by software to decide when to process data accumulated by the Monitor function. This flag will cause an interrupt when set if enabled via the INTENSET register. The flag can be cleared by writing a 1 to this bit."
                format="enum"
                enum="d1e128866"
                id="I2C0@STAT@MONIDLE"
                offset="[19]"/>
         <field description="Event Time-out Interrupt flag. Indicates when the time between events has been longer than the time specified by the TIMEOUT register. Events include Start, Stop, and clock edges. The flag is cleared by writing a 1 to this bit. No time-out is created when the I2C-bus is idle."
                format="enum"
                enum="d1e128912"
                id="I2C0@STAT@EVENTTIMEOUT"
                offset="[24]"/>
         <field description="SCL Time-out Interrupt flag. Indicates when SCL has remained low longer than the time specific by the TIMEOUT register. The flag is cleared by writing a 1 to this bit."
                format="enum"
                enum="d1e128958"
                id="I2C0@STAT@SCLTIMEOUT"
                offset="[25]"/>
      </register>
      <register description="Interrupt Enable Set and read register." format="hex0x"
                id="I2C0@INTENSET"
                offset="0x808"
                size="4">
         <field description="Master Pending interrupt Enable." format="enum" enum="d1e129032"
                id="I2C0@INTENSET@MSTPENDINGEN"
                offset="[0]"/>
         <field description="Master Arbitration Loss interrupt Enable." format="enum"
                enum="d1e129078"
                id="I2C0@INTENSET@MSTARBLOSSEN"
                offset="[4]"/>
         <field description="Master Start/Stop Error interrupt Enable." format="enum"
                enum="d1e129124"
                id="I2C0@INTENSET@MSTSTSTPERREN"
                offset="[6]"/>
         <field description="Slave Pending interrupt Enable." format="enum" enum="d1e129170"
                id="I2C0@INTENSET@SLVPENDINGEN"
                offset="[8]"/>
         <field description="Slave Not Stretching interrupt Enable." format="enum"
                enum="d1e129216"
                id="I2C0@INTENSET@SLVNOTSTREN"
                offset="[11]"/>
         <field description="Slave Deselect interrupt Enable." format="enum" enum="d1e129263"
                id="I2C0@INTENSET@SLVDESELEN"
                offset="[15]"/>
         <field description="Monitor data Ready interrupt Enable." format="enum"
                enum="d1e129309"
                id="I2C0@INTENSET@MONRDYEN"
                offset="[16]"/>
         <field description="Monitor Overrun interrupt Enable." format="enum" enum="d1e129355"
                id="I2C0@INTENSET@MONOVEN"
                offset="[17]"/>
         <field description="Monitor Idle interrupt Enable." format="enum" enum="d1e129401"
                id="I2C0@INTENSET@MONIDLEEN"
                offset="[19]"/>
         <field description="Event time-out interrupt Enable." format="enum" enum="d1e129447"
                id="I2C0@INTENSET@EVENTTIMEOUTEN"
                offset="[24]"/>
         <field description="SCL time-out interrupt Enable." format="enum" enum="d1e129493"
                id="I2C0@INTENSET@SCLTIMEOUTEN"
                offset="[25]"/>
      </register>
      <register description="Interrupt Enable Clear register." format="hex0x"
                id="I2C0@INTENCLR"
                offset="0x80c"
                writeOnly="true"
                size="4">
         <field description="Master Pending interrupt clear. Writing 1 to this bit clears the corresponding bit in the INTENSET register if implemented."
                format="hex0x"
                id="I2C0@INTENCLR@MSTPENDINGCLR"
                offset="[0]"/>
         <field description="Master Arbitration Loss interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MSTARBLOSSCLR"
                offset="[4]"/>
         <field description="Master Start/Stop Error interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MSTSTSTPERRCLR"
                offset="[6]"/>
         <field description="Slave Pending interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@SLVPENDINGCLR"
                offset="[8]"/>
         <field description="Slave Not Stretching interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@SLVNOTSTRCLR"
                offset="[11]"/>
         <field description="Slave Deselect interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@SLVDESELCLR"
                offset="[15]"/>
         <field description="Monitor data Ready interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MONRDYCLR"
                offset="[16]"/>
         <field description="Monitor Overrun interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MONOVCLR"
                offset="[17]"/>
         <field description="Monitor Idle interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MONIDLECLR"
                offset="[19]"/>
         <field description="Event time-out interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@EVENTTIMEOUTCLR"
                offset="[24]"/>
         <field description="SCL time-out interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@SCLTIMEOUTCLR"
                offset="[25]"/>
      </register>
      <register description="Time-out value register." format="hex0x" id="I2C0@TIMEOUT"
                offset="0x810"
                size="4">
         <field description="Time-out time value, bottom four bits. These are hard-wired to 0xF. This gives a minimum time-out of 16 I2C function clocks and also a time-out resolution of 16 I2C function clocks."
                format="hex0x"
                id="I2C0@TIMEOUT@TOMIN"
                offset="[3:0]"/>
         <field description="Time-out time value. Specifies the time-out interval value in increments of 16 I 2C function clocks, as defined by the CLKDIV register. To change this value while I2C is in operation, disable all time-outs, write a new value to TIMEOUT, then re-enable time-outs. 0x000 = A time-out will occur after 16 counts of the I2C function clock. 0x001 = A time-out will occur after 32 counts of the I2C function clock. 0xFFF = A time-out will occur after 65,536 counts of the I2C function clock."
                format="hex0x"
                id="I2C0@TIMEOUT@TO"
                offset="[15:4]"/>
      </register>
      <register description="Clock pre-divider for the entire I2C interface. This determines what time increments are used for the MSTTIME register, and controls some timing of the Slave function."
                format="hex0x"
                id="I2C0@CLKDIV"
                offset="0x814"
                size="4">
         <field description="This field controls how the Flexcomm clock (FCLK) is used by the I2C functions that need an internal clock in order to operate. 0x0000 = FCLK is used directly by the I2C. 0x0001 = FCLK is divided by 2 before use. 0x0002 = FCLK is divided by 3 before use. 0xFFFF = FCLK is divided by 65,536 before use."
                format="hex0x"
                id="I2C0@CLKDIV@DIVVAL"
                offset="[15:0]"/>
      </register>
      <register description="Interrupt Status register for Master, Slave, and Monitor functions."
                format="hex0x"
                id="I2C0@INTSTAT"
                offset="0x818"
                readOnly="true"
                size="4">
         <field description="Master Pending." format="hex0x" id="I2C0@INTSTAT@MSTPENDING"
                offset="[0]"/>
         <field description="Master Arbitration Loss flag." format="hex0x"
                id="I2C0@INTSTAT@MSTARBLOSS"
                offset="[4]"/>
         <field description="Master Start/Stop Error flag." format="hex0x"
                id="I2C0@INTSTAT@MSTSTSTPERR"
                offset="[6]"/>
         <field description="Slave Pending." format="hex0x" id="I2C0@INTSTAT@SLVPENDING"
                offset="[8]"/>
         <field description="Slave Not Stretching status." format="hex0x"
                id="I2C0@INTSTAT@SLVNOTSTR"
                offset="[11]"/>
         <field description="Slave Deselected flag." format="hex0x" id="I2C0@INTSTAT@SLVDESEL"
                offset="[15]"/>
         <field description="Monitor Ready." format="hex0x" id="I2C0@INTSTAT@MONRDY"
                offset="[16]"/>
         <field description="Monitor Overflow flag." format="hex0x" id="I2C0@INTSTAT@MONOV"
                offset="[17]"/>
         <field description="Monitor Idle flag." format="hex0x" id="I2C0@INTSTAT@MONIDLE"
                offset="[19]"/>
         <field description="Event time-out Interrupt flag." format="hex0x"
                id="I2C0@INTSTAT@EVENTTIMEOUT"
                offset="[24]"/>
         <field description="SCL time-out Interrupt flag." format="hex0x"
                id="I2C0@INTSTAT@SCLTIMEOUT"
                offset="[25]"/>
      </register>
      <register description="Master control register." format="hex0x" id="I2C0@MSTCTL"
                offset="0x820"
                size="4">
         <field description="Master Continue. This bit is write-only." format="enum"
                enum="d1e130132"
                id="I2C0@MSTCTL@MSTCONTINUE"
                offset="[0]"/>
         <field description="Master Start control. This bit is write-only." format="enum"
                enum="d1e130178"
                id="I2C0@MSTCTL@MSTSTART"
                offset="[1]"/>
         <field description="Master Stop control. This bit is write-only." format="enum"
                enum="d1e130224"
                id="I2C0@MSTCTL@MSTSTOP"
                offset="[2]"/>
         <field description="Master DMA enable. Data operations of the I2C can be performed with DMA. Protocol type operations such as Start, address, Stop, and address match must always be done with software, typically via an interrupt. Address acknowledgement must also be done by software except when the I2C is configured to be HSCAPABLE (and address acknowledgement is handled entirely by hardware) or when Automatic Operation is enabled. When a DMA data transfer is complete, MSTDMA must be cleared prior to beginning the next operation, typically a Start or Stop.This bit is read/write."
                format="enum"
                enum="d1e130270"
                id="I2C0@MSTCTL@MSTDMA"
                offset="[3]"/>
      </register>
      <register description="Master timing configuration." format="hex0x" id="I2C0@MSTTIME"
                offset="0x824"
                size="4">
         <field description="Master SCL Low time. Specifies the minimum low time that will be asserted by this master on SCL. Other devices on the bus (masters or slaves) could lengthen this time. This corresponds to the parameter t LOW in the I2C bus specification. I2C bus specification parameters tBUF and tSU;STA have the same values and are also controlled by MSTSCLLOW."
                format="enum"
                enum="d1e130344"
                id="I2C0@MSTTIME@MSTSCLLOW"
                offset="[2:0]"/>
         <field description="Master SCL High time. Specifies the minimum high time that will be asserted by this master on SCL. Other masters in a multi-master system could shorten this time. This corresponds to the parameter tHIGH in the I2C bus specification. I2C bus specification parameters tSU;STO and tHD;STA have the same values and are also controlled by MSTSCLHIGH."
                format="enum"
                enum="d1e130463"
                id="I2C0@MSTTIME@MSTSCLHIGH"
                offset="[6:4]"/>
      </register>
      <register description="Combined Master receiver and transmitter data register."
                format="hex0x"
                id="I2C0@MSTDAT"
                offset="0x828"
                size="4">
         <field description="Master function data register. Read: read the most recently received data for the Master function. Write: transmit data using the Master function."
                format="hex0x"
                id="I2C0@MSTDAT@DATA"
                offset="[7:0]"/>
      </register>
      <register description="Slave control register." format="hex0x" id="I2C0@SLVCTL"
                offset="0x840"
                size="4">
         <field description="Slave Continue." format="enum" enum="d1e130656"
                id="I2C0@SLVCTL@SLVCONTINUE"
                offset="[0]"/>
         <field description="Slave NACK." format="enum" enum="d1e130702"
                id="I2C0@SLVCTL@SLVNACK"
                offset="[1]"/>
         <field description="Slave DMA enable." format="enum" enum="d1e130748"
                id="I2C0@SLVCTL@SLVDMA"
                offset="[3]"/>
         <field description="Automatic Acknowledge.When this bit is set, it will cause an I2C header which matches SLVADR0 and the direction set by AUTOMATCHREAD to be ACKed immediately; this is used with DMA to allow processing of the data without intervention. If this bit is clear and a header matches SLVADR0, the behavior is controlled by AUTONACK in the SLVADR0 register: allowing NACK or interrupt."
                format="enum"
                enum="d1e130794"
                id="I2C0@SLVCTL@AUTOACK"
                offset="[8]"/>
         <field description="When AUTOACK is set, this bit controls whether it matches a read or write request on the next header with an address matching SLVADR0. Since DMA needs to be configured to match the transfer direction, the direction needs to be specified. This bit allows a direction to be chosen for the next operation."
                format="enum"
                enum="d1e130840"
                id="I2C0@SLVCTL@AUTOMATCHREAD"
                offset="[9]"/>
      </register>
      <register description="Combined Slave receiver and transmitter data register."
                format="hex0x"
                id="I2C0@SLVDAT"
                offset="0x844"
                size="4">
         <field description="Slave function data register. Read: read the most recently received data for the Slave function. Write: transmit data using the Slave function."
                format="hex0x"
                id="I2C0@SLVDAT@DATA"
                offset="[7:0]"/>
      </register>
      <register description="Slave address register." format="hex0x" id="I2C0@SLVADR0"
                offset="0x848"
                size="4">
         <field description="Slave Address n Disable." format="enum" enum="d1e130967"
                id="I2C0@SLVADR0@SADISABLE"
                offset="[0]"/>
         <field description="Slave Address. Seven bit slave address that is compared to received addresses if enabled."
                format="hex0x"
                id="I2C0@SLVADR0@SLVADR"
                offset="[7:1]"/>
         <field description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations."
                format="enum"
                enum="d1e131031"
                id="I2C0@SLVADR0@AUTONACK"
                offset="[15]"/>
      </register>
      <register description="Slave address register." format="hex0x" id="I2C0@SLVADR1"
                offset="0x84c"
                size="4">
         <field description="Slave Address n Disable." format="enum" enum="d1e130967"
                id="I2C0@SLVADR1@SADISABLE"
                offset="[0]"/>
         <field description="Slave Address. Seven bit slave address that is compared to received addresses if enabled."
                format="hex0x"
                id="I2C0@SLVADR1@SLVADR"
                offset="[7:1]"/>
         <field description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations."
                format="enum"
                enum="d1e131031"
                id="I2C0@SLVADR1@AUTONACK"
                offset="[15]"/>
      </register>
      <register description="Slave address register." format="hex0x" id="I2C0@SLVADR2"
                offset="0x850"
                size="4">
         <field description="Slave Address n Disable." format="enum" enum="d1e130967"
                id="I2C0@SLVADR2@SADISABLE"
                offset="[0]"/>
         <field description="Slave Address. Seven bit slave address that is compared to received addresses if enabled."
                format="hex0x"
                id="I2C0@SLVADR2@SLVADR"
                offset="[7:1]"/>
         <field description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations."
                format="enum"
                enum="d1e131031"
                id="I2C0@SLVADR2@AUTONACK"
                offset="[15]"/>
      </register>
      <register description="Slave address register." format="hex0x" id="I2C0@SLVADR3"
                offset="0x854"
                size="4">
         <field description="Slave Address n Disable." format="enum" enum="d1e130967"
                id="I2C0@SLVADR3@SADISABLE"
                offset="[0]"/>
         <field description="Slave Address. Seven bit slave address that is compared to received addresses if enabled."
                format="hex0x"
                id="I2C0@SLVADR3@SLVADR"
                offset="[7:1]"/>
         <field description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations."
                format="enum"
                enum="d1e131031"
                id="I2C0@SLVADR3@AUTONACK"
                offset="[15]"/>
      </register>
      <register description="Slave Qualification for address 0." format="hex0x"
                id="I2C0@SLVQUAL0"
                offset="0x858"
                size="4">
         <field description="Qualify mode for slave address 0." format="enum" enum="d1e131105"
                id="I2C0@SLVQUAL0@QUALMODE0"
                offset="[0]"/>
         <field description="Slave address Qualifier for address 0. A value of 0 causes the address in SLVADR0 to be used as-is, assuming that it is enabled. If QUALMODE0 = 0, any bit in this field which is set to 1 will cause an automatic match of the corresponding bit of the received address when it is compared to the SLVADR0 register. If QUALMODE0 = 1, an address range is matched for address 0. This range extends from the value defined by SLVADR0 to the address defined by SLVQUAL0 (address matches when SLVADR0[7:1] &lt;= received address &lt;= SLVQUAL0[7:1])."
                format="hex0x"
                id="I2C0@SLVQUAL0@SLVQUAL0"
                offset="[7:1]"/>
      </register>
      <register description="Monitor receiver data register." format="hex0x" id="I2C0@MONRXDAT"
                offset="0x880"
                readOnly="true"
                size="4">
         <field description="Monitor function Receiver Data. This reflects every data byte that passes on the I2C pins."
                format="hex0x"
                id="I2C0@MONRXDAT@MONRXDAT"
                offset="[7:0]"/>
         <field description="Monitor Received Start." format="enum" enum="d1e131215"
                id="I2C0@MONRXDAT@MONSTART"
                offset="[8]"/>
         <field description="Monitor Received Repeated Start." format="enum" enum="d1e131261"
                id="I2C0@MONRXDAT@MONRESTART"
                offset="[9]"/>
         <field description="Monitor Received NACK." format="enum" enum="d1e131307"
                id="I2C0@MONRXDAT@MONNACK"
                offset="[10]"/>
      </register>
      <register description="Peripheral identification register." format="hex0x" id="I2C0@ID"
                offset="0xffc"
                readOnly="true"
                size="4">
         <field description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture."
                format="hex0x"
                id="I2C0@ID@APERTURE"
                offset="[7:0]"/>
         <field description="Minor revision of module implementation." format="hex0x"
                id="I2C0@ID@MINOR-REV"
                offset="[11:8]"/>
         <field description="Major revision of module implementation." format="hex0x"
                id="I2C0@ID@MAJOR-REV"
                offset="[15:12]"/>
         <field description="Module identifier for the selected function." format="hex0x"
                id="I2C0@ID@ID"
                offset="[31:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x I2C-bus interfaces" id="I2C5"
               size="0x1000">
      <register description="Configuration for shared functions." format="hex0x" id="I2C0@CFG"
                offset="0x800"
                size="4">
         <field description="Master Enable. When disabled, configurations settings for the Master function are not changed, but the Master function is internally reset."
                format="enum"
                enum="d1e127889"
                id="I2C0@CFG@MSTEN"
                offset="[0]"/>
         <field description="Slave Enable. When disabled, configurations settings for the Slave function are not changed, but the Slave function is internally reset."
                format="enum"
                enum="d1e127935"
                id="I2C0@CFG@SLVEN"
                offset="[1]"/>
         <field description="Monitor Enable. When disabled, configurations settings for the Monitor function are not changed, but the Monitor function is internally reset."
                format="enum"
                enum="d1e127981"
                id="I2C0@CFG@MONEN"
                offset="[2]"/>
         <field description="I2C bus Time-out Enable. When disabled, the time-out function is internally reset."
                format="enum"
                enum="d1e128027"
                id="I2C0@CFG@TIMEOUTEN"
                offset="[3]"/>
         <field description="Monitor function Clock Stretching." format="enum" enum="d1e128073"
                id="I2C0@CFG@MONCLKSTR"
                offset="[4]"/>
         <field description="High-speed mode Capable enable. Since High Speed mode alters the way I2C pins drive and filter, as well as the timing for certain I2C signalling, enabling High-speed mode applies to all functions: Master, Slave, and Monitor."
                format="enum"
                enum="d1e128120"
                id="I2C0@CFG@HSCAPABLE"
                offset="[5]"/>
      </register>
      <register description="Status register for Master, Slave, and Monitor functions."
                format="hex0x"
                id="I2C0@STAT"
                offset="0x804"
                size="4">
         <field description="Master Pending. Indicates that the Master is waiting to continue communication on the I2C-bus (pending) or is idle. When the master is pending, the MSTSTATE bits indicate what type of software service if any the master expects. This flag will cause an interrupt when set if, enabled via the INTENSET register. The MSTPENDING flag is not set when the DMA is handling an event (if the MSTDMA bit in the MSTCTL register is set). If the master is in the idle state, and no communication is needed, mask this interrupt."
                format="enum"
                enum="d1e128194"
                id="I2C0@STAT@MSTPENDING"
                offset="[0]"/>
         <field description="Master State code. The master state code reflects the master state when the MSTPENDING bit is set, that is the master is pending or in the idle state. Each value of this field indicates a specific required service for the Master function. All other values are reserved. See Table 400 for details of state values and appropriate responses."
                format="enum"
                enum="d1e128240"
                id="I2C0@STAT@MSTSTATE"
                offset="[3:1]"/>
         <field description="Master Arbitration Loss flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE."
                format="enum"
                enum="d1e128322"
                id="I2C0@STAT@MSTARBLOSS"
                offset="[4]"/>
         <field description="Master Start/Stop Error flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE."
                format="enum"
                enum="d1e128368"
                id="I2C0@STAT@MSTSTSTPERR"
                offset="[6]"/>
         <field description="Slave Pending. Indicates that the Slave function is waiting to continue communication on the I2C-bus and needs software service. This flag will cause an interrupt when set if enabled via INTENSET. The SLVPENDING flag is not set when the DMA is handling an event (if the SLVDMA bit in the SLVCTL register is set). The SLVPENDING flag is read-only and is automatically cleared when a 1 is written to the SLVCONTINUE bit in the SLVCTL register. The point in time when SlvPending is set depends on whether the I2C interface is in HSCAPABLE mode. See Section 25.7.2.2.2. When the I2C interface is configured to be HSCAPABLE, HS master codes are detected automatically. Due to the requirements of the HS I2C specification, slave addresses must also be detected automatically, since the address must be acknowledged before the clock can be stretched."
                format="enum"
                enum="d1e128414"
                id="I2C0@STAT@SLVPENDING"
                offset="[8]"/>
         <field description="Slave State code. Each value of this field indicates a specific required service for the Slave function. All other values are reserved. See Table 401 for state values and actions. note that the occurrence of some states and how they are handled are affected by DMA mode and Automatic Operation modes."
                format="enum"
                enum="d1e128461"
                id="I2C0@STAT@SLVSTATE"
                offset="[10:9]"/>
         <field description="Slave Not Stretching. Indicates when the slave function is stretching the I2C clock. This is needed in order to gracefully invoke Deep Sleep or Power-down modes during slave operation. This read-only flag reflects the slave function status in real time."
                format="enum"
                enum="d1e128519"
                id="I2C0@STAT@SLVNOTSTR"
                offset="[11]"/>
         <field description="Slave address match Index. This field is valid when the I2C slave function has been selected by receiving an address that matches one of the slave addresses defined by any enabled slave address registers, and provides an identification of the address that was matched. It is possible that more than one address could be matched, but only one match can be reported here."
                format="enum"
                enum="d1e128565"
                id="I2C0@STAT@SLVIDX"
                offset="[13:12]"/>
         <field description="Slave selected flag. SLVSEL is set after an address match when software tells the Slave function to acknowledge the address, or when the address has been automatically acknowledged. It is cleared when another address cycle presents an address that does not match an enabled address on the Slave function, when slave software decides to NACK a matched address, when there is a Stop detected on the bus, when the master NACKs slave data, and in some combinations of Automatic Operation. SLVSEL is not cleared if software NACKs data."
                format="enum"
                enum="d1e128635"
                id="I2C0@STAT@SLVSEL"
                offset="[14]"/>
         <field description="Slave Deselected flag. This flag will cause an interrupt when set if enabled via INTENSET. This flag can be cleared by writing a 1 to this bit."
                format="enum"
                enum="d1e128681"
                id="I2C0@STAT@SLVDESEL"
                offset="[15]"/>
         <field description="Monitor Ready. This flag is cleared when the MONRXDAT register is read."
                format="enum"
                enum="d1e128727"
                id="I2C0@STAT@MONRDY"
                offset="[16]"/>
         <field description="Monitor Overflow flag." format="enum" enum="d1e128774"
                id="I2C0@STAT@MONOV"
                offset="[17]"/>
         <field description="Monitor Active flag. Indicates when the Monitor function considers the I 2C bus to be active. Active is defined here as when some Master is on the bus: a bus Start has occurred more recently than a bus Stop."
                format="enum"
                enum="d1e128820"
                id="I2C0@STAT@MONACTIVE"
                offset="[18]"/>
         <field description="Monitor Idle flag. This flag is set when the Monitor function sees the I2C bus change from active to inactive. This can be used by software to decide when to process data accumulated by the Monitor function. This flag will cause an interrupt when set if enabled via the INTENSET register. The flag can be cleared by writing a 1 to this bit."
                format="enum"
                enum="d1e128866"
                id="I2C0@STAT@MONIDLE"
                offset="[19]"/>
         <field description="Event Time-out Interrupt flag. Indicates when the time between events has been longer than the time specified by the TIMEOUT register. Events include Start, Stop, and clock edges. The flag is cleared by writing a 1 to this bit. No time-out is created when the I2C-bus is idle."
                format="enum"
                enum="d1e128912"
                id="I2C0@STAT@EVENTTIMEOUT"
                offset="[24]"/>
         <field description="SCL Time-out Interrupt flag. Indicates when SCL has remained low longer than the time specific by the TIMEOUT register. The flag is cleared by writing a 1 to this bit."
                format="enum"
                enum="d1e128958"
                id="I2C0@STAT@SCLTIMEOUT"
                offset="[25]"/>
      </register>
      <register description="Interrupt Enable Set and read register." format="hex0x"
                id="I2C0@INTENSET"
                offset="0x808"
                size="4">
         <field description="Master Pending interrupt Enable." format="enum" enum="d1e129032"
                id="I2C0@INTENSET@MSTPENDINGEN"
                offset="[0]"/>
         <field description="Master Arbitration Loss interrupt Enable." format="enum"
                enum="d1e129078"
                id="I2C0@INTENSET@MSTARBLOSSEN"
                offset="[4]"/>
         <field description="Master Start/Stop Error interrupt Enable." format="enum"
                enum="d1e129124"
                id="I2C0@INTENSET@MSTSTSTPERREN"
                offset="[6]"/>
         <field description="Slave Pending interrupt Enable." format="enum" enum="d1e129170"
                id="I2C0@INTENSET@SLVPENDINGEN"
                offset="[8]"/>
         <field description="Slave Not Stretching interrupt Enable." format="enum"
                enum="d1e129216"
                id="I2C0@INTENSET@SLVNOTSTREN"
                offset="[11]"/>
         <field description="Slave Deselect interrupt Enable." format="enum" enum="d1e129263"
                id="I2C0@INTENSET@SLVDESELEN"
                offset="[15]"/>
         <field description="Monitor data Ready interrupt Enable." format="enum"
                enum="d1e129309"
                id="I2C0@INTENSET@MONRDYEN"
                offset="[16]"/>
         <field description="Monitor Overrun interrupt Enable." format="enum" enum="d1e129355"
                id="I2C0@INTENSET@MONOVEN"
                offset="[17]"/>
         <field description="Monitor Idle interrupt Enable." format="enum" enum="d1e129401"
                id="I2C0@INTENSET@MONIDLEEN"
                offset="[19]"/>
         <field description="Event time-out interrupt Enable." format="enum" enum="d1e129447"
                id="I2C0@INTENSET@EVENTTIMEOUTEN"
                offset="[24]"/>
         <field description="SCL time-out interrupt Enable." format="enum" enum="d1e129493"
                id="I2C0@INTENSET@SCLTIMEOUTEN"
                offset="[25]"/>
      </register>
      <register description="Interrupt Enable Clear register." format="hex0x"
                id="I2C0@INTENCLR"
                offset="0x80c"
                writeOnly="true"
                size="4">
         <field description="Master Pending interrupt clear. Writing 1 to this bit clears the corresponding bit in the INTENSET register if implemented."
                format="hex0x"
                id="I2C0@INTENCLR@MSTPENDINGCLR"
                offset="[0]"/>
         <field description="Master Arbitration Loss interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MSTARBLOSSCLR"
                offset="[4]"/>
         <field description="Master Start/Stop Error interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MSTSTSTPERRCLR"
                offset="[6]"/>
         <field description="Slave Pending interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@SLVPENDINGCLR"
                offset="[8]"/>
         <field description="Slave Not Stretching interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@SLVNOTSTRCLR"
                offset="[11]"/>
         <field description="Slave Deselect interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@SLVDESELCLR"
                offset="[15]"/>
         <field description="Monitor data Ready interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MONRDYCLR"
                offset="[16]"/>
         <field description="Monitor Overrun interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MONOVCLR"
                offset="[17]"/>
         <field description="Monitor Idle interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MONIDLECLR"
                offset="[19]"/>
         <field description="Event time-out interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@EVENTTIMEOUTCLR"
                offset="[24]"/>
         <field description="SCL time-out interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@SCLTIMEOUTCLR"
                offset="[25]"/>
      </register>
      <register description="Time-out value register." format="hex0x" id="I2C0@TIMEOUT"
                offset="0x810"
                size="4">
         <field description="Time-out time value, bottom four bits. These are hard-wired to 0xF. This gives a minimum time-out of 16 I2C function clocks and also a time-out resolution of 16 I2C function clocks."
                format="hex0x"
                id="I2C0@TIMEOUT@TOMIN"
                offset="[3:0]"/>
         <field description="Time-out time value. Specifies the time-out interval value in increments of 16 I 2C function clocks, as defined by the CLKDIV register. To change this value while I2C is in operation, disable all time-outs, write a new value to TIMEOUT, then re-enable time-outs. 0x000 = A time-out will occur after 16 counts of the I2C function clock. 0x001 = A time-out will occur after 32 counts of the I2C function clock. 0xFFF = A time-out will occur after 65,536 counts of the I2C function clock."
                format="hex0x"
                id="I2C0@TIMEOUT@TO"
                offset="[15:4]"/>
      </register>
      <register description="Clock pre-divider for the entire I2C interface. This determines what time increments are used for the MSTTIME register, and controls some timing of the Slave function."
                format="hex0x"
                id="I2C0@CLKDIV"
                offset="0x814"
                size="4">
         <field description="This field controls how the Flexcomm clock (FCLK) is used by the I2C functions that need an internal clock in order to operate. 0x0000 = FCLK is used directly by the I2C. 0x0001 = FCLK is divided by 2 before use. 0x0002 = FCLK is divided by 3 before use. 0xFFFF = FCLK is divided by 65,536 before use."
                format="hex0x"
                id="I2C0@CLKDIV@DIVVAL"
                offset="[15:0]"/>
      </register>
      <register description="Interrupt Status register for Master, Slave, and Monitor functions."
                format="hex0x"
                id="I2C0@INTSTAT"
                offset="0x818"
                readOnly="true"
                size="4">
         <field description="Master Pending." format="hex0x" id="I2C0@INTSTAT@MSTPENDING"
                offset="[0]"/>
         <field description="Master Arbitration Loss flag." format="hex0x"
                id="I2C0@INTSTAT@MSTARBLOSS"
                offset="[4]"/>
         <field description="Master Start/Stop Error flag." format="hex0x"
                id="I2C0@INTSTAT@MSTSTSTPERR"
                offset="[6]"/>
         <field description="Slave Pending." format="hex0x" id="I2C0@INTSTAT@SLVPENDING"
                offset="[8]"/>
         <field description="Slave Not Stretching status." format="hex0x"
                id="I2C0@INTSTAT@SLVNOTSTR"
                offset="[11]"/>
         <field description="Slave Deselected flag." format="hex0x" id="I2C0@INTSTAT@SLVDESEL"
                offset="[15]"/>
         <field description="Monitor Ready." format="hex0x" id="I2C0@INTSTAT@MONRDY"
                offset="[16]"/>
         <field description="Monitor Overflow flag." format="hex0x" id="I2C0@INTSTAT@MONOV"
                offset="[17]"/>
         <field description="Monitor Idle flag." format="hex0x" id="I2C0@INTSTAT@MONIDLE"
                offset="[19]"/>
         <field description="Event time-out Interrupt flag." format="hex0x"
                id="I2C0@INTSTAT@EVENTTIMEOUT"
                offset="[24]"/>
         <field description="SCL time-out Interrupt flag." format="hex0x"
                id="I2C0@INTSTAT@SCLTIMEOUT"
                offset="[25]"/>
      </register>
      <register description="Master control register." format="hex0x" id="I2C0@MSTCTL"
                offset="0x820"
                size="4">
         <field description="Master Continue. This bit is write-only." format="enum"
                enum="d1e130132"
                id="I2C0@MSTCTL@MSTCONTINUE"
                offset="[0]"/>
         <field description="Master Start control. This bit is write-only." format="enum"
                enum="d1e130178"
                id="I2C0@MSTCTL@MSTSTART"
                offset="[1]"/>
         <field description="Master Stop control. This bit is write-only." format="enum"
                enum="d1e130224"
                id="I2C0@MSTCTL@MSTSTOP"
                offset="[2]"/>
         <field description="Master DMA enable. Data operations of the I2C can be performed with DMA. Protocol type operations such as Start, address, Stop, and address match must always be done with software, typically via an interrupt. Address acknowledgement must also be done by software except when the I2C is configured to be HSCAPABLE (and address acknowledgement is handled entirely by hardware) or when Automatic Operation is enabled. When a DMA data transfer is complete, MSTDMA must be cleared prior to beginning the next operation, typically a Start or Stop.This bit is read/write."
                format="enum"
                enum="d1e130270"
                id="I2C0@MSTCTL@MSTDMA"
                offset="[3]"/>
      </register>
      <register description="Master timing configuration." format="hex0x" id="I2C0@MSTTIME"
                offset="0x824"
                size="4">
         <field description="Master SCL Low time. Specifies the minimum low time that will be asserted by this master on SCL. Other devices on the bus (masters or slaves) could lengthen this time. This corresponds to the parameter t LOW in the I2C bus specification. I2C bus specification parameters tBUF and tSU;STA have the same values and are also controlled by MSTSCLLOW."
                format="enum"
                enum="d1e130344"
                id="I2C0@MSTTIME@MSTSCLLOW"
                offset="[2:0]"/>
         <field description="Master SCL High time. Specifies the minimum high time that will be asserted by this master on SCL. Other masters in a multi-master system could shorten this time. This corresponds to the parameter tHIGH in the I2C bus specification. I2C bus specification parameters tSU;STO and tHD;STA have the same values and are also controlled by MSTSCLHIGH."
                format="enum"
                enum="d1e130463"
                id="I2C0@MSTTIME@MSTSCLHIGH"
                offset="[6:4]"/>
      </register>
      <register description="Combined Master receiver and transmitter data register."
                format="hex0x"
                id="I2C0@MSTDAT"
                offset="0x828"
                size="4">
         <field description="Master function data register. Read: read the most recently received data for the Master function. Write: transmit data using the Master function."
                format="hex0x"
                id="I2C0@MSTDAT@DATA"
                offset="[7:0]"/>
      </register>
      <register description="Slave control register." format="hex0x" id="I2C0@SLVCTL"
                offset="0x840"
                size="4">
         <field description="Slave Continue." format="enum" enum="d1e130656"
                id="I2C0@SLVCTL@SLVCONTINUE"
                offset="[0]"/>
         <field description="Slave NACK." format="enum" enum="d1e130702"
                id="I2C0@SLVCTL@SLVNACK"
                offset="[1]"/>
         <field description="Slave DMA enable." format="enum" enum="d1e130748"
                id="I2C0@SLVCTL@SLVDMA"
                offset="[3]"/>
         <field description="Automatic Acknowledge.When this bit is set, it will cause an I2C header which matches SLVADR0 and the direction set by AUTOMATCHREAD to be ACKed immediately; this is used with DMA to allow processing of the data without intervention. If this bit is clear and a header matches SLVADR0, the behavior is controlled by AUTONACK in the SLVADR0 register: allowing NACK or interrupt."
                format="enum"
                enum="d1e130794"
                id="I2C0@SLVCTL@AUTOACK"
                offset="[8]"/>
         <field description="When AUTOACK is set, this bit controls whether it matches a read or write request on the next header with an address matching SLVADR0. Since DMA needs to be configured to match the transfer direction, the direction needs to be specified. This bit allows a direction to be chosen for the next operation."
                format="enum"
                enum="d1e130840"
                id="I2C0@SLVCTL@AUTOMATCHREAD"
                offset="[9]"/>
      </register>
      <register description="Combined Slave receiver and transmitter data register."
                format="hex0x"
                id="I2C0@SLVDAT"
                offset="0x844"
                size="4">
         <field description="Slave function data register. Read: read the most recently received data for the Slave function. Write: transmit data using the Slave function."
                format="hex0x"
                id="I2C0@SLVDAT@DATA"
                offset="[7:0]"/>
      </register>
      <register description="Slave address register." format="hex0x" id="I2C0@SLVADR0"
                offset="0x848"
                size="4">
         <field description="Slave Address n Disable." format="enum" enum="d1e130967"
                id="I2C0@SLVADR0@SADISABLE"
                offset="[0]"/>
         <field description="Slave Address. Seven bit slave address that is compared to received addresses if enabled."
                format="hex0x"
                id="I2C0@SLVADR0@SLVADR"
                offset="[7:1]"/>
         <field description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations."
                format="enum"
                enum="d1e131031"
                id="I2C0@SLVADR0@AUTONACK"
                offset="[15]"/>
      </register>
      <register description="Slave address register." format="hex0x" id="I2C0@SLVADR1"
                offset="0x84c"
                size="4">
         <field description="Slave Address n Disable." format="enum" enum="d1e130967"
                id="I2C0@SLVADR1@SADISABLE"
                offset="[0]"/>
         <field description="Slave Address. Seven bit slave address that is compared to received addresses if enabled."
                format="hex0x"
                id="I2C0@SLVADR1@SLVADR"
                offset="[7:1]"/>
         <field description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations."
                format="enum"
                enum="d1e131031"
                id="I2C0@SLVADR1@AUTONACK"
                offset="[15]"/>
      </register>
      <register description="Slave address register." format="hex0x" id="I2C0@SLVADR2"
                offset="0x850"
                size="4">
         <field description="Slave Address n Disable." format="enum" enum="d1e130967"
                id="I2C0@SLVADR2@SADISABLE"
                offset="[0]"/>
         <field description="Slave Address. Seven bit slave address that is compared to received addresses if enabled."
                format="hex0x"
                id="I2C0@SLVADR2@SLVADR"
                offset="[7:1]"/>
         <field description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations."
                format="enum"
                enum="d1e131031"
                id="I2C0@SLVADR2@AUTONACK"
                offset="[15]"/>
      </register>
      <register description="Slave address register." format="hex0x" id="I2C0@SLVADR3"
                offset="0x854"
                size="4">
         <field description="Slave Address n Disable." format="enum" enum="d1e130967"
                id="I2C0@SLVADR3@SADISABLE"
                offset="[0]"/>
         <field description="Slave Address. Seven bit slave address that is compared to received addresses if enabled."
                format="hex0x"
                id="I2C0@SLVADR3@SLVADR"
                offset="[7:1]"/>
         <field description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations."
                format="enum"
                enum="d1e131031"
                id="I2C0@SLVADR3@AUTONACK"
                offset="[15]"/>
      </register>
      <register description="Slave Qualification for address 0." format="hex0x"
                id="I2C0@SLVQUAL0"
                offset="0x858"
                size="4">
         <field description="Qualify mode for slave address 0." format="enum" enum="d1e131105"
                id="I2C0@SLVQUAL0@QUALMODE0"
                offset="[0]"/>
         <field description="Slave address Qualifier for address 0. A value of 0 causes the address in SLVADR0 to be used as-is, assuming that it is enabled. If QUALMODE0 = 0, any bit in this field which is set to 1 will cause an automatic match of the corresponding bit of the received address when it is compared to the SLVADR0 register. If QUALMODE0 = 1, an address range is matched for address 0. This range extends from the value defined by SLVADR0 to the address defined by SLVQUAL0 (address matches when SLVADR0[7:1] &lt;= received address &lt;= SLVQUAL0[7:1])."
                format="hex0x"
                id="I2C0@SLVQUAL0@SLVQUAL0"
                offset="[7:1]"/>
      </register>
      <register description="Monitor receiver data register." format="hex0x" id="I2C0@MONRXDAT"
                offset="0x880"
                readOnly="true"
                size="4">
         <field description="Monitor function Receiver Data. This reflects every data byte that passes on the I2C pins."
                format="hex0x"
                id="I2C0@MONRXDAT@MONRXDAT"
                offset="[7:0]"/>
         <field description="Monitor Received Start." format="enum" enum="d1e131215"
                id="I2C0@MONRXDAT@MONSTART"
                offset="[8]"/>
         <field description="Monitor Received Repeated Start." format="enum" enum="d1e131261"
                id="I2C0@MONRXDAT@MONRESTART"
                offset="[9]"/>
         <field description="Monitor Received NACK." format="enum" enum="d1e131307"
                id="I2C0@MONRXDAT@MONNACK"
                offset="[10]"/>
      </register>
      <register description="Peripheral identification register." format="hex0x" id="I2C0@ID"
                offset="0xffc"
                readOnly="true"
                size="4">
         <field description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture."
                format="hex0x"
                id="I2C0@ID@APERTURE"
                offset="[7:0]"/>
         <field description="Minor revision of module implementation." format="hex0x"
                id="I2C0@ID@MINOR-REV"
                offset="[11:8]"/>
         <field description="Major revision of module implementation." format="hex0x"
                id="I2C0@ID@MAJOR-REV"
                offset="[15:12]"/>
         <field description="Module identifier for the selected function." format="hex0x"
                id="I2C0@ID@ID"
                offset="[31:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x I2C-bus interfaces" id="I2C6"
               size="0x1000">
      <register description="Configuration for shared functions." format="hex0x" id="I2C0@CFG"
                offset="0x800"
                size="4">
         <field description="Master Enable. When disabled, configurations settings for the Master function are not changed, but the Master function is internally reset."
                format="enum"
                enum="d1e127889"
                id="I2C0@CFG@MSTEN"
                offset="[0]"/>
         <field description="Slave Enable. When disabled, configurations settings for the Slave function are not changed, but the Slave function is internally reset."
                format="enum"
                enum="d1e127935"
                id="I2C0@CFG@SLVEN"
                offset="[1]"/>
         <field description="Monitor Enable. When disabled, configurations settings for the Monitor function are not changed, but the Monitor function is internally reset."
                format="enum"
                enum="d1e127981"
                id="I2C0@CFG@MONEN"
                offset="[2]"/>
         <field description="I2C bus Time-out Enable. When disabled, the time-out function is internally reset."
                format="enum"
                enum="d1e128027"
                id="I2C0@CFG@TIMEOUTEN"
                offset="[3]"/>
         <field description="Monitor function Clock Stretching." format="enum" enum="d1e128073"
                id="I2C0@CFG@MONCLKSTR"
                offset="[4]"/>
         <field description="High-speed mode Capable enable. Since High Speed mode alters the way I2C pins drive and filter, as well as the timing for certain I2C signalling, enabling High-speed mode applies to all functions: Master, Slave, and Monitor."
                format="enum"
                enum="d1e128120"
                id="I2C0@CFG@HSCAPABLE"
                offset="[5]"/>
      </register>
      <register description="Status register for Master, Slave, and Monitor functions."
                format="hex0x"
                id="I2C0@STAT"
                offset="0x804"
                size="4">
         <field description="Master Pending. Indicates that the Master is waiting to continue communication on the I2C-bus (pending) or is idle. When the master is pending, the MSTSTATE bits indicate what type of software service if any the master expects. This flag will cause an interrupt when set if, enabled via the INTENSET register. The MSTPENDING flag is not set when the DMA is handling an event (if the MSTDMA bit in the MSTCTL register is set). If the master is in the idle state, and no communication is needed, mask this interrupt."
                format="enum"
                enum="d1e128194"
                id="I2C0@STAT@MSTPENDING"
                offset="[0]"/>
         <field description="Master State code. The master state code reflects the master state when the MSTPENDING bit is set, that is the master is pending or in the idle state. Each value of this field indicates a specific required service for the Master function. All other values are reserved. See Table 400 for details of state values and appropriate responses."
                format="enum"
                enum="d1e128240"
                id="I2C0@STAT@MSTSTATE"
                offset="[3:1]"/>
         <field description="Master Arbitration Loss flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE."
                format="enum"
                enum="d1e128322"
                id="I2C0@STAT@MSTARBLOSS"
                offset="[4]"/>
         <field description="Master Start/Stop Error flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE."
                format="enum"
                enum="d1e128368"
                id="I2C0@STAT@MSTSTSTPERR"
                offset="[6]"/>
         <field description="Slave Pending. Indicates that the Slave function is waiting to continue communication on the I2C-bus and needs software service. This flag will cause an interrupt when set if enabled via INTENSET. The SLVPENDING flag is not set when the DMA is handling an event (if the SLVDMA bit in the SLVCTL register is set). The SLVPENDING flag is read-only and is automatically cleared when a 1 is written to the SLVCONTINUE bit in the SLVCTL register. The point in time when SlvPending is set depends on whether the I2C interface is in HSCAPABLE mode. See Section 25.7.2.2.2. When the I2C interface is configured to be HSCAPABLE, HS master codes are detected automatically. Due to the requirements of the HS I2C specification, slave addresses must also be detected automatically, since the address must be acknowledged before the clock can be stretched."
                format="enum"
                enum="d1e128414"
                id="I2C0@STAT@SLVPENDING"
                offset="[8]"/>
         <field description="Slave State code. Each value of this field indicates a specific required service for the Slave function. All other values are reserved. See Table 401 for state values and actions. note that the occurrence of some states and how they are handled are affected by DMA mode and Automatic Operation modes."
                format="enum"
                enum="d1e128461"
                id="I2C0@STAT@SLVSTATE"
                offset="[10:9]"/>
         <field description="Slave Not Stretching. Indicates when the slave function is stretching the I2C clock. This is needed in order to gracefully invoke Deep Sleep or Power-down modes during slave operation. This read-only flag reflects the slave function status in real time."
                format="enum"
                enum="d1e128519"
                id="I2C0@STAT@SLVNOTSTR"
                offset="[11]"/>
         <field description="Slave address match Index. This field is valid when the I2C slave function has been selected by receiving an address that matches one of the slave addresses defined by any enabled slave address registers, and provides an identification of the address that was matched. It is possible that more than one address could be matched, but only one match can be reported here."
                format="enum"
                enum="d1e128565"
                id="I2C0@STAT@SLVIDX"
                offset="[13:12]"/>
         <field description="Slave selected flag. SLVSEL is set after an address match when software tells the Slave function to acknowledge the address, or when the address has been automatically acknowledged. It is cleared when another address cycle presents an address that does not match an enabled address on the Slave function, when slave software decides to NACK a matched address, when there is a Stop detected on the bus, when the master NACKs slave data, and in some combinations of Automatic Operation. SLVSEL is not cleared if software NACKs data."
                format="enum"
                enum="d1e128635"
                id="I2C0@STAT@SLVSEL"
                offset="[14]"/>
         <field description="Slave Deselected flag. This flag will cause an interrupt when set if enabled via INTENSET. This flag can be cleared by writing a 1 to this bit."
                format="enum"
                enum="d1e128681"
                id="I2C0@STAT@SLVDESEL"
                offset="[15]"/>
         <field description="Monitor Ready. This flag is cleared when the MONRXDAT register is read."
                format="enum"
                enum="d1e128727"
                id="I2C0@STAT@MONRDY"
                offset="[16]"/>
         <field description="Monitor Overflow flag." format="enum" enum="d1e128774"
                id="I2C0@STAT@MONOV"
                offset="[17]"/>
         <field description="Monitor Active flag. Indicates when the Monitor function considers the I 2C bus to be active. Active is defined here as when some Master is on the bus: a bus Start has occurred more recently than a bus Stop."
                format="enum"
                enum="d1e128820"
                id="I2C0@STAT@MONACTIVE"
                offset="[18]"/>
         <field description="Monitor Idle flag. This flag is set when the Monitor function sees the I2C bus change from active to inactive. This can be used by software to decide when to process data accumulated by the Monitor function. This flag will cause an interrupt when set if enabled via the INTENSET register. The flag can be cleared by writing a 1 to this bit."
                format="enum"
                enum="d1e128866"
                id="I2C0@STAT@MONIDLE"
                offset="[19]"/>
         <field description="Event Time-out Interrupt flag. Indicates when the time between events has been longer than the time specified by the TIMEOUT register. Events include Start, Stop, and clock edges. The flag is cleared by writing a 1 to this bit. No time-out is created when the I2C-bus is idle."
                format="enum"
                enum="d1e128912"
                id="I2C0@STAT@EVENTTIMEOUT"
                offset="[24]"/>
         <field description="SCL Time-out Interrupt flag. Indicates when SCL has remained low longer than the time specific by the TIMEOUT register. The flag is cleared by writing a 1 to this bit."
                format="enum"
                enum="d1e128958"
                id="I2C0@STAT@SCLTIMEOUT"
                offset="[25]"/>
      </register>
      <register description="Interrupt Enable Set and read register." format="hex0x"
                id="I2C0@INTENSET"
                offset="0x808"
                size="4">
         <field description="Master Pending interrupt Enable." format="enum" enum="d1e129032"
                id="I2C0@INTENSET@MSTPENDINGEN"
                offset="[0]"/>
         <field description="Master Arbitration Loss interrupt Enable." format="enum"
                enum="d1e129078"
                id="I2C0@INTENSET@MSTARBLOSSEN"
                offset="[4]"/>
         <field description="Master Start/Stop Error interrupt Enable." format="enum"
                enum="d1e129124"
                id="I2C0@INTENSET@MSTSTSTPERREN"
                offset="[6]"/>
         <field description="Slave Pending interrupt Enable." format="enum" enum="d1e129170"
                id="I2C0@INTENSET@SLVPENDINGEN"
                offset="[8]"/>
         <field description="Slave Not Stretching interrupt Enable." format="enum"
                enum="d1e129216"
                id="I2C0@INTENSET@SLVNOTSTREN"
                offset="[11]"/>
         <field description="Slave Deselect interrupt Enable." format="enum" enum="d1e129263"
                id="I2C0@INTENSET@SLVDESELEN"
                offset="[15]"/>
         <field description="Monitor data Ready interrupt Enable." format="enum"
                enum="d1e129309"
                id="I2C0@INTENSET@MONRDYEN"
                offset="[16]"/>
         <field description="Monitor Overrun interrupt Enable." format="enum" enum="d1e129355"
                id="I2C0@INTENSET@MONOVEN"
                offset="[17]"/>
         <field description="Monitor Idle interrupt Enable." format="enum" enum="d1e129401"
                id="I2C0@INTENSET@MONIDLEEN"
                offset="[19]"/>
         <field description="Event time-out interrupt Enable." format="enum" enum="d1e129447"
                id="I2C0@INTENSET@EVENTTIMEOUTEN"
                offset="[24]"/>
         <field description="SCL time-out interrupt Enable." format="enum" enum="d1e129493"
                id="I2C0@INTENSET@SCLTIMEOUTEN"
                offset="[25]"/>
      </register>
      <register description="Interrupt Enable Clear register." format="hex0x"
                id="I2C0@INTENCLR"
                offset="0x80c"
                writeOnly="true"
                size="4">
         <field description="Master Pending interrupt clear. Writing 1 to this bit clears the corresponding bit in the INTENSET register if implemented."
                format="hex0x"
                id="I2C0@INTENCLR@MSTPENDINGCLR"
                offset="[0]"/>
         <field description="Master Arbitration Loss interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MSTARBLOSSCLR"
                offset="[4]"/>
         <field description="Master Start/Stop Error interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MSTSTSTPERRCLR"
                offset="[6]"/>
         <field description="Slave Pending interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@SLVPENDINGCLR"
                offset="[8]"/>
         <field description="Slave Not Stretching interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@SLVNOTSTRCLR"
                offset="[11]"/>
         <field description="Slave Deselect interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@SLVDESELCLR"
                offset="[15]"/>
         <field description="Monitor data Ready interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MONRDYCLR"
                offset="[16]"/>
         <field description="Monitor Overrun interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MONOVCLR"
                offset="[17]"/>
         <field description="Monitor Idle interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MONIDLECLR"
                offset="[19]"/>
         <field description="Event time-out interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@EVENTTIMEOUTCLR"
                offset="[24]"/>
         <field description="SCL time-out interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@SCLTIMEOUTCLR"
                offset="[25]"/>
      </register>
      <register description="Time-out value register." format="hex0x" id="I2C0@TIMEOUT"
                offset="0x810"
                size="4">
         <field description="Time-out time value, bottom four bits. These are hard-wired to 0xF. This gives a minimum time-out of 16 I2C function clocks and also a time-out resolution of 16 I2C function clocks."
                format="hex0x"
                id="I2C0@TIMEOUT@TOMIN"
                offset="[3:0]"/>
         <field description="Time-out time value. Specifies the time-out interval value in increments of 16 I 2C function clocks, as defined by the CLKDIV register. To change this value while I2C is in operation, disable all time-outs, write a new value to TIMEOUT, then re-enable time-outs. 0x000 = A time-out will occur after 16 counts of the I2C function clock. 0x001 = A time-out will occur after 32 counts of the I2C function clock. 0xFFF = A time-out will occur after 65,536 counts of the I2C function clock."
                format="hex0x"
                id="I2C0@TIMEOUT@TO"
                offset="[15:4]"/>
      </register>
      <register description="Clock pre-divider for the entire I2C interface. This determines what time increments are used for the MSTTIME register, and controls some timing of the Slave function."
                format="hex0x"
                id="I2C0@CLKDIV"
                offset="0x814"
                size="4">
         <field description="This field controls how the Flexcomm clock (FCLK) is used by the I2C functions that need an internal clock in order to operate. 0x0000 = FCLK is used directly by the I2C. 0x0001 = FCLK is divided by 2 before use. 0x0002 = FCLK is divided by 3 before use. 0xFFFF = FCLK is divided by 65,536 before use."
                format="hex0x"
                id="I2C0@CLKDIV@DIVVAL"
                offset="[15:0]"/>
      </register>
      <register description="Interrupt Status register for Master, Slave, and Monitor functions."
                format="hex0x"
                id="I2C0@INTSTAT"
                offset="0x818"
                readOnly="true"
                size="4">
         <field description="Master Pending." format="hex0x" id="I2C0@INTSTAT@MSTPENDING"
                offset="[0]"/>
         <field description="Master Arbitration Loss flag." format="hex0x"
                id="I2C0@INTSTAT@MSTARBLOSS"
                offset="[4]"/>
         <field description="Master Start/Stop Error flag." format="hex0x"
                id="I2C0@INTSTAT@MSTSTSTPERR"
                offset="[6]"/>
         <field description="Slave Pending." format="hex0x" id="I2C0@INTSTAT@SLVPENDING"
                offset="[8]"/>
         <field description="Slave Not Stretching status." format="hex0x"
                id="I2C0@INTSTAT@SLVNOTSTR"
                offset="[11]"/>
         <field description="Slave Deselected flag." format="hex0x" id="I2C0@INTSTAT@SLVDESEL"
                offset="[15]"/>
         <field description="Monitor Ready." format="hex0x" id="I2C0@INTSTAT@MONRDY"
                offset="[16]"/>
         <field description="Monitor Overflow flag." format="hex0x" id="I2C0@INTSTAT@MONOV"
                offset="[17]"/>
         <field description="Monitor Idle flag." format="hex0x" id="I2C0@INTSTAT@MONIDLE"
                offset="[19]"/>
         <field description="Event time-out Interrupt flag." format="hex0x"
                id="I2C0@INTSTAT@EVENTTIMEOUT"
                offset="[24]"/>
         <field description="SCL time-out Interrupt flag." format="hex0x"
                id="I2C0@INTSTAT@SCLTIMEOUT"
                offset="[25]"/>
      </register>
      <register description="Master control register." format="hex0x" id="I2C0@MSTCTL"
                offset="0x820"
                size="4">
         <field description="Master Continue. This bit is write-only." format="enum"
                enum="d1e130132"
                id="I2C0@MSTCTL@MSTCONTINUE"
                offset="[0]"/>
         <field description="Master Start control. This bit is write-only." format="enum"
                enum="d1e130178"
                id="I2C0@MSTCTL@MSTSTART"
                offset="[1]"/>
         <field description="Master Stop control. This bit is write-only." format="enum"
                enum="d1e130224"
                id="I2C0@MSTCTL@MSTSTOP"
                offset="[2]"/>
         <field description="Master DMA enable. Data operations of the I2C can be performed with DMA. Protocol type operations such as Start, address, Stop, and address match must always be done with software, typically via an interrupt. Address acknowledgement must also be done by software except when the I2C is configured to be HSCAPABLE (and address acknowledgement is handled entirely by hardware) or when Automatic Operation is enabled. When a DMA data transfer is complete, MSTDMA must be cleared prior to beginning the next operation, typically a Start or Stop.This bit is read/write."
                format="enum"
                enum="d1e130270"
                id="I2C0@MSTCTL@MSTDMA"
                offset="[3]"/>
      </register>
      <register description="Master timing configuration." format="hex0x" id="I2C0@MSTTIME"
                offset="0x824"
                size="4">
         <field description="Master SCL Low time. Specifies the minimum low time that will be asserted by this master on SCL. Other devices on the bus (masters or slaves) could lengthen this time. This corresponds to the parameter t LOW in the I2C bus specification. I2C bus specification parameters tBUF and tSU;STA have the same values and are also controlled by MSTSCLLOW."
                format="enum"
                enum="d1e130344"
                id="I2C0@MSTTIME@MSTSCLLOW"
                offset="[2:0]"/>
         <field description="Master SCL High time. Specifies the minimum high time that will be asserted by this master on SCL. Other masters in a multi-master system could shorten this time. This corresponds to the parameter tHIGH in the I2C bus specification. I2C bus specification parameters tSU;STO and tHD;STA have the same values and are also controlled by MSTSCLHIGH."
                format="enum"
                enum="d1e130463"
                id="I2C0@MSTTIME@MSTSCLHIGH"
                offset="[6:4]"/>
      </register>
      <register description="Combined Master receiver and transmitter data register."
                format="hex0x"
                id="I2C0@MSTDAT"
                offset="0x828"
                size="4">
         <field description="Master function data register. Read: read the most recently received data for the Master function. Write: transmit data using the Master function."
                format="hex0x"
                id="I2C0@MSTDAT@DATA"
                offset="[7:0]"/>
      </register>
      <register description="Slave control register." format="hex0x" id="I2C0@SLVCTL"
                offset="0x840"
                size="4">
         <field description="Slave Continue." format="enum" enum="d1e130656"
                id="I2C0@SLVCTL@SLVCONTINUE"
                offset="[0]"/>
         <field description="Slave NACK." format="enum" enum="d1e130702"
                id="I2C0@SLVCTL@SLVNACK"
                offset="[1]"/>
         <field description="Slave DMA enable." format="enum" enum="d1e130748"
                id="I2C0@SLVCTL@SLVDMA"
                offset="[3]"/>
         <field description="Automatic Acknowledge.When this bit is set, it will cause an I2C header which matches SLVADR0 and the direction set by AUTOMATCHREAD to be ACKed immediately; this is used with DMA to allow processing of the data without intervention. If this bit is clear and a header matches SLVADR0, the behavior is controlled by AUTONACK in the SLVADR0 register: allowing NACK or interrupt."
                format="enum"
                enum="d1e130794"
                id="I2C0@SLVCTL@AUTOACK"
                offset="[8]"/>
         <field description="When AUTOACK is set, this bit controls whether it matches a read or write request on the next header with an address matching SLVADR0. Since DMA needs to be configured to match the transfer direction, the direction needs to be specified. This bit allows a direction to be chosen for the next operation."
                format="enum"
                enum="d1e130840"
                id="I2C0@SLVCTL@AUTOMATCHREAD"
                offset="[9]"/>
      </register>
      <register description="Combined Slave receiver and transmitter data register."
                format="hex0x"
                id="I2C0@SLVDAT"
                offset="0x844"
                size="4">
         <field description="Slave function data register. Read: read the most recently received data for the Slave function. Write: transmit data using the Slave function."
                format="hex0x"
                id="I2C0@SLVDAT@DATA"
                offset="[7:0]"/>
      </register>
      <register description="Slave address register." format="hex0x" id="I2C0@SLVADR0"
                offset="0x848"
                size="4">
         <field description="Slave Address n Disable." format="enum" enum="d1e130967"
                id="I2C0@SLVADR0@SADISABLE"
                offset="[0]"/>
         <field description="Slave Address. Seven bit slave address that is compared to received addresses if enabled."
                format="hex0x"
                id="I2C0@SLVADR0@SLVADR"
                offset="[7:1]"/>
         <field description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations."
                format="enum"
                enum="d1e131031"
                id="I2C0@SLVADR0@AUTONACK"
                offset="[15]"/>
      </register>
      <register description="Slave address register." format="hex0x" id="I2C0@SLVADR1"
                offset="0x84c"
                size="4">
         <field description="Slave Address n Disable." format="enum" enum="d1e130967"
                id="I2C0@SLVADR1@SADISABLE"
                offset="[0]"/>
         <field description="Slave Address. Seven bit slave address that is compared to received addresses if enabled."
                format="hex0x"
                id="I2C0@SLVADR1@SLVADR"
                offset="[7:1]"/>
         <field description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations."
                format="enum"
                enum="d1e131031"
                id="I2C0@SLVADR1@AUTONACK"
                offset="[15]"/>
      </register>
      <register description="Slave address register." format="hex0x" id="I2C0@SLVADR2"
                offset="0x850"
                size="4">
         <field description="Slave Address n Disable." format="enum" enum="d1e130967"
                id="I2C0@SLVADR2@SADISABLE"
                offset="[0]"/>
         <field description="Slave Address. Seven bit slave address that is compared to received addresses if enabled."
                format="hex0x"
                id="I2C0@SLVADR2@SLVADR"
                offset="[7:1]"/>
         <field description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations."
                format="enum"
                enum="d1e131031"
                id="I2C0@SLVADR2@AUTONACK"
                offset="[15]"/>
      </register>
      <register description="Slave address register." format="hex0x" id="I2C0@SLVADR3"
                offset="0x854"
                size="4">
         <field description="Slave Address n Disable." format="enum" enum="d1e130967"
                id="I2C0@SLVADR3@SADISABLE"
                offset="[0]"/>
         <field description="Slave Address. Seven bit slave address that is compared to received addresses if enabled."
                format="hex0x"
                id="I2C0@SLVADR3@SLVADR"
                offset="[7:1]"/>
         <field description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations."
                format="enum"
                enum="d1e131031"
                id="I2C0@SLVADR3@AUTONACK"
                offset="[15]"/>
      </register>
      <register description="Slave Qualification for address 0." format="hex0x"
                id="I2C0@SLVQUAL0"
                offset="0x858"
                size="4">
         <field description="Qualify mode for slave address 0." format="enum" enum="d1e131105"
                id="I2C0@SLVQUAL0@QUALMODE0"
                offset="[0]"/>
         <field description="Slave address Qualifier for address 0. A value of 0 causes the address in SLVADR0 to be used as-is, assuming that it is enabled. If QUALMODE0 = 0, any bit in this field which is set to 1 will cause an automatic match of the corresponding bit of the received address when it is compared to the SLVADR0 register. If QUALMODE0 = 1, an address range is matched for address 0. This range extends from the value defined by SLVADR0 to the address defined by SLVQUAL0 (address matches when SLVADR0[7:1] &lt;= received address &lt;= SLVQUAL0[7:1])."
                format="hex0x"
                id="I2C0@SLVQUAL0@SLVQUAL0"
                offset="[7:1]"/>
      </register>
      <register description="Monitor receiver data register." format="hex0x" id="I2C0@MONRXDAT"
                offset="0x880"
                readOnly="true"
                size="4">
         <field description="Monitor function Receiver Data. This reflects every data byte that passes on the I2C pins."
                format="hex0x"
                id="I2C0@MONRXDAT@MONRXDAT"
                offset="[7:0]"/>
         <field description="Monitor Received Start." format="enum" enum="d1e131215"
                id="I2C0@MONRXDAT@MONSTART"
                offset="[8]"/>
         <field description="Monitor Received Repeated Start." format="enum" enum="d1e131261"
                id="I2C0@MONRXDAT@MONRESTART"
                offset="[9]"/>
         <field description="Monitor Received NACK." format="enum" enum="d1e131307"
                id="I2C0@MONRXDAT@MONNACK"
                offset="[10]"/>
      </register>
      <register description="Peripheral identification register." format="hex0x" id="I2C0@ID"
                offset="0xffc"
                readOnly="true"
                size="4">
         <field description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture."
                format="hex0x"
                id="I2C0@ID@APERTURE"
                offset="[7:0]"/>
         <field description="Minor revision of module implementation." format="hex0x"
                id="I2C0@ID@MINOR-REV"
                offset="[11:8]"/>
         <field description="Major revision of module implementation." format="hex0x"
                id="I2C0@ID@MAJOR-REV"
                offset="[15:12]"/>
         <field description="Module identifier for the selected function." format="hex0x"
                id="I2C0@ID@ID"
                offset="[31:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x I2C-bus interfaces" id="I2C7"
               size="0x1000">
      <register description="Configuration for shared functions." format="hex0x" id="I2C0@CFG"
                offset="0x800"
                size="4">
         <field description="Master Enable. When disabled, configurations settings for the Master function are not changed, but the Master function is internally reset."
                format="enum"
                enum="d1e127889"
                id="I2C0@CFG@MSTEN"
                offset="[0]"/>
         <field description="Slave Enable. When disabled, configurations settings for the Slave function are not changed, but the Slave function is internally reset."
                format="enum"
                enum="d1e127935"
                id="I2C0@CFG@SLVEN"
                offset="[1]"/>
         <field description="Monitor Enable. When disabled, configurations settings for the Monitor function are not changed, but the Monitor function is internally reset."
                format="enum"
                enum="d1e127981"
                id="I2C0@CFG@MONEN"
                offset="[2]"/>
         <field description="I2C bus Time-out Enable. When disabled, the time-out function is internally reset."
                format="enum"
                enum="d1e128027"
                id="I2C0@CFG@TIMEOUTEN"
                offset="[3]"/>
         <field description="Monitor function Clock Stretching." format="enum" enum="d1e128073"
                id="I2C0@CFG@MONCLKSTR"
                offset="[4]"/>
         <field description="High-speed mode Capable enable. Since High Speed mode alters the way I2C pins drive and filter, as well as the timing for certain I2C signalling, enabling High-speed mode applies to all functions: Master, Slave, and Monitor."
                format="enum"
                enum="d1e128120"
                id="I2C0@CFG@HSCAPABLE"
                offset="[5]"/>
      </register>
      <register description="Status register for Master, Slave, and Monitor functions."
                format="hex0x"
                id="I2C0@STAT"
                offset="0x804"
                size="4">
         <field description="Master Pending. Indicates that the Master is waiting to continue communication on the I2C-bus (pending) or is idle. When the master is pending, the MSTSTATE bits indicate what type of software service if any the master expects. This flag will cause an interrupt when set if, enabled via the INTENSET register. The MSTPENDING flag is not set when the DMA is handling an event (if the MSTDMA bit in the MSTCTL register is set). If the master is in the idle state, and no communication is needed, mask this interrupt."
                format="enum"
                enum="d1e128194"
                id="I2C0@STAT@MSTPENDING"
                offset="[0]"/>
         <field description="Master State code. The master state code reflects the master state when the MSTPENDING bit is set, that is the master is pending or in the idle state. Each value of this field indicates a specific required service for the Master function. All other values are reserved. See Table 400 for details of state values and appropriate responses."
                format="enum"
                enum="d1e128240"
                id="I2C0@STAT@MSTSTATE"
                offset="[3:1]"/>
         <field description="Master Arbitration Loss flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE."
                format="enum"
                enum="d1e128322"
                id="I2C0@STAT@MSTARBLOSS"
                offset="[4]"/>
         <field description="Master Start/Stop Error flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE."
                format="enum"
                enum="d1e128368"
                id="I2C0@STAT@MSTSTSTPERR"
                offset="[6]"/>
         <field description="Slave Pending. Indicates that the Slave function is waiting to continue communication on the I2C-bus and needs software service. This flag will cause an interrupt when set if enabled via INTENSET. The SLVPENDING flag is not set when the DMA is handling an event (if the SLVDMA bit in the SLVCTL register is set). The SLVPENDING flag is read-only and is automatically cleared when a 1 is written to the SLVCONTINUE bit in the SLVCTL register. The point in time when SlvPending is set depends on whether the I2C interface is in HSCAPABLE mode. See Section 25.7.2.2.2. When the I2C interface is configured to be HSCAPABLE, HS master codes are detected automatically. Due to the requirements of the HS I2C specification, slave addresses must also be detected automatically, since the address must be acknowledged before the clock can be stretched."
                format="enum"
                enum="d1e128414"
                id="I2C0@STAT@SLVPENDING"
                offset="[8]"/>
         <field description="Slave State code. Each value of this field indicates a specific required service for the Slave function. All other values are reserved. See Table 401 for state values and actions. note that the occurrence of some states and how they are handled are affected by DMA mode and Automatic Operation modes."
                format="enum"
                enum="d1e128461"
                id="I2C0@STAT@SLVSTATE"
                offset="[10:9]"/>
         <field description="Slave Not Stretching. Indicates when the slave function is stretching the I2C clock. This is needed in order to gracefully invoke Deep Sleep or Power-down modes during slave operation. This read-only flag reflects the slave function status in real time."
                format="enum"
                enum="d1e128519"
                id="I2C0@STAT@SLVNOTSTR"
                offset="[11]"/>
         <field description="Slave address match Index. This field is valid when the I2C slave function has been selected by receiving an address that matches one of the slave addresses defined by any enabled slave address registers, and provides an identification of the address that was matched. It is possible that more than one address could be matched, but only one match can be reported here."
                format="enum"
                enum="d1e128565"
                id="I2C0@STAT@SLVIDX"
                offset="[13:12]"/>
         <field description="Slave selected flag. SLVSEL is set after an address match when software tells the Slave function to acknowledge the address, or when the address has been automatically acknowledged. It is cleared when another address cycle presents an address that does not match an enabled address on the Slave function, when slave software decides to NACK a matched address, when there is a Stop detected on the bus, when the master NACKs slave data, and in some combinations of Automatic Operation. SLVSEL is not cleared if software NACKs data."
                format="enum"
                enum="d1e128635"
                id="I2C0@STAT@SLVSEL"
                offset="[14]"/>
         <field description="Slave Deselected flag. This flag will cause an interrupt when set if enabled via INTENSET. This flag can be cleared by writing a 1 to this bit."
                format="enum"
                enum="d1e128681"
                id="I2C0@STAT@SLVDESEL"
                offset="[15]"/>
         <field description="Monitor Ready. This flag is cleared when the MONRXDAT register is read."
                format="enum"
                enum="d1e128727"
                id="I2C0@STAT@MONRDY"
                offset="[16]"/>
         <field description="Monitor Overflow flag." format="enum" enum="d1e128774"
                id="I2C0@STAT@MONOV"
                offset="[17]"/>
         <field description="Monitor Active flag. Indicates when the Monitor function considers the I 2C bus to be active. Active is defined here as when some Master is on the bus: a bus Start has occurred more recently than a bus Stop."
                format="enum"
                enum="d1e128820"
                id="I2C0@STAT@MONACTIVE"
                offset="[18]"/>
         <field description="Monitor Idle flag. This flag is set when the Monitor function sees the I2C bus change from active to inactive. This can be used by software to decide when to process data accumulated by the Monitor function. This flag will cause an interrupt when set if enabled via the INTENSET register. The flag can be cleared by writing a 1 to this bit."
                format="enum"
                enum="d1e128866"
                id="I2C0@STAT@MONIDLE"
                offset="[19]"/>
         <field description="Event Time-out Interrupt flag. Indicates when the time between events has been longer than the time specified by the TIMEOUT register. Events include Start, Stop, and clock edges. The flag is cleared by writing a 1 to this bit. No time-out is created when the I2C-bus is idle."
                format="enum"
                enum="d1e128912"
                id="I2C0@STAT@EVENTTIMEOUT"
                offset="[24]"/>
         <field description="SCL Time-out Interrupt flag. Indicates when SCL has remained low longer than the time specific by the TIMEOUT register. The flag is cleared by writing a 1 to this bit."
                format="enum"
                enum="d1e128958"
                id="I2C0@STAT@SCLTIMEOUT"
                offset="[25]"/>
      </register>
      <register description="Interrupt Enable Set and read register." format="hex0x"
                id="I2C0@INTENSET"
                offset="0x808"
                size="4">
         <field description="Master Pending interrupt Enable." format="enum" enum="d1e129032"
                id="I2C0@INTENSET@MSTPENDINGEN"
                offset="[0]"/>
         <field description="Master Arbitration Loss interrupt Enable." format="enum"
                enum="d1e129078"
                id="I2C0@INTENSET@MSTARBLOSSEN"
                offset="[4]"/>
         <field description="Master Start/Stop Error interrupt Enable." format="enum"
                enum="d1e129124"
                id="I2C0@INTENSET@MSTSTSTPERREN"
                offset="[6]"/>
         <field description="Slave Pending interrupt Enable." format="enum" enum="d1e129170"
                id="I2C0@INTENSET@SLVPENDINGEN"
                offset="[8]"/>
         <field description="Slave Not Stretching interrupt Enable." format="enum"
                enum="d1e129216"
                id="I2C0@INTENSET@SLVNOTSTREN"
                offset="[11]"/>
         <field description="Slave Deselect interrupt Enable." format="enum" enum="d1e129263"
                id="I2C0@INTENSET@SLVDESELEN"
                offset="[15]"/>
         <field description="Monitor data Ready interrupt Enable." format="enum"
                enum="d1e129309"
                id="I2C0@INTENSET@MONRDYEN"
                offset="[16]"/>
         <field description="Monitor Overrun interrupt Enable." format="enum" enum="d1e129355"
                id="I2C0@INTENSET@MONOVEN"
                offset="[17]"/>
         <field description="Monitor Idle interrupt Enable." format="enum" enum="d1e129401"
                id="I2C0@INTENSET@MONIDLEEN"
                offset="[19]"/>
         <field description="Event time-out interrupt Enable." format="enum" enum="d1e129447"
                id="I2C0@INTENSET@EVENTTIMEOUTEN"
                offset="[24]"/>
         <field description="SCL time-out interrupt Enable." format="enum" enum="d1e129493"
                id="I2C0@INTENSET@SCLTIMEOUTEN"
                offset="[25]"/>
      </register>
      <register description="Interrupt Enable Clear register." format="hex0x"
                id="I2C0@INTENCLR"
                offset="0x80c"
                writeOnly="true"
                size="4">
         <field description="Master Pending interrupt clear. Writing 1 to this bit clears the corresponding bit in the INTENSET register if implemented."
                format="hex0x"
                id="I2C0@INTENCLR@MSTPENDINGCLR"
                offset="[0]"/>
         <field description="Master Arbitration Loss interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MSTARBLOSSCLR"
                offset="[4]"/>
         <field description="Master Start/Stop Error interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MSTSTSTPERRCLR"
                offset="[6]"/>
         <field description="Slave Pending interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@SLVPENDINGCLR"
                offset="[8]"/>
         <field description="Slave Not Stretching interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@SLVNOTSTRCLR"
                offset="[11]"/>
         <field description="Slave Deselect interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@SLVDESELCLR"
                offset="[15]"/>
         <field description="Monitor data Ready interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MONRDYCLR"
                offset="[16]"/>
         <field description="Monitor Overrun interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MONOVCLR"
                offset="[17]"/>
         <field description="Monitor Idle interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MONIDLECLR"
                offset="[19]"/>
         <field description="Event time-out interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@EVENTTIMEOUTCLR"
                offset="[24]"/>
         <field description="SCL time-out interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@SCLTIMEOUTCLR"
                offset="[25]"/>
      </register>
      <register description="Time-out value register." format="hex0x" id="I2C0@TIMEOUT"
                offset="0x810"
                size="4">
         <field description="Time-out time value, bottom four bits. These are hard-wired to 0xF. This gives a minimum time-out of 16 I2C function clocks and also a time-out resolution of 16 I2C function clocks."
                format="hex0x"
                id="I2C0@TIMEOUT@TOMIN"
                offset="[3:0]"/>
         <field description="Time-out time value. Specifies the time-out interval value in increments of 16 I 2C function clocks, as defined by the CLKDIV register. To change this value while I2C is in operation, disable all time-outs, write a new value to TIMEOUT, then re-enable time-outs. 0x000 = A time-out will occur after 16 counts of the I2C function clock. 0x001 = A time-out will occur after 32 counts of the I2C function clock. 0xFFF = A time-out will occur after 65,536 counts of the I2C function clock."
                format="hex0x"
                id="I2C0@TIMEOUT@TO"
                offset="[15:4]"/>
      </register>
      <register description="Clock pre-divider for the entire I2C interface. This determines what time increments are used for the MSTTIME register, and controls some timing of the Slave function."
                format="hex0x"
                id="I2C0@CLKDIV"
                offset="0x814"
                size="4">
         <field description="This field controls how the Flexcomm clock (FCLK) is used by the I2C functions that need an internal clock in order to operate. 0x0000 = FCLK is used directly by the I2C. 0x0001 = FCLK is divided by 2 before use. 0x0002 = FCLK is divided by 3 before use. 0xFFFF = FCLK is divided by 65,536 before use."
                format="hex0x"
                id="I2C0@CLKDIV@DIVVAL"
                offset="[15:0]"/>
      </register>
      <register description="Interrupt Status register for Master, Slave, and Monitor functions."
                format="hex0x"
                id="I2C0@INTSTAT"
                offset="0x818"
                readOnly="true"
                size="4">
         <field description="Master Pending." format="hex0x" id="I2C0@INTSTAT@MSTPENDING"
                offset="[0]"/>
         <field description="Master Arbitration Loss flag." format="hex0x"
                id="I2C0@INTSTAT@MSTARBLOSS"
                offset="[4]"/>
         <field description="Master Start/Stop Error flag." format="hex0x"
                id="I2C0@INTSTAT@MSTSTSTPERR"
                offset="[6]"/>
         <field description="Slave Pending." format="hex0x" id="I2C0@INTSTAT@SLVPENDING"
                offset="[8]"/>
         <field description="Slave Not Stretching status." format="hex0x"
                id="I2C0@INTSTAT@SLVNOTSTR"
                offset="[11]"/>
         <field description="Slave Deselected flag." format="hex0x" id="I2C0@INTSTAT@SLVDESEL"
                offset="[15]"/>
         <field description="Monitor Ready." format="hex0x" id="I2C0@INTSTAT@MONRDY"
                offset="[16]"/>
         <field description="Monitor Overflow flag." format="hex0x" id="I2C0@INTSTAT@MONOV"
                offset="[17]"/>
         <field description="Monitor Idle flag." format="hex0x" id="I2C0@INTSTAT@MONIDLE"
                offset="[19]"/>
         <field description="Event time-out Interrupt flag." format="hex0x"
                id="I2C0@INTSTAT@EVENTTIMEOUT"
                offset="[24]"/>
         <field description="SCL time-out Interrupt flag." format="hex0x"
                id="I2C0@INTSTAT@SCLTIMEOUT"
                offset="[25]"/>
      </register>
      <register description="Master control register." format="hex0x" id="I2C0@MSTCTL"
                offset="0x820"
                size="4">
         <field description="Master Continue. This bit is write-only." format="enum"
                enum="d1e130132"
                id="I2C0@MSTCTL@MSTCONTINUE"
                offset="[0]"/>
         <field description="Master Start control. This bit is write-only." format="enum"
                enum="d1e130178"
                id="I2C0@MSTCTL@MSTSTART"
                offset="[1]"/>
         <field description="Master Stop control. This bit is write-only." format="enum"
                enum="d1e130224"
                id="I2C0@MSTCTL@MSTSTOP"
                offset="[2]"/>
         <field description="Master DMA enable. Data operations of the I2C can be performed with DMA. Protocol type operations such as Start, address, Stop, and address match must always be done with software, typically via an interrupt. Address acknowledgement must also be done by software except when the I2C is configured to be HSCAPABLE (and address acknowledgement is handled entirely by hardware) or when Automatic Operation is enabled. When a DMA data transfer is complete, MSTDMA must be cleared prior to beginning the next operation, typically a Start or Stop.This bit is read/write."
                format="enum"
                enum="d1e130270"
                id="I2C0@MSTCTL@MSTDMA"
                offset="[3]"/>
      </register>
      <register description="Master timing configuration." format="hex0x" id="I2C0@MSTTIME"
                offset="0x824"
                size="4">
         <field description="Master SCL Low time. Specifies the minimum low time that will be asserted by this master on SCL. Other devices on the bus (masters or slaves) could lengthen this time. This corresponds to the parameter t LOW in the I2C bus specification. I2C bus specification parameters tBUF and tSU;STA have the same values and are also controlled by MSTSCLLOW."
                format="enum"
                enum="d1e130344"
                id="I2C0@MSTTIME@MSTSCLLOW"
                offset="[2:0]"/>
         <field description="Master SCL High time. Specifies the minimum high time that will be asserted by this master on SCL. Other masters in a multi-master system could shorten this time. This corresponds to the parameter tHIGH in the I2C bus specification. I2C bus specification parameters tSU;STO and tHD;STA have the same values and are also controlled by MSTSCLHIGH."
                format="enum"
                enum="d1e130463"
                id="I2C0@MSTTIME@MSTSCLHIGH"
                offset="[6:4]"/>
      </register>
      <register description="Combined Master receiver and transmitter data register."
                format="hex0x"
                id="I2C0@MSTDAT"
                offset="0x828"
                size="4">
         <field description="Master function data register. Read: read the most recently received data for the Master function. Write: transmit data using the Master function."
                format="hex0x"
                id="I2C0@MSTDAT@DATA"
                offset="[7:0]"/>
      </register>
      <register description="Slave control register." format="hex0x" id="I2C0@SLVCTL"
                offset="0x840"
                size="4">
         <field description="Slave Continue." format="enum" enum="d1e130656"
                id="I2C0@SLVCTL@SLVCONTINUE"
                offset="[0]"/>
         <field description="Slave NACK." format="enum" enum="d1e130702"
                id="I2C0@SLVCTL@SLVNACK"
                offset="[1]"/>
         <field description="Slave DMA enable." format="enum" enum="d1e130748"
                id="I2C0@SLVCTL@SLVDMA"
                offset="[3]"/>
         <field description="Automatic Acknowledge.When this bit is set, it will cause an I2C header which matches SLVADR0 and the direction set by AUTOMATCHREAD to be ACKed immediately; this is used with DMA to allow processing of the data without intervention. If this bit is clear and a header matches SLVADR0, the behavior is controlled by AUTONACK in the SLVADR0 register: allowing NACK or interrupt."
                format="enum"
                enum="d1e130794"
                id="I2C0@SLVCTL@AUTOACK"
                offset="[8]"/>
         <field description="When AUTOACK is set, this bit controls whether it matches a read or write request on the next header with an address matching SLVADR0. Since DMA needs to be configured to match the transfer direction, the direction needs to be specified. This bit allows a direction to be chosen for the next operation."
                format="enum"
                enum="d1e130840"
                id="I2C0@SLVCTL@AUTOMATCHREAD"
                offset="[9]"/>
      </register>
      <register description="Combined Slave receiver and transmitter data register."
                format="hex0x"
                id="I2C0@SLVDAT"
                offset="0x844"
                size="4">
         <field description="Slave function data register. Read: read the most recently received data for the Slave function. Write: transmit data using the Slave function."
                format="hex0x"
                id="I2C0@SLVDAT@DATA"
                offset="[7:0]"/>
      </register>
      <register description="Slave address register." format="hex0x" id="I2C0@SLVADR0"
                offset="0x848"
                size="4">
         <field description="Slave Address n Disable." format="enum" enum="d1e130967"
                id="I2C0@SLVADR0@SADISABLE"
                offset="[0]"/>
         <field description="Slave Address. Seven bit slave address that is compared to received addresses if enabled."
                format="hex0x"
                id="I2C0@SLVADR0@SLVADR"
                offset="[7:1]"/>
         <field description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations."
                format="enum"
                enum="d1e131031"
                id="I2C0@SLVADR0@AUTONACK"
                offset="[15]"/>
      </register>
      <register description="Slave address register." format="hex0x" id="I2C0@SLVADR1"
                offset="0x84c"
                size="4">
         <field description="Slave Address n Disable." format="enum" enum="d1e130967"
                id="I2C0@SLVADR1@SADISABLE"
                offset="[0]"/>
         <field description="Slave Address. Seven bit slave address that is compared to received addresses if enabled."
                format="hex0x"
                id="I2C0@SLVADR1@SLVADR"
                offset="[7:1]"/>
         <field description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations."
                format="enum"
                enum="d1e131031"
                id="I2C0@SLVADR1@AUTONACK"
                offset="[15]"/>
      </register>
      <register description="Slave address register." format="hex0x" id="I2C0@SLVADR2"
                offset="0x850"
                size="4">
         <field description="Slave Address n Disable." format="enum" enum="d1e130967"
                id="I2C0@SLVADR2@SADISABLE"
                offset="[0]"/>
         <field description="Slave Address. Seven bit slave address that is compared to received addresses if enabled."
                format="hex0x"
                id="I2C0@SLVADR2@SLVADR"
                offset="[7:1]"/>
         <field description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations."
                format="enum"
                enum="d1e131031"
                id="I2C0@SLVADR2@AUTONACK"
                offset="[15]"/>
      </register>
      <register description="Slave address register." format="hex0x" id="I2C0@SLVADR3"
                offset="0x854"
                size="4">
         <field description="Slave Address n Disable." format="enum" enum="d1e130967"
                id="I2C0@SLVADR3@SADISABLE"
                offset="[0]"/>
         <field description="Slave Address. Seven bit slave address that is compared to received addresses if enabled."
                format="hex0x"
                id="I2C0@SLVADR3@SLVADR"
                offset="[7:1]"/>
         <field description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations."
                format="enum"
                enum="d1e131031"
                id="I2C0@SLVADR3@AUTONACK"
                offset="[15]"/>
      </register>
      <register description="Slave Qualification for address 0." format="hex0x"
                id="I2C0@SLVQUAL0"
                offset="0x858"
                size="4">
         <field description="Qualify mode for slave address 0." format="enum" enum="d1e131105"
                id="I2C0@SLVQUAL0@QUALMODE0"
                offset="[0]"/>
         <field description="Slave address Qualifier for address 0. A value of 0 causes the address in SLVADR0 to be used as-is, assuming that it is enabled. If QUALMODE0 = 0, any bit in this field which is set to 1 will cause an automatic match of the corresponding bit of the received address when it is compared to the SLVADR0 register. If QUALMODE0 = 1, an address range is matched for address 0. This range extends from the value defined by SLVADR0 to the address defined by SLVQUAL0 (address matches when SLVADR0[7:1] &lt;= received address &lt;= SLVQUAL0[7:1])."
                format="hex0x"
                id="I2C0@SLVQUAL0@SLVQUAL0"
                offset="[7:1]"/>
      </register>
      <register description="Monitor receiver data register." format="hex0x" id="I2C0@MONRXDAT"
                offset="0x880"
                readOnly="true"
                size="4">
         <field description="Monitor function Receiver Data. This reflects every data byte that passes on the I2C pins."
                format="hex0x"
                id="I2C0@MONRXDAT@MONRXDAT"
                offset="[7:0]"/>
         <field description="Monitor Received Start." format="enum" enum="d1e131215"
                id="I2C0@MONRXDAT@MONSTART"
                offset="[8]"/>
         <field description="Monitor Received Repeated Start." format="enum" enum="d1e131261"
                id="I2C0@MONRXDAT@MONRESTART"
                offset="[9]"/>
         <field description="Monitor Received NACK." format="enum" enum="d1e131307"
                id="I2C0@MONRXDAT@MONNACK"
                offset="[10]"/>
      </register>
      <register description="Peripheral identification register." format="hex0x" id="I2C0@ID"
                offset="0xffc"
                readOnly="true"
                size="4">
         <field description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture."
                format="hex0x"
                id="I2C0@ID@APERTURE"
                offset="[7:0]"/>
         <field description="Minor revision of module implementation." format="hex0x"
                id="I2C0@ID@MINOR-REV"
                offset="[11:8]"/>
         <field description="Major revision of module implementation." format="hex0x"
                id="I2C0@ID@MAJOR-REV"
                offset="[15:12]"/>
         <field description="Module identifier for the selected function." format="hex0x"
                id="I2C0@ID@ID"
                offset="[31:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x I2C-bus interfaces" id="I2C8"
               size="0x1000">
      <register description="Configuration for shared functions." format="hex0x" id="I2C0@CFG"
                offset="0x800"
                size="4">
         <field description="Master Enable. When disabled, configurations settings for the Master function are not changed, but the Master function is internally reset."
                format="enum"
                enum="d1e127889"
                id="I2C0@CFG@MSTEN"
                offset="[0]"/>
         <field description="Slave Enable. When disabled, configurations settings for the Slave function are not changed, but the Slave function is internally reset."
                format="enum"
                enum="d1e127935"
                id="I2C0@CFG@SLVEN"
                offset="[1]"/>
         <field description="Monitor Enable. When disabled, configurations settings for the Monitor function are not changed, but the Monitor function is internally reset."
                format="enum"
                enum="d1e127981"
                id="I2C0@CFG@MONEN"
                offset="[2]"/>
         <field description="I2C bus Time-out Enable. When disabled, the time-out function is internally reset."
                format="enum"
                enum="d1e128027"
                id="I2C0@CFG@TIMEOUTEN"
                offset="[3]"/>
         <field description="Monitor function Clock Stretching." format="enum" enum="d1e128073"
                id="I2C0@CFG@MONCLKSTR"
                offset="[4]"/>
         <field description="High-speed mode Capable enable. Since High Speed mode alters the way I2C pins drive and filter, as well as the timing for certain I2C signalling, enabling High-speed mode applies to all functions: Master, Slave, and Monitor."
                format="enum"
                enum="d1e128120"
                id="I2C0@CFG@HSCAPABLE"
                offset="[5]"/>
      </register>
      <register description="Status register for Master, Slave, and Monitor functions."
                format="hex0x"
                id="I2C0@STAT"
                offset="0x804"
                size="4">
         <field description="Master Pending. Indicates that the Master is waiting to continue communication on the I2C-bus (pending) or is idle. When the master is pending, the MSTSTATE bits indicate what type of software service if any the master expects. This flag will cause an interrupt when set if, enabled via the INTENSET register. The MSTPENDING flag is not set when the DMA is handling an event (if the MSTDMA bit in the MSTCTL register is set). If the master is in the idle state, and no communication is needed, mask this interrupt."
                format="enum"
                enum="d1e128194"
                id="I2C0@STAT@MSTPENDING"
                offset="[0]"/>
         <field description="Master State code. The master state code reflects the master state when the MSTPENDING bit is set, that is the master is pending or in the idle state. Each value of this field indicates a specific required service for the Master function. All other values are reserved. See Table 400 for details of state values and appropriate responses."
                format="enum"
                enum="d1e128240"
                id="I2C0@STAT@MSTSTATE"
                offset="[3:1]"/>
         <field description="Master Arbitration Loss flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE."
                format="enum"
                enum="d1e128322"
                id="I2C0@STAT@MSTARBLOSS"
                offset="[4]"/>
         <field description="Master Start/Stop Error flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE."
                format="enum"
                enum="d1e128368"
                id="I2C0@STAT@MSTSTSTPERR"
                offset="[6]"/>
         <field description="Slave Pending. Indicates that the Slave function is waiting to continue communication on the I2C-bus and needs software service. This flag will cause an interrupt when set if enabled via INTENSET. The SLVPENDING flag is not set when the DMA is handling an event (if the SLVDMA bit in the SLVCTL register is set). The SLVPENDING flag is read-only and is automatically cleared when a 1 is written to the SLVCONTINUE bit in the SLVCTL register. The point in time when SlvPending is set depends on whether the I2C interface is in HSCAPABLE mode. See Section 25.7.2.2.2. When the I2C interface is configured to be HSCAPABLE, HS master codes are detected automatically. Due to the requirements of the HS I2C specification, slave addresses must also be detected automatically, since the address must be acknowledged before the clock can be stretched."
                format="enum"
                enum="d1e128414"
                id="I2C0@STAT@SLVPENDING"
                offset="[8]"/>
         <field description="Slave State code. Each value of this field indicates a specific required service for the Slave function. All other values are reserved. See Table 401 for state values and actions. note that the occurrence of some states and how they are handled are affected by DMA mode and Automatic Operation modes."
                format="enum"
                enum="d1e128461"
                id="I2C0@STAT@SLVSTATE"
                offset="[10:9]"/>
         <field description="Slave Not Stretching. Indicates when the slave function is stretching the I2C clock. This is needed in order to gracefully invoke Deep Sleep or Power-down modes during slave operation. This read-only flag reflects the slave function status in real time."
                format="enum"
                enum="d1e128519"
                id="I2C0@STAT@SLVNOTSTR"
                offset="[11]"/>
         <field description="Slave address match Index. This field is valid when the I2C slave function has been selected by receiving an address that matches one of the slave addresses defined by any enabled slave address registers, and provides an identification of the address that was matched. It is possible that more than one address could be matched, but only one match can be reported here."
                format="enum"
                enum="d1e128565"
                id="I2C0@STAT@SLVIDX"
                offset="[13:12]"/>
         <field description="Slave selected flag. SLVSEL is set after an address match when software tells the Slave function to acknowledge the address, or when the address has been automatically acknowledged. It is cleared when another address cycle presents an address that does not match an enabled address on the Slave function, when slave software decides to NACK a matched address, when there is a Stop detected on the bus, when the master NACKs slave data, and in some combinations of Automatic Operation. SLVSEL is not cleared if software NACKs data."
                format="enum"
                enum="d1e128635"
                id="I2C0@STAT@SLVSEL"
                offset="[14]"/>
         <field description="Slave Deselected flag. This flag will cause an interrupt when set if enabled via INTENSET. This flag can be cleared by writing a 1 to this bit."
                format="enum"
                enum="d1e128681"
                id="I2C0@STAT@SLVDESEL"
                offset="[15]"/>
         <field description="Monitor Ready. This flag is cleared when the MONRXDAT register is read."
                format="enum"
                enum="d1e128727"
                id="I2C0@STAT@MONRDY"
                offset="[16]"/>
         <field description="Monitor Overflow flag." format="enum" enum="d1e128774"
                id="I2C0@STAT@MONOV"
                offset="[17]"/>
         <field description="Monitor Active flag. Indicates when the Monitor function considers the I 2C bus to be active. Active is defined here as when some Master is on the bus: a bus Start has occurred more recently than a bus Stop."
                format="enum"
                enum="d1e128820"
                id="I2C0@STAT@MONACTIVE"
                offset="[18]"/>
         <field description="Monitor Idle flag. This flag is set when the Monitor function sees the I2C bus change from active to inactive. This can be used by software to decide when to process data accumulated by the Monitor function. This flag will cause an interrupt when set if enabled via the INTENSET register. The flag can be cleared by writing a 1 to this bit."
                format="enum"
                enum="d1e128866"
                id="I2C0@STAT@MONIDLE"
                offset="[19]"/>
         <field description="Event Time-out Interrupt flag. Indicates when the time between events has been longer than the time specified by the TIMEOUT register. Events include Start, Stop, and clock edges. The flag is cleared by writing a 1 to this bit. No time-out is created when the I2C-bus is idle."
                format="enum"
                enum="d1e128912"
                id="I2C0@STAT@EVENTTIMEOUT"
                offset="[24]"/>
         <field description="SCL Time-out Interrupt flag. Indicates when SCL has remained low longer than the time specific by the TIMEOUT register. The flag is cleared by writing a 1 to this bit."
                format="enum"
                enum="d1e128958"
                id="I2C0@STAT@SCLTIMEOUT"
                offset="[25]"/>
      </register>
      <register description="Interrupt Enable Set and read register." format="hex0x"
                id="I2C0@INTENSET"
                offset="0x808"
                size="4">
         <field description="Master Pending interrupt Enable." format="enum" enum="d1e129032"
                id="I2C0@INTENSET@MSTPENDINGEN"
                offset="[0]"/>
         <field description="Master Arbitration Loss interrupt Enable." format="enum"
                enum="d1e129078"
                id="I2C0@INTENSET@MSTARBLOSSEN"
                offset="[4]"/>
         <field description="Master Start/Stop Error interrupt Enable." format="enum"
                enum="d1e129124"
                id="I2C0@INTENSET@MSTSTSTPERREN"
                offset="[6]"/>
         <field description="Slave Pending interrupt Enable." format="enum" enum="d1e129170"
                id="I2C0@INTENSET@SLVPENDINGEN"
                offset="[8]"/>
         <field description="Slave Not Stretching interrupt Enable." format="enum"
                enum="d1e129216"
                id="I2C0@INTENSET@SLVNOTSTREN"
                offset="[11]"/>
         <field description="Slave Deselect interrupt Enable." format="enum" enum="d1e129263"
                id="I2C0@INTENSET@SLVDESELEN"
                offset="[15]"/>
         <field description="Monitor data Ready interrupt Enable." format="enum"
                enum="d1e129309"
                id="I2C0@INTENSET@MONRDYEN"
                offset="[16]"/>
         <field description="Monitor Overrun interrupt Enable." format="enum" enum="d1e129355"
                id="I2C0@INTENSET@MONOVEN"
                offset="[17]"/>
         <field description="Monitor Idle interrupt Enable." format="enum" enum="d1e129401"
                id="I2C0@INTENSET@MONIDLEEN"
                offset="[19]"/>
         <field description="Event time-out interrupt Enable." format="enum" enum="d1e129447"
                id="I2C0@INTENSET@EVENTTIMEOUTEN"
                offset="[24]"/>
         <field description="SCL time-out interrupt Enable." format="enum" enum="d1e129493"
                id="I2C0@INTENSET@SCLTIMEOUTEN"
                offset="[25]"/>
      </register>
      <register description="Interrupt Enable Clear register." format="hex0x"
                id="I2C0@INTENCLR"
                offset="0x80c"
                writeOnly="true"
                size="4">
         <field description="Master Pending interrupt clear. Writing 1 to this bit clears the corresponding bit in the INTENSET register if implemented."
                format="hex0x"
                id="I2C0@INTENCLR@MSTPENDINGCLR"
                offset="[0]"/>
         <field description="Master Arbitration Loss interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MSTARBLOSSCLR"
                offset="[4]"/>
         <field description="Master Start/Stop Error interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MSTSTSTPERRCLR"
                offset="[6]"/>
         <field description="Slave Pending interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@SLVPENDINGCLR"
                offset="[8]"/>
         <field description="Slave Not Stretching interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@SLVNOTSTRCLR"
                offset="[11]"/>
         <field description="Slave Deselect interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@SLVDESELCLR"
                offset="[15]"/>
         <field description="Monitor data Ready interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MONRDYCLR"
                offset="[16]"/>
         <field description="Monitor Overrun interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MONOVCLR"
                offset="[17]"/>
         <field description="Monitor Idle interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MONIDLECLR"
                offset="[19]"/>
         <field description="Event time-out interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@EVENTTIMEOUTCLR"
                offset="[24]"/>
         <field description="SCL time-out interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@SCLTIMEOUTCLR"
                offset="[25]"/>
      </register>
      <register description="Time-out value register." format="hex0x" id="I2C0@TIMEOUT"
                offset="0x810"
                size="4">
         <field description="Time-out time value, bottom four bits. These are hard-wired to 0xF. This gives a minimum time-out of 16 I2C function clocks and also a time-out resolution of 16 I2C function clocks."
                format="hex0x"
                id="I2C0@TIMEOUT@TOMIN"
                offset="[3:0]"/>
         <field description="Time-out time value. Specifies the time-out interval value in increments of 16 I 2C function clocks, as defined by the CLKDIV register. To change this value while I2C is in operation, disable all time-outs, write a new value to TIMEOUT, then re-enable time-outs. 0x000 = A time-out will occur after 16 counts of the I2C function clock. 0x001 = A time-out will occur after 32 counts of the I2C function clock. 0xFFF = A time-out will occur after 65,536 counts of the I2C function clock."
                format="hex0x"
                id="I2C0@TIMEOUT@TO"
                offset="[15:4]"/>
      </register>
      <register description="Clock pre-divider for the entire I2C interface. This determines what time increments are used for the MSTTIME register, and controls some timing of the Slave function."
                format="hex0x"
                id="I2C0@CLKDIV"
                offset="0x814"
                size="4">
         <field description="This field controls how the Flexcomm clock (FCLK) is used by the I2C functions that need an internal clock in order to operate. 0x0000 = FCLK is used directly by the I2C. 0x0001 = FCLK is divided by 2 before use. 0x0002 = FCLK is divided by 3 before use. 0xFFFF = FCLK is divided by 65,536 before use."
                format="hex0x"
                id="I2C0@CLKDIV@DIVVAL"
                offset="[15:0]"/>
      </register>
      <register description="Interrupt Status register for Master, Slave, and Monitor functions."
                format="hex0x"
                id="I2C0@INTSTAT"
                offset="0x818"
                readOnly="true"
                size="4">
         <field description="Master Pending." format="hex0x" id="I2C0@INTSTAT@MSTPENDING"
                offset="[0]"/>
         <field description="Master Arbitration Loss flag." format="hex0x"
                id="I2C0@INTSTAT@MSTARBLOSS"
                offset="[4]"/>
         <field description="Master Start/Stop Error flag." format="hex0x"
                id="I2C0@INTSTAT@MSTSTSTPERR"
                offset="[6]"/>
         <field description="Slave Pending." format="hex0x" id="I2C0@INTSTAT@SLVPENDING"
                offset="[8]"/>
         <field description="Slave Not Stretching status." format="hex0x"
                id="I2C0@INTSTAT@SLVNOTSTR"
                offset="[11]"/>
         <field description="Slave Deselected flag." format="hex0x" id="I2C0@INTSTAT@SLVDESEL"
                offset="[15]"/>
         <field description="Monitor Ready." format="hex0x" id="I2C0@INTSTAT@MONRDY"
                offset="[16]"/>
         <field description="Monitor Overflow flag." format="hex0x" id="I2C0@INTSTAT@MONOV"
                offset="[17]"/>
         <field description="Monitor Idle flag." format="hex0x" id="I2C0@INTSTAT@MONIDLE"
                offset="[19]"/>
         <field description="Event time-out Interrupt flag." format="hex0x"
                id="I2C0@INTSTAT@EVENTTIMEOUT"
                offset="[24]"/>
         <field description="SCL time-out Interrupt flag." format="hex0x"
                id="I2C0@INTSTAT@SCLTIMEOUT"
                offset="[25]"/>
      </register>
      <register description="Master control register." format="hex0x" id="I2C0@MSTCTL"
                offset="0x820"
                size="4">
         <field description="Master Continue. This bit is write-only." format="enum"
                enum="d1e130132"
                id="I2C0@MSTCTL@MSTCONTINUE"
                offset="[0]"/>
         <field description="Master Start control. This bit is write-only." format="enum"
                enum="d1e130178"
                id="I2C0@MSTCTL@MSTSTART"
                offset="[1]"/>
         <field description="Master Stop control. This bit is write-only." format="enum"
                enum="d1e130224"
                id="I2C0@MSTCTL@MSTSTOP"
                offset="[2]"/>
         <field description="Master DMA enable. Data operations of the I2C can be performed with DMA. Protocol type operations such as Start, address, Stop, and address match must always be done with software, typically via an interrupt. Address acknowledgement must also be done by software except when the I2C is configured to be HSCAPABLE (and address acknowledgement is handled entirely by hardware) or when Automatic Operation is enabled. When a DMA data transfer is complete, MSTDMA must be cleared prior to beginning the next operation, typically a Start or Stop.This bit is read/write."
                format="enum"
                enum="d1e130270"
                id="I2C0@MSTCTL@MSTDMA"
                offset="[3]"/>
      </register>
      <register description="Master timing configuration." format="hex0x" id="I2C0@MSTTIME"
                offset="0x824"
                size="4">
         <field description="Master SCL Low time. Specifies the minimum low time that will be asserted by this master on SCL. Other devices on the bus (masters or slaves) could lengthen this time. This corresponds to the parameter t LOW in the I2C bus specification. I2C bus specification parameters tBUF and tSU;STA have the same values and are also controlled by MSTSCLLOW."
                format="enum"
                enum="d1e130344"
                id="I2C0@MSTTIME@MSTSCLLOW"
                offset="[2:0]"/>
         <field description="Master SCL High time. Specifies the minimum high time that will be asserted by this master on SCL. Other masters in a multi-master system could shorten this time. This corresponds to the parameter tHIGH in the I2C bus specification. I2C bus specification parameters tSU;STO and tHD;STA have the same values and are also controlled by MSTSCLHIGH."
                format="enum"
                enum="d1e130463"
                id="I2C0@MSTTIME@MSTSCLHIGH"
                offset="[6:4]"/>
      </register>
      <register description="Combined Master receiver and transmitter data register."
                format="hex0x"
                id="I2C0@MSTDAT"
                offset="0x828"
                size="4">
         <field description="Master function data register. Read: read the most recently received data for the Master function. Write: transmit data using the Master function."
                format="hex0x"
                id="I2C0@MSTDAT@DATA"
                offset="[7:0]"/>
      </register>
      <register description="Slave control register." format="hex0x" id="I2C0@SLVCTL"
                offset="0x840"
                size="4">
         <field description="Slave Continue." format="enum" enum="d1e130656"
                id="I2C0@SLVCTL@SLVCONTINUE"
                offset="[0]"/>
         <field description="Slave NACK." format="enum" enum="d1e130702"
                id="I2C0@SLVCTL@SLVNACK"
                offset="[1]"/>
         <field description="Slave DMA enable." format="enum" enum="d1e130748"
                id="I2C0@SLVCTL@SLVDMA"
                offset="[3]"/>
         <field description="Automatic Acknowledge.When this bit is set, it will cause an I2C header which matches SLVADR0 and the direction set by AUTOMATCHREAD to be ACKed immediately; this is used with DMA to allow processing of the data without intervention. If this bit is clear and a header matches SLVADR0, the behavior is controlled by AUTONACK in the SLVADR0 register: allowing NACK or interrupt."
                format="enum"
                enum="d1e130794"
                id="I2C0@SLVCTL@AUTOACK"
                offset="[8]"/>
         <field description="When AUTOACK is set, this bit controls whether it matches a read or write request on the next header with an address matching SLVADR0. Since DMA needs to be configured to match the transfer direction, the direction needs to be specified. This bit allows a direction to be chosen for the next operation."
                format="enum"
                enum="d1e130840"
                id="I2C0@SLVCTL@AUTOMATCHREAD"
                offset="[9]"/>
      </register>
      <register description="Combined Slave receiver and transmitter data register."
                format="hex0x"
                id="I2C0@SLVDAT"
                offset="0x844"
                size="4">
         <field description="Slave function data register. Read: read the most recently received data for the Slave function. Write: transmit data using the Slave function."
                format="hex0x"
                id="I2C0@SLVDAT@DATA"
                offset="[7:0]"/>
      </register>
      <register description="Slave address register." format="hex0x" id="I2C0@SLVADR0"
                offset="0x848"
                size="4">
         <field description="Slave Address n Disable." format="enum" enum="d1e130967"
                id="I2C0@SLVADR0@SADISABLE"
                offset="[0]"/>
         <field description="Slave Address. Seven bit slave address that is compared to received addresses if enabled."
                format="hex0x"
                id="I2C0@SLVADR0@SLVADR"
                offset="[7:1]"/>
         <field description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations."
                format="enum"
                enum="d1e131031"
                id="I2C0@SLVADR0@AUTONACK"
                offset="[15]"/>
      </register>
      <register description="Slave address register." format="hex0x" id="I2C0@SLVADR1"
                offset="0x84c"
                size="4">
         <field description="Slave Address n Disable." format="enum" enum="d1e130967"
                id="I2C0@SLVADR1@SADISABLE"
                offset="[0]"/>
         <field description="Slave Address. Seven bit slave address that is compared to received addresses if enabled."
                format="hex0x"
                id="I2C0@SLVADR1@SLVADR"
                offset="[7:1]"/>
         <field description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations."
                format="enum"
                enum="d1e131031"
                id="I2C0@SLVADR1@AUTONACK"
                offset="[15]"/>
      </register>
      <register description="Slave address register." format="hex0x" id="I2C0@SLVADR2"
                offset="0x850"
                size="4">
         <field description="Slave Address n Disable." format="enum" enum="d1e130967"
                id="I2C0@SLVADR2@SADISABLE"
                offset="[0]"/>
         <field description="Slave Address. Seven bit slave address that is compared to received addresses if enabled."
                format="hex0x"
                id="I2C0@SLVADR2@SLVADR"
                offset="[7:1]"/>
         <field description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations."
                format="enum"
                enum="d1e131031"
                id="I2C0@SLVADR2@AUTONACK"
                offset="[15]"/>
      </register>
      <register description="Slave address register." format="hex0x" id="I2C0@SLVADR3"
                offset="0x854"
                size="4">
         <field description="Slave Address n Disable." format="enum" enum="d1e130967"
                id="I2C0@SLVADR3@SADISABLE"
                offset="[0]"/>
         <field description="Slave Address. Seven bit slave address that is compared to received addresses if enabled."
                format="hex0x"
                id="I2C0@SLVADR3@SLVADR"
                offset="[7:1]"/>
         <field description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations."
                format="enum"
                enum="d1e131031"
                id="I2C0@SLVADR3@AUTONACK"
                offset="[15]"/>
      </register>
      <register description="Slave Qualification for address 0." format="hex0x"
                id="I2C0@SLVQUAL0"
                offset="0x858"
                size="4">
         <field description="Qualify mode for slave address 0." format="enum" enum="d1e131105"
                id="I2C0@SLVQUAL0@QUALMODE0"
                offset="[0]"/>
         <field description="Slave address Qualifier for address 0. A value of 0 causes the address in SLVADR0 to be used as-is, assuming that it is enabled. If QUALMODE0 = 0, any bit in this field which is set to 1 will cause an automatic match of the corresponding bit of the received address when it is compared to the SLVADR0 register. If QUALMODE0 = 1, an address range is matched for address 0. This range extends from the value defined by SLVADR0 to the address defined by SLVQUAL0 (address matches when SLVADR0[7:1] &lt;= received address &lt;= SLVQUAL0[7:1])."
                format="hex0x"
                id="I2C0@SLVQUAL0@SLVQUAL0"
                offset="[7:1]"/>
      </register>
      <register description="Monitor receiver data register." format="hex0x" id="I2C0@MONRXDAT"
                offset="0x880"
                readOnly="true"
                size="4">
         <field description="Monitor function Receiver Data. This reflects every data byte that passes on the I2C pins."
                format="hex0x"
                id="I2C0@MONRXDAT@MONRXDAT"
                offset="[7:0]"/>
         <field description="Monitor Received Start." format="enum" enum="d1e131215"
                id="I2C0@MONRXDAT@MONSTART"
                offset="[8]"/>
         <field description="Monitor Received Repeated Start." format="enum" enum="d1e131261"
                id="I2C0@MONRXDAT@MONRESTART"
                offset="[9]"/>
         <field description="Monitor Received NACK." format="enum" enum="d1e131307"
                id="I2C0@MONRXDAT@MONNACK"
                offset="[10]"/>
      </register>
      <register description="Peripheral identification register." format="hex0x" id="I2C0@ID"
                offset="0xffc"
                readOnly="true"
                size="4">
         <field description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture."
                format="hex0x"
                id="I2C0@ID@APERTURE"
                offset="[7:0]"/>
         <field description="Minor revision of module implementation." format="hex0x"
                id="I2C0@ID@MINOR-REV"
                offset="[11:8]"/>
         <field description="Major revision of module implementation." format="hex0x"
                id="I2C0@ID@MAJOR-REV"
                offset="[15:12]"/>
         <field description="Module identifier for the selected function." format="hex0x"
                id="I2C0@ID@ID"
                offset="[31:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x I2C-bus interfaces" id="I2C9"
               size="0x1000">
      <register description="Configuration for shared functions." format="hex0x" id="I2C0@CFG"
                offset="0x800"
                size="4">
         <field description="Master Enable. When disabled, configurations settings for the Master function are not changed, but the Master function is internally reset."
                format="enum"
                enum="d1e127889"
                id="I2C0@CFG@MSTEN"
                offset="[0]"/>
         <field description="Slave Enable. When disabled, configurations settings for the Slave function are not changed, but the Slave function is internally reset."
                format="enum"
                enum="d1e127935"
                id="I2C0@CFG@SLVEN"
                offset="[1]"/>
         <field description="Monitor Enable. When disabled, configurations settings for the Monitor function are not changed, but the Monitor function is internally reset."
                format="enum"
                enum="d1e127981"
                id="I2C0@CFG@MONEN"
                offset="[2]"/>
         <field description="I2C bus Time-out Enable. When disabled, the time-out function is internally reset."
                format="enum"
                enum="d1e128027"
                id="I2C0@CFG@TIMEOUTEN"
                offset="[3]"/>
         <field description="Monitor function Clock Stretching." format="enum" enum="d1e128073"
                id="I2C0@CFG@MONCLKSTR"
                offset="[4]"/>
         <field description="High-speed mode Capable enable. Since High Speed mode alters the way I2C pins drive and filter, as well as the timing for certain I2C signalling, enabling High-speed mode applies to all functions: Master, Slave, and Monitor."
                format="enum"
                enum="d1e128120"
                id="I2C0@CFG@HSCAPABLE"
                offset="[5]"/>
      </register>
      <register description="Status register for Master, Slave, and Monitor functions."
                format="hex0x"
                id="I2C0@STAT"
                offset="0x804"
                size="4">
         <field description="Master Pending. Indicates that the Master is waiting to continue communication on the I2C-bus (pending) or is idle. When the master is pending, the MSTSTATE bits indicate what type of software service if any the master expects. This flag will cause an interrupt when set if, enabled via the INTENSET register. The MSTPENDING flag is not set when the DMA is handling an event (if the MSTDMA bit in the MSTCTL register is set). If the master is in the idle state, and no communication is needed, mask this interrupt."
                format="enum"
                enum="d1e128194"
                id="I2C0@STAT@MSTPENDING"
                offset="[0]"/>
         <field description="Master State code. The master state code reflects the master state when the MSTPENDING bit is set, that is the master is pending or in the idle state. Each value of this field indicates a specific required service for the Master function. All other values are reserved. See Table 400 for details of state values and appropriate responses."
                format="enum"
                enum="d1e128240"
                id="I2C0@STAT@MSTSTATE"
                offset="[3:1]"/>
         <field description="Master Arbitration Loss flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE."
                format="enum"
                enum="d1e128322"
                id="I2C0@STAT@MSTARBLOSS"
                offset="[4]"/>
         <field description="Master Start/Stop Error flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE."
                format="enum"
                enum="d1e128368"
                id="I2C0@STAT@MSTSTSTPERR"
                offset="[6]"/>
         <field description="Slave Pending. Indicates that the Slave function is waiting to continue communication on the I2C-bus and needs software service. This flag will cause an interrupt when set if enabled via INTENSET. The SLVPENDING flag is not set when the DMA is handling an event (if the SLVDMA bit in the SLVCTL register is set). The SLVPENDING flag is read-only and is automatically cleared when a 1 is written to the SLVCONTINUE bit in the SLVCTL register. The point in time when SlvPending is set depends on whether the I2C interface is in HSCAPABLE mode. See Section 25.7.2.2.2. When the I2C interface is configured to be HSCAPABLE, HS master codes are detected automatically. Due to the requirements of the HS I2C specification, slave addresses must also be detected automatically, since the address must be acknowledged before the clock can be stretched."
                format="enum"
                enum="d1e128414"
                id="I2C0@STAT@SLVPENDING"
                offset="[8]"/>
         <field description="Slave State code. Each value of this field indicates a specific required service for the Slave function. All other values are reserved. See Table 401 for state values and actions. note that the occurrence of some states and how they are handled are affected by DMA mode and Automatic Operation modes."
                format="enum"
                enum="d1e128461"
                id="I2C0@STAT@SLVSTATE"
                offset="[10:9]"/>
         <field description="Slave Not Stretching. Indicates when the slave function is stretching the I2C clock. This is needed in order to gracefully invoke Deep Sleep or Power-down modes during slave operation. This read-only flag reflects the slave function status in real time."
                format="enum"
                enum="d1e128519"
                id="I2C0@STAT@SLVNOTSTR"
                offset="[11]"/>
         <field description="Slave address match Index. This field is valid when the I2C slave function has been selected by receiving an address that matches one of the slave addresses defined by any enabled slave address registers, and provides an identification of the address that was matched. It is possible that more than one address could be matched, but only one match can be reported here."
                format="enum"
                enum="d1e128565"
                id="I2C0@STAT@SLVIDX"
                offset="[13:12]"/>
         <field description="Slave selected flag. SLVSEL is set after an address match when software tells the Slave function to acknowledge the address, or when the address has been automatically acknowledged. It is cleared when another address cycle presents an address that does not match an enabled address on the Slave function, when slave software decides to NACK a matched address, when there is a Stop detected on the bus, when the master NACKs slave data, and in some combinations of Automatic Operation. SLVSEL is not cleared if software NACKs data."
                format="enum"
                enum="d1e128635"
                id="I2C0@STAT@SLVSEL"
                offset="[14]"/>
         <field description="Slave Deselected flag. This flag will cause an interrupt when set if enabled via INTENSET. This flag can be cleared by writing a 1 to this bit."
                format="enum"
                enum="d1e128681"
                id="I2C0@STAT@SLVDESEL"
                offset="[15]"/>
         <field description="Monitor Ready. This flag is cleared when the MONRXDAT register is read."
                format="enum"
                enum="d1e128727"
                id="I2C0@STAT@MONRDY"
                offset="[16]"/>
         <field description="Monitor Overflow flag." format="enum" enum="d1e128774"
                id="I2C0@STAT@MONOV"
                offset="[17]"/>
         <field description="Monitor Active flag. Indicates when the Monitor function considers the I 2C bus to be active. Active is defined here as when some Master is on the bus: a bus Start has occurred more recently than a bus Stop."
                format="enum"
                enum="d1e128820"
                id="I2C0@STAT@MONACTIVE"
                offset="[18]"/>
         <field description="Monitor Idle flag. This flag is set when the Monitor function sees the I2C bus change from active to inactive. This can be used by software to decide when to process data accumulated by the Monitor function. This flag will cause an interrupt when set if enabled via the INTENSET register. The flag can be cleared by writing a 1 to this bit."
                format="enum"
                enum="d1e128866"
                id="I2C0@STAT@MONIDLE"
                offset="[19]"/>
         <field description="Event Time-out Interrupt flag. Indicates when the time between events has been longer than the time specified by the TIMEOUT register. Events include Start, Stop, and clock edges. The flag is cleared by writing a 1 to this bit. No time-out is created when the I2C-bus is idle."
                format="enum"
                enum="d1e128912"
                id="I2C0@STAT@EVENTTIMEOUT"
                offset="[24]"/>
         <field description="SCL Time-out Interrupt flag. Indicates when SCL has remained low longer than the time specific by the TIMEOUT register. The flag is cleared by writing a 1 to this bit."
                format="enum"
                enum="d1e128958"
                id="I2C0@STAT@SCLTIMEOUT"
                offset="[25]"/>
      </register>
      <register description="Interrupt Enable Set and read register." format="hex0x"
                id="I2C0@INTENSET"
                offset="0x808"
                size="4">
         <field description="Master Pending interrupt Enable." format="enum" enum="d1e129032"
                id="I2C0@INTENSET@MSTPENDINGEN"
                offset="[0]"/>
         <field description="Master Arbitration Loss interrupt Enable." format="enum"
                enum="d1e129078"
                id="I2C0@INTENSET@MSTARBLOSSEN"
                offset="[4]"/>
         <field description="Master Start/Stop Error interrupt Enable." format="enum"
                enum="d1e129124"
                id="I2C0@INTENSET@MSTSTSTPERREN"
                offset="[6]"/>
         <field description="Slave Pending interrupt Enable." format="enum" enum="d1e129170"
                id="I2C0@INTENSET@SLVPENDINGEN"
                offset="[8]"/>
         <field description="Slave Not Stretching interrupt Enable." format="enum"
                enum="d1e129216"
                id="I2C0@INTENSET@SLVNOTSTREN"
                offset="[11]"/>
         <field description="Slave Deselect interrupt Enable." format="enum" enum="d1e129263"
                id="I2C0@INTENSET@SLVDESELEN"
                offset="[15]"/>
         <field description="Monitor data Ready interrupt Enable." format="enum"
                enum="d1e129309"
                id="I2C0@INTENSET@MONRDYEN"
                offset="[16]"/>
         <field description="Monitor Overrun interrupt Enable." format="enum" enum="d1e129355"
                id="I2C0@INTENSET@MONOVEN"
                offset="[17]"/>
         <field description="Monitor Idle interrupt Enable." format="enum" enum="d1e129401"
                id="I2C0@INTENSET@MONIDLEEN"
                offset="[19]"/>
         <field description="Event time-out interrupt Enable." format="enum" enum="d1e129447"
                id="I2C0@INTENSET@EVENTTIMEOUTEN"
                offset="[24]"/>
         <field description="SCL time-out interrupt Enable." format="enum" enum="d1e129493"
                id="I2C0@INTENSET@SCLTIMEOUTEN"
                offset="[25]"/>
      </register>
      <register description="Interrupt Enable Clear register." format="hex0x"
                id="I2C0@INTENCLR"
                offset="0x80c"
                writeOnly="true"
                size="4">
         <field description="Master Pending interrupt clear. Writing 1 to this bit clears the corresponding bit in the INTENSET register if implemented."
                format="hex0x"
                id="I2C0@INTENCLR@MSTPENDINGCLR"
                offset="[0]"/>
         <field description="Master Arbitration Loss interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MSTARBLOSSCLR"
                offset="[4]"/>
         <field description="Master Start/Stop Error interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MSTSTSTPERRCLR"
                offset="[6]"/>
         <field description="Slave Pending interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@SLVPENDINGCLR"
                offset="[8]"/>
         <field description="Slave Not Stretching interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@SLVNOTSTRCLR"
                offset="[11]"/>
         <field description="Slave Deselect interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@SLVDESELCLR"
                offset="[15]"/>
         <field description="Monitor data Ready interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MONRDYCLR"
                offset="[16]"/>
         <field description="Monitor Overrun interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MONOVCLR"
                offset="[17]"/>
         <field description="Monitor Idle interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@MONIDLECLR"
                offset="[19]"/>
         <field description="Event time-out interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@EVENTTIMEOUTCLR"
                offset="[24]"/>
         <field description="SCL time-out interrupt clear." format="hex0x"
                id="I2C0@INTENCLR@SCLTIMEOUTCLR"
                offset="[25]"/>
      </register>
      <register description="Time-out value register." format="hex0x" id="I2C0@TIMEOUT"
                offset="0x810"
                size="4">
         <field description="Time-out time value, bottom four bits. These are hard-wired to 0xF. This gives a minimum time-out of 16 I2C function clocks and also a time-out resolution of 16 I2C function clocks."
                format="hex0x"
                id="I2C0@TIMEOUT@TOMIN"
                offset="[3:0]"/>
         <field description="Time-out time value. Specifies the time-out interval value in increments of 16 I 2C function clocks, as defined by the CLKDIV register. To change this value while I2C is in operation, disable all time-outs, write a new value to TIMEOUT, then re-enable time-outs. 0x000 = A time-out will occur after 16 counts of the I2C function clock. 0x001 = A time-out will occur after 32 counts of the I2C function clock. 0xFFF = A time-out will occur after 65,536 counts of the I2C function clock."
                format="hex0x"
                id="I2C0@TIMEOUT@TO"
                offset="[15:4]"/>
      </register>
      <register description="Clock pre-divider for the entire I2C interface. This determines what time increments are used for the MSTTIME register, and controls some timing of the Slave function."
                format="hex0x"
                id="I2C0@CLKDIV"
                offset="0x814"
                size="4">
         <field description="This field controls how the Flexcomm clock (FCLK) is used by the I2C functions that need an internal clock in order to operate. 0x0000 = FCLK is used directly by the I2C. 0x0001 = FCLK is divided by 2 before use. 0x0002 = FCLK is divided by 3 before use. 0xFFFF = FCLK is divided by 65,536 before use."
                format="hex0x"
                id="I2C0@CLKDIV@DIVVAL"
                offset="[15:0]"/>
      </register>
      <register description="Interrupt Status register for Master, Slave, and Monitor functions."
                format="hex0x"
                id="I2C0@INTSTAT"
                offset="0x818"
                readOnly="true"
                size="4">
         <field description="Master Pending." format="hex0x" id="I2C0@INTSTAT@MSTPENDING"
                offset="[0]"/>
         <field description="Master Arbitration Loss flag." format="hex0x"
                id="I2C0@INTSTAT@MSTARBLOSS"
                offset="[4]"/>
         <field description="Master Start/Stop Error flag." format="hex0x"
                id="I2C0@INTSTAT@MSTSTSTPERR"
                offset="[6]"/>
         <field description="Slave Pending." format="hex0x" id="I2C0@INTSTAT@SLVPENDING"
                offset="[8]"/>
         <field description="Slave Not Stretching status." format="hex0x"
                id="I2C0@INTSTAT@SLVNOTSTR"
                offset="[11]"/>
         <field description="Slave Deselected flag." format="hex0x" id="I2C0@INTSTAT@SLVDESEL"
                offset="[15]"/>
         <field description="Monitor Ready." format="hex0x" id="I2C0@INTSTAT@MONRDY"
                offset="[16]"/>
         <field description="Monitor Overflow flag." format="hex0x" id="I2C0@INTSTAT@MONOV"
                offset="[17]"/>
         <field description="Monitor Idle flag." format="hex0x" id="I2C0@INTSTAT@MONIDLE"
                offset="[19]"/>
         <field description="Event time-out Interrupt flag." format="hex0x"
                id="I2C0@INTSTAT@EVENTTIMEOUT"
                offset="[24]"/>
         <field description="SCL time-out Interrupt flag." format="hex0x"
                id="I2C0@INTSTAT@SCLTIMEOUT"
                offset="[25]"/>
      </register>
      <register description="Master control register." format="hex0x" id="I2C0@MSTCTL"
                offset="0x820"
                size="4">
         <field description="Master Continue. This bit is write-only." format="enum"
                enum="d1e130132"
                id="I2C0@MSTCTL@MSTCONTINUE"
                offset="[0]"/>
         <field description="Master Start control. This bit is write-only." format="enum"
                enum="d1e130178"
                id="I2C0@MSTCTL@MSTSTART"
                offset="[1]"/>
         <field description="Master Stop control. This bit is write-only." format="enum"
                enum="d1e130224"
                id="I2C0@MSTCTL@MSTSTOP"
                offset="[2]"/>
         <field description="Master DMA enable. Data operations of the I2C can be performed with DMA. Protocol type operations such as Start, address, Stop, and address match must always be done with software, typically via an interrupt. Address acknowledgement must also be done by software except when the I2C is configured to be HSCAPABLE (and address acknowledgement is handled entirely by hardware) or when Automatic Operation is enabled. When a DMA data transfer is complete, MSTDMA must be cleared prior to beginning the next operation, typically a Start or Stop.This bit is read/write."
                format="enum"
                enum="d1e130270"
                id="I2C0@MSTCTL@MSTDMA"
                offset="[3]"/>
      </register>
      <register description="Master timing configuration." format="hex0x" id="I2C0@MSTTIME"
                offset="0x824"
                size="4">
         <field description="Master SCL Low time. Specifies the minimum low time that will be asserted by this master on SCL. Other devices on the bus (masters or slaves) could lengthen this time. This corresponds to the parameter t LOW in the I2C bus specification. I2C bus specification parameters tBUF and tSU;STA have the same values and are also controlled by MSTSCLLOW."
                format="enum"
                enum="d1e130344"
                id="I2C0@MSTTIME@MSTSCLLOW"
                offset="[2:0]"/>
         <field description="Master SCL High time. Specifies the minimum high time that will be asserted by this master on SCL. Other masters in a multi-master system could shorten this time. This corresponds to the parameter tHIGH in the I2C bus specification. I2C bus specification parameters tSU;STO and tHD;STA have the same values and are also controlled by MSTSCLHIGH."
                format="enum"
                enum="d1e130463"
                id="I2C0@MSTTIME@MSTSCLHIGH"
                offset="[6:4]"/>
      </register>
      <register description="Combined Master receiver and transmitter data register."
                format="hex0x"
                id="I2C0@MSTDAT"
                offset="0x828"
                size="4">
         <field description="Master function data register. Read: read the most recently received data for the Master function. Write: transmit data using the Master function."
                format="hex0x"
                id="I2C0@MSTDAT@DATA"
                offset="[7:0]"/>
      </register>
      <register description="Slave control register." format="hex0x" id="I2C0@SLVCTL"
                offset="0x840"
                size="4">
         <field description="Slave Continue." format="enum" enum="d1e130656"
                id="I2C0@SLVCTL@SLVCONTINUE"
                offset="[0]"/>
         <field description="Slave NACK." format="enum" enum="d1e130702"
                id="I2C0@SLVCTL@SLVNACK"
                offset="[1]"/>
         <field description="Slave DMA enable." format="enum" enum="d1e130748"
                id="I2C0@SLVCTL@SLVDMA"
                offset="[3]"/>
         <field description="Automatic Acknowledge.When this bit is set, it will cause an I2C header which matches SLVADR0 and the direction set by AUTOMATCHREAD to be ACKed immediately; this is used with DMA to allow processing of the data without intervention. If this bit is clear and a header matches SLVADR0, the behavior is controlled by AUTONACK in the SLVADR0 register: allowing NACK or interrupt."
                format="enum"
                enum="d1e130794"
                id="I2C0@SLVCTL@AUTOACK"
                offset="[8]"/>
         <field description="When AUTOACK is set, this bit controls whether it matches a read or write request on the next header with an address matching SLVADR0. Since DMA needs to be configured to match the transfer direction, the direction needs to be specified. This bit allows a direction to be chosen for the next operation."
                format="enum"
                enum="d1e130840"
                id="I2C0@SLVCTL@AUTOMATCHREAD"
                offset="[9]"/>
      </register>
      <register description="Combined Slave receiver and transmitter data register."
                format="hex0x"
                id="I2C0@SLVDAT"
                offset="0x844"
                size="4">
         <field description="Slave function data register. Read: read the most recently received data for the Slave function. Write: transmit data using the Slave function."
                format="hex0x"
                id="I2C0@SLVDAT@DATA"
                offset="[7:0]"/>
      </register>
      <register description="Slave address register." format="hex0x" id="I2C0@SLVADR0"
                offset="0x848"
                size="4">
         <field description="Slave Address n Disable." format="enum" enum="d1e130967"
                id="I2C0@SLVADR0@SADISABLE"
                offset="[0]"/>
         <field description="Slave Address. Seven bit slave address that is compared to received addresses if enabled."
                format="hex0x"
                id="I2C0@SLVADR0@SLVADR"
                offset="[7:1]"/>
         <field description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations."
                format="enum"
                enum="d1e131031"
                id="I2C0@SLVADR0@AUTONACK"
                offset="[15]"/>
      </register>
      <register description="Slave address register." format="hex0x" id="I2C0@SLVADR1"
                offset="0x84c"
                size="4">
         <field description="Slave Address n Disable." format="enum" enum="d1e130967"
                id="I2C0@SLVADR1@SADISABLE"
                offset="[0]"/>
         <field description="Slave Address. Seven bit slave address that is compared to received addresses if enabled."
                format="hex0x"
                id="I2C0@SLVADR1@SLVADR"
                offset="[7:1]"/>
         <field description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations."
                format="enum"
                enum="d1e131031"
                id="I2C0@SLVADR1@AUTONACK"
                offset="[15]"/>
      </register>
      <register description="Slave address register." format="hex0x" id="I2C0@SLVADR2"
                offset="0x850"
                size="4">
         <field description="Slave Address n Disable." format="enum" enum="d1e130967"
                id="I2C0@SLVADR2@SADISABLE"
                offset="[0]"/>
         <field description="Slave Address. Seven bit slave address that is compared to received addresses if enabled."
                format="hex0x"
                id="I2C0@SLVADR2@SLVADR"
                offset="[7:1]"/>
         <field description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations."
                format="enum"
                enum="d1e131031"
                id="I2C0@SLVADR2@AUTONACK"
                offset="[15]"/>
      </register>
      <register description="Slave address register." format="hex0x" id="I2C0@SLVADR3"
                offset="0x854"
                size="4">
         <field description="Slave Address n Disable." format="enum" enum="d1e130967"
                id="I2C0@SLVADR3@SADISABLE"
                offset="[0]"/>
         <field description="Slave Address. Seven bit slave address that is compared to received addresses if enabled."
                format="hex0x"
                id="I2C0@SLVADR3@SLVADR"
                offset="[7:1]"/>
         <field description="Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations."
                format="enum"
                enum="d1e131031"
                id="I2C0@SLVADR3@AUTONACK"
                offset="[15]"/>
      </register>
      <register description="Slave Qualification for address 0." format="hex0x"
                id="I2C0@SLVQUAL0"
                offset="0x858"
                size="4">
         <field description="Qualify mode for slave address 0." format="enum" enum="d1e131105"
                id="I2C0@SLVQUAL0@QUALMODE0"
                offset="[0]"/>
         <field description="Slave address Qualifier for address 0. A value of 0 causes the address in SLVADR0 to be used as-is, assuming that it is enabled. If QUALMODE0 = 0, any bit in this field which is set to 1 will cause an automatic match of the corresponding bit of the received address when it is compared to the SLVADR0 register. If QUALMODE0 = 1, an address range is matched for address 0. This range extends from the value defined by SLVADR0 to the address defined by SLVQUAL0 (address matches when SLVADR0[7:1] &lt;= received address &lt;= SLVQUAL0[7:1])."
                format="hex0x"
                id="I2C0@SLVQUAL0@SLVQUAL0"
                offset="[7:1]"/>
      </register>
      <register description="Monitor receiver data register." format="hex0x" id="I2C0@MONRXDAT"
                offset="0x880"
                readOnly="true"
                size="4">
         <field description="Monitor function Receiver Data. This reflects every data byte that passes on the I2C pins."
                format="hex0x"
                id="I2C0@MONRXDAT@MONRXDAT"
                offset="[7:0]"/>
         <field description="Monitor Received Start." format="enum" enum="d1e131215"
                id="I2C0@MONRXDAT@MONSTART"
                offset="[8]"/>
         <field description="Monitor Received Repeated Start." format="enum" enum="d1e131261"
                id="I2C0@MONRXDAT@MONRESTART"
                offset="[9]"/>
         <field description="Monitor Received NACK." format="enum" enum="d1e131307"
                id="I2C0@MONRXDAT@MONNACK"
                offset="[10]"/>
      </register>
      <register description="Peripheral identification register." format="hex0x" id="I2C0@ID"
                offset="0xffc"
                readOnly="true"
                size="4">
         <field description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture."
                format="hex0x"
                id="I2C0@ID@APERTURE"
                offset="[7:0]"/>
         <field description="Minor revision of module implementation." format="hex0x"
                id="I2C0@ID@MINOR-REV"
                offset="[11:8]"/>
         <field description="Major revision of module implementation." format="hex0x"
                id="I2C0@ID@MAJOR-REV"
                offset="[15:12]"/>
         <field description="Module identifier for the selected function." format="hex0x"
                id="I2C0@ID@ID"
                offset="[31:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x Serial Peripheral Interfaces (SPI)"
               id="SPI0"
               size="0x1000">
      <register description="SPI Configuration register" format="hex0x" id="SPI0@CFG"
                offset="0x400"
                size="4">
         <field description="SPI enable." format="enum" enum="d1e131889" id="SPI0@CFG@ENABLE"
                offset="[0]"/>
         <field description="Master mode select." format="enum" enum="d1e131935"
                id="SPI0@CFG@MASTER"
                offset="[2]"/>
         <field description="LSB First mode enable." format="enum" enum="d1e131981"
                id="SPI0@CFG@LSBF"
                offset="[3]"/>
         <field description="Clock Phase select." format="enum" enum="d1e132027"
                id="SPI0@CFG@CPHA"
                offset="[4]"/>
         <field description="Clock Polarity select." format="enum" enum="d1e132073"
                id="SPI0@CFG@CPOL"
                offset="[5]"/>
         <field description="Loopback mode enable. Loopback mode applies only to Master mode, and connects transmit and receive data connected together to allow simple software testing."
                format="enum"
                enum="d1e132120"
                id="SPI0@CFG@LOOP"
                offset="[7]"/>
         <field description="SSEL0 Polarity select." format="enum" enum="d1e132166"
                id="SPI0@CFG@SPOL0"
                offset="[8]"/>
         <field description="SSEL1 Polarity select." format="enum" enum="d1e132212"
                id="SPI0@CFG@SPOL1"
                offset="[9]"/>
         <field description="SSEL2 Polarity select." format="enum" enum="d1e132258"
                id="SPI0@CFG@SPOL2"
                offset="[10]"/>
         <field description="SSEL3 Polarity select." format="enum" enum="d1e132304"
                id="SPI0@CFG@SPOL3"
                offset="[11]"/>
      </register>
      <register description="SPI Delay register" format="hex0x" id="SPI0@DLY" offset="0x404"
                size="4">
         <field description="Controls the amount of time between SSEL assertion and the beginning of a data transfer. There is always one SPI clock time between SSEL assertion and the first clock edge. This is not considered part of the pre-delay. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted."
                format="hex0x"
                id="SPI0@DLY@PRE-DELAY"
                offset="[3:0]"/>
         <field description="Controls the amount of time between the end of a data transfer and SSEL deassertion. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted."
                format="hex0x"
                id="SPI0@DLY@POST-DELAY"
                offset="[7:4]"/>
         <field description="If the EOF flag is set, controls the minimum amount of time between the current frame and the next frame (or SSEL deassertion if EOT). 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted."
                format="hex0x"
                id="SPI0@DLY@FRAME-DELAY"
                offset="[11:8]"/>
         <field description="Controls the minimum amount of time that the SSEL is deasserted between transfers. 0x0 = The minimum time that SSEL is deasserted is 1 SPI clock time. (Zero added time.) 0x1 = The minimum time that SSEL is deasserted is 2 SPI clock times. 0x2 = The minimum time that SSEL is deasserted is 3 SPI clock times. 0xF = The minimum time that SSEL is deasserted is 16 SPI clock times."
                format="hex0x"
                id="SPI0@DLY@TRANSFER-DELAY"
                offset="[15:12]"/>
      </register>
      <register description="SPI Status. Some status flags can be cleared by writing a 1 to that bit position."
                format="hex0x"
                id="SPI0@STAT"
                offset="0x408"
                size="4">
         <field description="Slave Select Assert. This flag is set whenever any slave select transitions from deasserted to asserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become busy, and allows waking up the device from reduced power modes when a slave mode access begins. This flag is cleared by software."
                format="hex0x"
                id="SPI0@STAT@SSA"
                offset="[4]"/>
         <field description="Slave Select Deassert. This flag is set whenever any asserted slave selects transition to deasserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become idle. This flag is cleared by software."
                format="hex0x"
                id="SPI0@STAT@SSD"
                offset="[5]"/>
         <field description="Stalled status flag. This indicates whether the SPI is currently in a stall condition."
                format="hex0x"
                id="SPI0@STAT@STALLED"
                offset="[6]"/>
         <field description="End Transfer control bit. Software can set this bit to force an end to the current transfer when the transmitter finishes any activity already in progress, as if the EOT flag had been set prior to the last transmission. This capability is included to support cases where it is not known when transmit data is written that it will be the end of a transfer. The bit is cleared when the transmitter becomes idle as the transfer comes to an end. Forcing an end of transfer in this manner causes any specified FRAME_DELAY and TRANSFER_DELAY to be inserted."
                format="hex0x"
                id="SPI0@STAT@ENDTRANSFER"
                offset="[7]"/>
         <field description="Master idle status flag. This bit is 1 whenever the SPI master function is fully idle. This means that the transmit holding register is empty and the transmitter is not in the process of sending data."
                format="hex0x"
                id="SPI0@STAT@MSTIDLE"
                offset="[8]"/>
      </register>
      <register description="SPI Interrupt Enable read and Set. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set."
                format="hex0x"
                id="SPI0@INTENSET"
                offset="0x40c"
                size="4">
         <field description="Slave select assert interrupt enable. Determines whether an interrupt occurs when the Slave Select is asserted."
                format="enum"
                enum="d1e132596"
                id="SPI0@INTENSET@SSAEN"
                offset="[4]"/>
         <field description="Slave select deassert interrupt enable. Determines whether an interrupt occurs when the Slave Select is deasserted."
                format="enum"
                enum="d1e132642"
                id="SPI0@INTENSET@SSDEN"
                offset="[5]"/>
         <field description="Master idle interrupt enable." format="enum" enum="d1e132688"
                id="SPI0@INTENSET@MSTIDLEEN"
                offset="[8]"/>
      </register>
      <register description="SPI Interrupt Enable Clear. Writing a 1 to any implemented bit position causes the corresponding bit in INTENSET to be cleared."
                format="hex0x"
                id="SPI0@INTENCLR"
                offset="0x410"
                writeOnly="true"
                size="4">
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="SPI0@INTENCLR@SSAEN"
                offset="[4]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="SPI0@INTENCLR@SSDEN"
                offset="[5]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="SPI0@INTENCLR@MSTIDLE"
                offset="[8]"/>
      </register>
      <register description="SPI clock Divider" format="hex0x" id="SPI0@DIV" offset="0x424"
                size="4">
         <field description="Rate divider value. Specifies how the Flexcomm clock (FCLK) is divided to produce the SPI clock rate in master mode. DIVVAL is -1 encoded such that the value 0 results in FCLK/1, the value 1 results in FCLK/2, up to the maximum possible divide value of 0xFFFF, which results in FCLK/65536."
                format="hex0x"
                id="SPI0@DIV@DIVVAL"
                offset="[15:0]"/>
      </register>
      <register description="SPI Interrupt Status" format="hex0x" id="SPI0@INTSTAT"
                offset="0x428"
                readOnly="true"
                size="4">
         <field description="Slave Select Assert." format="hex0x" id="SPI0@INTSTAT@SSA"
                offset="[4]"/>
         <field description="Slave Select Deassert." format="hex0x" id="SPI0@INTSTAT@SSD"
                offset="[5]"/>
         <field description="Master Idle status flag." format="hex0x" id="SPI0@INTSTAT@MSTIDLE"
                offset="[8]"/>
      </register>
      <register description="FIFO configuration and enable register." format="hex0x"
                id="SPI0@FIFOCFG"
                offset="0xe00"
                size="4">
         <field description="Enable the transmit FIFO." format="enum" enum="d1e132973"
                id="SPI0@FIFOCFG@ENABLETX"
                offset="[0]"/>
         <field description="Enable the receive FIFO." format="enum" enum="d1e133019"
                id="SPI0@FIFOCFG@ENABLERX"
                offset="[1]"/>
         <field description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART."
                format="hex0x"
                id="SPI0@FIFOCFG@SIZE"
                offset="[5:4]"/>
         <field description="DMA configuration for transmit." format="enum" enum="d1e133083"
                id="SPI0@FIFOCFG@DMATX"
                offset="[12]"/>
         <field description="DMA configuration for receive." format="enum" enum="d1e133129"
                id="SPI0@FIFOCFG@DMARX"
                offset="[13]"/>
         <field description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e133176"
                id="SPI0@FIFOCFG@WAKETX"
                offset="[14]"/>
         <field description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e133222"
                id="SPI0@FIFOCFG@WAKERX"
                offset="[15]"/>
         <field description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied."
                format="hex0x"
                id="SPI0@FIFOCFG@EMPTYTX"
                offset="[16]"/>
         <field description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied."
                format="hex0x"
                id="SPI0@FIFOCFG@EMPTYRX"
                offset="[17]"/>
         <field description="Pop FIFO for debug reads." format="enum" enum="d1e133304"
                id="SPI0@FIFOCFG@POPDBG"
                offset="[18]"/>
      </register>
      <register description="FIFO status register." format="hex0x" id="SPI0@FIFOSTAT"
                offset="0xe04"
                size="4">
         <field description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="SPI0@FIFOSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="SPI0@FIFOSTAT@RXERR"
                offset="[1]"/>
         <field description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register."
                format="hex0x"
                id="SPI0@FIFOSTAT@PERINT"
                offset="[3]"/>
         <field description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data."
                format="hex0x"
                id="SPI0@FIFOSTAT@TXEMPTY"
                offset="[4]"/>
         <field description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow."
                format="hex0x"
                id="SPI0@FIFOSTAT@TXNOTFULL"
                offset="[5]"/>
         <field description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty."
                format="hex0x"
                id="SPI0@FIFOSTAT@RXNOTEMPTY"
                offset="[6]"/>
         <field description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow."
                format="hex0x"
                id="SPI0@FIFOSTAT@RXFULL"
                offset="[7]"/>
         <field description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0."
                format="hex0x"
                id="SPI0@FIFOSTAT@TXLVL"
                offset="[12:8]"/>
         <field description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1."
                format="hex0x"
                id="SPI0@FIFOSTAT@RXLVL"
                offset="[20:16]"/>
      </register>
      <register description="FIFO trigger settings for interrupt and DMA request."
                format="hex0x"
                id="SPI0@FIFOTRIG"
                offset="0xe08"
                size="4">
         <field description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set."
                format="enum"
                enum="d1e133569"
                id="SPI0@FIFOTRIG@TXLVLENA"
                offset="[0]"/>
         <field description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set."
                format="enum"
                enum="d1e133615"
                id="SPI0@FIFOTRIG@RXLVLENA"
                offset="[1]"/>
         <field description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)."
                format="hex0x"
                id="SPI0@FIFOTRIG@TXLVL"
                offset="[11:8]"/>
         <field description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)."
                format="hex0x"
                id="SPI0@FIFOTRIG@RXLVL"
                offset="[19:16]"/>
      </register>
      <register description="FIFO interrupt enable set (enable) and read register."
                format="hex0x"
                id="SPI0@FIFOINTENSET"
                offset="0xe10"
                size="4">
         <field description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e133725"
                id="SPI0@FIFOINTENSET@TXERR"
                offset="[0]"/>
         <field description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e133771"
                id="SPI0@FIFOINTENSET@RXERR"
                offset="[1]"/>
         <field description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e133817"
                id="SPI0@FIFOINTENSET@TXLVL"
                offset="[2]"/>
         <field description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e133863"
                id="SPI0@FIFOINTENSET@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt enable clear (disable) and read register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR"
                offset="0xe14"
                size="4">
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR@TXERR"
                offset="[0]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR@RXERR"
                offset="[1]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR@TXLVL"
                offset="[2]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt status register." format="hex0x"
                id="SPI0@FIFOINTSTAT"
                offset="0xe18"
                readOnly="true"
                size="4">
         <field description="TX FIFO error." format="hex0x" id="SPI0@FIFOINTSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error." format="hex0x" id="SPI0@FIFOINTSTAT@RXERR"
                offset="[1]"/>
         <field description="Transmit FIFO level interrupt." format="hex0x"
                id="SPI0@FIFOINTSTAT@TXLVL"
                offset="[2]"/>
         <field description="Receive FIFO level interrupt." format="hex0x"
                id="SPI0@FIFOINTSTAT@RXLVL"
                offset="[3]"/>
         <field description="Peripheral interrupt." format="hex0x" id="SPI0@FIFOINTSTAT@PERINT"
                offset="[4]"/>
      </register>
      <register description="FIFO write data." format="hex0x" id="SPI0@FIFOWR" offset="0xe20"
                size="4">
         <field description="Transmit data to the FIFO." format="hex0x" id="SPI0@FIFOWR@TXDATA"
                offset="[15:0]"/>
         <field description="Transmit slave select. This field asserts SSEL0 in master mode. The output on the pin is active LOW by default."
                format="enum"
                enum="d1e134174"
                id="SPI0@FIFOWR@TXSSEL0-N"
                offset="[16]"/>
         <field description="Transmit slave select. This field asserts SSEL1 in master mode. The output on the pin is active LOW by default."
                format="enum"
                enum="d1e134220"
                id="SPI0@FIFOWR@TXSSEL1-N"
                offset="[17]"/>
         <field description="Transmit slave select. This field asserts SSEL2 in master mode. The output on the pin is active LOW by default."
                format="enum"
                enum="d1e134266"
                id="SPI0@FIFOWR@TXSSEL2-N"
                offset="[18]"/>
         <field description="Transmit slave select. This field asserts SSEL3 in master mode. The output on the pin is active LOW by default."
                format="enum"
                enum="d1e134312"
                id="SPI0@FIFOWR@TXSSEL3-N"
                offset="[19]"/>
         <field description="End of transfer. The asserted SSEL will be deasserted at the end of a transfer and remain so far at least the time specified by the Transfer_delay value in the DLY register."
                format="enum"
                enum="d1e134359"
                id="SPI0@FIFOWR@EOT"
                offset="[20]"/>
         <field description="End of frame. Between frames, a delay may be inserted, as defined by the Frame_delay value in the DLY register. The end of a frame may not be particularly meaningful if the Frame_delay value = 0. This control can be used as part of the support for frame lengths greater than 16 bits."
                format="enum"
                enum="d1e134405"
                id="SPI0@FIFOWR@EOF"
                offset="[21]"/>
         <field description="Receive Ignore. This allows data to be transmitted using the SPI without the need to read unneeded data from the receiver. Setting this bit simplifies the transmit process and can be used with the DMA."
                format="enum"
                enum="d1e134451"
                id="SPI0@FIFOWR@RXIGNORE"
                offset="[22]"/>
         <field description="Data Length. Specifies the data length from 4 to 16 bits. Note that transfer lengths greater than 16 bits are supported by implementing multiple sequential transmits. 0x0-2 = Reserved. 0x3 = Data transfer is 4 bits in length. 0x4 = Data transfer is 5 bits in length. 0xF = Data transfer is 16 bits in length."
                format="hex0x"
                id="SPI0@FIFOWR@LEN"
                offset="[27:24]"/>
      </register>
      <register description="FIFO read data." format="hex0x" id="SPI0@FIFORD" offset="0xe30"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO." format="hex0x"
                id="SPI0@FIFORD@RXDATA"
                offset="[15:0]"/>
         <field description="Slave Select for receive. This field allows the state of the SSEL0 pin to be saved along with received data. The value will reflect the SSEL0 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG."
                format="hex0x"
                id="SPI0@FIFORD@RXSSEL0-N"
                offset="[16]"/>
         <field description="Slave Select for receive. This field allows the state of the SSEL1 pin to be saved along with received data. The value will reflect the SSEL1 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG."
                format="hex0x"
                id="SPI0@FIFORD@RXSSEL1-N"
                offset="[17]"/>
         <field description="Slave Select for receive. This field allows the state of the SSEL2 pin to be saved along with received data. The value will reflect the SSEL2 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG."
                format="hex0x"
                id="SPI0@FIFORD@RXSSEL2-N"
                offset="[18]"/>
         <field description="Slave Select for receive. This field allows the state of the SSEL3 pin to be saved along with received data. The value will reflect the SSEL3 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG."
                format="hex0x"
                id="SPI0@FIFORD@RXSSEL3-N"
                offset="[19]"/>
         <field description="Start of Transfer flag. This flag will be 1 if this is the first data after the SSELs went from deasserted to asserted (i.e., any previous transfer has ended). This information can be used to identify the first piece of data in cases where the transfer length is greater than 16 bits."
                format="hex0x"
                id="SPI0@FIFORD@SOT"
                offset="[20]"/>
      </register>
      <register description="FIFO data read with no FIFO pop." format="hex0x"
                id="SPI0@FIFORDNOPOP"
                offset="0xe40"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXDATA"
                offset="[15:0]"/>
         <field description="Slave Select for receive." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXSSEL0-N"
                offset="[16]"/>
         <field description="Slave Select for receive." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXSSEL1-N"
                offset="[17]"/>
         <field description="Slave Select for receive." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXSSEL2-N"
                offset="[18]"/>
         <field description="Slave Select for receive." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXSSEL3-N"
                offset="[19]"/>
         <field description="Start of transfer flag." format="hex0x" id="SPI0@FIFORDNOPOP@SOT"
                offset="[20]"/>
      </register>
      <register description="Peripheral identification register." format="hex0x" id="SPI0@ID"
                offset="0xffc"
                readOnly="true"
                size="4">
         <field description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture."
                format="hex0x"
                id="SPI0@ID@APERTURE"
                offset="[7:0]"/>
         <field description="Minor revision of module implementation." format="hex0x"
                id="SPI0@ID@MINOR-REV"
                offset="[11:8]"/>
         <field description="Major revision of module implementation." format="hex0x"
                id="SPI0@ID@MAJOR-REV"
                offset="[15:12]"/>
         <field description="Module identifier for the selected function." format="hex0x"
                id="SPI0@ID@ID"
                offset="[31:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x Serial Peripheral Interfaces (SPI)"
               id="SPI1"
               size="0x1000">
      <register description="SPI Configuration register" format="hex0x" id="SPI0@CFG"
                offset="0x400"
                size="4">
         <field description="SPI enable." format="enum" enum="d1e131889" id="SPI0@CFG@ENABLE"
                offset="[0]"/>
         <field description="Master mode select." format="enum" enum="d1e131935"
                id="SPI0@CFG@MASTER"
                offset="[2]"/>
         <field description="LSB First mode enable." format="enum" enum="d1e131981"
                id="SPI0@CFG@LSBF"
                offset="[3]"/>
         <field description="Clock Phase select." format="enum" enum="d1e132027"
                id="SPI0@CFG@CPHA"
                offset="[4]"/>
         <field description="Clock Polarity select." format="enum" enum="d1e132073"
                id="SPI0@CFG@CPOL"
                offset="[5]"/>
         <field description="Loopback mode enable. Loopback mode applies only to Master mode, and connects transmit and receive data connected together to allow simple software testing."
                format="enum"
                enum="d1e132120"
                id="SPI0@CFG@LOOP"
                offset="[7]"/>
         <field description="SSEL0 Polarity select." format="enum" enum="d1e132166"
                id="SPI0@CFG@SPOL0"
                offset="[8]"/>
         <field description="SSEL1 Polarity select." format="enum" enum="d1e132212"
                id="SPI0@CFG@SPOL1"
                offset="[9]"/>
         <field description="SSEL2 Polarity select." format="enum" enum="d1e132258"
                id="SPI0@CFG@SPOL2"
                offset="[10]"/>
         <field description="SSEL3 Polarity select." format="enum" enum="d1e132304"
                id="SPI0@CFG@SPOL3"
                offset="[11]"/>
      </register>
      <register description="SPI Delay register" format="hex0x" id="SPI0@DLY" offset="0x404"
                size="4">
         <field description="Controls the amount of time between SSEL assertion and the beginning of a data transfer. There is always one SPI clock time between SSEL assertion and the first clock edge. This is not considered part of the pre-delay. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted."
                format="hex0x"
                id="SPI0@DLY@PRE-DELAY"
                offset="[3:0]"/>
         <field description="Controls the amount of time between the end of a data transfer and SSEL deassertion. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted."
                format="hex0x"
                id="SPI0@DLY@POST-DELAY"
                offset="[7:4]"/>
         <field description="If the EOF flag is set, controls the minimum amount of time between the current frame and the next frame (or SSEL deassertion if EOT). 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted."
                format="hex0x"
                id="SPI0@DLY@FRAME-DELAY"
                offset="[11:8]"/>
         <field description="Controls the minimum amount of time that the SSEL is deasserted between transfers. 0x0 = The minimum time that SSEL is deasserted is 1 SPI clock time. (Zero added time.) 0x1 = The minimum time that SSEL is deasserted is 2 SPI clock times. 0x2 = The minimum time that SSEL is deasserted is 3 SPI clock times. 0xF = The minimum time that SSEL is deasserted is 16 SPI clock times."
                format="hex0x"
                id="SPI0@DLY@TRANSFER-DELAY"
                offset="[15:12]"/>
      </register>
      <register description="SPI Status. Some status flags can be cleared by writing a 1 to that bit position."
                format="hex0x"
                id="SPI0@STAT"
                offset="0x408"
                size="4">
         <field description="Slave Select Assert. This flag is set whenever any slave select transitions from deasserted to asserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become busy, and allows waking up the device from reduced power modes when a slave mode access begins. This flag is cleared by software."
                format="hex0x"
                id="SPI0@STAT@SSA"
                offset="[4]"/>
         <field description="Slave Select Deassert. This flag is set whenever any asserted slave selects transition to deasserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become idle. This flag is cleared by software."
                format="hex0x"
                id="SPI0@STAT@SSD"
                offset="[5]"/>
         <field description="Stalled status flag. This indicates whether the SPI is currently in a stall condition."
                format="hex0x"
                id="SPI0@STAT@STALLED"
                offset="[6]"/>
         <field description="End Transfer control bit. Software can set this bit to force an end to the current transfer when the transmitter finishes any activity already in progress, as if the EOT flag had been set prior to the last transmission. This capability is included to support cases where it is not known when transmit data is written that it will be the end of a transfer. The bit is cleared when the transmitter becomes idle as the transfer comes to an end. Forcing an end of transfer in this manner causes any specified FRAME_DELAY and TRANSFER_DELAY to be inserted."
                format="hex0x"
                id="SPI0@STAT@ENDTRANSFER"
                offset="[7]"/>
         <field description="Master idle status flag. This bit is 1 whenever the SPI master function is fully idle. This means that the transmit holding register is empty and the transmitter is not in the process of sending data."
                format="hex0x"
                id="SPI0@STAT@MSTIDLE"
                offset="[8]"/>
      </register>
      <register description="SPI Interrupt Enable read and Set. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set."
                format="hex0x"
                id="SPI0@INTENSET"
                offset="0x40c"
                size="4">
         <field description="Slave select assert interrupt enable. Determines whether an interrupt occurs when the Slave Select is asserted."
                format="enum"
                enum="d1e132596"
                id="SPI0@INTENSET@SSAEN"
                offset="[4]"/>
         <field description="Slave select deassert interrupt enable. Determines whether an interrupt occurs when the Slave Select is deasserted."
                format="enum"
                enum="d1e132642"
                id="SPI0@INTENSET@SSDEN"
                offset="[5]"/>
         <field description="Master idle interrupt enable." format="enum" enum="d1e132688"
                id="SPI0@INTENSET@MSTIDLEEN"
                offset="[8]"/>
      </register>
      <register description="SPI Interrupt Enable Clear. Writing a 1 to any implemented bit position causes the corresponding bit in INTENSET to be cleared."
                format="hex0x"
                id="SPI0@INTENCLR"
                offset="0x410"
                writeOnly="true"
                size="4">
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="SPI0@INTENCLR@SSAEN"
                offset="[4]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="SPI0@INTENCLR@SSDEN"
                offset="[5]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="SPI0@INTENCLR@MSTIDLE"
                offset="[8]"/>
      </register>
      <register description="SPI clock Divider" format="hex0x" id="SPI0@DIV" offset="0x424"
                size="4">
         <field description="Rate divider value. Specifies how the Flexcomm clock (FCLK) is divided to produce the SPI clock rate in master mode. DIVVAL is -1 encoded such that the value 0 results in FCLK/1, the value 1 results in FCLK/2, up to the maximum possible divide value of 0xFFFF, which results in FCLK/65536."
                format="hex0x"
                id="SPI0@DIV@DIVVAL"
                offset="[15:0]"/>
      </register>
      <register description="SPI Interrupt Status" format="hex0x" id="SPI0@INTSTAT"
                offset="0x428"
                readOnly="true"
                size="4">
         <field description="Slave Select Assert." format="hex0x" id="SPI0@INTSTAT@SSA"
                offset="[4]"/>
         <field description="Slave Select Deassert." format="hex0x" id="SPI0@INTSTAT@SSD"
                offset="[5]"/>
         <field description="Master Idle status flag." format="hex0x" id="SPI0@INTSTAT@MSTIDLE"
                offset="[8]"/>
      </register>
      <register description="FIFO configuration and enable register." format="hex0x"
                id="SPI0@FIFOCFG"
                offset="0xe00"
                size="4">
         <field description="Enable the transmit FIFO." format="enum" enum="d1e132973"
                id="SPI0@FIFOCFG@ENABLETX"
                offset="[0]"/>
         <field description="Enable the receive FIFO." format="enum" enum="d1e133019"
                id="SPI0@FIFOCFG@ENABLERX"
                offset="[1]"/>
         <field description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART."
                format="hex0x"
                id="SPI0@FIFOCFG@SIZE"
                offset="[5:4]"/>
         <field description="DMA configuration for transmit." format="enum" enum="d1e133083"
                id="SPI0@FIFOCFG@DMATX"
                offset="[12]"/>
         <field description="DMA configuration for receive." format="enum" enum="d1e133129"
                id="SPI0@FIFOCFG@DMARX"
                offset="[13]"/>
         <field description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e133176"
                id="SPI0@FIFOCFG@WAKETX"
                offset="[14]"/>
         <field description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e133222"
                id="SPI0@FIFOCFG@WAKERX"
                offset="[15]"/>
         <field description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied."
                format="hex0x"
                id="SPI0@FIFOCFG@EMPTYTX"
                offset="[16]"/>
         <field description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied."
                format="hex0x"
                id="SPI0@FIFOCFG@EMPTYRX"
                offset="[17]"/>
         <field description="Pop FIFO for debug reads." format="enum" enum="d1e133304"
                id="SPI0@FIFOCFG@POPDBG"
                offset="[18]"/>
      </register>
      <register description="FIFO status register." format="hex0x" id="SPI0@FIFOSTAT"
                offset="0xe04"
                size="4">
         <field description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="SPI0@FIFOSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="SPI0@FIFOSTAT@RXERR"
                offset="[1]"/>
         <field description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register."
                format="hex0x"
                id="SPI0@FIFOSTAT@PERINT"
                offset="[3]"/>
         <field description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data."
                format="hex0x"
                id="SPI0@FIFOSTAT@TXEMPTY"
                offset="[4]"/>
         <field description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow."
                format="hex0x"
                id="SPI0@FIFOSTAT@TXNOTFULL"
                offset="[5]"/>
         <field description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty."
                format="hex0x"
                id="SPI0@FIFOSTAT@RXNOTEMPTY"
                offset="[6]"/>
         <field description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow."
                format="hex0x"
                id="SPI0@FIFOSTAT@RXFULL"
                offset="[7]"/>
         <field description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0."
                format="hex0x"
                id="SPI0@FIFOSTAT@TXLVL"
                offset="[12:8]"/>
         <field description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1."
                format="hex0x"
                id="SPI0@FIFOSTAT@RXLVL"
                offset="[20:16]"/>
      </register>
      <register description="FIFO trigger settings for interrupt and DMA request."
                format="hex0x"
                id="SPI0@FIFOTRIG"
                offset="0xe08"
                size="4">
         <field description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set."
                format="enum"
                enum="d1e133569"
                id="SPI0@FIFOTRIG@TXLVLENA"
                offset="[0]"/>
         <field description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set."
                format="enum"
                enum="d1e133615"
                id="SPI0@FIFOTRIG@RXLVLENA"
                offset="[1]"/>
         <field description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)."
                format="hex0x"
                id="SPI0@FIFOTRIG@TXLVL"
                offset="[11:8]"/>
         <field description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)."
                format="hex0x"
                id="SPI0@FIFOTRIG@RXLVL"
                offset="[19:16]"/>
      </register>
      <register description="FIFO interrupt enable set (enable) and read register."
                format="hex0x"
                id="SPI0@FIFOINTENSET"
                offset="0xe10"
                size="4">
         <field description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e133725"
                id="SPI0@FIFOINTENSET@TXERR"
                offset="[0]"/>
         <field description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e133771"
                id="SPI0@FIFOINTENSET@RXERR"
                offset="[1]"/>
         <field description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e133817"
                id="SPI0@FIFOINTENSET@TXLVL"
                offset="[2]"/>
         <field description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e133863"
                id="SPI0@FIFOINTENSET@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt enable clear (disable) and read register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR"
                offset="0xe14"
                size="4">
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR@TXERR"
                offset="[0]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR@RXERR"
                offset="[1]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR@TXLVL"
                offset="[2]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt status register." format="hex0x"
                id="SPI0@FIFOINTSTAT"
                offset="0xe18"
                readOnly="true"
                size="4">
         <field description="TX FIFO error." format="hex0x" id="SPI0@FIFOINTSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error." format="hex0x" id="SPI0@FIFOINTSTAT@RXERR"
                offset="[1]"/>
         <field description="Transmit FIFO level interrupt." format="hex0x"
                id="SPI0@FIFOINTSTAT@TXLVL"
                offset="[2]"/>
         <field description="Receive FIFO level interrupt." format="hex0x"
                id="SPI0@FIFOINTSTAT@RXLVL"
                offset="[3]"/>
         <field description="Peripheral interrupt." format="hex0x" id="SPI0@FIFOINTSTAT@PERINT"
                offset="[4]"/>
      </register>
      <register description="FIFO write data." format="hex0x" id="SPI0@FIFOWR" offset="0xe20"
                size="4">
         <field description="Transmit data to the FIFO." format="hex0x" id="SPI0@FIFOWR@TXDATA"
                offset="[15:0]"/>
         <field description="Transmit slave select. This field asserts SSEL0 in master mode. The output on the pin is active LOW by default."
                format="enum"
                enum="d1e134174"
                id="SPI0@FIFOWR@TXSSEL0-N"
                offset="[16]"/>
         <field description="Transmit slave select. This field asserts SSEL1 in master mode. The output on the pin is active LOW by default."
                format="enum"
                enum="d1e134220"
                id="SPI0@FIFOWR@TXSSEL1-N"
                offset="[17]"/>
         <field description="Transmit slave select. This field asserts SSEL2 in master mode. The output on the pin is active LOW by default."
                format="enum"
                enum="d1e134266"
                id="SPI0@FIFOWR@TXSSEL2-N"
                offset="[18]"/>
         <field description="Transmit slave select. This field asserts SSEL3 in master mode. The output on the pin is active LOW by default."
                format="enum"
                enum="d1e134312"
                id="SPI0@FIFOWR@TXSSEL3-N"
                offset="[19]"/>
         <field description="End of transfer. The asserted SSEL will be deasserted at the end of a transfer and remain so far at least the time specified by the Transfer_delay value in the DLY register."
                format="enum"
                enum="d1e134359"
                id="SPI0@FIFOWR@EOT"
                offset="[20]"/>
         <field description="End of frame. Between frames, a delay may be inserted, as defined by the Frame_delay value in the DLY register. The end of a frame may not be particularly meaningful if the Frame_delay value = 0. This control can be used as part of the support for frame lengths greater than 16 bits."
                format="enum"
                enum="d1e134405"
                id="SPI0@FIFOWR@EOF"
                offset="[21]"/>
         <field description="Receive Ignore. This allows data to be transmitted using the SPI without the need to read unneeded data from the receiver. Setting this bit simplifies the transmit process and can be used with the DMA."
                format="enum"
                enum="d1e134451"
                id="SPI0@FIFOWR@RXIGNORE"
                offset="[22]"/>
         <field description="Data Length. Specifies the data length from 4 to 16 bits. Note that transfer lengths greater than 16 bits are supported by implementing multiple sequential transmits. 0x0-2 = Reserved. 0x3 = Data transfer is 4 bits in length. 0x4 = Data transfer is 5 bits in length. 0xF = Data transfer is 16 bits in length."
                format="hex0x"
                id="SPI0@FIFOWR@LEN"
                offset="[27:24]"/>
      </register>
      <register description="FIFO read data." format="hex0x" id="SPI0@FIFORD" offset="0xe30"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO." format="hex0x"
                id="SPI0@FIFORD@RXDATA"
                offset="[15:0]"/>
         <field description="Slave Select for receive. This field allows the state of the SSEL0 pin to be saved along with received data. The value will reflect the SSEL0 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG."
                format="hex0x"
                id="SPI0@FIFORD@RXSSEL0-N"
                offset="[16]"/>
         <field description="Slave Select for receive. This field allows the state of the SSEL1 pin to be saved along with received data. The value will reflect the SSEL1 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG."
                format="hex0x"
                id="SPI0@FIFORD@RXSSEL1-N"
                offset="[17]"/>
         <field description="Slave Select for receive. This field allows the state of the SSEL2 pin to be saved along with received data. The value will reflect the SSEL2 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG."
                format="hex0x"
                id="SPI0@FIFORD@RXSSEL2-N"
                offset="[18]"/>
         <field description="Slave Select for receive. This field allows the state of the SSEL3 pin to be saved along with received data. The value will reflect the SSEL3 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG."
                format="hex0x"
                id="SPI0@FIFORD@RXSSEL3-N"
                offset="[19]"/>
         <field description="Start of Transfer flag. This flag will be 1 if this is the first data after the SSELs went from deasserted to asserted (i.e., any previous transfer has ended). This information can be used to identify the first piece of data in cases where the transfer length is greater than 16 bits."
                format="hex0x"
                id="SPI0@FIFORD@SOT"
                offset="[20]"/>
      </register>
      <register description="FIFO data read with no FIFO pop." format="hex0x"
                id="SPI0@FIFORDNOPOP"
                offset="0xe40"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXDATA"
                offset="[15:0]"/>
         <field description="Slave Select for receive." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXSSEL0-N"
                offset="[16]"/>
         <field description="Slave Select for receive." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXSSEL1-N"
                offset="[17]"/>
         <field description="Slave Select for receive." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXSSEL2-N"
                offset="[18]"/>
         <field description="Slave Select for receive." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXSSEL3-N"
                offset="[19]"/>
         <field description="Start of transfer flag." format="hex0x" id="SPI0@FIFORDNOPOP@SOT"
                offset="[20]"/>
      </register>
      <register description="Peripheral identification register." format="hex0x" id="SPI0@ID"
                offset="0xffc"
                readOnly="true"
                size="4">
         <field description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture."
                format="hex0x"
                id="SPI0@ID@APERTURE"
                offset="[7:0]"/>
         <field description="Minor revision of module implementation." format="hex0x"
                id="SPI0@ID@MINOR-REV"
                offset="[11:8]"/>
         <field description="Major revision of module implementation." format="hex0x"
                id="SPI0@ID@MAJOR-REV"
                offset="[15:12]"/>
         <field description="Module identifier for the selected function." format="hex0x"
                id="SPI0@ID@ID"
                offset="[31:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x Serial Peripheral Interfaces (SPI)"
               id="SPI2"
               size="0x1000">
      <register description="SPI Configuration register" format="hex0x" id="SPI0@CFG"
                offset="0x400"
                size="4">
         <field description="SPI enable." format="enum" enum="d1e131889" id="SPI0@CFG@ENABLE"
                offset="[0]"/>
         <field description="Master mode select." format="enum" enum="d1e131935"
                id="SPI0@CFG@MASTER"
                offset="[2]"/>
         <field description="LSB First mode enable." format="enum" enum="d1e131981"
                id="SPI0@CFG@LSBF"
                offset="[3]"/>
         <field description="Clock Phase select." format="enum" enum="d1e132027"
                id="SPI0@CFG@CPHA"
                offset="[4]"/>
         <field description="Clock Polarity select." format="enum" enum="d1e132073"
                id="SPI0@CFG@CPOL"
                offset="[5]"/>
         <field description="Loopback mode enable. Loopback mode applies only to Master mode, and connects transmit and receive data connected together to allow simple software testing."
                format="enum"
                enum="d1e132120"
                id="SPI0@CFG@LOOP"
                offset="[7]"/>
         <field description="SSEL0 Polarity select." format="enum" enum="d1e132166"
                id="SPI0@CFG@SPOL0"
                offset="[8]"/>
         <field description="SSEL1 Polarity select." format="enum" enum="d1e132212"
                id="SPI0@CFG@SPOL1"
                offset="[9]"/>
         <field description="SSEL2 Polarity select." format="enum" enum="d1e132258"
                id="SPI0@CFG@SPOL2"
                offset="[10]"/>
         <field description="SSEL3 Polarity select." format="enum" enum="d1e132304"
                id="SPI0@CFG@SPOL3"
                offset="[11]"/>
      </register>
      <register description="SPI Delay register" format="hex0x" id="SPI0@DLY" offset="0x404"
                size="4">
         <field description="Controls the amount of time between SSEL assertion and the beginning of a data transfer. There is always one SPI clock time between SSEL assertion and the first clock edge. This is not considered part of the pre-delay. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted."
                format="hex0x"
                id="SPI0@DLY@PRE-DELAY"
                offset="[3:0]"/>
         <field description="Controls the amount of time between the end of a data transfer and SSEL deassertion. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted."
                format="hex0x"
                id="SPI0@DLY@POST-DELAY"
                offset="[7:4]"/>
         <field description="If the EOF flag is set, controls the minimum amount of time between the current frame and the next frame (or SSEL deassertion if EOT). 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted."
                format="hex0x"
                id="SPI0@DLY@FRAME-DELAY"
                offset="[11:8]"/>
         <field description="Controls the minimum amount of time that the SSEL is deasserted between transfers. 0x0 = The minimum time that SSEL is deasserted is 1 SPI clock time. (Zero added time.) 0x1 = The minimum time that SSEL is deasserted is 2 SPI clock times. 0x2 = The minimum time that SSEL is deasserted is 3 SPI clock times. 0xF = The minimum time that SSEL is deasserted is 16 SPI clock times."
                format="hex0x"
                id="SPI0@DLY@TRANSFER-DELAY"
                offset="[15:12]"/>
      </register>
      <register description="SPI Status. Some status flags can be cleared by writing a 1 to that bit position."
                format="hex0x"
                id="SPI0@STAT"
                offset="0x408"
                size="4">
         <field description="Slave Select Assert. This flag is set whenever any slave select transitions from deasserted to asserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become busy, and allows waking up the device from reduced power modes when a slave mode access begins. This flag is cleared by software."
                format="hex0x"
                id="SPI0@STAT@SSA"
                offset="[4]"/>
         <field description="Slave Select Deassert. This flag is set whenever any asserted slave selects transition to deasserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become idle. This flag is cleared by software."
                format="hex0x"
                id="SPI0@STAT@SSD"
                offset="[5]"/>
         <field description="Stalled status flag. This indicates whether the SPI is currently in a stall condition."
                format="hex0x"
                id="SPI0@STAT@STALLED"
                offset="[6]"/>
         <field description="End Transfer control bit. Software can set this bit to force an end to the current transfer when the transmitter finishes any activity already in progress, as if the EOT flag had been set prior to the last transmission. This capability is included to support cases where it is not known when transmit data is written that it will be the end of a transfer. The bit is cleared when the transmitter becomes idle as the transfer comes to an end. Forcing an end of transfer in this manner causes any specified FRAME_DELAY and TRANSFER_DELAY to be inserted."
                format="hex0x"
                id="SPI0@STAT@ENDTRANSFER"
                offset="[7]"/>
         <field description="Master idle status flag. This bit is 1 whenever the SPI master function is fully idle. This means that the transmit holding register is empty and the transmitter is not in the process of sending data."
                format="hex0x"
                id="SPI0@STAT@MSTIDLE"
                offset="[8]"/>
      </register>
      <register description="SPI Interrupt Enable read and Set. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set."
                format="hex0x"
                id="SPI0@INTENSET"
                offset="0x40c"
                size="4">
         <field description="Slave select assert interrupt enable. Determines whether an interrupt occurs when the Slave Select is asserted."
                format="enum"
                enum="d1e132596"
                id="SPI0@INTENSET@SSAEN"
                offset="[4]"/>
         <field description="Slave select deassert interrupt enable. Determines whether an interrupt occurs when the Slave Select is deasserted."
                format="enum"
                enum="d1e132642"
                id="SPI0@INTENSET@SSDEN"
                offset="[5]"/>
         <field description="Master idle interrupt enable." format="enum" enum="d1e132688"
                id="SPI0@INTENSET@MSTIDLEEN"
                offset="[8]"/>
      </register>
      <register description="SPI Interrupt Enable Clear. Writing a 1 to any implemented bit position causes the corresponding bit in INTENSET to be cleared."
                format="hex0x"
                id="SPI0@INTENCLR"
                offset="0x410"
                writeOnly="true"
                size="4">
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="SPI0@INTENCLR@SSAEN"
                offset="[4]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="SPI0@INTENCLR@SSDEN"
                offset="[5]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="SPI0@INTENCLR@MSTIDLE"
                offset="[8]"/>
      </register>
      <register description="SPI clock Divider" format="hex0x" id="SPI0@DIV" offset="0x424"
                size="4">
         <field description="Rate divider value. Specifies how the Flexcomm clock (FCLK) is divided to produce the SPI clock rate in master mode. DIVVAL is -1 encoded such that the value 0 results in FCLK/1, the value 1 results in FCLK/2, up to the maximum possible divide value of 0xFFFF, which results in FCLK/65536."
                format="hex0x"
                id="SPI0@DIV@DIVVAL"
                offset="[15:0]"/>
      </register>
      <register description="SPI Interrupt Status" format="hex0x" id="SPI0@INTSTAT"
                offset="0x428"
                readOnly="true"
                size="4">
         <field description="Slave Select Assert." format="hex0x" id="SPI0@INTSTAT@SSA"
                offset="[4]"/>
         <field description="Slave Select Deassert." format="hex0x" id="SPI0@INTSTAT@SSD"
                offset="[5]"/>
         <field description="Master Idle status flag." format="hex0x" id="SPI0@INTSTAT@MSTIDLE"
                offset="[8]"/>
      </register>
      <register description="FIFO configuration and enable register." format="hex0x"
                id="SPI0@FIFOCFG"
                offset="0xe00"
                size="4">
         <field description="Enable the transmit FIFO." format="enum" enum="d1e132973"
                id="SPI0@FIFOCFG@ENABLETX"
                offset="[0]"/>
         <field description="Enable the receive FIFO." format="enum" enum="d1e133019"
                id="SPI0@FIFOCFG@ENABLERX"
                offset="[1]"/>
         <field description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART."
                format="hex0x"
                id="SPI0@FIFOCFG@SIZE"
                offset="[5:4]"/>
         <field description="DMA configuration for transmit." format="enum" enum="d1e133083"
                id="SPI0@FIFOCFG@DMATX"
                offset="[12]"/>
         <field description="DMA configuration for receive." format="enum" enum="d1e133129"
                id="SPI0@FIFOCFG@DMARX"
                offset="[13]"/>
         <field description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e133176"
                id="SPI0@FIFOCFG@WAKETX"
                offset="[14]"/>
         <field description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e133222"
                id="SPI0@FIFOCFG@WAKERX"
                offset="[15]"/>
         <field description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied."
                format="hex0x"
                id="SPI0@FIFOCFG@EMPTYTX"
                offset="[16]"/>
         <field description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied."
                format="hex0x"
                id="SPI0@FIFOCFG@EMPTYRX"
                offset="[17]"/>
         <field description="Pop FIFO for debug reads." format="enum" enum="d1e133304"
                id="SPI0@FIFOCFG@POPDBG"
                offset="[18]"/>
      </register>
      <register description="FIFO status register." format="hex0x" id="SPI0@FIFOSTAT"
                offset="0xe04"
                size="4">
         <field description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="SPI0@FIFOSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="SPI0@FIFOSTAT@RXERR"
                offset="[1]"/>
         <field description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register."
                format="hex0x"
                id="SPI0@FIFOSTAT@PERINT"
                offset="[3]"/>
         <field description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data."
                format="hex0x"
                id="SPI0@FIFOSTAT@TXEMPTY"
                offset="[4]"/>
         <field description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow."
                format="hex0x"
                id="SPI0@FIFOSTAT@TXNOTFULL"
                offset="[5]"/>
         <field description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty."
                format="hex0x"
                id="SPI0@FIFOSTAT@RXNOTEMPTY"
                offset="[6]"/>
         <field description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow."
                format="hex0x"
                id="SPI0@FIFOSTAT@RXFULL"
                offset="[7]"/>
         <field description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0."
                format="hex0x"
                id="SPI0@FIFOSTAT@TXLVL"
                offset="[12:8]"/>
         <field description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1."
                format="hex0x"
                id="SPI0@FIFOSTAT@RXLVL"
                offset="[20:16]"/>
      </register>
      <register description="FIFO trigger settings for interrupt and DMA request."
                format="hex0x"
                id="SPI0@FIFOTRIG"
                offset="0xe08"
                size="4">
         <field description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set."
                format="enum"
                enum="d1e133569"
                id="SPI0@FIFOTRIG@TXLVLENA"
                offset="[0]"/>
         <field description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set."
                format="enum"
                enum="d1e133615"
                id="SPI0@FIFOTRIG@RXLVLENA"
                offset="[1]"/>
         <field description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)."
                format="hex0x"
                id="SPI0@FIFOTRIG@TXLVL"
                offset="[11:8]"/>
         <field description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)."
                format="hex0x"
                id="SPI0@FIFOTRIG@RXLVL"
                offset="[19:16]"/>
      </register>
      <register description="FIFO interrupt enable set (enable) and read register."
                format="hex0x"
                id="SPI0@FIFOINTENSET"
                offset="0xe10"
                size="4">
         <field description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e133725"
                id="SPI0@FIFOINTENSET@TXERR"
                offset="[0]"/>
         <field description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e133771"
                id="SPI0@FIFOINTENSET@RXERR"
                offset="[1]"/>
         <field description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e133817"
                id="SPI0@FIFOINTENSET@TXLVL"
                offset="[2]"/>
         <field description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e133863"
                id="SPI0@FIFOINTENSET@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt enable clear (disable) and read register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR"
                offset="0xe14"
                size="4">
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR@TXERR"
                offset="[0]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR@RXERR"
                offset="[1]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR@TXLVL"
                offset="[2]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt status register." format="hex0x"
                id="SPI0@FIFOINTSTAT"
                offset="0xe18"
                readOnly="true"
                size="4">
         <field description="TX FIFO error." format="hex0x" id="SPI0@FIFOINTSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error." format="hex0x" id="SPI0@FIFOINTSTAT@RXERR"
                offset="[1]"/>
         <field description="Transmit FIFO level interrupt." format="hex0x"
                id="SPI0@FIFOINTSTAT@TXLVL"
                offset="[2]"/>
         <field description="Receive FIFO level interrupt." format="hex0x"
                id="SPI0@FIFOINTSTAT@RXLVL"
                offset="[3]"/>
         <field description="Peripheral interrupt." format="hex0x" id="SPI0@FIFOINTSTAT@PERINT"
                offset="[4]"/>
      </register>
      <register description="FIFO write data." format="hex0x" id="SPI0@FIFOWR" offset="0xe20"
                size="4">
         <field description="Transmit data to the FIFO." format="hex0x" id="SPI0@FIFOWR@TXDATA"
                offset="[15:0]"/>
         <field description="Transmit slave select. This field asserts SSEL0 in master mode. The output on the pin is active LOW by default."
                format="enum"
                enum="d1e134174"
                id="SPI0@FIFOWR@TXSSEL0-N"
                offset="[16]"/>
         <field description="Transmit slave select. This field asserts SSEL1 in master mode. The output on the pin is active LOW by default."
                format="enum"
                enum="d1e134220"
                id="SPI0@FIFOWR@TXSSEL1-N"
                offset="[17]"/>
         <field description="Transmit slave select. This field asserts SSEL2 in master mode. The output on the pin is active LOW by default."
                format="enum"
                enum="d1e134266"
                id="SPI0@FIFOWR@TXSSEL2-N"
                offset="[18]"/>
         <field description="Transmit slave select. This field asserts SSEL3 in master mode. The output on the pin is active LOW by default."
                format="enum"
                enum="d1e134312"
                id="SPI0@FIFOWR@TXSSEL3-N"
                offset="[19]"/>
         <field description="End of transfer. The asserted SSEL will be deasserted at the end of a transfer and remain so far at least the time specified by the Transfer_delay value in the DLY register."
                format="enum"
                enum="d1e134359"
                id="SPI0@FIFOWR@EOT"
                offset="[20]"/>
         <field description="End of frame. Between frames, a delay may be inserted, as defined by the Frame_delay value in the DLY register. The end of a frame may not be particularly meaningful if the Frame_delay value = 0. This control can be used as part of the support for frame lengths greater than 16 bits."
                format="enum"
                enum="d1e134405"
                id="SPI0@FIFOWR@EOF"
                offset="[21]"/>
         <field description="Receive Ignore. This allows data to be transmitted using the SPI without the need to read unneeded data from the receiver. Setting this bit simplifies the transmit process and can be used with the DMA."
                format="enum"
                enum="d1e134451"
                id="SPI0@FIFOWR@RXIGNORE"
                offset="[22]"/>
         <field description="Data Length. Specifies the data length from 4 to 16 bits. Note that transfer lengths greater than 16 bits are supported by implementing multiple sequential transmits. 0x0-2 = Reserved. 0x3 = Data transfer is 4 bits in length. 0x4 = Data transfer is 5 bits in length. 0xF = Data transfer is 16 bits in length."
                format="hex0x"
                id="SPI0@FIFOWR@LEN"
                offset="[27:24]"/>
      </register>
      <register description="FIFO read data." format="hex0x" id="SPI0@FIFORD" offset="0xe30"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO." format="hex0x"
                id="SPI0@FIFORD@RXDATA"
                offset="[15:0]"/>
         <field description="Slave Select for receive. This field allows the state of the SSEL0 pin to be saved along with received data. The value will reflect the SSEL0 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG."
                format="hex0x"
                id="SPI0@FIFORD@RXSSEL0-N"
                offset="[16]"/>
         <field description="Slave Select for receive. This field allows the state of the SSEL1 pin to be saved along with received data. The value will reflect the SSEL1 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG."
                format="hex0x"
                id="SPI0@FIFORD@RXSSEL1-N"
                offset="[17]"/>
         <field description="Slave Select for receive. This field allows the state of the SSEL2 pin to be saved along with received data. The value will reflect the SSEL2 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG."
                format="hex0x"
                id="SPI0@FIFORD@RXSSEL2-N"
                offset="[18]"/>
         <field description="Slave Select for receive. This field allows the state of the SSEL3 pin to be saved along with received data. The value will reflect the SSEL3 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG."
                format="hex0x"
                id="SPI0@FIFORD@RXSSEL3-N"
                offset="[19]"/>
         <field description="Start of Transfer flag. This flag will be 1 if this is the first data after the SSELs went from deasserted to asserted (i.e., any previous transfer has ended). This information can be used to identify the first piece of data in cases where the transfer length is greater than 16 bits."
                format="hex0x"
                id="SPI0@FIFORD@SOT"
                offset="[20]"/>
      </register>
      <register description="FIFO data read with no FIFO pop." format="hex0x"
                id="SPI0@FIFORDNOPOP"
                offset="0xe40"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXDATA"
                offset="[15:0]"/>
         <field description="Slave Select for receive." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXSSEL0-N"
                offset="[16]"/>
         <field description="Slave Select for receive." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXSSEL1-N"
                offset="[17]"/>
         <field description="Slave Select for receive." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXSSEL2-N"
                offset="[18]"/>
         <field description="Slave Select for receive." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXSSEL3-N"
                offset="[19]"/>
         <field description="Start of transfer flag." format="hex0x" id="SPI0@FIFORDNOPOP@SOT"
                offset="[20]"/>
      </register>
      <register description="Peripheral identification register." format="hex0x" id="SPI0@ID"
                offset="0xffc"
                readOnly="true"
                size="4">
         <field description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture."
                format="hex0x"
                id="SPI0@ID@APERTURE"
                offset="[7:0]"/>
         <field description="Minor revision of module implementation." format="hex0x"
                id="SPI0@ID@MINOR-REV"
                offset="[11:8]"/>
         <field description="Major revision of module implementation." format="hex0x"
                id="SPI0@ID@MAJOR-REV"
                offset="[15:12]"/>
         <field description="Module identifier for the selected function." format="hex0x"
                id="SPI0@ID@ID"
                offset="[31:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x Serial Peripheral Interfaces (SPI)"
               id="SPI3"
               size="0x1000">
      <register description="SPI Configuration register" format="hex0x" id="SPI0@CFG"
                offset="0x400"
                size="4">
         <field description="SPI enable." format="enum" enum="d1e131889" id="SPI0@CFG@ENABLE"
                offset="[0]"/>
         <field description="Master mode select." format="enum" enum="d1e131935"
                id="SPI0@CFG@MASTER"
                offset="[2]"/>
         <field description="LSB First mode enable." format="enum" enum="d1e131981"
                id="SPI0@CFG@LSBF"
                offset="[3]"/>
         <field description="Clock Phase select." format="enum" enum="d1e132027"
                id="SPI0@CFG@CPHA"
                offset="[4]"/>
         <field description="Clock Polarity select." format="enum" enum="d1e132073"
                id="SPI0@CFG@CPOL"
                offset="[5]"/>
         <field description="Loopback mode enable. Loopback mode applies only to Master mode, and connects transmit and receive data connected together to allow simple software testing."
                format="enum"
                enum="d1e132120"
                id="SPI0@CFG@LOOP"
                offset="[7]"/>
         <field description="SSEL0 Polarity select." format="enum" enum="d1e132166"
                id="SPI0@CFG@SPOL0"
                offset="[8]"/>
         <field description="SSEL1 Polarity select." format="enum" enum="d1e132212"
                id="SPI0@CFG@SPOL1"
                offset="[9]"/>
         <field description="SSEL2 Polarity select." format="enum" enum="d1e132258"
                id="SPI0@CFG@SPOL2"
                offset="[10]"/>
         <field description="SSEL3 Polarity select." format="enum" enum="d1e132304"
                id="SPI0@CFG@SPOL3"
                offset="[11]"/>
      </register>
      <register description="SPI Delay register" format="hex0x" id="SPI0@DLY" offset="0x404"
                size="4">
         <field description="Controls the amount of time between SSEL assertion and the beginning of a data transfer. There is always one SPI clock time between SSEL assertion and the first clock edge. This is not considered part of the pre-delay. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted."
                format="hex0x"
                id="SPI0@DLY@PRE-DELAY"
                offset="[3:0]"/>
         <field description="Controls the amount of time between the end of a data transfer and SSEL deassertion. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted."
                format="hex0x"
                id="SPI0@DLY@POST-DELAY"
                offset="[7:4]"/>
         <field description="If the EOF flag is set, controls the minimum amount of time between the current frame and the next frame (or SSEL deassertion if EOT). 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted."
                format="hex0x"
                id="SPI0@DLY@FRAME-DELAY"
                offset="[11:8]"/>
         <field description="Controls the minimum amount of time that the SSEL is deasserted between transfers. 0x0 = The minimum time that SSEL is deasserted is 1 SPI clock time. (Zero added time.) 0x1 = The minimum time that SSEL is deasserted is 2 SPI clock times. 0x2 = The minimum time that SSEL is deasserted is 3 SPI clock times. 0xF = The minimum time that SSEL is deasserted is 16 SPI clock times."
                format="hex0x"
                id="SPI0@DLY@TRANSFER-DELAY"
                offset="[15:12]"/>
      </register>
      <register description="SPI Status. Some status flags can be cleared by writing a 1 to that bit position."
                format="hex0x"
                id="SPI0@STAT"
                offset="0x408"
                size="4">
         <field description="Slave Select Assert. This flag is set whenever any slave select transitions from deasserted to asserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become busy, and allows waking up the device from reduced power modes when a slave mode access begins. This flag is cleared by software."
                format="hex0x"
                id="SPI0@STAT@SSA"
                offset="[4]"/>
         <field description="Slave Select Deassert. This flag is set whenever any asserted slave selects transition to deasserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become idle. This flag is cleared by software."
                format="hex0x"
                id="SPI0@STAT@SSD"
                offset="[5]"/>
         <field description="Stalled status flag. This indicates whether the SPI is currently in a stall condition."
                format="hex0x"
                id="SPI0@STAT@STALLED"
                offset="[6]"/>
         <field description="End Transfer control bit. Software can set this bit to force an end to the current transfer when the transmitter finishes any activity already in progress, as if the EOT flag had been set prior to the last transmission. This capability is included to support cases where it is not known when transmit data is written that it will be the end of a transfer. The bit is cleared when the transmitter becomes idle as the transfer comes to an end. Forcing an end of transfer in this manner causes any specified FRAME_DELAY and TRANSFER_DELAY to be inserted."
                format="hex0x"
                id="SPI0@STAT@ENDTRANSFER"
                offset="[7]"/>
         <field description="Master idle status flag. This bit is 1 whenever the SPI master function is fully idle. This means that the transmit holding register is empty and the transmitter is not in the process of sending data."
                format="hex0x"
                id="SPI0@STAT@MSTIDLE"
                offset="[8]"/>
      </register>
      <register description="SPI Interrupt Enable read and Set. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set."
                format="hex0x"
                id="SPI0@INTENSET"
                offset="0x40c"
                size="4">
         <field description="Slave select assert interrupt enable. Determines whether an interrupt occurs when the Slave Select is asserted."
                format="enum"
                enum="d1e132596"
                id="SPI0@INTENSET@SSAEN"
                offset="[4]"/>
         <field description="Slave select deassert interrupt enable. Determines whether an interrupt occurs when the Slave Select is deasserted."
                format="enum"
                enum="d1e132642"
                id="SPI0@INTENSET@SSDEN"
                offset="[5]"/>
         <field description="Master idle interrupt enable." format="enum" enum="d1e132688"
                id="SPI0@INTENSET@MSTIDLEEN"
                offset="[8]"/>
      </register>
      <register description="SPI Interrupt Enable Clear. Writing a 1 to any implemented bit position causes the corresponding bit in INTENSET to be cleared."
                format="hex0x"
                id="SPI0@INTENCLR"
                offset="0x410"
                writeOnly="true"
                size="4">
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="SPI0@INTENCLR@SSAEN"
                offset="[4]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="SPI0@INTENCLR@SSDEN"
                offset="[5]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="SPI0@INTENCLR@MSTIDLE"
                offset="[8]"/>
      </register>
      <register description="SPI clock Divider" format="hex0x" id="SPI0@DIV" offset="0x424"
                size="4">
         <field description="Rate divider value. Specifies how the Flexcomm clock (FCLK) is divided to produce the SPI clock rate in master mode. DIVVAL is -1 encoded such that the value 0 results in FCLK/1, the value 1 results in FCLK/2, up to the maximum possible divide value of 0xFFFF, which results in FCLK/65536."
                format="hex0x"
                id="SPI0@DIV@DIVVAL"
                offset="[15:0]"/>
      </register>
      <register description="SPI Interrupt Status" format="hex0x" id="SPI0@INTSTAT"
                offset="0x428"
                readOnly="true"
                size="4">
         <field description="Slave Select Assert." format="hex0x" id="SPI0@INTSTAT@SSA"
                offset="[4]"/>
         <field description="Slave Select Deassert." format="hex0x" id="SPI0@INTSTAT@SSD"
                offset="[5]"/>
         <field description="Master Idle status flag." format="hex0x" id="SPI0@INTSTAT@MSTIDLE"
                offset="[8]"/>
      </register>
      <register description="FIFO configuration and enable register." format="hex0x"
                id="SPI0@FIFOCFG"
                offset="0xe00"
                size="4">
         <field description="Enable the transmit FIFO." format="enum" enum="d1e132973"
                id="SPI0@FIFOCFG@ENABLETX"
                offset="[0]"/>
         <field description="Enable the receive FIFO." format="enum" enum="d1e133019"
                id="SPI0@FIFOCFG@ENABLERX"
                offset="[1]"/>
         <field description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART."
                format="hex0x"
                id="SPI0@FIFOCFG@SIZE"
                offset="[5:4]"/>
         <field description="DMA configuration for transmit." format="enum" enum="d1e133083"
                id="SPI0@FIFOCFG@DMATX"
                offset="[12]"/>
         <field description="DMA configuration for receive." format="enum" enum="d1e133129"
                id="SPI0@FIFOCFG@DMARX"
                offset="[13]"/>
         <field description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e133176"
                id="SPI0@FIFOCFG@WAKETX"
                offset="[14]"/>
         <field description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e133222"
                id="SPI0@FIFOCFG@WAKERX"
                offset="[15]"/>
         <field description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied."
                format="hex0x"
                id="SPI0@FIFOCFG@EMPTYTX"
                offset="[16]"/>
         <field description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied."
                format="hex0x"
                id="SPI0@FIFOCFG@EMPTYRX"
                offset="[17]"/>
         <field description="Pop FIFO for debug reads." format="enum" enum="d1e133304"
                id="SPI0@FIFOCFG@POPDBG"
                offset="[18]"/>
      </register>
      <register description="FIFO status register." format="hex0x" id="SPI0@FIFOSTAT"
                offset="0xe04"
                size="4">
         <field description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="SPI0@FIFOSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="SPI0@FIFOSTAT@RXERR"
                offset="[1]"/>
         <field description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register."
                format="hex0x"
                id="SPI0@FIFOSTAT@PERINT"
                offset="[3]"/>
         <field description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data."
                format="hex0x"
                id="SPI0@FIFOSTAT@TXEMPTY"
                offset="[4]"/>
         <field description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow."
                format="hex0x"
                id="SPI0@FIFOSTAT@TXNOTFULL"
                offset="[5]"/>
         <field description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty."
                format="hex0x"
                id="SPI0@FIFOSTAT@RXNOTEMPTY"
                offset="[6]"/>
         <field description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow."
                format="hex0x"
                id="SPI0@FIFOSTAT@RXFULL"
                offset="[7]"/>
         <field description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0."
                format="hex0x"
                id="SPI0@FIFOSTAT@TXLVL"
                offset="[12:8]"/>
         <field description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1."
                format="hex0x"
                id="SPI0@FIFOSTAT@RXLVL"
                offset="[20:16]"/>
      </register>
      <register description="FIFO trigger settings for interrupt and DMA request."
                format="hex0x"
                id="SPI0@FIFOTRIG"
                offset="0xe08"
                size="4">
         <field description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set."
                format="enum"
                enum="d1e133569"
                id="SPI0@FIFOTRIG@TXLVLENA"
                offset="[0]"/>
         <field description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set."
                format="enum"
                enum="d1e133615"
                id="SPI0@FIFOTRIG@RXLVLENA"
                offset="[1]"/>
         <field description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)."
                format="hex0x"
                id="SPI0@FIFOTRIG@TXLVL"
                offset="[11:8]"/>
         <field description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)."
                format="hex0x"
                id="SPI0@FIFOTRIG@RXLVL"
                offset="[19:16]"/>
      </register>
      <register description="FIFO interrupt enable set (enable) and read register."
                format="hex0x"
                id="SPI0@FIFOINTENSET"
                offset="0xe10"
                size="4">
         <field description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e133725"
                id="SPI0@FIFOINTENSET@TXERR"
                offset="[0]"/>
         <field description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e133771"
                id="SPI0@FIFOINTENSET@RXERR"
                offset="[1]"/>
         <field description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e133817"
                id="SPI0@FIFOINTENSET@TXLVL"
                offset="[2]"/>
         <field description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e133863"
                id="SPI0@FIFOINTENSET@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt enable clear (disable) and read register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR"
                offset="0xe14"
                size="4">
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR@TXERR"
                offset="[0]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR@RXERR"
                offset="[1]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR@TXLVL"
                offset="[2]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt status register." format="hex0x"
                id="SPI0@FIFOINTSTAT"
                offset="0xe18"
                readOnly="true"
                size="4">
         <field description="TX FIFO error." format="hex0x" id="SPI0@FIFOINTSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error." format="hex0x" id="SPI0@FIFOINTSTAT@RXERR"
                offset="[1]"/>
         <field description="Transmit FIFO level interrupt." format="hex0x"
                id="SPI0@FIFOINTSTAT@TXLVL"
                offset="[2]"/>
         <field description="Receive FIFO level interrupt." format="hex0x"
                id="SPI0@FIFOINTSTAT@RXLVL"
                offset="[3]"/>
         <field description="Peripheral interrupt." format="hex0x" id="SPI0@FIFOINTSTAT@PERINT"
                offset="[4]"/>
      </register>
      <register description="FIFO write data." format="hex0x" id="SPI0@FIFOWR" offset="0xe20"
                size="4">
         <field description="Transmit data to the FIFO." format="hex0x" id="SPI0@FIFOWR@TXDATA"
                offset="[15:0]"/>
         <field description="Transmit slave select. This field asserts SSEL0 in master mode. The output on the pin is active LOW by default."
                format="enum"
                enum="d1e134174"
                id="SPI0@FIFOWR@TXSSEL0-N"
                offset="[16]"/>
         <field description="Transmit slave select. This field asserts SSEL1 in master mode. The output on the pin is active LOW by default."
                format="enum"
                enum="d1e134220"
                id="SPI0@FIFOWR@TXSSEL1-N"
                offset="[17]"/>
         <field description="Transmit slave select. This field asserts SSEL2 in master mode. The output on the pin is active LOW by default."
                format="enum"
                enum="d1e134266"
                id="SPI0@FIFOWR@TXSSEL2-N"
                offset="[18]"/>
         <field description="Transmit slave select. This field asserts SSEL3 in master mode. The output on the pin is active LOW by default."
                format="enum"
                enum="d1e134312"
                id="SPI0@FIFOWR@TXSSEL3-N"
                offset="[19]"/>
         <field description="End of transfer. The asserted SSEL will be deasserted at the end of a transfer and remain so far at least the time specified by the Transfer_delay value in the DLY register."
                format="enum"
                enum="d1e134359"
                id="SPI0@FIFOWR@EOT"
                offset="[20]"/>
         <field description="End of frame. Between frames, a delay may be inserted, as defined by the Frame_delay value in the DLY register. The end of a frame may not be particularly meaningful if the Frame_delay value = 0. This control can be used as part of the support for frame lengths greater than 16 bits."
                format="enum"
                enum="d1e134405"
                id="SPI0@FIFOWR@EOF"
                offset="[21]"/>
         <field description="Receive Ignore. This allows data to be transmitted using the SPI without the need to read unneeded data from the receiver. Setting this bit simplifies the transmit process and can be used with the DMA."
                format="enum"
                enum="d1e134451"
                id="SPI0@FIFOWR@RXIGNORE"
                offset="[22]"/>
         <field description="Data Length. Specifies the data length from 4 to 16 bits. Note that transfer lengths greater than 16 bits are supported by implementing multiple sequential transmits. 0x0-2 = Reserved. 0x3 = Data transfer is 4 bits in length. 0x4 = Data transfer is 5 bits in length. 0xF = Data transfer is 16 bits in length."
                format="hex0x"
                id="SPI0@FIFOWR@LEN"
                offset="[27:24]"/>
      </register>
      <register description="FIFO read data." format="hex0x" id="SPI0@FIFORD" offset="0xe30"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO." format="hex0x"
                id="SPI0@FIFORD@RXDATA"
                offset="[15:0]"/>
         <field description="Slave Select for receive. This field allows the state of the SSEL0 pin to be saved along with received data. The value will reflect the SSEL0 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG."
                format="hex0x"
                id="SPI0@FIFORD@RXSSEL0-N"
                offset="[16]"/>
         <field description="Slave Select for receive. This field allows the state of the SSEL1 pin to be saved along with received data. The value will reflect the SSEL1 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG."
                format="hex0x"
                id="SPI0@FIFORD@RXSSEL1-N"
                offset="[17]"/>
         <field description="Slave Select for receive. This field allows the state of the SSEL2 pin to be saved along with received data. The value will reflect the SSEL2 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG."
                format="hex0x"
                id="SPI0@FIFORD@RXSSEL2-N"
                offset="[18]"/>
         <field description="Slave Select for receive. This field allows the state of the SSEL3 pin to be saved along with received data. The value will reflect the SSEL3 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG."
                format="hex0x"
                id="SPI0@FIFORD@RXSSEL3-N"
                offset="[19]"/>
         <field description="Start of Transfer flag. This flag will be 1 if this is the first data after the SSELs went from deasserted to asserted (i.e., any previous transfer has ended). This information can be used to identify the first piece of data in cases where the transfer length is greater than 16 bits."
                format="hex0x"
                id="SPI0@FIFORD@SOT"
                offset="[20]"/>
      </register>
      <register description="FIFO data read with no FIFO pop." format="hex0x"
                id="SPI0@FIFORDNOPOP"
                offset="0xe40"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXDATA"
                offset="[15:0]"/>
         <field description="Slave Select for receive." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXSSEL0-N"
                offset="[16]"/>
         <field description="Slave Select for receive." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXSSEL1-N"
                offset="[17]"/>
         <field description="Slave Select for receive." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXSSEL2-N"
                offset="[18]"/>
         <field description="Slave Select for receive." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXSSEL3-N"
                offset="[19]"/>
         <field description="Start of transfer flag." format="hex0x" id="SPI0@FIFORDNOPOP@SOT"
                offset="[20]"/>
      </register>
      <register description="Peripheral identification register." format="hex0x" id="SPI0@ID"
                offset="0xffc"
                readOnly="true"
                size="4">
         <field description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture."
                format="hex0x"
                id="SPI0@ID@APERTURE"
                offset="[7:0]"/>
         <field description="Minor revision of module implementation." format="hex0x"
                id="SPI0@ID@MINOR-REV"
                offset="[11:8]"/>
         <field description="Major revision of module implementation." format="hex0x"
                id="SPI0@ID@MAJOR-REV"
                offset="[15:12]"/>
         <field description="Module identifier for the selected function." format="hex0x"
                id="SPI0@ID@ID"
                offset="[31:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x Serial Peripheral Interfaces (SPI)"
               id="SPI4"
               size="0x1000">
      <register description="SPI Configuration register" format="hex0x" id="SPI0@CFG"
                offset="0x400"
                size="4">
         <field description="SPI enable." format="enum" enum="d1e131889" id="SPI0@CFG@ENABLE"
                offset="[0]"/>
         <field description="Master mode select." format="enum" enum="d1e131935"
                id="SPI0@CFG@MASTER"
                offset="[2]"/>
         <field description="LSB First mode enable." format="enum" enum="d1e131981"
                id="SPI0@CFG@LSBF"
                offset="[3]"/>
         <field description="Clock Phase select." format="enum" enum="d1e132027"
                id="SPI0@CFG@CPHA"
                offset="[4]"/>
         <field description="Clock Polarity select." format="enum" enum="d1e132073"
                id="SPI0@CFG@CPOL"
                offset="[5]"/>
         <field description="Loopback mode enable. Loopback mode applies only to Master mode, and connects transmit and receive data connected together to allow simple software testing."
                format="enum"
                enum="d1e132120"
                id="SPI0@CFG@LOOP"
                offset="[7]"/>
         <field description="SSEL0 Polarity select." format="enum" enum="d1e132166"
                id="SPI0@CFG@SPOL0"
                offset="[8]"/>
         <field description="SSEL1 Polarity select." format="enum" enum="d1e132212"
                id="SPI0@CFG@SPOL1"
                offset="[9]"/>
         <field description="SSEL2 Polarity select." format="enum" enum="d1e132258"
                id="SPI0@CFG@SPOL2"
                offset="[10]"/>
         <field description="SSEL3 Polarity select." format="enum" enum="d1e132304"
                id="SPI0@CFG@SPOL3"
                offset="[11]"/>
      </register>
      <register description="SPI Delay register" format="hex0x" id="SPI0@DLY" offset="0x404"
                size="4">
         <field description="Controls the amount of time between SSEL assertion and the beginning of a data transfer. There is always one SPI clock time between SSEL assertion and the first clock edge. This is not considered part of the pre-delay. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted."
                format="hex0x"
                id="SPI0@DLY@PRE-DELAY"
                offset="[3:0]"/>
         <field description="Controls the amount of time between the end of a data transfer and SSEL deassertion. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted."
                format="hex0x"
                id="SPI0@DLY@POST-DELAY"
                offset="[7:4]"/>
         <field description="If the EOF flag is set, controls the minimum amount of time between the current frame and the next frame (or SSEL deassertion if EOT). 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted."
                format="hex0x"
                id="SPI0@DLY@FRAME-DELAY"
                offset="[11:8]"/>
         <field description="Controls the minimum amount of time that the SSEL is deasserted between transfers. 0x0 = The minimum time that SSEL is deasserted is 1 SPI clock time. (Zero added time.) 0x1 = The minimum time that SSEL is deasserted is 2 SPI clock times. 0x2 = The minimum time that SSEL is deasserted is 3 SPI clock times. 0xF = The minimum time that SSEL is deasserted is 16 SPI clock times."
                format="hex0x"
                id="SPI0@DLY@TRANSFER-DELAY"
                offset="[15:12]"/>
      </register>
      <register description="SPI Status. Some status flags can be cleared by writing a 1 to that bit position."
                format="hex0x"
                id="SPI0@STAT"
                offset="0x408"
                size="4">
         <field description="Slave Select Assert. This flag is set whenever any slave select transitions from deasserted to asserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become busy, and allows waking up the device from reduced power modes when a slave mode access begins. This flag is cleared by software."
                format="hex0x"
                id="SPI0@STAT@SSA"
                offset="[4]"/>
         <field description="Slave Select Deassert. This flag is set whenever any asserted slave selects transition to deasserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become idle. This flag is cleared by software."
                format="hex0x"
                id="SPI0@STAT@SSD"
                offset="[5]"/>
         <field description="Stalled status flag. This indicates whether the SPI is currently in a stall condition."
                format="hex0x"
                id="SPI0@STAT@STALLED"
                offset="[6]"/>
         <field description="End Transfer control bit. Software can set this bit to force an end to the current transfer when the transmitter finishes any activity already in progress, as if the EOT flag had been set prior to the last transmission. This capability is included to support cases where it is not known when transmit data is written that it will be the end of a transfer. The bit is cleared when the transmitter becomes idle as the transfer comes to an end. Forcing an end of transfer in this manner causes any specified FRAME_DELAY and TRANSFER_DELAY to be inserted."
                format="hex0x"
                id="SPI0@STAT@ENDTRANSFER"
                offset="[7]"/>
         <field description="Master idle status flag. This bit is 1 whenever the SPI master function is fully idle. This means that the transmit holding register is empty and the transmitter is not in the process of sending data."
                format="hex0x"
                id="SPI0@STAT@MSTIDLE"
                offset="[8]"/>
      </register>
      <register description="SPI Interrupt Enable read and Set. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set."
                format="hex0x"
                id="SPI0@INTENSET"
                offset="0x40c"
                size="4">
         <field description="Slave select assert interrupt enable. Determines whether an interrupt occurs when the Slave Select is asserted."
                format="enum"
                enum="d1e132596"
                id="SPI0@INTENSET@SSAEN"
                offset="[4]"/>
         <field description="Slave select deassert interrupt enable. Determines whether an interrupt occurs when the Slave Select is deasserted."
                format="enum"
                enum="d1e132642"
                id="SPI0@INTENSET@SSDEN"
                offset="[5]"/>
         <field description="Master idle interrupt enable." format="enum" enum="d1e132688"
                id="SPI0@INTENSET@MSTIDLEEN"
                offset="[8]"/>
      </register>
      <register description="SPI Interrupt Enable Clear. Writing a 1 to any implemented bit position causes the corresponding bit in INTENSET to be cleared."
                format="hex0x"
                id="SPI0@INTENCLR"
                offset="0x410"
                writeOnly="true"
                size="4">
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="SPI0@INTENCLR@SSAEN"
                offset="[4]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="SPI0@INTENCLR@SSDEN"
                offset="[5]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="SPI0@INTENCLR@MSTIDLE"
                offset="[8]"/>
      </register>
      <register description="SPI clock Divider" format="hex0x" id="SPI0@DIV" offset="0x424"
                size="4">
         <field description="Rate divider value. Specifies how the Flexcomm clock (FCLK) is divided to produce the SPI clock rate in master mode. DIVVAL is -1 encoded such that the value 0 results in FCLK/1, the value 1 results in FCLK/2, up to the maximum possible divide value of 0xFFFF, which results in FCLK/65536."
                format="hex0x"
                id="SPI0@DIV@DIVVAL"
                offset="[15:0]"/>
      </register>
      <register description="SPI Interrupt Status" format="hex0x" id="SPI0@INTSTAT"
                offset="0x428"
                readOnly="true"
                size="4">
         <field description="Slave Select Assert." format="hex0x" id="SPI0@INTSTAT@SSA"
                offset="[4]"/>
         <field description="Slave Select Deassert." format="hex0x" id="SPI0@INTSTAT@SSD"
                offset="[5]"/>
         <field description="Master Idle status flag." format="hex0x" id="SPI0@INTSTAT@MSTIDLE"
                offset="[8]"/>
      </register>
      <register description="FIFO configuration and enable register." format="hex0x"
                id="SPI0@FIFOCFG"
                offset="0xe00"
                size="4">
         <field description="Enable the transmit FIFO." format="enum" enum="d1e132973"
                id="SPI0@FIFOCFG@ENABLETX"
                offset="[0]"/>
         <field description="Enable the receive FIFO." format="enum" enum="d1e133019"
                id="SPI0@FIFOCFG@ENABLERX"
                offset="[1]"/>
         <field description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART."
                format="hex0x"
                id="SPI0@FIFOCFG@SIZE"
                offset="[5:4]"/>
         <field description="DMA configuration for transmit." format="enum" enum="d1e133083"
                id="SPI0@FIFOCFG@DMATX"
                offset="[12]"/>
         <field description="DMA configuration for receive." format="enum" enum="d1e133129"
                id="SPI0@FIFOCFG@DMARX"
                offset="[13]"/>
         <field description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e133176"
                id="SPI0@FIFOCFG@WAKETX"
                offset="[14]"/>
         <field description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e133222"
                id="SPI0@FIFOCFG@WAKERX"
                offset="[15]"/>
         <field description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied."
                format="hex0x"
                id="SPI0@FIFOCFG@EMPTYTX"
                offset="[16]"/>
         <field description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied."
                format="hex0x"
                id="SPI0@FIFOCFG@EMPTYRX"
                offset="[17]"/>
         <field description="Pop FIFO for debug reads." format="enum" enum="d1e133304"
                id="SPI0@FIFOCFG@POPDBG"
                offset="[18]"/>
      </register>
      <register description="FIFO status register." format="hex0x" id="SPI0@FIFOSTAT"
                offset="0xe04"
                size="4">
         <field description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="SPI0@FIFOSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="SPI0@FIFOSTAT@RXERR"
                offset="[1]"/>
         <field description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register."
                format="hex0x"
                id="SPI0@FIFOSTAT@PERINT"
                offset="[3]"/>
         <field description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data."
                format="hex0x"
                id="SPI0@FIFOSTAT@TXEMPTY"
                offset="[4]"/>
         <field description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow."
                format="hex0x"
                id="SPI0@FIFOSTAT@TXNOTFULL"
                offset="[5]"/>
         <field description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty."
                format="hex0x"
                id="SPI0@FIFOSTAT@RXNOTEMPTY"
                offset="[6]"/>
         <field description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow."
                format="hex0x"
                id="SPI0@FIFOSTAT@RXFULL"
                offset="[7]"/>
         <field description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0."
                format="hex0x"
                id="SPI0@FIFOSTAT@TXLVL"
                offset="[12:8]"/>
         <field description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1."
                format="hex0x"
                id="SPI0@FIFOSTAT@RXLVL"
                offset="[20:16]"/>
      </register>
      <register description="FIFO trigger settings for interrupt and DMA request."
                format="hex0x"
                id="SPI0@FIFOTRIG"
                offset="0xe08"
                size="4">
         <field description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set."
                format="enum"
                enum="d1e133569"
                id="SPI0@FIFOTRIG@TXLVLENA"
                offset="[0]"/>
         <field description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set."
                format="enum"
                enum="d1e133615"
                id="SPI0@FIFOTRIG@RXLVLENA"
                offset="[1]"/>
         <field description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)."
                format="hex0x"
                id="SPI0@FIFOTRIG@TXLVL"
                offset="[11:8]"/>
         <field description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)."
                format="hex0x"
                id="SPI0@FIFOTRIG@RXLVL"
                offset="[19:16]"/>
      </register>
      <register description="FIFO interrupt enable set (enable) and read register."
                format="hex0x"
                id="SPI0@FIFOINTENSET"
                offset="0xe10"
                size="4">
         <field description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e133725"
                id="SPI0@FIFOINTENSET@TXERR"
                offset="[0]"/>
         <field description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e133771"
                id="SPI0@FIFOINTENSET@RXERR"
                offset="[1]"/>
         <field description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e133817"
                id="SPI0@FIFOINTENSET@TXLVL"
                offset="[2]"/>
         <field description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e133863"
                id="SPI0@FIFOINTENSET@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt enable clear (disable) and read register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR"
                offset="0xe14"
                size="4">
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR@TXERR"
                offset="[0]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR@RXERR"
                offset="[1]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR@TXLVL"
                offset="[2]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt status register." format="hex0x"
                id="SPI0@FIFOINTSTAT"
                offset="0xe18"
                readOnly="true"
                size="4">
         <field description="TX FIFO error." format="hex0x" id="SPI0@FIFOINTSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error." format="hex0x" id="SPI0@FIFOINTSTAT@RXERR"
                offset="[1]"/>
         <field description="Transmit FIFO level interrupt." format="hex0x"
                id="SPI0@FIFOINTSTAT@TXLVL"
                offset="[2]"/>
         <field description="Receive FIFO level interrupt." format="hex0x"
                id="SPI0@FIFOINTSTAT@RXLVL"
                offset="[3]"/>
         <field description="Peripheral interrupt." format="hex0x" id="SPI0@FIFOINTSTAT@PERINT"
                offset="[4]"/>
      </register>
      <register description="FIFO write data." format="hex0x" id="SPI0@FIFOWR" offset="0xe20"
                size="4">
         <field description="Transmit data to the FIFO." format="hex0x" id="SPI0@FIFOWR@TXDATA"
                offset="[15:0]"/>
         <field description="Transmit slave select. This field asserts SSEL0 in master mode. The output on the pin is active LOW by default."
                format="enum"
                enum="d1e134174"
                id="SPI0@FIFOWR@TXSSEL0-N"
                offset="[16]"/>
         <field description="Transmit slave select. This field asserts SSEL1 in master mode. The output on the pin is active LOW by default."
                format="enum"
                enum="d1e134220"
                id="SPI0@FIFOWR@TXSSEL1-N"
                offset="[17]"/>
         <field description="Transmit slave select. This field asserts SSEL2 in master mode. The output on the pin is active LOW by default."
                format="enum"
                enum="d1e134266"
                id="SPI0@FIFOWR@TXSSEL2-N"
                offset="[18]"/>
         <field description="Transmit slave select. This field asserts SSEL3 in master mode. The output on the pin is active LOW by default."
                format="enum"
                enum="d1e134312"
                id="SPI0@FIFOWR@TXSSEL3-N"
                offset="[19]"/>
         <field description="End of transfer. The asserted SSEL will be deasserted at the end of a transfer and remain so far at least the time specified by the Transfer_delay value in the DLY register."
                format="enum"
                enum="d1e134359"
                id="SPI0@FIFOWR@EOT"
                offset="[20]"/>
         <field description="End of frame. Between frames, a delay may be inserted, as defined by the Frame_delay value in the DLY register. The end of a frame may not be particularly meaningful if the Frame_delay value = 0. This control can be used as part of the support for frame lengths greater than 16 bits."
                format="enum"
                enum="d1e134405"
                id="SPI0@FIFOWR@EOF"
                offset="[21]"/>
         <field description="Receive Ignore. This allows data to be transmitted using the SPI without the need to read unneeded data from the receiver. Setting this bit simplifies the transmit process and can be used with the DMA."
                format="enum"
                enum="d1e134451"
                id="SPI0@FIFOWR@RXIGNORE"
                offset="[22]"/>
         <field description="Data Length. Specifies the data length from 4 to 16 bits. Note that transfer lengths greater than 16 bits are supported by implementing multiple sequential transmits. 0x0-2 = Reserved. 0x3 = Data transfer is 4 bits in length. 0x4 = Data transfer is 5 bits in length. 0xF = Data transfer is 16 bits in length."
                format="hex0x"
                id="SPI0@FIFOWR@LEN"
                offset="[27:24]"/>
      </register>
      <register description="FIFO read data." format="hex0x" id="SPI0@FIFORD" offset="0xe30"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO." format="hex0x"
                id="SPI0@FIFORD@RXDATA"
                offset="[15:0]"/>
         <field description="Slave Select for receive. This field allows the state of the SSEL0 pin to be saved along with received data. The value will reflect the SSEL0 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG."
                format="hex0x"
                id="SPI0@FIFORD@RXSSEL0-N"
                offset="[16]"/>
         <field description="Slave Select for receive. This field allows the state of the SSEL1 pin to be saved along with received data. The value will reflect the SSEL1 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG."
                format="hex0x"
                id="SPI0@FIFORD@RXSSEL1-N"
                offset="[17]"/>
         <field description="Slave Select for receive. This field allows the state of the SSEL2 pin to be saved along with received data. The value will reflect the SSEL2 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG."
                format="hex0x"
                id="SPI0@FIFORD@RXSSEL2-N"
                offset="[18]"/>
         <field description="Slave Select for receive. This field allows the state of the SSEL3 pin to be saved along with received data. The value will reflect the SSEL3 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG."
                format="hex0x"
                id="SPI0@FIFORD@RXSSEL3-N"
                offset="[19]"/>
         <field description="Start of Transfer flag. This flag will be 1 if this is the first data after the SSELs went from deasserted to asserted (i.e., any previous transfer has ended). This information can be used to identify the first piece of data in cases where the transfer length is greater than 16 bits."
                format="hex0x"
                id="SPI0@FIFORD@SOT"
                offset="[20]"/>
      </register>
      <register description="FIFO data read with no FIFO pop." format="hex0x"
                id="SPI0@FIFORDNOPOP"
                offset="0xe40"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXDATA"
                offset="[15:0]"/>
         <field description="Slave Select for receive." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXSSEL0-N"
                offset="[16]"/>
         <field description="Slave Select for receive." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXSSEL1-N"
                offset="[17]"/>
         <field description="Slave Select for receive." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXSSEL2-N"
                offset="[18]"/>
         <field description="Slave Select for receive." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXSSEL3-N"
                offset="[19]"/>
         <field description="Start of transfer flag." format="hex0x" id="SPI0@FIFORDNOPOP@SOT"
                offset="[20]"/>
      </register>
      <register description="Peripheral identification register." format="hex0x" id="SPI0@ID"
                offset="0xffc"
                readOnly="true"
                size="4">
         <field description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture."
                format="hex0x"
                id="SPI0@ID@APERTURE"
                offset="[7:0]"/>
         <field description="Minor revision of module implementation." format="hex0x"
                id="SPI0@ID@MINOR-REV"
                offset="[11:8]"/>
         <field description="Major revision of module implementation." format="hex0x"
                id="SPI0@ID@MAJOR-REV"
                offset="[15:12]"/>
         <field description="Module identifier for the selected function." format="hex0x"
                id="SPI0@ID@ID"
                offset="[31:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x Serial Peripheral Interfaces (SPI)"
               id="SPI5"
               size="0x1000">
      <register description="SPI Configuration register" format="hex0x" id="SPI0@CFG"
                offset="0x400"
                size="4">
         <field description="SPI enable." format="enum" enum="d1e131889" id="SPI0@CFG@ENABLE"
                offset="[0]"/>
         <field description="Master mode select." format="enum" enum="d1e131935"
                id="SPI0@CFG@MASTER"
                offset="[2]"/>
         <field description="LSB First mode enable." format="enum" enum="d1e131981"
                id="SPI0@CFG@LSBF"
                offset="[3]"/>
         <field description="Clock Phase select." format="enum" enum="d1e132027"
                id="SPI0@CFG@CPHA"
                offset="[4]"/>
         <field description="Clock Polarity select." format="enum" enum="d1e132073"
                id="SPI0@CFG@CPOL"
                offset="[5]"/>
         <field description="Loopback mode enable. Loopback mode applies only to Master mode, and connects transmit and receive data connected together to allow simple software testing."
                format="enum"
                enum="d1e132120"
                id="SPI0@CFG@LOOP"
                offset="[7]"/>
         <field description="SSEL0 Polarity select." format="enum" enum="d1e132166"
                id="SPI0@CFG@SPOL0"
                offset="[8]"/>
         <field description="SSEL1 Polarity select." format="enum" enum="d1e132212"
                id="SPI0@CFG@SPOL1"
                offset="[9]"/>
         <field description="SSEL2 Polarity select." format="enum" enum="d1e132258"
                id="SPI0@CFG@SPOL2"
                offset="[10]"/>
         <field description="SSEL3 Polarity select." format="enum" enum="d1e132304"
                id="SPI0@CFG@SPOL3"
                offset="[11]"/>
      </register>
      <register description="SPI Delay register" format="hex0x" id="SPI0@DLY" offset="0x404"
                size="4">
         <field description="Controls the amount of time between SSEL assertion and the beginning of a data transfer. There is always one SPI clock time between SSEL assertion and the first clock edge. This is not considered part of the pre-delay. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted."
                format="hex0x"
                id="SPI0@DLY@PRE-DELAY"
                offset="[3:0]"/>
         <field description="Controls the amount of time between the end of a data transfer and SSEL deassertion. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted."
                format="hex0x"
                id="SPI0@DLY@POST-DELAY"
                offset="[7:4]"/>
         <field description="If the EOF flag is set, controls the minimum amount of time between the current frame and the next frame (or SSEL deassertion if EOT). 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted."
                format="hex0x"
                id="SPI0@DLY@FRAME-DELAY"
                offset="[11:8]"/>
         <field description="Controls the minimum amount of time that the SSEL is deasserted between transfers. 0x0 = The minimum time that SSEL is deasserted is 1 SPI clock time. (Zero added time.) 0x1 = The minimum time that SSEL is deasserted is 2 SPI clock times. 0x2 = The minimum time that SSEL is deasserted is 3 SPI clock times. 0xF = The minimum time that SSEL is deasserted is 16 SPI clock times."
                format="hex0x"
                id="SPI0@DLY@TRANSFER-DELAY"
                offset="[15:12]"/>
      </register>
      <register description="SPI Status. Some status flags can be cleared by writing a 1 to that bit position."
                format="hex0x"
                id="SPI0@STAT"
                offset="0x408"
                size="4">
         <field description="Slave Select Assert. This flag is set whenever any slave select transitions from deasserted to asserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become busy, and allows waking up the device from reduced power modes when a slave mode access begins. This flag is cleared by software."
                format="hex0x"
                id="SPI0@STAT@SSA"
                offset="[4]"/>
         <field description="Slave Select Deassert. This flag is set whenever any asserted slave selects transition to deasserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become idle. This flag is cleared by software."
                format="hex0x"
                id="SPI0@STAT@SSD"
                offset="[5]"/>
         <field description="Stalled status flag. This indicates whether the SPI is currently in a stall condition."
                format="hex0x"
                id="SPI0@STAT@STALLED"
                offset="[6]"/>
         <field description="End Transfer control bit. Software can set this bit to force an end to the current transfer when the transmitter finishes any activity already in progress, as if the EOT flag had been set prior to the last transmission. This capability is included to support cases where it is not known when transmit data is written that it will be the end of a transfer. The bit is cleared when the transmitter becomes idle as the transfer comes to an end. Forcing an end of transfer in this manner causes any specified FRAME_DELAY and TRANSFER_DELAY to be inserted."
                format="hex0x"
                id="SPI0@STAT@ENDTRANSFER"
                offset="[7]"/>
         <field description="Master idle status flag. This bit is 1 whenever the SPI master function is fully idle. This means that the transmit holding register is empty and the transmitter is not in the process of sending data."
                format="hex0x"
                id="SPI0@STAT@MSTIDLE"
                offset="[8]"/>
      </register>
      <register description="SPI Interrupt Enable read and Set. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set."
                format="hex0x"
                id="SPI0@INTENSET"
                offset="0x40c"
                size="4">
         <field description="Slave select assert interrupt enable. Determines whether an interrupt occurs when the Slave Select is asserted."
                format="enum"
                enum="d1e132596"
                id="SPI0@INTENSET@SSAEN"
                offset="[4]"/>
         <field description="Slave select deassert interrupt enable. Determines whether an interrupt occurs when the Slave Select is deasserted."
                format="enum"
                enum="d1e132642"
                id="SPI0@INTENSET@SSDEN"
                offset="[5]"/>
         <field description="Master idle interrupt enable." format="enum" enum="d1e132688"
                id="SPI0@INTENSET@MSTIDLEEN"
                offset="[8]"/>
      </register>
      <register description="SPI Interrupt Enable Clear. Writing a 1 to any implemented bit position causes the corresponding bit in INTENSET to be cleared."
                format="hex0x"
                id="SPI0@INTENCLR"
                offset="0x410"
                writeOnly="true"
                size="4">
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="SPI0@INTENCLR@SSAEN"
                offset="[4]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="SPI0@INTENCLR@SSDEN"
                offset="[5]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="SPI0@INTENCLR@MSTIDLE"
                offset="[8]"/>
      </register>
      <register description="SPI clock Divider" format="hex0x" id="SPI0@DIV" offset="0x424"
                size="4">
         <field description="Rate divider value. Specifies how the Flexcomm clock (FCLK) is divided to produce the SPI clock rate in master mode. DIVVAL is -1 encoded such that the value 0 results in FCLK/1, the value 1 results in FCLK/2, up to the maximum possible divide value of 0xFFFF, which results in FCLK/65536."
                format="hex0x"
                id="SPI0@DIV@DIVVAL"
                offset="[15:0]"/>
      </register>
      <register description="SPI Interrupt Status" format="hex0x" id="SPI0@INTSTAT"
                offset="0x428"
                readOnly="true"
                size="4">
         <field description="Slave Select Assert." format="hex0x" id="SPI0@INTSTAT@SSA"
                offset="[4]"/>
         <field description="Slave Select Deassert." format="hex0x" id="SPI0@INTSTAT@SSD"
                offset="[5]"/>
         <field description="Master Idle status flag." format="hex0x" id="SPI0@INTSTAT@MSTIDLE"
                offset="[8]"/>
      </register>
      <register description="FIFO configuration and enable register." format="hex0x"
                id="SPI0@FIFOCFG"
                offset="0xe00"
                size="4">
         <field description="Enable the transmit FIFO." format="enum" enum="d1e132973"
                id="SPI0@FIFOCFG@ENABLETX"
                offset="[0]"/>
         <field description="Enable the receive FIFO." format="enum" enum="d1e133019"
                id="SPI0@FIFOCFG@ENABLERX"
                offset="[1]"/>
         <field description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART."
                format="hex0x"
                id="SPI0@FIFOCFG@SIZE"
                offset="[5:4]"/>
         <field description="DMA configuration for transmit." format="enum" enum="d1e133083"
                id="SPI0@FIFOCFG@DMATX"
                offset="[12]"/>
         <field description="DMA configuration for receive." format="enum" enum="d1e133129"
                id="SPI0@FIFOCFG@DMARX"
                offset="[13]"/>
         <field description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e133176"
                id="SPI0@FIFOCFG@WAKETX"
                offset="[14]"/>
         <field description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e133222"
                id="SPI0@FIFOCFG@WAKERX"
                offset="[15]"/>
         <field description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied."
                format="hex0x"
                id="SPI0@FIFOCFG@EMPTYTX"
                offset="[16]"/>
         <field description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied."
                format="hex0x"
                id="SPI0@FIFOCFG@EMPTYRX"
                offset="[17]"/>
         <field description="Pop FIFO for debug reads." format="enum" enum="d1e133304"
                id="SPI0@FIFOCFG@POPDBG"
                offset="[18]"/>
      </register>
      <register description="FIFO status register." format="hex0x" id="SPI0@FIFOSTAT"
                offset="0xe04"
                size="4">
         <field description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="SPI0@FIFOSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="SPI0@FIFOSTAT@RXERR"
                offset="[1]"/>
         <field description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register."
                format="hex0x"
                id="SPI0@FIFOSTAT@PERINT"
                offset="[3]"/>
         <field description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data."
                format="hex0x"
                id="SPI0@FIFOSTAT@TXEMPTY"
                offset="[4]"/>
         <field description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow."
                format="hex0x"
                id="SPI0@FIFOSTAT@TXNOTFULL"
                offset="[5]"/>
         <field description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty."
                format="hex0x"
                id="SPI0@FIFOSTAT@RXNOTEMPTY"
                offset="[6]"/>
         <field description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow."
                format="hex0x"
                id="SPI0@FIFOSTAT@RXFULL"
                offset="[7]"/>
         <field description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0."
                format="hex0x"
                id="SPI0@FIFOSTAT@TXLVL"
                offset="[12:8]"/>
         <field description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1."
                format="hex0x"
                id="SPI0@FIFOSTAT@RXLVL"
                offset="[20:16]"/>
      </register>
      <register description="FIFO trigger settings for interrupt and DMA request."
                format="hex0x"
                id="SPI0@FIFOTRIG"
                offset="0xe08"
                size="4">
         <field description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set."
                format="enum"
                enum="d1e133569"
                id="SPI0@FIFOTRIG@TXLVLENA"
                offset="[0]"/>
         <field description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set."
                format="enum"
                enum="d1e133615"
                id="SPI0@FIFOTRIG@RXLVLENA"
                offset="[1]"/>
         <field description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)."
                format="hex0x"
                id="SPI0@FIFOTRIG@TXLVL"
                offset="[11:8]"/>
         <field description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)."
                format="hex0x"
                id="SPI0@FIFOTRIG@RXLVL"
                offset="[19:16]"/>
      </register>
      <register description="FIFO interrupt enable set (enable) and read register."
                format="hex0x"
                id="SPI0@FIFOINTENSET"
                offset="0xe10"
                size="4">
         <field description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e133725"
                id="SPI0@FIFOINTENSET@TXERR"
                offset="[0]"/>
         <field description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e133771"
                id="SPI0@FIFOINTENSET@RXERR"
                offset="[1]"/>
         <field description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e133817"
                id="SPI0@FIFOINTENSET@TXLVL"
                offset="[2]"/>
         <field description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e133863"
                id="SPI0@FIFOINTENSET@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt enable clear (disable) and read register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR"
                offset="0xe14"
                size="4">
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR@TXERR"
                offset="[0]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR@RXERR"
                offset="[1]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR@TXLVL"
                offset="[2]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt status register." format="hex0x"
                id="SPI0@FIFOINTSTAT"
                offset="0xe18"
                readOnly="true"
                size="4">
         <field description="TX FIFO error." format="hex0x" id="SPI0@FIFOINTSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error." format="hex0x" id="SPI0@FIFOINTSTAT@RXERR"
                offset="[1]"/>
         <field description="Transmit FIFO level interrupt." format="hex0x"
                id="SPI0@FIFOINTSTAT@TXLVL"
                offset="[2]"/>
         <field description="Receive FIFO level interrupt." format="hex0x"
                id="SPI0@FIFOINTSTAT@RXLVL"
                offset="[3]"/>
         <field description="Peripheral interrupt." format="hex0x" id="SPI0@FIFOINTSTAT@PERINT"
                offset="[4]"/>
      </register>
      <register description="FIFO write data." format="hex0x" id="SPI0@FIFOWR" offset="0xe20"
                size="4">
         <field description="Transmit data to the FIFO." format="hex0x" id="SPI0@FIFOWR@TXDATA"
                offset="[15:0]"/>
         <field description="Transmit slave select. This field asserts SSEL0 in master mode. The output on the pin is active LOW by default."
                format="enum"
                enum="d1e134174"
                id="SPI0@FIFOWR@TXSSEL0-N"
                offset="[16]"/>
         <field description="Transmit slave select. This field asserts SSEL1 in master mode. The output on the pin is active LOW by default."
                format="enum"
                enum="d1e134220"
                id="SPI0@FIFOWR@TXSSEL1-N"
                offset="[17]"/>
         <field description="Transmit slave select. This field asserts SSEL2 in master mode. The output on the pin is active LOW by default."
                format="enum"
                enum="d1e134266"
                id="SPI0@FIFOWR@TXSSEL2-N"
                offset="[18]"/>
         <field description="Transmit slave select. This field asserts SSEL3 in master mode. The output on the pin is active LOW by default."
                format="enum"
                enum="d1e134312"
                id="SPI0@FIFOWR@TXSSEL3-N"
                offset="[19]"/>
         <field description="End of transfer. The asserted SSEL will be deasserted at the end of a transfer and remain so far at least the time specified by the Transfer_delay value in the DLY register."
                format="enum"
                enum="d1e134359"
                id="SPI0@FIFOWR@EOT"
                offset="[20]"/>
         <field description="End of frame. Between frames, a delay may be inserted, as defined by the Frame_delay value in the DLY register. The end of a frame may not be particularly meaningful if the Frame_delay value = 0. This control can be used as part of the support for frame lengths greater than 16 bits."
                format="enum"
                enum="d1e134405"
                id="SPI0@FIFOWR@EOF"
                offset="[21]"/>
         <field description="Receive Ignore. This allows data to be transmitted using the SPI without the need to read unneeded data from the receiver. Setting this bit simplifies the transmit process and can be used with the DMA."
                format="enum"
                enum="d1e134451"
                id="SPI0@FIFOWR@RXIGNORE"
                offset="[22]"/>
         <field description="Data Length. Specifies the data length from 4 to 16 bits. Note that transfer lengths greater than 16 bits are supported by implementing multiple sequential transmits. 0x0-2 = Reserved. 0x3 = Data transfer is 4 bits in length. 0x4 = Data transfer is 5 bits in length. 0xF = Data transfer is 16 bits in length."
                format="hex0x"
                id="SPI0@FIFOWR@LEN"
                offset="[27:24]"/>
      </register>
      <register description="FIFO read data." format="hex0x" id="SPI0@FIFORD" offset="0xe30"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO." format="hex0x"
                id="SPI0@FIFORD@RXDATA"
                offset="[15:0]"/>
         <field description="Slave Select for receive. This field allows the state of the SSEL0 pin to be saved along with received data. The value will reflect the SSEL0 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG."
                format="hex0x"
                id="SPI0@FIFORD@RXSSEL0-N"
                offset="[16]"/>
         <field description="Slave Select for receive. This field allows the state of the SSEL1 pin to be saved along with received data. The value will reflect the SSEL1 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG."
                format="hex0x"
                id="SPI0@FIFORD@RXSSEL1-N"
                offset="[17]"/>
         <field description="Slave Select for receive. This field allows the state of the SSEL2 pin to be saved along with received data. The value will reflect the SSEL2 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG."
                format="hex0x"
                id="SPI0@FIFORD@RXSSEL2-N"
                offset="[18]"/>
         <field description="Slave Select for receive. This field allows the state of the SSEL3 pin to be saved along with received data. The value will reflect the SSEL3 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG."
                format="hex0x"
                id="SPI0@FIFORD@RXSSEL3-N"
                offset="[19]"/>
         <field description="Start of Transfer flag. This flag will be 1 if this is the first data after the SSELs went from deasserted to asserted (i.e., any previous transfer has ended). This information can be used to identify the first piece of data in cases where the transfer length is greater than 16 bits."
                format="hex0x"
                id="SPI0@FIFORD@SOT"
                offset="[20]"/>
      </register>
      <register description="FIFO data read with no FIFO pop." format="hex0x"
                id="SPI0@FIFORDNOPOP"
                offset="0xe40"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXDATA"
                offset="[15:0]"/>
         <field description="Slave Select for receive." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXSSEL0-N"
                offset="[16]"/>
         <field description="Slave Select for receive." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXSSEL1-N"
                offset="[17]"/>
         <field description="Slave Select for receive." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXSSEL2-N"
                offset="[18]"/>
         <field description="Slave Select for receive." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXSSEL3-N"
                offset="[19]"/>
         <field description="Start of transfer flag." format="hex0x" id="SPI0@FIFORDNOPOP@SOT"
                offset="[20]"/>
      </register>
      <register description="Peripheral identification register." format="hex0x" id="SPI0@ID"
                offset="0xffc"
                readOnly="true"
                size="4">
         <field description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture."
                format="hex0x"
                id="SPI0@ID@APERTURE"
                offset="[7:0]"/>
         <field description="Minor revision of module implementation." format="hex0x"
                id="SPI0@ID@MINOR-REV"
                offset="[11:8]"/>
         <field description="Major revision of module implementation." format="hex0x"
                id="SPI0@ID@MAJOR-REV"
                offset="[15:12]"/>
         <field description="Module identifier for the selected function." format="hex0x"
                id="SPI0@ID@ID"
                offset="[31:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x Serial Peripheral Interfaces (SPI)"
               id="SPI6"
               size="0x1000">
      <register description="SPI Configuration register" format="hex0x" id="SPI0@CFG"
                offset="0x400"
                size="4">
         <field description="SPI enable." format="enum" enum="d1e131889" id="SPI0@CFG@ENABLE"
                offset="[0]"/>
         <field description="Master mode select." format="enum" enum="d1e131935"
                id="SPI0@CFG@MASTER"
                offset="[2]"/>
         <field description="LSB First mode enable." format="enum" enum="d1e131981"
                id="SPI0@CFG@LSBF"
                offset="[3]"/>
         <field description="Clock Phase select." format="enum" enum="d1e132027"
                id="SPI0@CFG@CPHA"
                offset="[4]"/>
         <field description="Clock Polarity select." format="enum" enum="d1e132073"
                id="SPI0@CFG@CPOL"
                offset="[5]"/>
         <field description="Loopback mode enable. Loopback mode applies only to Master mode, and connects transmit and receive data connected together to allow simple software testing."
                format="enum"
                enum="d1e132120"
                id="SPI0@CFG@LOOP"
                offset="[7]"/>
         <field description="SSEL0 Polarity select." format="enum" enum="d1e132166"
                id="SPI0@CFG@SPOL0"
                offset="[8]"/>
         <field description="SSEL1 Polarity select." format="enum" enum="d1e132212"
                id="SPI0@CFG@SPOL1"
                offset="[9]"/>
         <field description="SSEL2 Polarity select." format="enum" enum="d1e132258"
                id="SPI0@CFG@SPOL2"
                offset="[10]"/>
         <field description="SSEL3 Polarity select." format="enum" enum="d1e132304"
                id="SPI0@CFG@SPOL3"
                offset="[11]"/>
      </register>
      <register description="SPI Delay register" format="hex0x" id="SPI0@DLY" offset="0x404"
                size="4">
         <field description="Controls the amount of time between SSEL assertion and the beginning of a data transfer. There is always one SPI clock time between SSEL assertion and the first clock edge. This is not considered part of the pre-delay. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted."
                format="hex0x"
                id="SPI0@DLY@PRE-DELAY"
                offset="[3:0]"/>
         <field description="Controls the amount of time between the end of a data transfer and SSEL deassertion. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted."
                format="hex0x"
                id="SPI0@DLY@POST-DELAY"
                offset="[7:4]"/>
         <field description="If the EOF flag is set, controls the minimum amount of time between the current frame and the next frame (or SSEL deassertion if EOT). 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted."
                format="hex0x"
                id="SPI0@DLY@FRAME-DELAY"
                offset="[11:8]"/>
         <field description="Controls the minimum amount of time that the SSEL is deasserted between transfers. 0x0 = The minimum time that SSEL is deasserted is 1 SPI clock time. (Zero added time.) 0x1 = The minimum time that SSEL is deasserted is 2 SPI clock times. 0x2 = The minimum time that SSEL is deasserted is 3 SPI clock times. 0xF = The minimum time that SSEL is deasserted is 16 SPI clock times."
                format="hex0x"
                id="SPI0@DLY@TRANSFER-DELAY"
                offset="[15:12]"/>
      </register>
      <register description="SPI Status. Some status flags can be cleared by writing a 1 to that bit position."
                format="hex0x"
                id="SPI0@STAT"
                offset="0x408"
                size="4">
         <field description="Slave Select Assert. This flag is set whenever any slave select transitions from deasserted to asserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become busy, and allows waking up the device from reduced power modes when a slave mode access begins. This flag is cleared by software."
                format="hex0x"
                id="SPI0@STAT@SSA"
                offset="[4]"/>
         <field description="Slave Select Deassert. This flag is set whenever any asserted slave selects transition to deasserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become idle. This flag is cleared by software."
                format="hex0x"
                id="SPI0@STAT@SSD"
                offset="[5]"/>
         <field description="Stalled status flag. This indicates whether the SPI is currently in a stall condition."
                format="hex0x"
                id="SPI0@STAT@STALLED"
                offset="[6]"/>
         <field description="End Transfer control bit. Software can set this bit to force an end to the current transfer when the transmitter finishes any activity already in progress, as if the EOT flag had been set prior to the last transmission. This capability is included to support cases where it is not known when transmit data is written that it will be the end of a transfer. The bit is cleared when the transmitter becomes idle as the transfer comes to an end. Forcing an end of transfer in this manner causes any specified FRAME_DELAY and TRANSFER_DELAY to be inserted."
                format="hex0x"
                id="SPI0@STAT@ENDTRANSFER"
                offset="[7]"/>
         <field description="Master idle status flag. This bit is 1 whenever the SPI master function is fully idle. This means that the transmit holding register is empty and the transmitter is not in the process of sending data."
                format="hex0x"
                id="SPI0@STAT@MSTIDLE"
                offset="[8]"/>
      </register>
      <register description="SPI Interrupt Enable read and Set. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set."
                format="hex0x"
                id="SPI0@INTENSET"
                offset="0x40c"
                size="4">
         <field description="Slave select assert interrupt enable. Determines whether an interrupt occurs when the Slave Select is asserted."
                format="enum"
                enum="d1e132596"
                id="SPI0@INTENSET@SSAEN"
                offset="[4]"/>
         <field description="Slave select deassert interrupt enable. Determines whether an interrupt occurs when the Slave Select is deasserted."
                format="enum"
                enum="d1e132642"
                id="SPI0@INTENSET@SSDEN"
                offset="[5]"/>
         <field description="Master idle interrupt enable." format="enum" enum="d1e132688"
                id="SPI0@INTENSET@MSTIDLEEN"
                offset="[8]"/>
      </register>
      <register description="SPI Interrupt Enable Clear. Writing a 1 to any implemented bit position causes the corresponding bit in INTENSET to be cleared."
                format="hex0x"
                id="SPI0@INTENCLR"
                offset="0x410"
                writeOnly="true"
                size="4">
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="SPI0@INTENCLR@SSAEN"
                offset="[4]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="SPI0@INTENCLR@SSDEN"
                offset="[5]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="SPI0@INTENCLR@MSTIDLE"
                offset="[8]"/>
      </register>
      <register description="SPI clock Divider" format="hex0x" id="SPI0@DIV" offset="0x424"
                size="4">
         <field description="Rate divider value. Specifies how the Flexcomm clock (FCLK) is divided to produce the SPI clock rate in master mode. DIVVAL is -1 encoded such that the value 0 results in FCLK/1, the value 1 results in FCLK/2, up to the maximum possible divide value of 0xFFFF, which results in FCLK/65536."
                format="hex0x"
                id="SPI0@DIV@DIVVAL"
                offset="[15:0]"/>
      </register>
      <register description="SPI Interrupt Status" format="hex0x" id="SPI0@INTSTAT"
                offset="0x428"
                readOnly="true"
                size="4">
         <field description="Slave Select Assert." format="hex0x" id="SPI0@INTSTAT@SSA"
                offset="[4]"/>
         <field description="Slave Select Deassert." format="hex0x" id="SPI0@INTSTAT@SSD"
                offset="[5]"/>
         <field description="Master Idle status flag." format="hex0x" id="SPI0@INTSTAT@MSTIDLE"
                offset="[8]"/>
      </register>
      <register description="FIFO configuration and enable register." format="hex0x"
                id="SPI0@FIFOCFG"
                offset="0xe00"
                size="4">
         <field description="Enable the transmit FIFO." format="enum" enum="d1e132973"
                id="SPI0@FIFOCFG@ENABLETX"
                offset="[0]"/>
         <field description="Enable the receive FIFO." format="enum" enum="d1e133019"
                id="SPI0@FIFOCFG@ENABLERX"
                offset="[1]"/>
         <field description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART."
                format="hex0x"
                id="SPI0@FIFOCFG@SIZE"
                offset="[5:4]"/>
         <field description="DMA configuration for transmit." format="enum" enum="d1e133083"
                id="SPI0@FIFOCFG@DMATX"
                offset="[12]"/>
         <field description="DMA configuration for receive." format="enum" enum="d1e133129"
                id="SPI0@FIFOCFG@DMARX"
                offset="[13]"/>
         <field description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e133176"
                id="SPI0@FIFOCFG@WAKETX"
                offset="[14]"/>
         <field description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e133222"
                id="SPI0@FIFOCFG@WAKERX"
                offset="[15]"/>
         <field description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied."
                format="hex0x"
                id="SPI0@FIFOCFG@EMPTYTX"
                offset="[16]"/>
         <field description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied."
                format="hex0x"
                id="SPI0@FIFOCFG@EMPTYRX"
                offset="[17]"/>
         <field description="Pop FIFO for debug reads." format="enum" enum="d1e133304"
                id="SPI0@FIFOCFG@POPDBG"
                offset="[18]"/>
      </register>
      <register description="FIFO status register." format="hex0x" id="SPI0@FIFOSTAT"
                offset="0xe04"
                size="4">
         <field description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="SPI0@FIFOSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="SPI0@FIFOSTAT@RXERR"
                offset="[1]"/>
         <field description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register."
                format="hex0x"
                id="SPI0@FIFOSTAT@PERINT"
                offset="[3]"/>
         <field description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data."
                format="hex0x"
                id="SPI0@FIFOSTAT@TXEMPTY"
                offset="[4]"/>
         <field description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow."
                format="hex0x"
                id="SPI0@FIFOSTAT@TXNOTFULL"
                offset="[5]"/>
         <field description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty."
                format="hex0x"
                id="SPI0@FIFOSTAT@RXNOTEMPTY"
                offset="[6]"/>
         <field description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow."
                format="hex0x"
                id="SPI0@FIFOSTAT@RXFULL"
                offset="[7]"/>
         <field description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0."
                format="hex0x"
                id="SPI0@FIFOSTAT@TXLVL"
                offset="[12:8]"/>
         <field description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1."
                format="hex0x"
                id="SPI0@FIFOSTAT@RXLVL"
                offset="[20:16]"/>
      </register>
      <register description="FIFO trigger settings for interrupt and DMA request."
                format="hex0x"
                id="SPI0@FIFOTRIG"
                offset="0xe08"
                size="4">
         <field description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set."
                format="enum"
                enum="d1e133569"
                id="SPI0@FIFOTRIG@TXLVLENA"
                offset="[0]"/>
         <field description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set."
                format="enum"
                enum="d1e133615"
                id="SPI0@FIFOTRIG@RXLVLENA"
                offset="[1]"/>
         <field description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)."
                format="hex0x"
                id="SPI0@FIFOTRIG@TXLVL"
                offset="[11:8]"/>
         <field description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)."
                format="hex0x"
                id="SPI0@FIFOTRIG@RXLVL"
                offset="[19:16]"/>
      </register>
      <register description="FIFO interrupt enable set (enable) and read register."
                format="hex0x"
                id="SPI0@FIFOINTENSET"
                offset="0xe10"
                size="4">
         <field description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e133725"
                id="SPI0@FIFOINTENSET@TXERR"
                offset="[0]"/>
         <field description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e133771"
                id="SPI0@FIFOINTENSET@RXERR"
                offset="[1]"/>
         <field description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e133817"
                id="SPI0@FIFOINTENSET@TXLVL"
                offset="[2]"/>
         <field description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e133863"
                id="SPI0@FIFOINTENSET@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt enable clear (disable) and read register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR"
                offset="0xe14"
                size="4">
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR@TXERR"
                offset="[0]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR@RXERR"
                offset="[1]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR@TXLVL"
                offset="[2]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt status register." format="hex0x"
                id="SPI0@FIFOINTSTAT"
                offset="0xe18"
                readOnly="true"
                size="4">
         <field description="TX FIFO error." format="hex0x" id="SPI0@FIFOINTSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error." format="hex0x" id="SPI0@FIFOINTSTAT@RXERR"
                offset="[1]"/>
         <field description="Transmit FIFO level interrupt." format="hex0x"
                id="SPI0@FIFOINTSTAT@TXLVL"
                offset="[2]"/>
         <field description="Receive FIFO level interrupt." format="hex0x"
                id="SPI0@FIFOINTSTAT@RXLVL"
                offset="[3]"/>
         <field description="Peripheral interrupt." format="hex0x" id="SPI0@FIFOINTSTAT@PERINT"
                offset="[4]"/>
      </register>
      <register description="FIFO write data." format="hex0x" id="SPI0@FIFOWR" offset="0xe20"
                size="4">
         <field description="Transmit data to the FIFO." format="hex0x" id="SPI0@FIFOWR@TXDATA"
                offset="[15:0]"/>
         <field description="Transmit slave select. This field asserts SSEL0 in master mode. The output on the pin is active LOW by default."
                format="enum"
                enum="d1e134174"
                id="SPI0@FIFOWR@TXSSEL0-N"
                offset="[16]"/>
         <field description="Transmit slave select. This field asserts SSEL1 in master mode. The output on the pin is active LOW by default."
                format="enum"
                enum="d1e134220"
                id="SPI0@FIFOWR@TXSSEL1-N"
                offset="[17]"/>
         <field description="Transmit slave select. This field asserts SSEL2 in master mode. The output on the pin is active LOW by default."
                format="enum"
                enum="d1e134266"
                id="SPI0@FIFOWR@TXSSEL2-N"
                offset="[18]"/>
         <field description="Transmit slave select. This field asserts SSEL3 in master mode. The output on the pin is active LOW by default."
                format="enum"
                enum="d1e134312"
                id="SPI0@FIFOWR@TXSSEL3-N"
                offset="[19]"/>
         <field description="End of transfer. The asserted SSEL will be deasserted at the end of a transfer and remain so far at least the time specified by the Transfer_delay value in the DLY register."
                format="enum"
                enum="d1e134359"
                id="SPI0@FIFOWR@EOT"
                offset="[20]"/>
         <field description="End of frame. Between frames, a delay may be inserted, as defined by the Frame_delay value in the DLY register. The end of a frame may not be particularly meaningful if the Frame_delay value = 0. This control can be used as part of the support for frame lengths greater than 16 bits."
                format="enum"
                enum="d1e134405"
                id="SPI0@FIFOWR@EOF"
                offset="[21]"/>
         <field description="Receive Ignore. This allows data to be transmitted using the SPI without the need to read unneeded data from the receiver. Setting this bit simplifies the transmit process and can be used with the DMA."
                format="enum"
                enum="d1e134451"
                id="SPI0@FIFOWR@RXIGNORE"
                offset="[22]"/>
         <field description="Data Length. Specifies the data length from 4 to 16 bits. Note that transfer lengths greater than 16 bits are supported by implementing multiple sequential transmits. 0x0-2 = Reserved. 0x3 = Data transfer is 4 bits in length. 0x4 = Data transfer is 5 bits in length. 0xF = Data transfer is 16 bits in length."
                format="hex0x"
                id="SPI0@FIFOWR@LEN"
                offset="[27:24]"/>
      </register>
      <register description="FIFO read data." format="hex0x" id="SPI0@FIFORD" offset="0xe30"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO." format="hex0x"
                id="SPI0@FIFORD@RXDATA"
                offset="[15:0]"/>
         <field description="Slave Select for receive. This field allows the state of the SSEL0 pin to be saved along with received data. The value will reflect the SSEL0 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG."
                format="hex0x"
                id="SPI0@FIFORD@RXSSEL0-N"
                offset="[16]"/>
         <field description="Slave Select for receive. This field allows the state of the SSEL1 pin to be saved along with received data. The value will reflect the SSEL1 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG."
                format="hex0x"
                id="SPI0@FIFORD@RXSSEL1-N"
                offset="[17]"/>
         <field description="Slave Select for receive. This field allows the state of the SSEL2 pin to be saved along with received data. The value will reflect the SSEL2 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG."
                format="hex0x"
                id="SPI0@FIFORD@RXSSEL2-N"
                offset="[18]"/>
         <field description="Slave Select for receive. This field allows the state of the SSEL3 pin to be saved along with received data. The value will reflect the SSEL3 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG."
                format="hex0x"
                id="SPI0@FIFORD@RXSSEL3-N"
                offset="[19]"/>
         <field description="Start of Transfer flag. This flag will be 1 if this is the first data after the SSELs went from deasserted to asserted (i.e., any previous transfer has ended). This information can be used to identify the first piece of data in cases where the transfer length is greater than 16 bits."
                format="hex0x"
                id="SPI0@FIFORD@SOT"
                offset="[20]"/>
      </register>
      <register description="FIFO data read with no FIFO pop." format="hex0x"
                id="SPI0@FIFORDNOPOP"
                offset="0xe40"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXDATA"
                offset="[15:0]"/>
         <field description="Slave Select for receive." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXSSEL0-N"
                offset="[16]"/>
         <field description="Slave Select for receive." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXSSEL1-N"
                offset="[17]"/>
         <field description="Slave Select for receive." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXSSEL2-N"
                offset="[18]"/>
         <field description="Slave Select for receive." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXSSEL3-N"
                offset="[19]"/>
         <field description="Start of transfer flag." format="hex0x" id="SPI0@FIFORDNOPOP@SOT"
                offset="[20]"/>
      </register>
      <register description="Peripheral identification register." format="hex0x" id="SPI0@ID"
                offset="0xffc"
                readOnly="true"
                size="4">
         <field description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture."
                format="hex0x"
                id="SPI0@ID@APERTURE"
                offset="[7:0]"/>
         <field description="Minor revision of module implementation." format="hex0x"
                id="SPI0@ID@MINOR-REV"
                offset="[11:8]"/>
         <field description="Major revision of module implementation." format="hex0x"
                id="SPI0@ID@MAJOR-REV"
                offset="[15:12]"/>
         <field description="Module identifier for the selected function." format="hex0x"
                id="SPI0@ID@ID"
                offset="[31:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x Serial Peripheral Interfaces (SPI)"
               id="SPI7"
               size="0x1000">
      <register description="SPI Configuration register" format="hex0x" id="SPI0@CFG"
                offset="0x400"
                size="4">
         <field description="SPI enable." format="enum" enum="d1e131889" id="SPI0@CFG@ENABLE"
                offset="[0]"/>
         <field description="Master mode select." format="enum" enum="d1e131935"
                id="SPI0@CFG@MASTER"
                offset="[2]"/>
         <field description="LSB First mode enable." format="enum" enum="d1e131981"
                id="SPI0@CFG@LSBF"
                offset="[3]"/>
         <field description="Clock Phase select." format="enum" enum="d1e132027"
                id="SPI0@CFG@CPHA"
                offset="[4]"/>
         <field description="Clock Polarity select." format="enum" enum="d1e132073"
                id="SPI0@CFG@CPOL"
                offset="[5]"/>
         <field description="Loopback mode enable. Loopback mode applies only to Master mode, and connects transmit and receive data connected together to allow simple software testing."
                format="enum"
                enum="d1e132120"
                id="SPI0@CFG@LOOP"
                offset="[7]"/>
         <field description="SSEL0 Polarity select." format="enum" enum="d1e132166"
                id="SPI0@CFG@SPOL0"
                offset="[8]"/>
         <field description="SSEL1 Polarity select." format="enum" enum="d1e132212"
                id="SPI0@CFG@SPOL1"
                offset="[9]"/>
         <field description="SSEL2 Polarity select." format="enum" enum="d1e132258"
                id="SPI0@CFG@SPOL2"
                offset="[10]"/>
         <field description="SSEL3 Polarity select." format="enum" enum="d1e132304"
                id="SPI0@CFG@SPOL3"
                offset="[11]"/>
      </register>
      <register description="SPI Delay register" format="hex0x" id="SPI0@DLY" offset="0x404"
                size="4">
         <field description="Controls the amount of time between SSEL assertion and the beginning of a data transfer. There is always one SPI clock time between SSEL assertion and the first clock edge. This is not considered part of the pre-delay. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted."
                format="hex0x"
                id="SPI0@DLY@PRE-DELAY"
                offset="[3:0]"/>
         <field description="Controls the amount of time between the end of a data transfer and SSEL deassertion. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted."
                format="hex0x"
                id="SPI0@DLY@POST-DELAY"
                offset="[7:4]"/>
         <field description="If the EOF flag is set, controls the minimum amount of time between the current frame and the next frame (or SSEL deassertion if EOT). 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted."
                format="hex0x"
                id="SPI0@DLY@FRAME-DELAY"
                offset="[11:8]"/>
         <field description="Controls the minimum amount of time that the SSEL is deasserted between transfers. 0x0 = The minimum time that SSEL is deasserted is 1 SPI clock time. (Zero added time.) 0x1 = The minimum time that SSEL is deasserted is 2 SPI clock times. 0x2 = The minimum time that SSEL is deasserted is 3 SPI clock times. 0xF = The minimum time that SSEL is deasserted is 16 SPI clock times."
                format="hex0x"
                id="SPI0@DLY@TRANSFER-DELAY"
                offset="[15:12]"/>
      </register>
      <register description="SPI Status. Some status flags can be cleared by writing a 1 to that bit position."
                format="hex0x"
                id="SPI0@STAT"
                offset="0x408"
                size="4">
         <field description="Slave Select Assert. This flag is set whenever any slave select transitions from deasserted to asserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become busy, and allows waking up the device from reduced power modes when a slave mode access begins. This flag is cleared by software."
                format="hex0x"
                id="SPI0@STAT@SSA"
                offset="[4]"/>
         <field description="Slave Select Deassert. This flag is set whenever any asserted slave selects transition to deasserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become idle. This flag is cleared by software."
                format="hex0x"
                id="SPI0@STAT@SSD"
                offset="[5]"/>
         <field description="Stalled status flag. This indicates whether the SPI is currently in a stall condition."
                format="hex0x"
                id="SPI0@STAT@STALLED"
                offset="[6]"/>
         <field description="End Transfer control bit. Software can set this bit to force an end to the current transfer when the transmitter finishes any activity already in progress, as if the EOT flag had been set prior to the last transmission. This capability is included to support cases where it is not known when transmit data is written that it will be the end of a transfer. The bit is cleared when the transmitter becomes idle as the transfer comes to an end. Forcing an end of transfer in this manner causes any specified FRAME_DELAY and TRANSFER_DELAY to be inserted."
                format="hex0x"
                id="SPI0@STAT@ENDTRANSFER"
                offset="[7]"/>
         <field description="Master idle status flag. This bit is 1 whenever the SPI master function is fully idle. This means that the transmit holding register is empty and the transmitter is not in the process of sending data."
                format="hex0x"
                id="SPI0@STAT@MSTIDLE"
                offset="[8]"/>
      </register>
      <register description="SPI Interrupt Enable read and Set. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set."
                format="hex0x"
                id="SPI0@INTENSET"
                offset="0x40c"
                size="4">
         <field description="Slave select assert interrupt enable. Determines whether an interrupt occurs when the Slave Select is asserted."
                format="enum"
                enum="d1e132596"
                id="SPI0@INTENSET@SSAEN"
                offset="[4]"/>
         <field description="Slave select deassert interrupt enable. Determines whether an interrupt occurs when the Slave Select is deasserted."
                format="enum"
                enum="d1e132642"
                id="SPI0@INTENSET@SSDEN"
                offset="[5]"/>
         <field description="Master idle interrupt enable." format="enum" enum="d1e132688"
                id="SPI0@INTENSET@MSTIDLEEN"
                offset="[8]"/>
      </register>
      <register description="SPI Interrupt Enable Clear. Writing a 1 to any implemented bit position causes the corresponding bit in INTENSET to be cleared."
                format="hex0x"
                id="SPI0@INTENCLR"
                offset="0x410"
                writeOnly="true"
                size="4">
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="SPI0@INTENCLR@SSAEN"
                offset="[4]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="SPI0@INTENCLR@SSDEN"
                offset="[5]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="SPI0@INTENCLR@MSTIDLE"
                offset="[8]"/>
      </register>
      <register description="SPI clock Divider" format="hex0x" id="SPI0@DIV" offset="0x424"
                size="4">
         <field description="Rate divider value. Specifies how the Flexcomm clock (FCLK) is divided to produce the SPI clock rate in master mode. DIVVAL is -1 encoded such that the value 0 results in FCLK/1, the value 1 results in FCLK/2, up to the maximum possible divide value of 0xFFFF, which results in FCLK/65536."
                format="hex0x"
                id="SPI0@DIV@DIVVAL"
                offset="[15:0]"/>
      </register>
      <register description="SPI Interrupt Status" format="hex0x" id="SPI0@INTSTAT"
                offset="0x428"
                readOnly="true"
                size="4">
         <field description="Slave Select Assert." format="hex0x" id="SPI0@INTSTAT@SSA"
                offset="[4]"/>
         <field description="Slave Select Deassert." format="hex0x" id="SPI0@INTSTAT@SSD"
                offset="[5]"/>
         <field description="Master Idle status flag." format="hex0x" id="SPI0@INTSTAT@MSTIDLE"
                offset="[8]"/>
      </register>
      <register description="FIFO configuration and enable register." format="hex0x"
                id="SPI0@FIFOCFG"
                offset="0xe00"
                size="4">
         <field description="Enable the transmit FIFO." format="enum" enum="d1e132973"
                id="SPI0@FIFOCFG@ENABLETX"
                offset="[0]"/>
         <field description="Enable the receive FIFO." format="enum" enum="d1e133019"
                id="SPI0@FIFOCFG@ENABLERX"
                offset="[1]"/>
         <field description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART."
                format="hex0x"
                id="SPI0@FIFOCFG@SIZE"
                offset="[5:4]"/>
         <field description="DMA configuration for transmit." format="enum" enum="d1e133083"
                id="SPI0@FIFOCFG@DMATX"
                offset="[12]"/>
         <field description="DMA configuration for receive." format="enum" enum="d1e133129"
                id="SPI0@FIFOCFG@DMARX"
                offset="[13]"/>
         <field description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e133176"
                id="SPI0@FIFOCFG@WAKETX"
                offset="[14]"/>
         <field description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e133222"
                id="SPI0@FIFOCFG@WAKERX"
                offset="[15]"/>
         <field description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied."
                format="hex0x"
                id="SPI0@FIFOCFG@EMPTYTX"
                offset="[16]"/>
         <field description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied."
                format="hex0x"
                id="SPI0@FIFOCFG@EMPTYRX"
                offset="[17]"/>
         <field description="Pop FIFO for debug reads." format="enum" enum="d1e133304"
                id="SPI0@FIFOCFG@POPDBG"
                offset="[18]"/>
      </register>
      <register description="FIFO status register." format="hex0x" id="SPI0@FIFOSTAT"
                offset="0xe04"
                size="4">
         <field description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="SPI0@FIFOSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="SPI0@FIFOSTAT@RXERR"
                offset="[1]"/>
         <field description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register."
                format="hex0x"
                id="SPI0@FIFOSTAT@PERINT"
                offset="[3]"/>
         <field description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data."
                format="hex0x"
                id="SPI0@FIFOSTAT@TXEMPTY"
                offset="[4]"/>
         <field description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow."
                format="hex0x"
                id="SPI0@FIFOSTAT@TXNOTFULL"
                offset="[5]"/>
         <field description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty."
                format="hex0x"
                id="SPI0@FIFOSTAT@RXNOTEMPTY"
                offset="[6]"/>
         <field description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow."
                format="hex0x"
                id="SPI0@FIFOSTAT@RXFULL"
                offset="[7]"/>
         <field description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0."
                format="hex0x"
                id="SPI0@FIFOSTAT@TXLVL"
                offset="[12:8]"/>
         <field description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1."
                format="hex0x"
                id="SPI0@FIFOSTAT@RXLVL"
                offset="[20:16]"/>
      </register>
      <register description="FIFO trigger settings for interrupt and DMA request."
                format="hex0x"
                id="SPI0@FIFOTRIG"
                offset="0xe08"
                size="4">
         <field description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set."
                format="enum"
                enum="d1e133569"
                id="SPI0@FIFOTRIG@TXLVLENA"
                offset="[0]"/>
         <field description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set."
                format="enum"
                enum="d1e133615"
                id="SPI0@FIFOTRIG@RXLVLENA"
                offset="[1]"/>
         <field description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)."
                format="hex0x"
                id="SPI0@FIFOTRIG@TXLVL"
                offset="[11:8]"/>
         <field description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)."
                format="hex0x"
                id="SPI0@FIFOTRIG@RXLVL"
                offset="[19:16]"/>
      </register>
      <register description="FIFO interrupt enable set (enable) and read register."
                format="hex0x"
                id="SPI0@FIFOINTENSET"
                offset="0xe10"
                size="4">
         <field description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e133725"
                id="SPI0@FIFOINTENSET@TXERR"
                offset="[0]"/>
         <field description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e133771"
                id="SPI0@FIFOINTENSET@RXERR"
                offset="[1]"/>
         <field description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e133817"
                id="SPI0@FIFOINTENSET@TXLVL"
                offset="[2]"/>
         <field description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e133863"
                id="SPI0@FIFOINTENSET@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt enable clear (disable) and read register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR"
                offset="0xe14"
                size="4">
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR@TXERR"
                offset="[0]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR@RXERR"
                offset="[1]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR@TXLVL"
                offset="[2]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt status register." format="hex0x"
                id="SPI0@FIFOINTSTAT"
                offset="0xe18"
                readOnly="true"
                size="4">
         <field description="TX FIFO error." format="hex0x" id="SPI0@FIFOINTSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error." format="hex0x" id="SPI0@FIFOINTSTAT@RXERR"
                offset="[1]"/>
         <field description="Transmit FIFO level interrupt." format="hex0x"
                id="SPI0@FIFOINTSTAT@TXLVL"
                offset="[2]"/>
         <field description="Receive FIFO level interrupt." format="hex0x"
                id="SPI0@FIFOINTSTAT@RXLVL"
                offset="[3]"/>
         <field description="Peripheral interrupt." format="hex0x" id="SPI0@FIFOINTSTAT@PERINT"
                offset="[4]"/>
      </register>
      <register description="FIFO write data." format="hex0x" id="SPI0@FIFOWR" offset="0xe20"
                size="4">
         <field description="Transmit data to the FIFO." format="hex0x" id="SPI0@FIFOWR@TXDATA"
                offset="[15:0]"/>
         <field description="Transmit slave select. This field asserts SSEL0 in master mode. The output on the pin is active LOW by default."
                format="enum"
                enum="d1e134174"
                id="SPI0@FIFOWR@TXSSEL0-N"
                offset="[16]"/>
         <field description="Transmit slave select. This field asserts SSEL1 in master mode. The output on the pin is active LOW by default."
                format="enum"
                enum="d1e134220"
                id="SPI0@FIFOWR@TXSSEL1-N"
                offset="[17]"/>
         <field description="Transmit slave select. This field asserts SSEL2 in master mode. The output on the pin is active LOW by default."
                format="enum"
                enum="d1e134266"
                id="SPI0@FIFOWR@TXSSEL2-N"
                offset="[18]"/>
         <field description="Transmit slave select. This field asserts SSEL3 in master mode. The output on the pin is active LOW by default."
                format="enum"
                enum="d1e134312"
                id="SPI0@FIFOWR@TXSSEL3-N"
                offset="[19]"/>
         <field description="End of transfer. The asserted SSEL will be deasserted at the end of a transfer and remain so far at least the time specified by the Transfer_delay value in the DLY register."
                format="enum"
                enum="d1e134359"
                id="SPI0@FIFOWR@EOT"
                offset="[20]"/>
         <field description="End of frame. Between frames, a delay may be inserted, as defined by the Frame_delay value in the DLY register. The end of a frame may not be particularly meaningful if the Frame_delay value = 0. This control can be used as part of the support for frame lengths greater than 16 bits."
                format="enum"
                enum="d1e134405"
                id="SPI0@FIFOWR@EOF"
                offset="[21]"/>
         <field description="Receive Ignore. This allows data to be transmitted using the SPI without the need to read unneeded data from the receiver. Setting this bit simplifies the transmit process and can be used with the DMA."
                format="enum"
                enum="d1e134451"
                id="SPI0@FIFOWR@RXIGNORE"
                offset="[22]"/>
         <field description="Data Length. Specifies the data length from 4 to 16 bits. Note that transfer lengths greater than 16 bits are supported by implementing multiple sequential transmits. 0x0-2 = Reserved. 0x3 = Data transfer is 4 bits in length. 0x4 = Data transfer is 5 bits in length. 0xF = Data transfer is 16 bits in length."
                format="hex0x"
                id="SPI0@FIFOWR@LEN"
                offset="[27:24]"/>
      </register>
      <register description="FIFO read data." format="hex0x" id="SPI0@FIFORD" offset="0xe30"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO." format="hex0x"
                id="SPI0@FIFORD@RXDATA"
                offset="[15:0]"/>
         <field description="Slave Select for receive. This field allows the state of the SSEL0 pin to be saved along with received data. The value will reflect the SSEL0 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG."
                format="hex0x"
                id="SPI0@FIFORD@RXSSEL0-N"
                offset="[16]"/>
         <field description="Slave Select for receive. This field allows the state of the SSEL1 pin to be saved along with received data. The value will reflect the SSEL1 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG."
                format="hex0x"
                id="SPI0@FIFORD@RXSSEL1-N"
                offset="[17]"/>
         <field description="Slave Select for receive. This field allows the state of the SSEL2 pin to be saved along with received data. The value will reflect the SSEL2 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG."
                format="hex0x"
                id="SPI0@FIFORD@RXSSEL2-N"
                offset="[18]"/>
         <field description="Slave Select for receive. This field allows the state of the SSEL3 pin to be saved along with received data. The value will reflect the SSEL3 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG."
                format="hex0x"
                id="SPI0@FIFORD@RXSSEL3-N"
                offset="[19]"/>
         <field description="Start of Transfer flag. This flag will be 1 if this is the first data after the SSELs went from deasserted to asserted (i.e., any previous transfer has ended). This information can be used to identify the first piece of data in cases where the transfer length is greater than 16 bits."
                format="hex0x"
                id="SPI0@FIFORD@SOT"
                offset="[20]"/>
      </register>
      <register description="FIFO data read with no FIFO pop." format="hex0x"
                id="SPI0@FIFORDNOPOP"
                offset="0xe40"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXDATA"
                offset="[15:0]"/>
         <field description="Slave Select for receive." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXSSEL0-N"
                offset="[16]"/>
         <field description="Slave Select for receive." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXSSEL1-N"
                offset="[17]"/>
         <field description="Slave Select for receive." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXSSEL2-N"
                offset="[18]"/>
         <field description="Slave Select for receive." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXSSEL3-N"
                offset="[19]"/>
         <field description="Start of transfer flag." format="hex0x" id="SPI0@FIFORDNOPOP@SOT"
                offset="[20]"/>
      </register>
      <register description="Peripheral identification register." format="hex0x" id="SPI0@ID"
                offset="0xffc"
                readOnly="true"
                size="4">
         <field description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture."
                format="hex0x"
                id="SPI0@ID@APERTURE"
                offset="[7:0]"/>
         <field description="Minor revision of module implementation." format="hex0x"
                id="SPI0@ID@MINOR-REV"
                offset="[11:8]"/>
         <field description="Major revision of module implementation." format="hex0x"
                id="SPI0@ID@MAJOR-REV"
                offset="[15:12]"/>
         <field description="Module identifier for the selected function." format="hex0x"
                id="SPI0@ID@ID"
                offset="[31:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x Serial Peripheral Interfaces (SPI)"
               id="SPI8"
               size="0x1000">
      <register description="SPI Configuration register" format="hex0x" id="SPI0@CFG"
                offset="0x400"
                size="4">
         <field description="SPI enable." format="enum" enum="d1e131889" id="SPI0@CFG@ENABLE"
                offset="[0]"/>
         <field description="Master mode select." format="enum" enum="d1e131935"
                id="SPI0@CFG@MASTER"
                offset="[2]"/>
         <field description="LSB First mode enable." format="enum" enum="d1e131981"
                id="SPI0@CFG@LSBF"
                offset="[3]"/>
         <field description="Clock Phase select." format="enum" enum="d1e132027"
                id="SPI0@CFG@CPHA"
                offset="[4]"/>
         <field description="Clock Polarity select." format="enum" enum="d1e132073"
                id="SPI0@CFG@CPOL"
                offset="[5]"/>
         <field description="Loopback mode enable. Loopback mode applies only to Master mode, and connects transmit and receive data connected together to allow simple software testing."
                format="enum"
                enum="d1e132120"
                id="SPI0@CFG@LOOP"
                offset="[7]"/>
         <field description="SSEL0 Polarity select." format="enum" enum="d1e132166"
                id="SPI0@CFG@SPOL0"
                offset="[8]"/>
         <field description="SSEL1 Polarity select." format="enum" enum="d1e132212"
                id="SPI0@CFG@SPOL1"
                offset="[9]"/>
         <field description="SSEL2 Polarity select." format="enum" enum="d1e132258"
                id="SPI0@CFG@SPOL2"
                offset="[10]"/>
         <field description="SSEL3 Polarity select." format="enum" enum="d1e132304"
                id="SPI0@CFG@SPOL3"
                offset="[11]"/>
      </register>
      <register description="SPI Delay register" format="hex0x" id="SPI0@DLY" offset="0x404"
                size="4">
         <field description="Controls the amount of time between SSEL assertion and the beginning of a data transfer. There is always one SPI clock time between SSEL assertion and the first clock edge. This is not considered part of the pre-delay. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted."
                format="hex0x"
                id="SPI0@DLY@PRE-DELAY"
                offset="[3:0]"/>
         <field description="Controls the amount of time between the end of a data transfer and SSEL deassertion. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted."
                format="hex0x"
                id="SPI0@DLY@POST-DELAY"
                offset="[7:4]"/>
         <field description="If the EOF flag is set, controls the minimum amount of time between the current frame and the next frame (or SSEL deassertion if EOT). 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted."
                format="hex0x"
                id="SPI0@DLY@FRAME-DELAY"
                offset="[11:8]"/>
         <field description="Controls the minimum amount of time that the SSEL is deasserted between transfers. 0x0 = The minimum time that SSEL is deasserted is 1 SPI clock time. (Zero added time.) 0x1 = The minimum time that SSEL is deasserted is 2 SPI clock times. 0x2 = The minimum time that SSEL is deasserted is 3 SPI clock times. 0xF = The minimum time that SSEL is deasserted is 16 SPI clock times."
                format="hex0x"
                id="SPI0@DLY@TRANSFER-DELAY"
                offset="[15:12]"/>
      </register>
      <register description="SPI Status. Some status flags can be cleared by writing a 1 to that bit position."
                format="hex0x"
                id="SPI0@STAT"
                offset="0x408"
                size="4">
         <field description="Slave Select Assert. This flag is set whenever any slave select transitions from deasserted to asserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become busy, and allows waking up the device from reduced power modes when a slave mode access begins. This flag is cleared by software."
                format="hex0x"
                id="SPI0@STAT@SSA"
                offset="[4]"/>
         <field description="Slave Select Deassert. This flag is set whenever any asserted slave selects transition to deasserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become idle. This flag is cleared by software."
                format="hex0x"
                id="SPI0@STAT@SSD"
                offset="[5]"/>
         <field description="Stalled status flag. This indicates whether the SPI is currently in a stall condition."
                format="hex0x"
                id="SPI0@STAT@STALLED"
                offset="[6]"/>
         <field description="End Transfer control bit. Software can set this bit to force an end to the current transfer when the transmitter finishes any activity already in progress, as if the EOT flag had been set prior to the last transmission. This capability is included to support cases where it is not known when transmit data is written that it will be the end of a transfer. The bit is cleared when the transmitter becomes idle as the transfer comes to an end. Forcing an end of transfer in this manner causes any specified FRAME_DELAY and TRANSFER_DELAY to be inserted."
                format="hex0x"
                id="SPI0@STAT@ENDTRANSFER"
                offset="[7]"/>
         <field description="Master idle status flag. This bit is 1 whenever the SPI master function is fully idle. This means that the transmit holding register is empty and the transmitter is not in the process of sending data."
                format="hex0x"
                id="SPI0@STAT@MSTIDLE"
                offset="[8]"/>
      </register>
      <register description="SPI Interrupt Enable read and Set. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set."
                format="hex0x"
                id="SPI0@INTENSET"
                offset="0x40c"
                size="4">
         <field description="Slave select assert interrupt enable. Determines whether an interrupt occurs when the Slave Select is asserted."
                format="enum"
                enum="d1e132596"
                id="SPI0@INTENSET@SSAEN"
                offset="[4]"/>
         <field description="Slave select deassert interrupt enable. Determines whether an interrupt occurs when the Slave Select is deasserted."
                format="enum"
                enum="d1e132642"
                id="SPI0@INTENSET@SSDEN"
                offset="[5]"/>
         <field description="Master idle interrupt enable." format="enum" enum="d1e132688"
                id="SPI0@INTENSET@MSTIDLEEN"
                offset="[8]"/>
      </register>
      <register description="SPI Interrupt Enable Clear. Writing a 1 to any implemented bit position causes the corresponding bit in INTENSET to be cleared."
                format="hex0x"
                id="SPI0@INTENCLR"
                offset="0x410"
                writeOnly="true"
                size="4">
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="SPI0@INTENCLR@SSAEN"
                offset="[4]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="SPI0@INTENCLR@SSDEN"
                offset="[5]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="SPI0@INTENCLR@MSTIDLE"
                offset="[8]"/>
      </register>
      <register description="SPI clock Divider" format="hex0x" id="SPI0@DIV" offset="0x424"
                size="4">
         <field description="Rate divider value. Specifies how the Flexcomm clock (FCLK) is divided to produce the SPI clock rate in master mode. DIVVAL is -1 encoded such that the value 0 results in FCLK/1, the value 1 results in FCLK/2, up to the maximum possible divide value of 0xFFFF, which results in FCLK/65536."
                format="hex0x"
                id="SPI0@DIV@DIVVAL"
                offset="[15:0]"/>
      </register>
      <register description="SPI Interrupt Status" format="hex0x" id="SPI0@INTSTAT"
                offset="0x428"
                readOnly="true"
                size="4">
         <field description="Slave Select Assert." format="hex0x" id="SPI0@INTSTAT@SSA"
                offset="[4]"/>
         <field description="Slave Select Deassert." format="hex0x" id="SPI0@INTSTAT@SSD"
                offset="[5]"/>
         <field description="Master Idle status flag." format="hex0x" id="SPI0@INTSTAT@MSTIDLE"
                offset="[8]"/>
      </register>
      <register description="FIFO configuration and enable register." format="hex0x"
                id="SPI0@FIFOCFG"
                offset="0xe00"
                size="4">
         <field description="Enable the transmit FIFO." format="enum" enum="d1e132973"
                id="SPI0@FIFOCFG@ENABLETX"
                offset="[0]"/>
         <field description="Enable the receive FIFO." format="enum" enum="d1e133019"
                id="SPI0@FIFOCFG@ENABLERX"
                offset="[1]"/>
         <field description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART."
                format="hex0x"
                id="SPI0@FIFOCFG@SIZE"
                offset="[5:4]"/>
         <field description="DMA configuration for transmit." format="enum" enum="d1e133083"
                id="SPI0@FIFOCFG@DMATX"
                offset="[12]"/>
         <field description="DMA configuration for receive." format="enum" enum="d1e133129"
                id="SPI0@FIFOCFG@DMARX"
                offset="[13]"/>
         <field description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e133176"
                id="SPI0@FIFOCFG@WAKETX"
                offset="[14]"/>
         <field description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e133222"
                id="SPI0@FIFOCFG@WAKERX"
                offset="[15]"/>
         <field description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied."
                format="hex0x"
                id="SPI0@FIFOCFG@EMPTYTX"
                offset="[16]"/>
         <field description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied."
                format="hex0x"
                id="SPI0@FIFOCFG@EMPTYRX"
                offset="[17]"/>
         <field description="Pop FIFO for debug reads." format="enum" enum="d1e133304"
                id="SPI0@FIFOCFG@POPDBG"
                offset="[18]"/>
      </register>
      <register description="FIFO status register." format="hex0x" id="SPI0@FIFOSTAT"
                offset="0xe04"
                size="4">
         <field description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="SPI0@FIFOSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="SPI0@FIFOSTAT@RXERR"
                offset="[1]"/>
         <field description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register."
                format="hex0x"
                id="SPI0@FIFOSTAT@PERINT"
                offset="[3]"/>
         <field description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data."
                format="hex0x"
                id="SPI0@FIFOSTAT@TXEMPTY"
                offset="[4]"/>
         <field description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow."
                format="hex0x"
                id="SPI0@FIFOSTAT@TXNOTFULL"
                offset="[5]"/>
         <field description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty."
                format="hex0x"
                id="SPI0@FIFOSTAT@RXNOTEMPTY"
                offset="[6]"/>
         <field description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow."
                format="hex0x"
                id="SPI0@FIFOSTAT@RXFULL"
                offset="[7]"/>
         <field description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0."
                format="hex0x"
                id="SPI0@FIFOSTAT@TXLVL"
                offset="[12:8]"/>
         <field description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1."
                format="hex0x"
                id="SPI0@FIFOSTAT@RXLVL"
                offset="[20:16]"/>
      </register>
      <register description="FIFO trigger settings for interrupt and DMA request."
                format="hex0x"
                id="SPI0@FIFOTRIG"
                offset="0xe08"
                size="4">
         <field description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set."
                format="enum"
                enum="d1e133569"
                id="SPI0@FIFOTRIG@TXLVLENA"
                offset="[0]"/>
         <field description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set."
                format="enum"
                enum="d1e133615"
                id="SPI0@FIFOTRIG@RXLVLENA"
                offset="[1]"/>
         <field description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)."
                format="hex0x"
                id="SPI0@FIFOTRIG@TXLVL"
                offset="[11:8]"/>
         <field description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)."
                format="hex0x"
                id="SPI0@FIFOTRIG@RXLVL"
                offset="[19:16]"/>
      </register>
      <register description="FIFO interrupt enable set (enable) and read register."
                format="hex0x"
                id="SPI0@FIFOINTENSET"
                offset="0xe10"
                size="4">
         <field description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e133725"
                id="SPI0@FIFOINTENSET@TXERR"
                offset="[0]"/>
         <field description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e133771"
                id="SPI0@FIFOINTENSET@RXERR"
                offset="[1]"/>
         <field description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e133817"
                id="SPI0@FIFOINTENSET@TXLVL"
                offset="[2]"/>
         <field description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e133863"
                id="SPI0@FIFOINTENSET@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt enable clear (disable) and read register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR"
                offset="0xe14"
                size="4">
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR@TXERR"
                offset="[0]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR@RXERR"
                offset="[1]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR@TXLVL"
                offset="[2]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt status register." format="hex0x"
                id="SPI0@FIFOINTSTAT"
                offset="0xe18"
                readOnly="true"
                size="4">
         <field description="TX FIFO error." format="hex0x" id="SPI0@FIFOINTSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error." format="hex0x" id="SPI0@FIFOINTSTAT@RXERR"
                offset="[1]"/>
         <field description="Transmit FIFO level interrupt." format="hex0x"
                id="SPI0@FIFOINTSTAT@TXLVL"
                offset="[2]"/>
         <field description="Receive FIFO level interrupt." format="hex0x"
                id="SPI0@FIFOINTSTAT@RXLVL"
                offset="[3]"/>
         <field description="Peripheral interrupt." format="hex0x" id="SPI0@FIFOINTSTAT@PERINT"
                offset="[4]"/>
      </register>
      <register description="FIFO write data." format="hex0x" id="SPI0@FIFOWR" offset="0xe20"
                size="4">
         <field description="Transmit data to the FIFO." format="hex0x" id="SPI0@FIFOWR@TXDATA"
                offset="[15:0]"/>
         <field description="Transmit slave select. This field asserts SSEL0 in master mode. The output on the pin is active LOW by default."
                format="enum"
                enum="d1e134174"
                id="SPI0@FIFOWR@TXSSEL0-N"
                offset="[16]"/>
         <field description="Transmit slave select. This field asserts SSEL1 in master mode. The output on the pin is active LOW by default."
                format="enum"
                enum="d1e134220"
                id="SPI0@FIFOWR@TXSSEL1-N"
                offset="[17]"/>
         <field description="Transmit slave select. This field asserts SSEL2 in master mode. The output on the pin is active LOW by default."
                format="enum"
                enum="d1e134266"
                id="SPI0@FIFOWR@TXSSEL2-N"
                offset="[18]"/>
         <field description="Transmit slave select. This field asserts SSEL3 in master mode. The output on the pin is active LOW by default."
                format="enum"
                enum="d1e134312"
                id="SPI0@FIFOWR@TXSSEL3-N"
                offset="[19]"/>
         <field description="End of transfer. The asserted SSEL will be deasserted at the end of a transfer and remain so far at least the time specified by the Transfer_delay value in the DLY register."
                format="enum"
                enum="d1e134359"
                id="SPI0@FIFOWR@EOT"
                offset="[20]"/>
         <field description="End of frame. Between frames, a delay may be inserted, as defined by the Frame_delay value in the DLY register. The end of a frame may not be particularly meaningful if the Frame_delay value = 0. This control can be used as part of the support for frame lengths greater than 16 bits."
                format="enum"
                enum="d1e134405"
                id="SPI0@FIFOWR@EOF"
                offset="[21]"/>
         <field description="Receive Ignore. This allows data to be transmitted using the SPI without the need to read unneeded data from the receiver. Setting this bit simplifies the transmit process and can be used with the DMA."
                format="enum"
                enum="d1e134451"
                id="SPI0@FIFOWR@RXIGNORE"
                offset="[22]"/>
         <field description="Data Length. Specifies the data length from 4 to 16 bits. Note that transfer lengths greater than 16 bits are supported by implementing multiple sequential transmits. 0x0-2 = Reserved. 0x3 = Data transfer is 4 bits in length. 0x4 = Data transfer is 5 bits in length. 0xF = Data transfer is 16 bits in length."
                format="hex0x"
                id="SPI0@FIFOWR@LEN"
                offset="[27:24]"/>
      </register>
      <register description="FIFO read data." format="hex0x" id="SPI0@FIFORD" offset="0xe30"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO." format="hex0x"
                id="SPI0@FIFORD@RXDATA"
                offset="[15:0]"/>
         <field description="Slave Select for receive. This field allows the state of the SSEL0 pin to be saved along with received data. The value will reflect the SSEL0 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG."
                format="hex0x"
                id="SPI0@FIFORD@RXSSEL0-N"
                offset="[16]"/>
         <field description="Slave Select for receive. This field allows the state of the SSEL1 pin to be saved along with received data. The value will reflect the SSEL1 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG."
                format="hex0x"
                id="SPI0@FIFORD@RXSSEL1-N"
                offset="[17]"/>
         <field description="Slave Select for receive. This field allows the state of the SSEL2 pin to be saved along with received data. The value will reflect the SSEL2 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG."
                format="hex0x"
                id="SPI0@FIFORD@RXSSEL2-N"
                offset="[18]"/>
         <field description="Slave Select for receive. This field allows the state of the SSEL3 pin to be saved along with received data. The value will reflect the SSEL3 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG."
                format="hex0x"
                id="SPI0@FIFORD@RXSSEL3-N"
                offset="[19]"/>
         <field description="Start of Transfer flag. This flag will be 1 if this is the first data after the SSELs went from deasserted to asserted (i.e., any previous transfer has ended). This information can be used to identify the first piece of data in cases where the transfer length is greater than 16 bits."
                format="hex0x"
                id="SPI0@FIFORD@SOT"
                offset="[20]"/>
      </register>
      <register description="FIFO data read with no FIFO pop." format="hex0x"
                id="SPI0@FIFORDNOPOP"
                offset="0xe40"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXDATA"
                offset="[15:0]"/>
         <field description="Slave Select for receive." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXSSEL0-N"
                offset="[16]"/>
         <field description="Slave Select for receive." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXSSEL1-N"
                offset="[17]"/>
         <field description="Slave Select for receive." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXSSEL2-N"
                offset="[18]"/>
         <field description="Slave Select for receive." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXSSEL3-N"
                offset="[19]"/>
         <field description="Start of transfer flag." format="hex0x" id="SPI0@FIFORDNOPOP@SOT"
                offset="[20]"/>
      </register>
      <register description="Peripheral identification register." format="hex0x" id="SPI0@ID"
                offset="0xffc"
                readOnly="true"
                size="4">
         <field description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture."
                format="hex0x"
                id="SPI0@ID@APERTURE"
                offset="[7:0]"/>
         <field description="Minor revision of module implementation." format="hex0x"
                id="SPI0@ID@MINOR-REV"
                offset="[11:8]"/>
         <field description="Major revision of module implementation." format="hex0x"
                id="SPI0@ID@MAJOR-REV"
                offset="[15:12]"/>
         <field description="Module identifier for the selected function." format="hex0x"
                id="SPI0@ID@ID"
                offset="[31:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x Serial Peripheral Interfaces (SPI)"
               id="SPI9"
               size="0x1000">
      <register description="SPI Configuration register" format="hex0x" id="SPI0@CFG"
                offset="0x400"
                size="4">
         <field description="SPI enable." format="enum" enum="d1e131889" id="SPI0@CFG@ENABLE"
                offset="[0]"/>
         <field description="Master mode select." format="enum" enum="d1e131935"
                id="SPI0@CFG@MASTER"
                offset="[2]"/>
         <field description="LSB First mode enable." format="enum" enum="d1e131981"
                id="SPI0@CFG@LSBF"
                offset="[3]"/>
         <field description="Clock Phase select." format="enum" enum="d1e132027"
                id="SPI0@CFG@CPHA"
                offset="[4]"/>
         <field description="Clock Polarity select." format="enum" enum="d1e132073"
                id="SPI0@CFG@CPOL"
                offset="[5]"/>
         <field description="Loopback mode enable. Loopback mode applies only to Master mode, and connects transmit and receive data connected together to allow simple software testing."
                format="enum"
                enum="d1e132120"
                id="SPI0@CFG@LOOP"
                offset="[7]"/>
         <field description="SSEL0 Polarity select." format="enum" enum="d1e132166"
                id="SPI0@CFG@SPOL0"
                offset="[8]"/>
         <field description="SSEL1 Polarity select." format="enum" enum="d1e132212"
                id="SPI0@CFG@SPOL1"
                offset="[9]"/>
         <field description="SSEL2 Polarity select." format="enum" enum="d1e132258"
                id="SPI0@CFG@SPOL2"
                offset="[10]"/>
         <field description="SSEL3 Polarity select." format="enum" enum="d1e132304"
                id="SPI0@CFG@SPOL3"
                offset="[11]"/>
      </register>
      <register description="SPI Delay register" format="hex0x" id="SPI0@DLY" offset="0x404"
                size="4">
         <field description="Controls the amount of time between SSEL assertion and the beginning of a data transfer. There is always one SPI clock time between SSEL assertion and the first clock edge. This is not considered part of the pre-delay. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted."
                format="hex0x"
                id="SPI0@DLY@PRE-DELAY"
                offset="[3:0]"/>
         <field description="Controls the amount of time between the end of a data transfer and SSEL deassertion. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted."
                format="hex0x"
                id="SPI0@DLY@POST-DELAY"
                offset="[7:4]"/>
         <field description="If the EOF flag is set, controls the minimum amount of time between the current frame and the next frame (or SSEL deassertion if EOT). 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted."
                format="hex0x"
                id="SPI0@DLY@FRAME-DELAY"
                offset="[11:8]"/>
         <field description="Controls the minimum amount of time that the SSEL is deasserted between transfers. 0x0 = The minimum time that SSEL is deasserted is 1 SPI clock time. (Zero added time.) 0x1 = The minimum time that SSEL is deasserted is 2 SPI clock times. 0x2 = The minimum time that SSEL is deasserted is 3 SPI clock times. 0xF = The minimum time that SSEL is deasserted is 16 SPI clock times."
                format="hex0x"
                id="SPI0@DLY@TRANSFER-DELAY"
                offset="[15:12]"/>
      </register>
      <register description="SPI Status. Some status flags can be cleared by writing a 1 to that bit position."
                format="hex0x"
                id="SPI0@STAT"
                offset="0x408"
                size="4">
         <field description="Slave Select Assert. This flag is set whenever any slave select transitions from deasserted to asserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become busy, and allows waking up the device from reduced power modes when a slave mode access begins. This flag is cleared by software."
                format="hex0x"
                id="SPI0@STAT@SSA"
                offset="[4]"/>
         <field description="Slave Select Deassert. This flag is set whenever any asserted slave selects transition to deasserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become idle. This flag is cleared by software."
                format="hex0x"
                id="SPI0@STAT@SSD"
                offset="[5]"/>
         <field description="Stalled status flag. This indicates whether the SPI is currently in a stall condition."
                format="hex0x"
                id="SPI0@STAT@STALLED"
                offset="[6]"/>
         <field description="End Transfer control bit. Software can set this bit to force an end to the current transfer when the transmitter finishes any activity already in progress, as if the EOT flag had been set prior to the last transmission. This capability is included to support cases where it is not known when transmit data is written that it will be the end of a transfer. The bit is cleared when the transmitter becomes idle as the transfer comes to an end. Forcing an end of transfer in this manner causes any specified FRAME_DELAY and TRANSFER_DELAY to be inserted."
                format="hex0x"
                id="SPI0@STAT@ENDTRANSFER"
                offset="[7]"/>
         <field description="Master idle status flag. This bit is 1 whenever the SPI master function is fully idle. This means that the transmit holding register is empty and the transmitter is not in the process of sending data."
                format="hex0x"
                id="SPI0@STAT@MSTIDLE"
                offset="[8]"/>
      </register>
      <register description="SPI Interrupt Enable read and Set. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set."
                format="hex0x"
                id="SPI0@INTENSET"
                offset="0x40c"
                size="4">
         <field description="Slave select assert interrupt enable. Determines whether an interrupt occurs when the Slave Select is asserted."
                format="enum"
                enum="d1e132596"
                id="SPI0@INTENSET@SSAEN"
                offset="[4]"/>
         <field description="Slave select deassert interrupt enable. Determines whether an interrupt occurs when the Slave Select is deasserted."
                format="enum"
                enum="d1e132642"
                id="SPI0@INTENSET@SSDEN"
                offset="[5]"/>
         <field description="Master idle interrupt enable." format="enum" enum="d1e132688"
                id="SPI0@INTENSET@MSTIDLEEN"
                offset="[8]"/>
      </register>
      <register description="SPI Interrupt Enable Clear. Writing a 1 to any implemented bit position causes the corresponding bit in INTENSET to be cleared."
                format="hex0x"
                id="SPI0@INTENCLR"
                offset="0x410"
                writeOnly="true"
                size="4">
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="SPI0@INTENCLR@SSAEN"
                offset="[4]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="SPI0@INTENCLR@SSDEN"
                offset="[5]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="SPI0@INTENCLR@MSTIDLE"
                offset="[8]"/>
      </register>
      <register description="SPI clock Divider" format="hex0x" id="SPI0@DIV" offset="0x424"
                size="4">
         <field description="Rate divider value. Specifies how the Flexcomm clock (FCLK) is divided to produce the SPI clock rate in master mode. DIVVAL is -1 encoded such that the value 0 results in FCLK/1, the value 1 results in FCLK/2, up to the maximum possible divide value of 0xFFFF, which results in FCLK/65536."
                format="hex0x"
                id="SPI0@DIV@DIVVAL"
                offset="[15:0]"/>
      </register>
      <register description="SPI Interrupt Status" format="hex0x" id="SPI0@INTSTAT"
                offset="0x428"
                readOnly="true"
                size="4">
         <field description="Slave Select Assert." format="hex0x" id="SPI0@INTSTAT@SSA"
                offset="[4]"/>
         <field description="Slave Select Deassert." format="hex0x" id="SPI0@INTSTAT@SSD"
                offset="[5]"/>
         <field description="Master Idle status flag." format="hex0x" id="SPI0@INTSTAT@MSTIDLE"
                offset="[8]"/>
      </register>
      <register description="FIFO configuration and enable register." format="hex0x"
                id="SPI0@FIFOCFG"
                offset="0xe00"
                size="4">
         <field description="Enable the transmit FIFO." format="enum" enum="d1e132973"
                id="SPI0@FIFOCFG@ENABLETX"
                offset="[0]"/>
         <field description="Enable the receive FIFO." format="enum" enum="d1e133019"
                id="SPI0@FIFOCFG@ENABLERX"
                offset="[1]"/>
         <field description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART."
                format="hex0x"
                id="SPI0@FIFOCFG@SIZE"
                offset="[5:4]"/>
         <field description="DMA configuration for transmit." format="enum" enum="d1e133083"
                id="SPI0@FIFOCFG@DMATX"
                offset="[12]"/>
         <field description="DMA configuration for receive." format="enum" enum="d1e133129"
                id="SPI0@FIFOCFG@DMARX"
                offset="[13]"/>
         <field description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e133176"
                id="SPI0@FIFOCFG@WAKETX"
                offset="[14]"/>
         <field description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e133222"
                id="SPI0@FIFOCFG@WAKERX"
                offset="[15]"/>
         <field description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied."
                format="hex0x"
                id="SPI0@FIFOCFG@EMPTYTX"
                offset="[16]"/>
         <field description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied."
                format="hex0x"
                id="SPI0@FIFOCFG@EMPTYRX"
                offset="[17]"/>
         <field description="Pop FIFO for debug reads." format="enum" enum="d1e133304"
                id="SPI0@FIFOCFG@POPDBG"
                offset="[18]"/>
      </register>
      <register description="FIFO status register." format="hex0x" id="SPI0@FIFOSTAT"
                offset="0xe04"
                size="4">
         <field description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="SPI0@FIFOSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="SPI0@FIFOSTAT@RXERR"
                offset="[1]"/>
         <field description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register."
                format="hex0x"
                id="SPI0@FIFOSTAT@PERINT"
                offset="[3]"/>
         <field description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data."
                format="hex0x"
                id="SPI0@FIFOSTAT@TXEMPTY"
                offset="[4]"/>
         <field description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow."
                format="hex0x"
                id="SPI0@FIFOSTAT@TXNOTFULL"
                offset="[5]"/>
         <field description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty."
                format="hex0x"
                id="SPI0@FIFOSTAT@RXNOTEMPTY"
                offset="[6]"/>
         <field description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow."
                format="hex0x"
                id="SPI0@FIFOSTAT@RXFULL"
                offset="[7]"/>
         <field description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0."
                format="hex0x"
                id="SPI0@FIFOSTAT@TXLVL"
                offset="[12:8]"/>
         <field description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1."
                format="hex0x"
                id="SPI0@FIFOSTAT@RXLVL"
                offset="[20:16]"/>
      </register>
      <register description="FIFO trigger settings for interrupt and DMA request."
                format="hex0x"
                id="SPI0@FIFOTRIG"
                offset="0xe08"
                size="4">
         <field description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set."
                format="enum"
                enum="d1e133569"
                id="SPI0@FIFOTRIG@TXLVLENA"
                offset="[0]"/>
         <field description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set."
                format="enum"
                enum="d1e133615"
                id="SPI0@FIFOTRIG@RXLVLENA"
                offset="[1]"/>
         <field description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)."
                format="hex0x"
                id="SPI0@FIFOTRIG@TXLVL"
                offset="[11:8]"/>
         <field description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)."
                format="hex0x"
                id="SPI0@FIFOTRIG@RXLVL"
                offset="[19:16]"/>
      </register>
      <register description="FIFO interrupt enable set (enable) and read register."
                format="hex0x"
                id="SPI0@FIFOINTENSET"
                offset="0xe10"
                size="4">
         <field description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e133725"
                id="SPI0@FIFOINTENSET@TXERR"
                offset="[0]"/>
         <field description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e133771"
                id="SPI0@FIFOINTENSET@RXERR"
                offset="[1]"/>
         <field description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e133817"
                id="SPI0@FIFOINTENSET@TXLVL"
                offset="[2]"/>
         <field description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e133863"
                id="SPI0@FIFOINTENSET@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt enable clear (disable) and read register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR"
                offset="0xe14"
                size="4">
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR@TXERR"
                offset="[0]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR@RXERR"
                offset="[1]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR@TXLVL"
                offset="[2]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="SPI0@FIFOINTENCLR@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt status register." format="hex0x"
                id="SPI0@FIFOINTSTAT"
                offset="0xe18"
                readOnly="true"
                size="4">
         <field description="TX FIFO error." format="hex0x" id="SPI0@FIFOINTSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error." format="hex0x" id="SPI0@FIFOINTSTAT@RXERR"
                offset="[1]"/>
         <field description="Transmit FIFO level interrupt." format="hex0x"
                id="SPI0@FIFOINTSTAT@TXLVL"
                offset="[2]"/>
         <field description="Receive FIFO level interrupt." format="hex0x"
                id="SPI0@FIFOINTSTAT@RXLVL"
                offset="[3]"/>
         <field description="Peripheral interrupt." format="hex0x" id="SPI0@FIFOINTSTAT@PERINT"
                offset="[4]"/>
      </register>
      <register description="FIFO write data." format="hex0x" id="SPI0@FIFOWR" offset="0xe20"
                size="4">
         <field description="Transmit data to the FIFO." format="hex0x" id="SPI0@FIFOWR@TXDATA"
                offset="[15:0]"/>
         <field description="Transmit slave select. This field asserts SSEL0 in master mode. The output on the pin is active LOW by default."
                format="enum"
                enum="d1e134174"
                id="SPI0@FIFOWR@TXSSEL0-N"
                offset="[16]"/>
         <field description="Transmit slave select. This field asserts SSEL1 in master mode. The output on the pin is active LOW by default."
                format="enum"
                enum="d1e134220"
                id="SPI0@FIFOWR@TXSSEL1-N"
                offset="[17]"/>
         <field description="Transmit slave select. This field asserts SSEL2 in master mode. The output on the pin is active LOW by default."
                format="enum"
                enum="d1e134266"
                id="SPI0@FIFOWR@TXSSEL2-N"
                offset="[18]"/>
         <field description="Transmit slave select. This field asserts SSEL3 in master mode. The output on the pin is active LOW by default."
                format="enum"
                enum="d1e134312"
                id="SPI0@FIFOWR@TXSSEL3-N"
                offset="[19]"/>
         <field description="End of transfer. The asserted SSEL will be deasserted at the end of a transfer and remain so far at least the time specified by the Transfer_delay value in the DLY register."
                format="enum"
                enum="d1e134359"
                id="SPI0@FIFOWR@EOT"
                offset="[20]"/>
         <field description="End of frame. Between frames, a delay may be inserted, as defined by the Frame_delay value in the DLY register. The end of a frame may not be particularly meaningful if the Frame_delay value = 0. This control can be used as part of the support for frame lengths greater than 16 bits."
                format="enum"
                enum="d1e134405"
                id="SPI0@FIFOWR@EOF"
                offset="[21]"/>
         <field description="Receive Ignore. This allows data to be transmitted using the SPI without the need to read unneeded data from the receiver. Setting this bit simplifies the transmit process and can be used with the DMA."
                format="enum"
                enum="d1e134451"
                id="SPI0@FIFOWR@RXIGNORE"
                offset="[22]"/>
         <field description="Data Length. Specifies the data length from 4 to 16 bits. Note that transfer lengths greater than 16 bits are supported by implementing multiple sequential transmits. 0x0-2 = Reserved. 0x3 = Data transfer is 4 bits in length. 0x4 = Data transfer is 5 bits in length. 0xF = Data transfer is 16 bits in length."
                format="hex0x"
                id="SPI0@FIFOWR@LEN"
                offset="[27:24]"/>
      </register>
      <register description="FIFO read data." format="hex0x" id="SPI0@FIFORD" offset="0xe30"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO." format="hex0x"
                id="SPI0@FIFORD@RXDATA"
                offset="[15:0]"/>
         <field description="Slave Select for receive. This field allows the state of the SSEL0 pin to be saved along with received data. The value will reflect the SSEL0 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG."
                format="hex0x"
                id="SPI0@FIFORD@RXSSEL0-N"
                offset="[16]"/>
         <field description="Slave Select for receive. This field allows the state of the SSEL1 pin to be saved along with received data. The value will reflect the SSEL1 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG."
                format="hex0x"
                id="SPI0@FIFORD@RXSSEL1-N"
                offset="[17]"/>
         <field description="Slave Select for receive. This field allows the state of the SSEL2 pin to be saved along with received data. The value will reflect the SSEL2 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG."
                format="hex0x"
                id="SPI0@FIFORD@RXSSEL2-N"
                offset="[18]"/>
         <field description="Slave Select for receive. This field allows the state of the SSEL3 pin to be saved along with received data. The value will reflect the SSEL3 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG."
                format="hex0x"
                id="SPI0@FIFORD@RXSSEL3-N"
                offset="[19]"/>
         <field description="Start of Transfer flag. This flag will be 1 if this is the first data after the SSELs went from deasserted to asserted (i.e., any previous transfer has ended). This information can be used to identify the first piece of data in cases where the transfer length is greater than 16 bits."
                format="hex0x"
                id="SPI0@FIFORD@SOT"
                offset="[20]"/>
      </register>
      <register description="FIFO data read with no FIFO pop." format="hex0x"
                id="SPI0@FIFORDNOPOP"
                offset="0xe40"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXDATA"
                offset="[15:0]"/>
         <field description="Slave Select for receive." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXSSEL0-N"
                offset="[16]"/>
         <field description="Slave Select for receive." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXSSEL1-N"
                offset="[17]"/>
         <field description="Slave Select for receive." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXSSEL2-N"
                offset="[18]"/>
         <field description="Slave Select for receive." format="hex0x"
                id="SPI0@FIFORDNOPOP@RXSSEL3-N"
                offset="[19]"/>
         <field description="Start of transfer flag." format="hex0x" id="SPI0@FIFORDNOPOP@SOT"
                offset="[20]"/>
      </register>
      <register description="Peripheral identification register." format="hex0x" id="SPI0@ID"
                offset="0xffc"
                readOnly="true"
                size="4">
         <field description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture."
                format="hex0x"
                id="SPI0@ID@APERTURE"
                offset="[7:0]"/>
         <field description="Minor revision of module implementation." format="hex0x"
                id="SPI0@ID@MINOR-REV"
                offset="[11:8]"/>
         <field description="Major revision of module implementation." format="hex0x"
                id="SPI0@ID@MAJOR-REV"
                offset="[15:12]"/>
         <field description="Module identifier for the selected function." format="hex0x"
                id="SPI0@ID@ID"
                offset="[31:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x USARTs" id="USART0" size="0x1000">
      <register description="USART Configuration register. Basic USART configuration settings that typically are not changed during operation."
                format="hex0x"
                id="USART0@CFG"
                offset="0x0"
                size="4">
         <field description="USART Enable." format="enum" enum="d1e135324"
                id="USART0@CFG@ENABLE"
                offset="[0]"/>
         <field description="Selects the data size for the USART." format="enum"
                enum="d1e135370"
                id="USART0@CFG@DATALEN"
                offset="[3:2]"/>
         <field description="Selects what type of parity is used by the USART." format="enum"
                enum="d1e135428"
                id="USART0@CFG@PARITYSEL"
                offset="[5:4]"/>
         <field description="Number of stop bits appended to transmitted data. Only a single stop bit is required for received data."
                format="enum"
                enum="d1e135486"
                id="USART0@CFG@STOPLEN"
                offset="[6]"/>
         <field description="Selects standard or 32 kHz clocking mode." format="enum"
                enum="d1e135532"
                id="USART0@CFG@MODE32K"
                offset="[7]"/>
         <field description="LIN break mode enable." format="enum" enum="d1e135579"
                id="USART0@CFG@LINMODE"
                offset="[8]"/>
         <field description="CTS Enable. Determines whether CTS is used for flow control. CTS can be from the input pin, or from the USART's own RTS if loopback mode is enabled."
                format="enum"
                enum="d1e135625"
                id="USART0@CFG@CTSEN"
                offset="[9]"/>
         <field description="Selects synchronous or asynchronous operation." format="enum"
                enum="d1e135671"
                id="USART0@CFG@SYNCEN"
                offset="[11]"/>
         <field description="Selects the clock polarity and sampling edge of received data in synchronous mode."
                format="enum"
                enum="d1e135717"
                id="USART0@CFG@CLKPOL"
                offset="[12]"/>
         <field description="Synchronous mode Master select." format="enum" enum="d1e135763"
                id="USART0@CFG@SYNCMST"
                offset="[14]"/>
         <field description="Selects data loopback mode." format="enum" enum="d1e135809"
                id="USART0@CFG@LOOP"
                offset="[15]"/>
         <field description="Output Enable Turnaround time enable for RS-485 operation."
                format="enum"
                enum="d1e135856"
                id="USART0@CFG@OETA"
                offset="[18]"/>
         <field description="Automatic Address matching enable." format="enum" enum="d1e135902"
                id="USART0@CFG@AUTOADDR"
                offset="[19]"/>
         <field description="Output Enable Select." format="enum" enum="d1e135948"
                id="USART0@CFG@OESEL"
                offset="[20]"/>
         <field description="Output Enable Polarity." format="enum" enum="d1e135994"
                id="USART0@CFG@OEPOL"
                offset="[21]"/>
         <field description="Receive data polarity." format="enum" enum="d1e136040"
                id="USART0@CFG@RXPOL"
                offset="[22]"/>
         <field description="Transmit data polarity." format="enum" enum="d1e136086"
                id="USART0@CFG@TXPOL"
                offset="[23]"/>
      </register>
      <register description="USART Control register. USART control settings that are more likely to change during operation."
                format="hex0x"
                id="USART0@CTL"
                offset="0x4"
                size="4">
         <field description="Break Enable." format="enum" enum="d1e136160"
                id="USART0@CTL@TXBRKEN"
                offset="[1]"/>
         <field description="Enable address detect mode." format="enum" enum="d1e136206"
                id="USART0@CTL@ADDRDET"
                offset="[2]"/>
         <field description="Transmit Disable." format="enum" enum="d1e136252"
                id="USART0@CTL@TXDIS"
                offset="[6]"/>
         <field description="Continuous Clock generation. By default, SCLK is only output while data is being transmitted in synchronous mode."
                format="enum"
                enum="d1e136298"
                id="USART0@CTL@CC"
                offset="[8]"/>
         <field description="Clear Continuous Clock." format="enum" enum="d1e136344"
                id="USART0@CTL@CLRCCONRX"
                offset="[9]"/>
         <field description="Autobaud enable." format="enum" enum="d1e136391"
                id="USART0@CTL@AUTOBAUD"
                offset="[16]"/>
      </register>
      <register description="USART Status register. The complete status value can be read here. Writing ones clears some bits in the register. Some bits can be cleared by writing a 1 to them."
                format="hex0x"
                id="USART0@STAT"
                offset="0x8"
                size="4">
         <field description="Receiver Idle. When 0, indicates that the receiver is currently in the process of receiving data. When 1, indicates that the receiver is not currently in the process of receiving data."
                format="hex0x"
                id="USART0@STAT@RXIDLE"
                offset="[1]"/>
         <field description="Transmitter Idle. When 0, indicates that the transmitter is currently in the process of sending data.When 1, indicate that the transmitter is not currently in the process of sending data."
                format="hex0x"
                id="USART0@STAT@TXIDLE"
                offset="[3]"/>
         <field description="This bit reflects the current state of the CTS signal, regardless of the setting of the CTSEN bit in the CFG register. This will be the value of the CTS input pin unless loopback mode is enabled."
                format="hex0x"
                id="USART0@STAT@CTS"
                offset="[4]"/>
         <field description="This bit is set when a change in the state is detected for the CTS flag above. This bit is cleared by software."
                format="hex0x"
                id="USART0@STAT@DELTACTS"
                offset="[5]"/>
         <field description="Transmitter Disabled Status flag. When 1, this bit indicates that the USART transmitter is fully idle after being disabled via the TXDIS bit in the CFG register (TXDIS = 1)."
                format="hex0x"
                id="USART0@STAT@TXDISSTAT"
                offset="[6]"/>
         <field description="Received Break. This bit reflects the current state of the receiver break detection logic. It is set when the Un_RXD pin remains low for 16 bit times. Note that FRAMERRINT will also be set when this condition occurs because the stop bit(s) for the character would be missing. RXBRK is cleared when the Un_RXD pin goes high."
                format="hex0x"
                id="USART0@STAT@RXBRK"
                offset="[10]"/>
         <field description="This bit is set when a change in the state of receiver break detection occurs. Cleared by software."
                format="hex0x"
                id="USART0@STAT@DELTARXBRK"
                offset="[11]"/>
         <field description="This bit is set when a start is detected on the receiver input. Its purpose is primarily to allow wake-up from Deep-sleep or Power-down mode immediately when a start is detected. Cleared by software."
                format="hex0x"
                id="USART0@STAT@START"
                offset="[12]"/>
         <field description="Framing Error interrupt flag. This flag is set when a character is received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source."
                format="hex0x"
                id="USART0@STAT@FRAMERRINT"
                offset="[13]"/>
         <field description="Parity Error interrupt flag. This flag is set when a parity error is detected in a received character."
                format="hex0x"
                id="USART0@STAT@PARITYERRINT"
                offset="[14]"/>
         <field description="Received Noise interrupt flag. Three samples of received data are taken in order to determine the value of each received data bit, except in synchronous mode. This acts as a noise filter if one sample disagrees. This flag is set when a received data bit contains one disagreeing sample. This could indicate line noise, a baud rate or character format mismatch, or loss of synchronization during data reception."
                format="hex0x"
                id="USART0@STAT@RXNOISEINT"
                offset="[15]"/>
         <field description="Auto baud Error. An auto baud error can occur if the BRG counts to its limit before the end of the start bit that is being measured, essentially an auto baud time-out."
                format="hex0x"
                id="USART0@STAT@ABERR"
                offset="[16]"/>
      </register>
      <register description="Interrupt Enable read and Set register for USART (not FIFO) status. Contains individual interrupt enable bits for each potential USART interrupt. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set."
                format="hex0x"
                id="USART0@INTENSET"
                offset="0xc"
                size="4">
         <field description="When 1, enables an interrupt when the transmitter becomes idle (TXIDLE = 1)."
                format="hex0x"
                id="USART0@INTENSET@TXIDLEEN"
                offset="[3]"/>
         <field description="When 1, enables an interrupt when there is a change in the state of the CTS input."
                format="hex0x"
                id="USART0@INTENSET@DELTACTSEN"
                offset="[5]"/>
         <field description="When 1, enables an interrupt when the transmitter is fully disabled as indicated by the TXDISINT flag in STAT. See description of the TXDISINT bit for details."
                format="hex0x"
                id="USART0@INTENSET@TXDISEN"
                offset="[6]"/>
         <field description="When 1, enables an interrupt when a change of state has occurred in the detection of a received break condition (break condition asserted or deasserted)."
                format="hex0x"
                id="USART0@INTENSET@DELTARXBRKEN"
                offset="[11]"/>
         <field description="When 1, enables an interrupt when a received start bit has been detected."
                format="hex0x"
                id="USART0@INTENSET@STARTEN"
                offset="[12]"/>
         <field description="When 1, enables an interrupt when a framing error has been detected."
                format="hex0x"
                id="USART0@INTENSET@FRAMERREN"
                offset="[13]"/>
         <field description="When 1, enables an interrupt when a parity error has been detected."
                format="hex0x"
                id="USART0@INTENSET@PARITYERREN"
                offset="[14]"/>
         <field description="When 1, enables an interrupt when noise is detected. See description of the RXNOISEINT bit in Table 354."
                format="hex0x"
                id="USART0@INTENSET@RXNOISEEN"
                offset="[15]"/>
         <field description="When 1, enables an interrupt when an auto baud error occurs."
                format="hex0x"
                id="USART0@INTENSET@ABERREN"
                offset="[16]"/>
      </register>
      <register description="Interrupt Enable Clear register. Allows clearing any combination of bits in the INTENSET register. Writing a 1 to any implemented bit position causes the corresponding bit to be cleared."
                format="hex0x"
                id="USART0@INTENCLR"
                offset="0x10"
                writeOnly="true"
                size="4">
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@TXIDLECLR"
                offset="[3]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@DELTACTSCLR"
                offset="[5]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@TXDISCLR"
                offset="[6]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@DELTARXBRKCLR"
                offset="[11]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@STARTCLR"
                offset="[12]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@FRAMERRCLR"
                offset="[13]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@PARITYERRCLR"
                offset="[14]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@RXNOISECLR"
                offset="[15]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@ABERRCLR"
                offset="[16]"/>
      </register>
      <register description="Baud Rate Generator register. 16-bit integer baud rate divisor value."
                format="hex0x"
                id="USART0@BRG"
                offset="0x20"
                size="4">
         <field description="This value is used to divide the USART input clock to determine the baud rate, based on the input clock from the FRG. 0 = FCLK is used directly by the USART function. 1 = FCLK is divided by 2 before use by the USART function. 2 = FCLK is divided by 3 before use by the USART function. 0xFFFF = FCLK is divided by 65,536 before use by the USART function."
                format="hex0x"
                id="USART0@BRG@BRGVAL"
                offset="[15:0]"/>
      </register>
      <register description="Interrupt status register. Reflects interrupts that are currently enabled."
                format="hex0x"
                id="USART0@INTSTAT"
                offset="0x24"
                readOnly="true"
                size="4">
         <field description="Transmitter Idle status." format="hex0x"
                id="USART0@INTSTAT@TXIDLE"
                offset="[3]"/>
         <field description="This bit is set when a change in the state of the CTS input is detected."
                format="hex0x"
                id="USART0@INTSTAT@DELTACTS"
                offset="[5]"/>
         <field description="Transmitter Disabled Interrupt flag." format="hex0x"
                id="USART0@INTSTAT@TXDISINT"
                offset="[6]"/>
         <field description="This bit is set when a change in the state of receiver break detection occurs."
                format="hex0x"
                id="USART0@INTSTAT@DELTARXBRK"
                offset="[11]"/>
         <field description="This bit is set when a start is detected on the receiver input."
                format="hex0x"
                id="USART0@INTSTAT@START"
                offset="[12]"/>
         <field description="Framing Error interrupt flag." format="hex0x"
                id="USART0@INTSTAT@FRAMERRINT"
                offset="[13]"/>
         <field description="Parity Error interrupt flag." format="hex0x"
                id="USART0@INTSTAT@PARITYERRINT"
                offset="[14]"/>
         <field description="Received Noise interrupt flag." format="hex0x"
                id="USART0@INTSTAT@RXNOISEINT"
                offset="[15]"/>
         <field description="Auto baud Error Interrupt flag." format="hex0x"
                id="USART0@INTSTAT@ABERRINT"
                offset="[16]"/>
      </register>
      <register description="Oversample selection register for asynchronous communication."
                format="hex0x"
                id="USART0@OSR"
                offset="0x28"
                size="4">
         <field description="Oversample Selection Value. 0 to 3 = not supported 0x4 = 5 function clocks are used to transmit and receive each data bit. 0x5 = 6 function clocks are used to transmit and receive each data bit. 0xF= 16 function clocks are used to transmit and receive each data bit."
                format="hex0x"
                id="USART0@OSR@OSRVAL"
                offset="[3:0]"/>
      </register>
      <register description="Address register for automatic address matching." format="hex0x"
                id="USART0@ADDR"
                offset="0x2c"
                size="4">
         <field description="8-bit address used with automatic address matching. Used when address detection is enabled (ADDRDET in CTL = 1) and automatic address matching is enabled (AUTOADDR in CFG = 1)."
                format="hex0x"
                id="USART0@ADDR@ADDRESS"
                offset="[7:0]"/>
      </register>
      <register description="FIFO configuration and enable register." format="hex0x"
                id="USART0@FIFOCFG"
                offset="0xe00"
                size="4">
         <field description="Enable the transmit FIFO." format="enum" enum="d1e137423"
                id="USART0@FIFOCFG@ENABLETX"
                offset="[0]"/>
         <field description="Enable the receive FIFO." format="enum" enum="d1e137469"
                id="USART0@FIFOCFG@ENABLERX"
                offset="[1]"/>
         <field description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART."
                format="hex0x"
                id="USART0@FIFOCFG@SIZE"
                offset="[5:4]"/>
         <field description="DMA configuration for transmit." format="enum" enum="d1e137533"
                id="USART0@FIFOCFG@DMATX"
                offset="[12]"/>
         <field description="DMA configuration for receive." format="enum" enum="d1e137579"
                id="USART0@FIFOCFG@DMARX"
                offset="[13]"/>
         <field description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e137626"
                id="USART0@FIFOCFG@WAKETX"
                offset="[14]"/>
         <field description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e137672"
                id="USART0@FIFOCFG@WAKERX"
                offset="[15]"/>
         <field description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied."
                format="hex0x"
                id="USART0@FIFOCFG@EMPTYTX"
                offset="[16]"/>
         <field description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied."
                format="hex0x"
                id="USART0@FIFOCFG@EMPTYRX"
                offset="[17]"/>
         <field description="Pop FIFO for debug reads." format="enum" enum="d1e137754"
                id="USART0@FIFOCFG@POPDBG"
                offset="[18]"/>
      </register>
      <register description="FIFO status register." format="hex0x" id="USART0@FIFOSTAT"
                offset="0xe04"
                size="4">
         <field description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="USART0@FIFOSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="USART0@FIFOSTAT@RXERR"
                offset="[1]"/>
         <field description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register."
                format="hex0x"
                id="USART0@FIFOSTAT@PERINT"
                offset="[3]"/>
         <field description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data."
                format="hex0x"
                id="USART0@FIFOSTAT@TXEMPTY"
                offset="[4]"/>
         <field description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow."
                format="hex0x"
                id="USART0@FIFOSTAT@TXNOTFULL"
                offset="[5]"/>
         <field description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty."
                format="hex0x"
                id="USART0@FIFOSTAT@RXNOTEMPTY"
                offset="[6]"/>
         <field description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow."
                format="hex0x"
                id="USART0@FIFOSTAT@RXFULL"
                offset="[7]"/>
         <field description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0."
                format="hex0x"
                id="USART0@FIFOSTAT@TXLVL"
                offset="[12:8]"/>
         <field description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1."
                format="hex0x"
                id="USART0@FIFOSTAT@RXLVL"
                offset="[20:16]"/>
      </register>
      <register description="FIFO trigger settings for interrupt and DMA request."
                format="hex0x"
                id="USART0@FIFOTRIG"
                offset="0xe08"
                size="4">
         <field description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set."
                format="enum"
                enum="d1e138020"
                id="USART0@FIFOTRIG@TXLVLENA"
                offset="[0]"/>
         <field description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set."
                format="enum"
                enum="d1e138066"
                id="USART0@FIFOTRIG@RXLVLENA"
                offset="[1]"/>
         <field description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)."
                format="hex0x"
                id="USART0@FIFOTRIG@TXLVL"
                offset="[11:8]"/>
         <field description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)."
                format="hex0x"
                id="USART0@FIFOTRIG@RXLVL"
                offset="[19:16]"/>
      </register>
      <register description="FIFO interrupt enable set (enable) and read register."
                format="hex0x"
                id="USART0@FIFOINTENSET"
                offset="0xe10"
                size="4">
         <field description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e138176"
                id="USART0@FIFOINTENSET@TXERR"
                offset="[0]"/>
         <field description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e138222"
                id="USART0@FIFOINTENSET@RXERR"
                offset="[1]"/>
         <field description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e138268"
                id="USART0@FIFOINTENSET@TXLVL"
                offset="[2]"/>
         <field description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e138314"
                id="USART0@FIFOINTENSET@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt enable clear (disable) and read register."
                format="hex0x"
                id="USART0@FIFOINTENCLR"
                offset="0xe14"
                size="4">
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="USART0@FIFOINTENCLR@TXERR"
                offset="[0]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="USART0@FIFOINTENCLR@RXERR"
                offset="[1]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="USART0@FIFOINTENCLR@TXLVL"
                offset="[2]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="USART0@FIFOINTENCLR@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt status register." format="hex0x"
                id="USART0@FIFOINTSTAT"
                offset="0xe18"
                readOnly="true"
                size="4">
         <field description="TX FIFO error." format="hex0x" id="USART0@FIFOINTSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error." format="hex0x" id="USART0@FIFOINTSTAT@RXERR"
                offset="[1]"/>
         <field description="Transmit FIFO level interrupt." format="hex0x"
                id="USART0@FIFOINTSTAT@TXLVL"
                offset="[2]"/>
         <field description="Receive FIFO level interrupt." format="hex0x"
                id="USART0@FIFOINTSTAT@RXLVL"
                offset="[3]"/>
         <field description="Peripheral interrupt." format="hex0x"
                id="USART0@FIFOINTSTAT@PERINT"
                offset="[4]"/>
      </register>
      <register description="FIFO write data." format="hex0x" id="USART0@FIFOWR" offset="0xe20"
                size="4">
         <field description="Transmit data to the FIFO." format="hex0x"
                id="USART0@FIFOWR@TXDATA"
                offset="[8:0]"/>
      </register>
      <register description="FIFO read data." format="hex0x" id="USART0@FIFORD" offset="0xe30"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings."
                format="hex0x"
                id="USART0@FIFORD@RXDATA"
                offset="[8:0]"/>
         <field description="Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source."
                format="hex0x"
                id="USART0@FIFORD@FRAMERR"
                offset="[13]"/>
         <field description="Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character."
                format="hex0x"
                id="USART0@FIFORD@PARITYERR"
                offset="[14]"/>
         <field description="Received Noise flag. See description of the RxNoiseInt bit in Table 354."
                format="hex0x"
                id="USART0@FIFORD@RXNOISE"
                offset="[15]"/>
      </register>
      <register description="FIFO data read with no FIFO pop." format="hex0x"
                id="USART0@FIFORDNOPOP"
                offset="0xe40"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings."
                format="hex0x"
                id="USART0@FIFORDNOPOP@RXDATA"
                offset="[8:0]"/>
         <field description="Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source."
                format="hex0x"
                id="USART0@FIFORDNOPOP@FRAMERR"
                offset="[13]"/>
         <field description="Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character."
                format="hex0x"
                id="USART0@FIFORDNOPOP@PARITYERR"
                offset="[14]"/>
         <field description="Received Noise flag. See description of the RxNoiseInt bit in Table 354."
                format="hex0x"
                id="USART0@FIFORDNOPOP@RXNOISE"
                offset="[15]"/>
      </register>
      <register description="Peripheral identification register." format="hex0x" id="USART0@ID"
                offset="0xffc"
                readOnly="true"
                size="4">
         <field description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture."
                format="hex0x"
                id="USART0@ID@APERTURE"
                offset="[7:0]"/>
         <field description="Minor revision of module implementation." format="hex0x"
                id="USART0@ID@MINOR-REV"
                offset="[11:8]"/>
         <field description="Major revision of module implementation." format="hex0x"
                id="USART0@ID@MAJOR-REV"
                offset="[15:12]"/>
         <field description="Module identifier for the selected function." format="hex0x"
                id="USART0@ID@ID"
                offset="[31:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x USARTs" id="USART1" size="0x1000">
      <register description="USART Configuration register. Basic USART configuration settings that typically are not changed during operation."
                format="hex0x"
                id="USART0@CFG"
                offset="0x0"
                size="4">
         <field description="USART Enable." format="enum" enum="d1e135324"
                id="USART0@CFG@ENABLE"
                offset="[0]"/>
         <field description="Selects the data size for the USART." format="enum"
                enum="d1e135370"
                id="USART0@CFG@DATALEN"
                offset="[3:2]"/>
         <field description="Selects what type of parity is used by the USART." format="enum"
                enum="d1e135428"
                id="USART0@CFG@PARITYSEL"
                offset="[5:4]"/>
         <field description="Number of stop bits appended to transmitted data. Only a single stop bit is required for received data."
                format="enum"
                enum="d1e135486"
                id="USART0@CFG@STOPLEN"
                offset="[6]"/>
         <field description="Selects standard or 32 kHz clocking mode." format="enum"
                enum="d1e135532"
                id="USART0@CFG@MODE32K"
                offset="[7]"/>
         <field description="LIN break mode enable." format="enum" enum="d1e135579"
                id="USART0@CFG@LINMODE"
                offset="[8]"/>
         <field description="CTS Enable. Determines whether CTS is used for flow control. CTS can be from the input pin, or from the USART's own RTS if loopback mode is enabled."
                format="enum"
                enum="d1e135625"
                id="USART0@CFG@CTSEN"
                offset="[9]"/>
         <field description="Selects synchronous or asynchronous operation." format="enum"
                enum="d1e135671"
                id="USART0@CFG@SYNCEN"
                offset="[11]"/>
         <field description="Selects the clock polarity and sampling edge of received data in synchronous mode."
                format="enum"
                enum="d1e135717"
                id="USART0@CFG@CLKPOL"
                offset="[12]"/>
         <field description="Synchronous mode Master select." format="enum" enum="d1e135763"
                id="USART0@CFG@SYNCMST"
                offset="[14]"/>
         <field description="Selects data loopback mode." format="enum" enum="d1e135809"
                id="USART0@CFG@LOOP"
                offset="[15]"/>
         <field description="Output Enable Turnaround time enable for RS-485 operation."
                format="enum"
                enum="d1e135856"
                id="USART0@CFG@OETA"
                offset="[18]"/>
         <field description="Automatic Address matching enable." format="enum" enum="d1e135902"
                id="USART0@CFG@AUTOADDR"
                offset="[19]"/>
         <field description="Output Enable Select." format="enum" enum="d1e135948"
                id="USART0@CFG@OESEL"
                offset="[20]"/>
         <field description="Output Enable Polarity." format="enum" enum="d1e135994"
                id="USART0@CFG@OEPOL"
                offset="[21]"/>
         <field description="Receive data polarity." format="enum" enum="d1e136040"
                id="USART0@CFG@RXPOL"
                offset="[22]"/>
         <field description="Transmit data polarity." format="enum" enum="d1e136086"
                id="USART0@CFG@TXPOL"
                offset="[23]"/>
      </register>
      <register description="USART Control register. USART control settings that are more likely to change during operation."
                format="hex0x"
                id="USART0@CTL"
                offset="0x4"
                size="4">
         <field description="Break Enable." format="enum" enum="d1e136160"
                id="USART0@CTL@TXBRKEN"
                offset="[1]"/>
         <field description="Enable address detect mode." format="enum" enum="d1e136206"
                id="USART0@CTL@ADDRDET"
                offset="[2]"/>
         <field description="Transmit Disable." format="enum" enum="d1e136252"
                id="USART0@CTL@TXDIS"
                offset="[6]"/>
         <field description="Continuous Clock generation. By default, SCLK is only output while data is being transmitted in synchronous mode."
                format="enum"
                enum="d1e136298"
                id="USART0@CTL@CC"
                offset="[8]"/>
         <field description="Clear Continuous Clock." format="enum" enum="d1e136344"
                id="USART0@CTL@CLRCCONRX"
                offset="[9]"/>
         <field description="Autobaud enable." format="enum" enum="d1e136391"
                id="USART0@CTL@AUTOBAUD"
                offset="[16]"/>
      </register>
      <register description="USART Status register. The complete status value can be read here. Writing ones clears some bits in the register. Some bits can be cleared by writing a 1 to them."
                format="hex0x"
                id="USART0@STAT"
                offset="0x8"
                size="4">
         <field description="Receiver Idle. When 0, indicates that the receiver is currently in the process of receiving data. When 1, indicates that the receiver is not currently in the process of receiving data."
                format="hex0x"
                id="USART0@STAT@RXIDLE"
                offset="[1]"/>
         <field description="Transmitter Idle. When 0, indicates that the transmitter is currently in the process of sending data.When 1, indicate that the transmitter is not currently in the process of sending data."
                format="hex0x"
                id="USART0@STAT@TXIDLE"
                offset="[3]"/>
         <field description="This bit reflects the current state of the CTS signal, regardless of the setting of the CTSEN bit in the CFG register. This will be the value of the CTS input pin unless loopback mode is enabled."
                format="hex0x"
                id="USART0@STAT@CTS"
                offset="[4]"/>
         <field description="This bit is set when a change in the state is detected for the CTS flag above. This bit is cleared by software."
                format="hex0x"
                id="USART0@STAT@DELTACTS"
                offset="[5]"/>
         <field description="Transmitter Disabled Status flag. When 1, this bit indicates that the USART transmitter is fully idle after being disabled via the TXDIS bit in the CFG register (TXDIS = 1)."
                format="hex0x"
                id="USART0@STAT@TXDISSTAT"
                offset="[6]"/>
         <field description="Received Break. This bit reflects the current state of the receiver break detection logic. It is set when the Un_RXD pin remains low for 16 bit times. Note that FRAMERRINT will also be set when this condition occurs because the stop bit(s) for the character would be missing. RXBRK is cleared when the Un_RXD pin goes high."
                format="hex0x"
                id="USART0@STAT@RXBRK"
                offset="[10]"/>
         <field description="This bit is set when a change in the state of receiver break detection occurs. Cleared by software."
                format="hex0x"
                id="USART0@STAT@DELTARXBRK"
                offset="[11]"/>
         <field description="This bit is set when a start is detected on the receiver input. Its purpose is primarily to allow wake-up from Deep-sleep or Power-down mode immediately when a start is detected. Cleared by software."
                format="hex0x"
                id="USART0@STAT@START"
                offset="[12]"/>
         <field description="Framing Error interrupt flag. This flag is set when a character is received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source."
                format="hex0x"
                id="USART0@STAT@FRAMERRINT"
                offset="[13]"/>
         <field description="Parity Error interrupt flag. This flag is set when a parity error is detected in a received character."
                format="hex0x"
                id="USART0@STAT@PARITYERRINT"
                offset="[14]"/>
         <field description="Received Noise interrupt flag. Three samples of received data are taken in order to determine the value of each received data bit, except in synchronous mode. This acts as a noise filter if one sample disagrees. This flag is set when a received data bit contains one disagreeing sample. This could indicate line noise, a baud rate or character format mismatch, or loss of synchronization during data reception."
                format="hex0x"
                id="USART0@STAT@RXNOISEINT"
                offset="[15]"/>
         <field description="Auto baud Error. An auto baud error can occur if the BRG counts to its limit before the end of the start bit that is being measured, essentially an auto baud time-out."
                format="hex0x"
                id="USART0@STAT@ABERR"
                offset="[16]"/>
      </register>
      <register description="Interrupt Enable read and Set register for USART (not FIFO) status. Contains individual interrupt enable bits for each potential USART interrupt. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set."
                format="hex0x"
                id="USART0@INTENSET"
                offset="0xc"
                size="4">
         <field description="When 1, enables an interrupt when the transmitter becomes idle (TXIDLE = 1)."
                format="hex0x"
                id="USART0@INTENSET@TXIDLEEN"
                offset="[3]"/>
         <field description="When 1, enables an interrupt when there is a change in the state of the CTS input."
                format="hex0x"
                id="USART0@INTENSET@DELTACTSEN"
                offset="[5]"/>
         <field description="When 1, enables an interrupt when the transmitter is fully disabled as indicated by the TXDISINT flag in STAT. See description of the TXDISINT bit for details."
                format="hex0x"
                id="USART0@INTENSET@TXDISEN"
                offset="[6]"/>
         <field description="When 1, enables an interrupt when a change of state has occurred in the detection of a received break condition (break condition asserted or deasserted)."
                format="hex0x"
                id="USART0@INTENSET@DELTARXBRKEN"
                offset="[11]"/>
         <field description="When 1, enables an interrupt when a received start bit has been detected."
                format="hex0x"
                id="USART0@INTENSET@STARTEN"
                offset="[12]"/>
         <field description="When 1, enables an interrupt when a framing error has been detected."
                format="hex0x"
                id="USART0@INTENSET@FRAMERREN"
                offset="[13]"/>
         <field description="When 1, enables an interrupt when a parity error has been detected."
                format="hex0x"
                id="USART0@INTENSET@PARITYERREN"
                offset="[14]"/>
         <field description="When 1, enables an interrupt when noise is detected. See description of the RXNOISEINT bit in Table 354."
                format="hex0x"
                id="USART0@INTENSET@RXNOISEEN"
                offset="[15]"/>
         <field description="When 1, enables an interrupt when an auto baud error occurs."
                format="hex0x"
                id="USART0@INTENSET@ABERREN"
                offset="[16]"/>
      </register>
      <register description="Interrupt Enable Clear register. Allows clearing any combination of bits in the INTENSET register. Writing a 1 to any implemented bit position causes the corresponding bit to be cleared."
                format="hex0x"
                id="USART0@INTENCLR"
                offset="0x10"
                writeOnly="true"
                size="4">
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@TXIDLECLR"
                offset="[3]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@DELTACTSCLR"
                offset="[5]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@TXDISCLR"
                offset="[6]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@DELTARXBRKCLR"
                offset="[11]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@STARTCLR"
                offset="[12]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@FRAMERRCLR"
                offset="[13]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@PARITYERRCLR"
                offset="[14]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@RXNOISECLR"
                offset="[15]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@ABERRCLR"
                offset="[16]"/>
      </register>
      <register description="Baud Rate Generator register. 16-bit integer baud rate divisor value."
                format="hex0x"
                id="USART0@BRG"
                offset="0x20"
                size="4">
         <field description="This value is used to divide the USART input clock to determine the baud rate, based on the input clock from the FRG. 0 = FCLK is used directly by the USART function. 1 = FCLK is divided by 2 before use by the USART function. 2 = FCLK is divided by 3 before use by the USART function. 0xFFFF = FCLK is divided by 65,536 before use by the USART function."
                format="hex0x"
                id="USART0@BRG@BRGVAL"
                offset="[15:0]"/>
      </register>
      <register description="Interrupt status register. Reflects interrupts that are currently enabled."
                format="hex0x"
                id="USART0@INTSTAT"
                offset="0x24"
                readOnly="true"
                size="4">
         <field description="Transmitter Idle status." format="hex0x"
                id="USART0@INTSTAT@TXIDLE"
                offset="[3]"/>
         <field description="This bit is set when a change in the state of the CTS input is detected."
                format="hex0x"
                id="USART0@INTSTAT@DELTACTS"
                offset="[5]"/>
         <field description="Transmitter Disabled Interrupt flag." format="hex0x"
                id="USART0@INTSTAT@TXDISINT"
                offset="[6]"/>
         <field description="This bit is set when a change in the state of receiver break detection occurs."
                format="hex0x"
                id="USART0@INTSTAT@DELTARXBRK"
                offset="[11]"/>
         <field description="This bit is set when a start is detected on the receiver input."
                format="hex0x"
                id="USART0@INTSTAT@START"
                offset="[12]"/>
         <field description="Framing Error interrupt flag." format="hex0x"
                id="USART0@INTSTAT@FRAMERRINT"
                offset="[13]"/>
         <field description="Parity Error interrupt flag." format="hex0x"
                id="USART0@INTSTAT@PARITYERRINT"
                offset="[14]"/>
         <field description="Received Noise interrupt flag." format="hex0x"
                id="USART0@INTSTAT@RXNOISEINT"
                offset="[15]"/>
         <field description="Auto baud Error Interrupt flag." format="hex0x"
                id="USART0@INTSTAT@ABERRINT"
                offset="[16]"/>
      </register>
      <register description="Oversample selection register for asynchronous communication."
                format="hex0x"
                id="USART0@OSR"
                offset="0x28"
                size="4">
         <field description="Oversample Selection Value. 0 to 3 = not supported 0x4 = 5 function clocks are used to transmit and receive each data bit. 0x5 = 6 function clocks are used to transmit and receive each data bit. 0xF= 16 function clocks are used to transmit and receive each data bit."
                format="hex0x"
                id="USART0@OSR@OSRVAL"
                offset="[3:0]"/>
      </register>
      <register description="Address register for automatic address matching." format="hex0x"
                id="USART0@ADDR"
                offset="0x2c"
                size="4">
         <field description="8-bit address used with automatic address matching. Used when address detection is enabled (ADDRDET in CTL = 1) and automatic address matching is enabled (AUTOADDR in CFG = 1)."
                format="hex0x"
                id="USART0@ADDR@ADDRESS"
                offset="[7:0]"/>
      </register>
      <register description="FIFO configuration and enable register." format="hex0x"
                id="USART0@FIFOCFG"
                offset="0xe00"
                size="4">
         <field description="Enable the transmit FIFO." format="enum" enum="d1e137423"
                id="USART0@FIFOCFG@ENABLETX"
                offset="[0]"/>
         <field description="Enable the receive FIFO." format="enum" enum="d1e137469"
                id="USART0@FIFOCFG@ENABLERX"
                offset="[1]"/>
         <field description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART."
                format="hex0x"
                id="USART0@FIFOCFG@SIZE"
                offset="[5:4]"/>
         <field description="DMA configuration for transmit." format="enum" enum="d1e137533"
                id="USART0@FIFOCFG@DMATX"
                offset="[12]"/>
         <field description="DMA configuration for receive." format="enum" enum="d1e137579"
                id="USART0@FIFOCFG@DMARX"
                offset="[13]"/>
         <field description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e137626"
                id="USART0@FIFOCFG@WAKETX"
                offset="[14]"/>
         <field description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e137672"
                id="USART0@FIFOCFG@WAKERX"
                offset="[15]"/>
         <field description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied."
                format="hex0x"
                id="USART0@FIFOCFG@EMPTYTX"
                offset="[16]"/>
         <field description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied."
                format="hex0x"
                id="USART0@FIFOCFG@EMPTYRX"
                offset="[17]"/>
         <field description="Pop FIFO for debug reads." format="enum" enum="d1e137754"
                id="USART0@FIFOCFG@POPDBG"
                offset="[18]"/>
      </register>
      <register description="FIFO status register." format="hex0x" id="USART0@FIFOSTAT"
                offset="0xe04"
                size="4">
         <field description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="USART0@FIFOSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="USART0@FIFOSTAT@RXERR"
                offset="[1]"/>
         <field description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register."
                format="hex0x"
                id="USART0@FIFOSTAT@PERINT"
                offset="[3]"/>
         <field description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data."
                format="hex0x"
                id="USART0@FIFOSTAT@TXEMPTY"
                offset="[4]"/>
         <field description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow."
                format="hex0x"
                id="USART0@FIFOSTAT@TXNOTFULL"
                offset="[5]"/>
         <field description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty."
                format="hex0x"
                id="USART0@FIFOSTAT@RXNOTEMPTY"
                offset="[6]"/>
         <field description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow."
                format="hex0x"
                id="USART0@FIFOSTAT@RXFULL"
                offset="[7]"/>
         <field description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0."
                format="hex0x"
                id="USART0@FIFOSTAT@TXLVL"
                offset="[12:8]"/>
         <field description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1."
                format="hex0x"
                id="USART0@FIFOSTAT@RXLVL"
                offset="[20:16]"/>
      </register>
      <register description="FIFO trigger settings for interrupt and DMA request."
                format="hex0x"
                id="USART0@FIFOTRIG"
                offset="0xe08"
                size="4">
         <field description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set."
                format="enum"
                enum="d1e138020"
                id="USART0@FIFOTRIG@TXLVLENA"
                offset="[0]"/>
         <field description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set."
                format="enum"
                enum="d1e138066"
                id="USART0@FIFOTRIG@RXLVLENA"
                offset="[1]"/>
         <field description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)."
                format="hex0x"
                id="USART0@FIFOTRIG@TXLVL"
                offset="[11:8]"/>
         <field description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)."
                format="hex0x"
                id="USART0@FIFOTRIG@RXLVL"
                offset="[19:16]"/>
      </register>
      <register description="FIFO interrupt enable set (enable) and read register."
                format="hex0x"
                id="USART0@FIFOINTENSET"
                offset="0xe10"
                size="4">
         <field description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e138176"
                id="USART0@FIFOINTENSET@TXERR"
                offset="[0]"/>
         <field description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e138222"
                id="USART0@FIFOINTENSET@RXERR"
                offset="[1]"/>
         <field description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e138268"
                id="USART0@FIFOINTENSET@TXLVL"
                offset="[2]"/>
         <field description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e138314"
                id="USART0@FIFOINTENSET@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt enable clear (disable) and read register."
                format="hex0x"
                id="USART0@FIFOINTENCLR"
                offset="0xe14"
                size="4">
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="USART0@FIFOINTENCLR@TXERR"
                offset="[0]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="USART0@FIFOINTENCLR@RXERR"
                offset="[1]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="USART0@FIFOINTENCLR@TXLVL"
                offset="[2]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="USART0@FIFOINTENCLR@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt status register." format="hex0x"
                id="USART0@FIFOINTSTAT"
                offset="0xe18"
                readOnly="true"
                size="4">
         <field description="TX FIFO error." format="hex0x" id="USART0@FIFOINTSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error." format="hex0x" id="USART0@FIFOINTSTAT@RXERR"
                offset="[1]"/>
         <field description="Transmit FIFO level interrupt." format="hex0x"
                id="USART0@FIFOINTSTAT@TXLVL"
                offset="[2]"/>
         <field description="Receive FIFO level interrupt." format="hex0x"
                id="USART0@FIFOINTSTAT@RXLVL"
                offset="[3]"/>
         <field description="Peripheral interrupt." format="hex0x"
                id="USART0@FIFOINTSTAT@PERINT"
                offset="[4]"/>
      </register>
      <register description="FIFO write data." format="hex0x" id="USART0@FIFOWR" offset="0xe20"
                size="4">
         <field description="Transmit data to the FIFO." format="hex0x"
                id="USART0@FIFOWR@TXDATA"
                offset="[8:0]"/>
      </register>
      <register description="FIFO read data." format="hex0x" id="USART0@FIFORD" offset="0xe30"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings."
                format="hex0x"
                id="USART0@FIFORD@RXDATA"
                offset="[8:0]"/>
         <field description="Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source."
                format="hex0x"
                id="USART0@FIFORD@FRAMERR"
                offset="[13]"/>
         <field description="Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character."
                format="hex0x"
                id="USART0@FIFORD@PARITYERR"
                offset="[14]"/>
         <field description="Received Noise flag. See description of the RxNoiseInt bit in Table 354."
                format="hex0x"
                id="USART0@FIFORD@RXNOISE"
                offset="[15]"/>
      </register>
      <register description="FIFO data read with no FIFO pop." format="hex0x"
                id="USART0@FIFORDNOPOP"
                offset="0xe40"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings."
                format="hex0x"
                id="USART0@FIFORDNOPOP@RXDATA"
                offset="[8:0]"/>
         <field description="Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source."
                format="hex0x"
                id="USART0@FIFORDNOPOP@FRAMERR"
                offset="[13]"/>
         <field description="Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character."
                format="hex0x"
                id="USART0@FIFORDNOPOP@PARITYERR"
                offset="[14]"/>
         <field description="Received Noise flag. See description of the RxNoiseInt bit in Table 354."
                format="hex0x"
                id="USART0@FIFORDNOPOP@RXNOISE"
                offset="[15]"/>
      </register>
      <register description="Peripheral identification register." format="hex0x" id="USART0@ID"
                offset="0xffc"
                readOnly="true"
                size="4">
         <field description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture."
                format="hex0x"
                id="USART0@ID@APERTURE"
                offset="[7:0]"/>
         <field description="Minor revision of module implementation." format="hex0x"
                id="USART0@ID@MINOR-REV"
                offset="[11:8]"/>
         <field description="Major revision of module implementation." format="hex0x"
                id="USART0@ID@MAJOR-REV"
                offset="[15:12]"/>
         <field description="Module identifier for the selected function." format="hex0x"
                id="USART0@ID@ID"
                offset="[31:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x USARTs" id="USART2" size="0x1000">
      <register description="USART Configuration register. Basic USART configuration settings that typically are not changed during operation."
                format="hex0x"
                id="USART0@CFG"
                offset="0x0"
                size="4">
         <field description="USART Enable." format="enum" enum="d1e135324"
                id="USART0@CFG@ENABLE"
                offset="[0]"/>
         <field description="Selects the data size for the USART." format="enum"
                enum="d1e135370"
                id="USART0@CFG@DATALEN"
                offset="[3:2]"/>
         <field description="Selects what type of parity is used by the USART." format="enum"
                enum="d1e135428"
                id="USART0@CFG@PARITYSEL"
                offset="[5:4]"/>
         <field description="Number of stop bits appended to transmitted data. Only a single stop bit is required for received data."
                format="enum"
                enum="d1e135486"
                id="USART0@CFG@STOPLEN"
                offset="[6]"/>
         <field description="Selects standard or 32 kHz clocking mode." format="enum"
                enum="d1e135532"
                id="USART0@CFG@MODE32K"
                offset="[7]"/>
         <field description="LIN break mode enable." format="enum" enum="d1e135579"
                id="USART0@CFG@LINMODE"
                offset="[8]"/>
         <field description="CTS Enable. Determines whether CTS is used for flow control. CTS can be from the input pin, or from the USART's own RTS if loopback mode is enabled."
                format="enum"
                enum="d1e135625"
                id="USART0@CFG@CTSEN"
                offset="[9]"/>
         <field description="Selects synchronous or asynchronous operation." format="enum"
                enum="d1e135671"
                id="USART0@CFG@SYNCEN"
                offset="[11]"/>
         <field description="Selects the clock polarity and sampling edge of received data in synchronous mode."
                format="enum"
                enum="d1e135717"
                id="USART0@CFG@CLKPOL"
                offset="[12]"/>
         <field description="Synchronous mode Master select." format="enum" enum="d1e135763"
                id="USART0@CFG@SYNCMST"
                offset="[14]"/>
         <field description="Selects data loopback mode." format="enum" enum="d1e135809"
                id="USART0@CFG@LOOP"
                offset="[15]"/>
         <field description="Output Enable Turnaround time enable for RS-485 operation."
                format="enum"
                enum="d1e135856"
                id="USART0@CFG@OETA"
                offset="[18]"/>
         <field description="Automatic Address matching enable." format="enum" enum="d1e135902"
                id="USART0@CFG@AUTOADDR"
                offset="[19]"/>
         <field description="Output Enable Select." format="enum" enum="d1e135948"
                id="USART0@CFG@OESEL"
                offset="[20]"/>
         <field description="Output Enable Polarity." format="enum" enum="d1e135994"
                id="USART0@CFG@OEPOL"
                offset="[21]"/>
         <field description="Receive data polarity." format="enum" enum="d1e136040"
                id="USART0@CFG@RXPOL"
                offset="[22]"/>
         <field description="Transmit data polarity." format="enum" enum="d1e136086"
                id="USART0@CFG@TXPOL"
                offset="[23]"/>
      </register>
      <register description="USART Control register. USART control settings that are more likely to change during operation."
                format="hex0x"
                id="USART0@CTL"
                offset="0x4"
                size="4">
         <field description="Break Enable." format="enum" enum="d1e136160"
                id="USART0@CTL@TXBRKEN"
                offset="[1]"/>
         <field description="Enable address detect mode." format="enum" enum="d1e136206"
                id="USART0@CTL@ADDRDET"
                offset="[2]"/>
         <field description="Transmit Disable." format="enum" enum="d1e136252"
                id="USART0@CTL@TXDIS"
                offset="[6]"/>
         <field description="Continuous Clock generation. By default, SCLK is only output while data is being transmitted in synchronous mode."
                format="enum"
                enum="d1e136298"
                id="USART0@CTL@CC"
                offset="[8]"/>
         <field description="Clear Continuous Clock." format="enum" enum="d1e136344"
                id="USART0@CTL@CLRCCONRX"
                offset="[9]"/>
         <field description="Autobaud enable." format="enum" enum="d1e136391"
                id="USART0@CTL@AUTOBAUD"
                offset="[16]"/>
      </register>
      <register description="USART Status register. The complete status value can be read here. Writing ones clears some bits in the register. Some bits can be cleared by writing a 1 to them."
                format="hex0x"
                id="USART0@STAT"
                offset="0x8"
                size="4">
         <field description="Receiver Idle. When 0, indicates that the receiver is currently in the process of receiving data. When 1, indicates that the receiver is not currently in the process of receiving data."
                format="hex0x"
                id="USART0@STAT@RXIDLE"
                offset="[1]"/>
         <field description="Transmitter Idle. When 0, indicates that the transmitter is currently in the process of sending data.When 1, indicate that the transmitter is not currently in the process of sending data."
                format="hex0x"
                id="USART0@STAT@TXIDLE"
                offset="[3]"/>
         <field description="This bit reflects the current state of the CTS signal, regardless of the setting of the CTSEN bit in the CFG register. This will be the value of the CTS input pin unless loopback mode is enabled."
                format="hex0x"
                id="USART0@STAT@CTS"
                offset="[4]"/>
         <field description="This bit is set when a change in the state is detected for the CTS flag above. This bit is cleared by software."
                format="hex0x"
                id="USART0@STAT@DELTACTS"
                offset="[5]"/>
         <field description="Transmitter Disabled Status flag. When 1, this bit indicates that the USART transmitter is fully idle after being disabled via the TXDIS bit in the CFG register (TXDIS = 1)."
                format="hex0x"
                id="USART0@STAT@TXDISSTAT"
                offset="[6]"/>
         <field description="Received Break. This bit reflects the current state of the receiver break detection logic. It is set when the Un_RXD pin remains low for 16 bit times. Note that FRAMERRINT will also be set when this condition occurs because the stop bit(s) for the character would be missing. RXBRK is cleared when the Un_RXD pin goes high."
                format="hex0x"
                id="USART0@STAT@RXBRK"
                offset="[10]"/>
         <field description="This bit is set when a change in the state of receiver break detection occurs. Cleared by software."
                format="hex0x"
                id="USART0@STAT@DELTARXBRK"
                offset="[11]"/>
         <field description="This bit is set when a start is detected on the receiver input. Its purpose is primarily to allow wake-up from Deep-sleep or Power-down mode immediately when a start is detected. Cleared by software."
                format="hex0x"
                id="USART0@STAT@START"
                offset="[12]"/>
         <field description="Framing Error interrupt flag. This flag is set when a character is received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source."
                format="hex0x"
                id="USART0@STAT@FRAMERRINT"
                offset="[13]"/>
         <field description="Parity Error interrupt flag. This flag is set when a parity error is detected in a received character."
                format="hex0x"
                id="USART0@STAT@PARITYERRINT"
                offset="[14]"/>
         <field description="Received Noise interrupt flag. Three samples of received data are taken in order to determine the value of each received data bit, except in synchronous mode. This acts as a noise filter if one sample disagrees. This flag is set when a received data bit contains one disagreeing sample. This could indicate line noise, a baud rate or character format mismatch, or loss of synchronization during data reception."
                format="hex0x"
                id="USART0@STAT@RXNOISEINT"
                offset="[15]"/>
         <field description="Auto baud Error. An auto baud error can occur if the BRG counts to its limit before the end of the start bit that is being measured, essentially an auto baud time-out."
                format="hex0x"
                id="USART0@STAT@ABERR"
                offset="[16]"/>
      </register>
      <register description="Interrupt Enable read and Set register for USART (not FIFO) status. Contains individual interrupt enable bits for each potential USART interrupt. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set."
                format="hex0x"
                id="USART0@INTENSET"
                offset="0xc"
                size="4">
         <field description="When 1, enables an interrupt when the transmitter becomes idle (TXIDLE = 1)."
                format="hex0x"
                id="USART0@INTENSET@TXIDLEEN"
                offset="[3]"/>
         <field description="When 1, enables an interrupt when there is a change in the state of the CTS input."
                format="hex0x"
                id="USART0@INTENSET@DELTACTSEN"
                offset="[5]"/>
         <field description="When 1, enables an interrupt when the transmitter is fully disabled as indicated by the TXDISINT flag in STAT. See description of the TXDISINT bit for details."
                format="hex0x"
                id="USART0@INTENSET@TXDISEN"
                offset="[6]"/>
         <field description="When 1, enables an interrupt when a change of state has occurred in the detection of a received break condition (break condition asserted or deasserted)."
                format="hex0x"
                id="USART0@INTENSET@DELTARXBRKEN"
                offset="[11]"/>
         <field description="When 1, enables an interrupt when a received start bit has been detected."
                format="hex0x"
                id="USART0@INTENSET@STARTEN"
                offset="[12]"/>
         <field description="When 1, enables an interrupt when a framing error has been detected."
                format="hex0x"
                id="USART0@INTENSET@FRAMERREN"
                offset="[13]"/>
         <field description="When 1, enables an interrupt when a parity error has been detected."
                format="hex0x"
                id="USART0@INTENSET@PARITYERREN"
                offset="[14]"/>
         <field description="When 1, enables an interrupt when noise is detected. See description of the RXNOISEINT bit in Table 354."
                format="hex0x"
                id="USART0@INTENSET@RXNOISEEN"
                offset="[15]"/>
         <field description="When 1, enables an interrupt when an auto baud error occurs."
                format="hex0x"
                id="USART0@INTENSET@ABERREN"
                offset="[16]"/>
      </register>
      <register description="Interrupt Enable Clear register. Allows clearing any combination of bits in the INTENSET register. Writing a 1 to any implemented bit position causes the corresponding bit to be cleared."
                format="hex0x"
                id="USART0@INTENCLR"
                offset="0x10"
                writeOnly="true"
                size="4">
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@TXIDLECLR"
                offset="[3]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@DELTACTSCLR"
                offset="[5]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@TXDISCLR"
                offset="[6]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@DELTARXBRKCLR"
                offset="[11]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@STARTCLR"
                offset="[12]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@FRAMERRCLR"
                offset="[13]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@PARITYERRCLR"
                offset="[14]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@RXNOISECLR"
                offset="[15]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@ABERRCLR"
                offset="[16]"/>
      </register>
      <register description="Baud Rate Generator register. 16-bit integer baud rate divisor value."
                format="hex0x"
                id="USART0@BRG"
                offset="0x20"
                size="4">
         <field description="This value is used to divide the USART input clock to determine the baud rate, based on the input clock from the FRG. 0 = FCLK is used directly by the USART function. 1 = FCLK is divided by 2 before use by the USART function. 2 = FCLK is divided by 3 before use by the USART function. 0xFFFF = FCLK is divided by 65,536 before use by the USART function."
                format="hex0x"
                id="USART0@BRG@BRGVAL"
                offset="[15:0]"/>
      </register>
      <register description="Interrupt status register. Reflects interrupts that are currently enabled."
                format="hex0x"
                id="USART0@INTSTAT"
                offset="0x24"
                readOnly="true"
                size="4">
         <field description="Transmitter Idle status." format="hex0x"
                id="USART0@INTSTAT@TXIDLE"
                offset="[3]"/>
         <field description="This bit is set when a change in the state of the CTS input is detected."
                format="hex0x"
                id="USART0@INTSTAT@DELTACTS"
                offset="[5]"/>
         <field description="Transmitter Disabled Interrupt flag." format="hex0x"
                id="USART0@INTSTAT@TXDISINT"
                offset="[6]"/>
         <field description="This bit is set when a change in the state of receiver break detection occurs."
                format="hex0x"
                id="USART0@INTSTAT@DELTARXBRK"
                offset="[11]"/>
         <field description="This bit is set when a start is detected on the receiver input."
                format="hex0x"
                id="USART0@INTSTAT@START"
                offset="[12]"/>
         <field description="Framing Error interrupt flag." format="hex0x"
                id="USART0@INTSTAT@FRAMERRINT"
                offset="[13]"/>
         <field description="Parity Error interrupt flag." format="hex0x"
                id="USART0@INTSTAT@PARITYERRINT"
                offset="[14]"/>
         <field description="Received Noise interrupt flag." format="hex0x"
                id="USART0@INTSTAT@RXNOISEINT"
                offset="[15]"/>
         <field description="Auto baud Error Interrupt flag." format="hex0x"
                id="USART0@INTSTAT@ABERRINT"
                offset="[16]"/>
      </register>
      <register description="Oversample selection register for asynchronous communication."
                format="hex0x"
                id="USART0@OSR"
                offset="0x28"
                size="4">
         <field description="Oversample Selection Value. 0 to 3 = not supported 0x4 = 5 function clocks are used to transmit and receive each data bit. 0x5 = 6 function clocks are used to transmit and receive each data bit. 0xF= 16 function clocks are used to transmit and receive each data bit."
                format="hex0x"
                id="USART0@OSR@OSRVAL"
                offset="[3:0]"/>
      </register>
      <register description="Address register for automatic address matching." format="hex0x"
                id="USART0@ADDR"
                offset="0x2c"
                size="4">
         <field description="8-bit address used with automatic address matching. Used when address detection is enabled (ADDRDET in CTL = 1) and automatic address matching is enabled (AUTOADDR in CFG = 1)."
                format="hex0x"
                id="USART0@ADDR@ADDRESS"
                offset="[7:0]"/>
      </register>
      <register description="FIFO configuration and enable register." format="hex0x"
                id="USART0@FIFOCFG"
                offset="0xe00"
                size="4">
         <field description="Enable the transmit FIFO." format="enum" enum="d1e137423"
                id="USART0@FIFOCFG@ENABLETX"
                offset="[0]"/>
         <field description="Enable the receive FIFO." format="enum" enum="d1e137469"
                id="USART0@FIFOCFG@ENABLERX"
                offset="[1]"/>
         <field description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART."
                format="hex0x"
                id="USART0@FIFOCFG@SIZE"
                offset="[5:4]"/>
         <field description="DMA configuration for transmit." format="enum" enum="d1e137533"
                id="USART0@FIFOCFG@DMATX"
                offset="[12]"/>
         <field description="DMA configuration for receive." format="enum" enum="d1e137579"
                id="USART0@FIFOCFG@DMARX"
                offset="[13]"/>
         <field description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e137626"
                id="USART0@FIFOCFG@WAKETX"
                offset="[14]"/>
         <field description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e137672"
                id="USART0@FIFOCFG@WAKERX"
                offset="[15]"/>
         <field description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied."
                format="hex0x"
                id="USART0@FIFOCFG@EMPTYTX"
                offset="[16]"/>
         <field description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied."
                format="hex0x"
                id="USART0@FIFOCFG@EMPTYRX"
                offset="[17]"/>
         <field description="Pop FIFO for debug reads." format="enum" enum="d1e137754"
                id="USART0@FIFOCFG@POPDBG"
                offset="[18]"/>
      </register>
      <register description="FIFO status register." format="hex0x" id="USART0@FIFOSTAT"
                offset="0xe04"
                size="4">
         <field description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="USART0@FIFOSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="USART0@FIFOSTAT@RXERR"
                offset="[1]"/>
         <field description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register."
                format="hex0x"
                id="USART0@FIFOSTAT@PERINT"
                offset="[3]"/>
         <field description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data."
                format="hex0x"
                id="USART0@FIFOSTAT@TXEMPTY"
                offset="[4]"/>
         <field description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow."
                format="hex0x"
                id="USART0@FIFOSTAT@TXNOTFULL"
                offset="[5]"/>
         <field description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty."
                format="hex0x"
                id="USART0@FIFOSTAT@RXNOTEMPTY"
                offset="[6]"/>
         <field description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow."
                format="hex0x"
                id="USART0@FIFOSTAT@RXFULL"
                offset="[7]"/>
         <field description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0."
                format="hex0x"
                id="USART0@FIFOSTAT@TXLVL"
                offset="[12:8]"/>
         <field description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1."
                format="hex0x"
                id="USART0@FIFOSTAT@RXLVL"
                offset="[20:16]"/>
      </register>
      <register description="FIFO trigger settings for interrupt and DMA request."
                format="hex0x"
                id="USART0@FIFOTRIG"
                offset="0xe08"
                size="4">
         <field description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set."
                format="enum"
                enum="d1e138020"
                id="USART0@FIFOTRIG@TXLVLENA"
                offset="[0]"/>
         <field description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set."
                format="enum"
                enum="d1e138066"
                id="USART0@FIFOTRIG@RXLVLENA"
                offset="[1]"/>
         <field description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)."
                format="hex0x"
                id="USART0@FIFOTRIG@TXLVL"
                offset="[11:8]"/>
         <field description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)."
                format="hex0x"
                id="USART0@FIFOTRIG@RXLVL"
                offset="[19:16]"/>
      </register>
      <register description="FIFO interrupt enable set (enable) and read register."
                format="hex0x"
                id="USART0@FIFOINTENSET"
                offset="0xe10"
                size="4">
         <field description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e138176"
                id="USART0@FIFOINTENSET@TXERR"
                offset="[0]"/>
         <field description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e138222"
                id="USART0@FIFOINTENSET@RXERR"
                offset="[1]"/>
         <field description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e138268"
                id="USART0@FIFOINTENSET@TXLVL"
                offset="[2]"/>
         <field description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e138314"
                id="USART0@FIFOINTENSET@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt enable clear (disable) and read register."
                format="hex0x"
                id="USART0@FIFOINTENCLR"
                offset="0xe14"
                size="4">
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="USART0@FIFOINTENCLR@TXERR"
                offset="[0]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="USART0@FIFOINTENCLR@RXERR"
                offset="[1]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="USART0@FIFOINTENCLR@TXLVL"
                offset="[2]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="USART0@FIFOINTENCLR@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt status register." format="hex0x"
                id="USART0@FIFOINTSTAT"
                offset="0xe18"
                readOnly="true"
                size="4">
         <field description="TX FIFO error." format="hex0x" id="USART0@FIFOINTSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error." format="hex0x" id="USART0@FIFOINTSTAT@RXERR"
                offset="[1]"/>
         <field description="Transmit FIFO level interrupt." format="hex0x"
                id="USART0@FIFOINTSTAT@TXLVL"
                offset="[2]"/>
         <field description="Receive FIFO level interrupt." format="hex0x"
                id="USART0@FIFOINTSTAT@RXLVL"
                offset="[3]"/>
         <field description="Peripheral interrupt." format="hex0x"
                id="USART0@FIFOINTSTAT@PERINT"
                offset="[4]"/>
      </register>
      <register description="FIFO write data." format="hex0x" id="USART0@FIFOWR" offset="0xe20"
                size="4">
         <field description="Transmit data to the FIFO." format="hex0x"
                id="USART0@FIFOWR@TXDATA"
                offset="[8:0]"/>
      </register>
      <register description="FIFO read data." format="hex0x" id="USART0@FIFORD" offset="0xe30"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings."
                format="hex0x"
                id="USART0@FIFORD@RXDATA"
                offset="[8:0]"/>
         <field description="Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source."
                format="hex0x"
                id="USART0@FIFORD@FRAMERR"
                offset="[13]"/>
         <field description="Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character."
                format="hex0x"
                id="USART0@FIFORD@PARITYERR"
                offset="[14]"/>
         <field description="Received Noise flag. See description of the RxNoiseInt bit in Table 354."
                format="hex0x"
                id="USART0@FIFORD@RXNOISE"
                offset="[15]"/>
      </register>
      <register description="FIFO data read with no FIFO pop." format="hex0x"
                id="USART0@FIFORDNOPOP"
                offset="0xe40"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings."
                format="hex0x"
                id="USART0@FIFORDNOPOP@RXDATA"
                offset="[8:0]"/>
         <field description="Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source."
                format="hex0x"
                id="USART0@FIFORDNOPOP@FRAMERR"
                offset="[13]"/>
         <field description="Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character."
                format="hex0x"
                id="USART0@FIFORDNOPOP@PARITYERR"
                offset="[14]"/>
         <field description="Received Noise flag. See description of the RxNoiseInt bit in Table 354."
                format="hex0x"
                id="USART0@FIFORDNOPOP@RXNOISE"
                offset="[15]"/>
      </register>
      <register description="Peripheral identification register." format="hex0x" id="USART0@ID"
                offset="0xffc"
                readOnly="true"
                size="4">
         <field description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture."
                format="hex0x"
                id="USART0@ID@APERTURE"
                offset="[7:0]"/>
         <field description="Minor revision of module implementation." format="hex0x"
                id="USART0@ID@MINOR-REV"
                offset="[11:8]"/>
         <field description="Major revision of module implementation." format="hex0x"
                id="USART0@ID@MAJOR-REV"
                offset="[15:12]"/>
         <field description="Module identifier for the selected function." format="hex0x"
                id="USART0@ID@ID"
                offset="[31:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x USARTs" id="USART3" size="0x1000">
      <register description="USART Configuration register. Basic USART configuration settings that typically are not changed during operation."
                format="hex0x"
                id="USART0@CFG"
                offset="0x0"
                size="4">
         <field description="USART Enable." format="enum" enum="d1e135324"
                id="USART0@CFG@ENABLE"
                offset="[0]"/>
         <field description="Selects the data size for the USART." format="enum"
                enum="d1e135370"
                id="USART0@CFG@DATALEN"
                offset="[3:2]"/>
         <field description="Selects what type of parity is used by the USART." format="enum"
                enum="d1e135428"
                id="USART0@CFG@PARITYSEL"
                offset="[5:4]"/>
         <field description="Number of stop bits appended to transmitted data. Only a single stop bit is required for received data."
                format="enum"
                enum="d1e135486"
                id="USART0@CFG@STOPLEN"
                offset="[6]"/>
         <field description="Selects standard or 32 kHz clocking mode." format="enum"
                enum="d1e135532"
                id="USART0@CFG@MODE32K"
                offset="[7]"/>
         <field description="LIN break mode enable." format="enum" enum="d1e135579"
                id="USART0@CFG@LINMODE"
                offset="[8]"/>
         <field description="CTS Enable. Determines whether CTS is used for flow control. CTS can be from the input pin, or from the USART's own RTS if loopback mode is enabled."
                format="enum"
                enum="d1e135625"
                id="USART0@CFG@CTSEN"
                offset="[9]"/>
         <field description="Selects synchronous or asynchronous operation." format="enum"
                enum="d1e135671"
                id="USART0@CFG@SYNCEN"
                offset="[11]"/>
         <field description="Selects the clock polarity and sampling edge of received data in synchronous mode."
                format="enum"
                enum="d1e135717"
                id="USART0@CFG@CLKPOL"
                offset="[12]"/>
         <field description="Synchronous mode Master select." format="enum" enum="d1e135763"
                id="USART0@CFG@SYNCMST"
                offset="[14]"/>
         <field description="Selects data loopback mode." format="enum" enum="d1e135809"
                id="USART0@CFG@LOOP"
                offset="[15]"/>
         <field description="Output Enable Turnaround time enable for RS-485 operation."
                format="enum"
                enum="d1e135856"
                id="USART0@CFG@OETA"
                offset="[18]"/>
         <field description="Automatic Address matching enable." format="enum" enum="d1e135902"
                id="USART0@CFG@AUTOADDR"
                offset="[19]"/>
         <field description="Output Enable Select." format="enum" enum="d1e135948"
                id="USART0@CFG@OESEL"
                offset="[20]"/>
         <field description="Output Enable Polarity." format="enum" enum="d1e135994"
                id="USART0@CFG@OEPOL"
                offset="[21]"/>
         <field description="Receive data polarity." format="enum" enum="d1e136040"
                id="USART0@CFG@RXPOL"
                offset="[22]"/>
         <field description="Transmit data polarity." format="enum" enum="d1e136086"
                id="USART0@CFG@TXPOL"
                offset="[23]"/>
      </register>
      <register description="USART Control register. USART control settings that are more likely to change during operation."
                format="hex0x"
                id="USART0@CTL"
                offset="0x4"
                size="4">
         <field description="Break Enable." format="enum" enum="d1e136160"
                id="USART0@CTL@TXBRKEN"
                offset="[1]"/>
         <field description="Enable address detect mode." format="enum" enum="d1e136206"
                id="USART0@CTL@ADDRDET"
                offset="[2]"/>
         <field description="Transmit Disable." format="enum" enum="d1e136252"
                id="USART0@CTL@TXDIS"
                offset="[6]"/>
         <field description="Continuous Clock generation. By default, SCLK is only output while data is being transmitted in synchronous mode."
                format="enum"
                enum="d1e136298"
                id="USART0@CTL@CC"
                offset="[8]"/>
         <field description="Clear Continuous Clock." format="enum" enum="d1e136344"
                id="USART0@CTL@CLRCCONRX"
                offset="[9]"/>
         <field description="Autobaud enable." format="enum" enum="d1e136391"
                id="USART0@CTL@AUTOBAUD"
                offset="[16]"/>
      </register>
      <register description="USART Status register. The complete status value can be read here. Writing ones clears some bits in the register. Some bits can be cleared by writing a 1 to them."
                format="hex0x"
                id="USART0@STAT"
                offset="0x8"
                size="4">
         <field description="Receiver Idle. When 0, indicates that the receiver is currently in the process of receiving data. When 1, indicates that the receiver is not currently in the process of receiving data."
                format="hex0x"
                id="USART0@STAT@RXIDLE"
                offset="[1]"/>
         <field description="Transmitter Idle. When 0, indicates that the transmitter is currently in the process of sending data.When 1, indicate that the transmitter is not currently in the process of sending data."
                format="hex0x"
                id="USART0@STAT@TXIDLE"
                offset="[3]"/>
         <field description="This bit reflects the current state of the CTS signal, regardless of the setting of the CTSEN bit in the CFG register. This will be the value of the CTS input pin unless loopback mode is enabled."
                format="hex0x"
                id="USART0@STAT@CTS"
                offset="[4]"/>
         <field description="This bit is set when a change in the state is detected for the CTS flag above. This bit is cleared by software."
                format="hex0x"
                id="USART0@STAT@DELTACTS"
                offset="[5]"/>
         <field description="Transmitter Disabled Status flag. When 1, this bit indicates that the USART transmitter is fully idle after being disabled via the TXDIS bit in the CFG register (TXDIS = 1)."
                format="hex0x"
                id="USART0@STAT@TXDISSTAT"
                offset="[6]"/>
         <field description="Received Break. This bit reflects the current state of the receiver break detection logic. It is set when the Un_RXD pin remains low for 16 bit times. Note that FRAMERRINT will also be set when this condition occurs because the stop bit(s) for the character would be missing. RXBRK is cleared when the Un_RXD pin goes high."
                format="hex0x"
                id="USART0@STAT@RXBRK"
                offset="[10]"/>
         <field description="This bit is set when a change in the state of receiver break detection occurs. Cleared by software."
                format="hex0x"
                id="USART0@STAT@DELTARXBRK"
                offset="[11]"/>
         <field description="This bit is set when a start is detected on the receiver input. Its purpose is primarily to allow wake-up from Deep-sleep or Power-down mode immediately when a start is detected. Cleared by software."
                format="hex0x"
                id="USART0@STAT@START"
                offset="[12]"/>
         <field description="Framing Error interrupt flag. This flag is set when a character is received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source."
                format="hex0x"
                id="USART0@STAT@FRAMERRINT"
                offset="[13]"/>
         <field description="Parity Error interrupt flag. This flag is set when a parity error is detected in a received character."
                format="hex0x"
                id="USART0@STAT@PARITYERRINT"
                offset="[14]"/>
         <field description="Received Noise interrupt flag. Three samples of received data are taken in order to determine the value of each received data bit, except in synchronous mode. This acts as a noise filter if one sample disagrees. This flag is set when a received data bit contains one disagreeing sample. This could indicate line noise, a baud rate or character format mismatch, or loss of synchronization during data reception."
                format="hex0x"
                id="USART0@STAT@RXNOISEINT"
                offset="[15]"/>
         <field description="Auto baud Error. An auto baud error can occur if the BRG counts to its limit before the end of the start bit that is being measured, essentially an auto baud time-out."
                format="hex0x"
                id="USART0@STAT@ABERR"
                offset="[16]"/>
      </register>
      <register description="Interrupt Enable read and Set register for USART (not FIFO) status. Contains individual interrupt enable bits for each potential USART interrupt. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set."
                format="hex0x"
                id="USART0@INTENSET"
                offset="0xc"
                size="4">
         <field description="When 1, enables an interrupt when the transmitter becomes idle (TXIDLE = 1)."
                format="hex0x"
                id="USART0@INTENSET@TXIDLEEN"
                offset="[3]"/>
         <field description="When 1, enables an interrupt when there is a change in the state of the CTS input."
                format="hex0x"
                id="USART0@INTENSET@DELTACTSEN"
                offset="[5]"/>
         <field description="When 1, enables an interrupt when the transmitter is fully disabled as indicated by the TXDISINT flag in STAT. See description of the TXDISINT bit for details."
                format="hex0x"
                id="USART0@INTENSET@TXDISEN"
                offset="[6]"/>
         <field description="When 1, enables an interrupt when a change of state has occurred in the detection of a received break condition (break condition asserted or deasserted)."
                format="hex0x"
                id="USART0@INTENSET@DELTARXBRKEN"
                offset="[11]"/>
         <field description="When 1, enables an interrupt when a received start bit has been detected."
                format="hex0x"
                id="USART0@INTENSET@STARTEN"
                offset="[12]"/>
         <field description="When 1, enables an interrupt when a framing error has been detected."
                format="hex0x"
                id="USART0@INTENSET@FRAMERREN"
                offset="[13]"/>
         <field description="When 1, enables an interrupt when a parity error has been detected."
                format="hex0x"
                id="USART0@INTENSET@PARITYERREN"
                offset="[14]"/>
         <field description="When 1, enables an interrupt when noise is detected. See description of the RXNOISEINT bit in Table 354."
                format="hex0x"
                id="USART0@INTENSET@RXNOISEEN"
                offset="[15]"/>
         <field description="When 1, enables an interrupt when an auto baud error occurs."
                format="hex0x"
                id="USART0@INTENSET@ABERREN"
                offset="[16]"/>
      </register>
      <register description="Interrupt Enable Clear register. Allows clearing any combination of bits in the INTENSET register. Writing a 1 to any implemented bit position causes the corresponding bit to be cleared."
                format="hex0x"
                id="USART0@INTENCLR"
                offset="0x10"
                writeOnly="true"
                size="4">
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@TXIDLECLR"
                offset="[3]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@DELTACTSCLR"
                offset="[5]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@TXDISCLR"
                offset="[6]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@DELTARXBRKCLR"
                offset="[11]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@STARTCLR"
                offset="[12]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@FRAMERRCLR"
                offset="[13]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@PARITYERRCLR"
                offset="[14]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@RXNOISECLR"
                offset="[15]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@ABERRCLR"
                offset="[16]"/>
      </register>
      <register description="Baud Rate Generator register. 16-bit integer baud rate divisor value."
                format="hex0x"
                id="USART0@BRG"
                offset="0x20"
                size="4">
         <field description="This value is used to divide the USART input clock to determine the baud rate, based on the input clock from the FRG. 0 = FCLK is used directly by the USART function. 1 = FCLK is divided by 2 before use by the USART function. 2 = FCLK is divided by 3 before use by the USART function. 0xFFFF = FCLK is divided by 65,536 before use by the USART function."
                format="hex0x"
                id="USART0@BRG@BRGVAL"
                offset="[15:0]"/>
      </register>
      <register description="Interrupt status register. Reflects interrupts that are currently enabled."
                format="hex0x"
                id="USART0@INTSTAT"
                offset="0x24"
                readOnly="true"
                size="4">
         <field description="Transmitter Idle status." format="hex0x"
                id="USART0@INTSTAT@TXIDLE"
                offset="[3]"/>
         <field description="This bit is set when a change in the state of the CTS input is detected."
                format="hex0x"
                id="USART0@INTSTAT@DELTACTS"
                offset="[5]"/>
         <field description="Transmitter Disabled Interrupt flag." format="hex0x"
                id="USART0@INTSTAT@TXDISINT"
                offset="[6]"/>
         <field description="This bit is set when a change in the state of receiver break detection occurs."
                format="hex0x"
                id="USART0@INTSTAT@DELTARXBRK"
                offset="[11]"/>
         <field description="This bit is set when a start is detected on the receiver input."
                format="hex0x"
                id="USART0@INTSTAT@START"
                offset="[12]"/>
         <field description="Framing Error interrupt flag." format="hex0x"
                id="USART0@INTSTAT@FRAMERRINT"
                offset="[13]"/>
         <field description="Parity Error interrupt flag." format="hex0x"
                id="USART0@INTSTAT@PARITYERRINT"
                offset="[14]"/>
         <field description="Received Noise interrupt flag." format="hex0x"
                id="USART0@INTSTAT@RXNOISEINT"
                offset="[15]"/>
         <field description="Auto baud Error Interrupt flag." format="hex0x"
                id="USART0@INTSTAT@ABERRINT"
                offset="[16]"/>
      </register>
      <register description="Oversample selection register for asynchronous communication."
                format="hex0x"
                id="USART0@OSR"
                offset="0x28"
                size="4">
         <field description="Oversample Selection Value. 0 to 3 = not supported 0x4 = 5 function clocks are used to transmit and receive each data bit. 0x5 = 6 function clocks are used to transmit and receive each data bit. 0xF= 16 function clocks are used to transmit and receive each data bit."
                format="hex0x"
                id="USART0@OSR@OSRVAL"
                offset="[3:0]"/>
      </register>
      <register description="Address register for automatic address matching." format="hex0x"
                id="USART0@ADDR"
                offset="0x2c"
                size="4">
         <field description="8-bit address used with automatic address matching. Used when address detection is enabled (ADDRDET in CTL = 1) and automatic address matching is enabled (AUTOADDR in CFG = 1)."
                format="hex0x"
                id="USART0@ADDR@ADDRESS"
                offset="[7:0]"/>
      </register>
      <register description="FIFO configuration and enable register." format="hex0x"
                id="USART0@FIFOCFG"
                offset="0xe00"
                size="4">
         <field description="Enable the transmit FIFO." format="enum" enum="d1e137423"
                id="USART0@FIFOCFG@ENABLETX"
                offset="[0]"/>
         <field description="Enable the receive FIFO." format="enum" enum="d1e137469"
                id="USART0@FIFOCFG@ENABLERX"
                offset="[1]"/>
         <field description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART."
                format="hex0x"
                id="USART0@FIFOCFG@SIZE"
                offset="[5:4]"/>
         <field description="DMA configuration for transmit." format="enum" enum="d1e137533"
                id="USART0@FIFOCFG@DMATX"
                offset="[12]"/>
         <field description="DMA configuration for receive." format="enum" enum="d1e137579"
                id="USART0@FIFOCFG@DMARX"
                offset="[13]"/>
         <field description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e137626"
                id="USART0@FIFOCFG@WAKETX"
                offset="[14]"/>
         <field description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e137672"
                id="USART0@FIFOCFG@WAKERX"
                offset="[15]"/>
         <field description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied."
                format="hex0x"
                id="USART0@FIFOCFG@EMPTYTX"
                offset="[16]"/>
         <field description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied."
                format="hex0x"
                id="USART0@FIFOCFG@EMPTYRX"
                offset="[17]"/>
         <field description="Pop FIFO for debug reads." format="enum" enum="d1e137754"
                id="USART0@FIFOCFG@POPDBG"
                offset="[18]"/>
      </register>
      <register description="FIFO status register." format="hex0x" id="USART0@FIFOSTAT"
                offset="0xe04"
                size="4">
         <field description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="USART0@FIFOSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="USART0@FIFOSTAT@RXERR"
                offset="[1]"/>
         <field description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register."
                format="hex0x"
                id="USART0@FIFOSTAT@PERINT"
                offset="[3]"/>
         <field description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data."
                format="hex0x"
                id="USART0@FIFOSTAT@TXEMPTY"
                offset="[4]"/>
         <field description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow."
                format="hex0x"
                id="USART0@FIFOSTAT@TXNOTFULL"
                offset="[5]"/>
         <field description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty."
                format="hex0x"
                id="USART0@FIFOSTAT@RXNOTEMPTY"
                offset="[6]"/>
         <field description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow."
                format="hex0x"
                id="USART0@FIFOSTAT@RXFULL"
                offset="[7]"/>
         <field description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0."
                format="hex0x"
                id="USART0@FIFOSTAT@TXLVL"
                offset="[12:8]"/>
         <field description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1."
                format="hex0x"
                id="USART0@FIFOSTAT@RXLVL"
                offset="[20:16]"/>
      </register>
      <register description="FIFO trigger settings for interrupt and DMA request."
                format="hex0x"
                id="USART0@FIFOTRIG"
                offset="0xe08"
                size="4">
         <field description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set."
                format="enum"
                enum="d1e138020"
                id="USART0@FIFOTRIG@TXLVLENA"
                offset="[0]"/>
         <field description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set."
                format="enum"
                enum="d1e138066"
                id="USART0@FIFOTRIG@RXLVLENA"
                offset="[1]"/>
         <field description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)."
                format="hex0x"
                id="USART0@FIFOTRIG@TXLVL"
                offset="[11:8]"/>
         <field description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)."
                format="hex0x"
                id="USART0@FIFOTRIG@RXLVL"
                offset="[19:16]"/>
      </register>
      <register description="FIFO interrupt enable set (enable) and read register."
                format="hex0x"
                id="USART0@FIFOINTENSET"
                offset="0xe10"
                size="4">
         <field description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e138176"
                id="USART0@FIFOINTENSET@TXERR"
                offset="[0]"/>
         <field description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e138222"
                id="USART0@FIFOINTENSET@RXERR"
                offset="[1]"/>
         <field description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e138268"
                id="USART0@FIFOINTENSET@TXLVL"
                offset="[2]"/>
         <field description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e138314"
                id="USART0@FIFOINTENSET@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt enable clear (disable) and read register."
                format="hex0x"
                id="USART0@FIFOINTENCLR"
                offset="0xe14"
                size="4">
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="USART0@FIFOINTENCLR@TXERR"
                offset="[0]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="USART0@FIFOINTENCLR@RXERR"
                offset="[1]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="USART0@FIFOINTENCLR@TXLVL"
                offset="[2]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="USART0@FIFOINTENCLR@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt status register." format="hex0x"
                id="USART0@FIFOINTSTAT"
                offset="0xe18"
                readOnly="true"
                size="4">
         <field description="TX FIFO error." format="hex0x" id="USART0@FIFOINTSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error." format="hex0x" id="USART0@FIFOINTSTAT@RXERR"
                offset="[1]"/>
         <field description="Transmit FIFO level interrupt." format="hex0x"
                id="USART0@FIFOINTSTAT@TXLVL"
                offset="[2]"/>
         <field description="Receive FIFO level interrupt." format="hex0x"
                id="USART0@FIFOINTSTAT@RXLVL"
                offset="[3]"/>
         <field description="Peripheral interrupt." format="hex0x"
                id="USART0@FIFOINTSTAT@PERINT"
                offset="[4]"/>
      </register>
      <register description="FIFO write data." format="hex0x" id="USART0@FIFOWR" offset="0xe20"
                size="4">
         <field description="Transmit data to the FIFO." format="hex0x"
                id="USART0@FIFOWR@TXDATA"
                offset="[8:0]"/>
      </register>
      <register description="FIFO read data." format="hex0x" id="USART0@FIFORD" offset="0xe30"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings."
                format="hex0x"
                id="USART0@FIFORD@RXDATA"
                offset="[8:0]"/>
         <field description="Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source."
                format="hex0x"
                id="USART0@FIFORD@FRAMERR"
                offset="[13]"/>
         <field description="Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character."
                format="hex0x"
                id="USART0@FIFORD@PARITYERR"
                offset="[14]"/>
         <field description="Received Noise flag. See description of the RxNoiseInt bit in Table 354."
                format="hex0x"
                id="USART0@FIFORD@RXNOISE"
                offset="[15]"/>
      </register>
      <register description="FIFO data read with no FIFO pop." format="hex0x"
                id="USART0@FIFORDNOPOP"
                offset="0xe40"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings."
                format="hex0x"
                id="USART0@FIFORDNOPOP@RXDATA"
                offset="[8:0]"/>
         <field description="Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source."
                format="hex0x"
                id="USART0@FIFORDNOPOP@FRAMERR"
                offset="[13]"/>
         <field description="Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character."
                format="hex0x"
                id="USART0@FIFORDNOPOP@PARITYERR"
                offset="[14]"/>
         <field description="Received Noise flag. See description of the RxNoiseInt bit in Table 354."
                format="hex0x"
                id="USART0@FIFORDNOPOP@RXNOISE"
                offset="[15]"/>
      </register>
      <register description="Peripheral identification register." format="hex0x" id="USART0@ID"
                offset="0xffc"
                readOnly="true"
                size="4">
         <field description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture."
                format="hex0x"
                id="USART0@ID@APERTURE"
                offset="[7:0]"/>
         <field description="Minor revision of module implementation." format="hex0x"
                id="USART0@ID@MINOR-REV"
                offset="[11:8]"/>
         <field description="Major revision of module implementation." format="hex0x"
                id="USART0@ID@MAJOR-REV"
                offset="[15:12]"/>
         <field description="Module identifier for the selected function." format="hex0x"
                id="USART0@ID@ID"
                offset="[31:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x USARTs" id="USART4" size="0x1000">
      <register description="USART Configuration register. Basic USART configuration settings that typically are not changed during operation."
                format="hex0x"
                id="USART0@CFG"
                offset="0x0"
                size="4">
         <field description="USART Enable." format="enum" enum="d1e135324"
                id="USART0@CFG@ENABLE"
                offset="[0]"/>
         <field description="Selects the data size for the USART." format="enum"
                enum="d1e135370"
                id="USART0@CFG@DATALEN"
                offset="[3:2]"/>
         <field description="Selects what type of parity is used by the USART." format="enum"
                enum="d1e135428"
                id="USART0@CFG@PARITYSEL"
                offset="[5:4]"/>
         <field description="Number of stop bits appended to transmitted data. Only a single stop bit is required for received data."
                format="enum"
                enum="d1e135486"
                id="USART0@CFG@STOPLEN"
                offset="[6]"/>
         <field description="Selects standard or 32 kHz clocking mode." format="enum"
                enum="d1e135532"
                id="USART0@CFG@MODE32K"
                offset="[7]"/>
         <field description="LIN break mode enable." format="enum" enum="d1e135579"
                id="USART0@CFG@LINMODE"
                offset="[8]"/>
         <field description="CTS Enable. Determines whether CTS is used for flow control. CTS can be from the input pin, or from the USART's own RTS if loopback mode is enabled."
                format="enum"
                enum="d1e135625"
                id="USART0@CFG@CTSEN"
                offset="[9]"/>
         <field description="Selects synchronous or asynchronous operation." format="enum"
                enum="d1e135671"
                id="USART0@CFG@SYNCEN"
                offset="[11]"/>
         <field description="Selects the clock polarity and sampling edge of received data in synchronous mode."
                format="enum"
                enum="d1e135717"
                id="USART0@CFG@CLKPOL"
                offset="[12]"/>
         <field description="Synchronous mode Master select." format="enum" enum="d1e135763"
                id="USART0@CFG@SYNCMST"
                offset="[14]"/>
         <field description="Selects data loopback mode." format="enum" enum="d1e135809"
                id="USART0@CFG@LOOP"
                offset="[15]"/>
         <field description="Output Enable Turnaround time enable for RS-485 operation."
                format="enum"
                enum="d1e135856"
                id="USART0@CFG@OETA"
                offset="[18]"/>
         <field description="Automatic Address matching enable." format="enum" enum="d1e135902"
                id="USART0@CFG@AUTOADDR"
                offset="[19]"/>
         <field description="Output Enable Select." format="enum" enum="d1e135948"
                id="USART0@CFG@OESEL"
                offset="[20]"/>
         <field description="Output Enable Polarity." format="enum" enum="d1e135994"
                id="USART0@CFG@OEPOL"
                offset="[21]"/>
         <field description="Receive data polarity." format="enum" enum="d1e136040"
                id="USART0@CFG@RXPOL"
                offset="[22]"/>
         <field description="Transmit data polarity." format="enum" enum="d1e136086"
                id="USART0@CFG@TXPOL"
                offset="[23]"/>
      </register>
      <register description="USART Control register. USART control settings that are more likely to change during operation."
                format="hex0x"
                id="USART0@CTL"
                offset="0x4"
                size="4">
         <field description="Break Enable." format="enum" enum="d1e136160"
                id="USART0@CTL@TXBRKEN"
                offset="[1]"/>
         <field description="Enable address detect mode." format="enum" enum="d1e136206"
                id="USART0@CTL@ADDRDET"
                offset="[2]"/>
         <field description="Transmit Disable." format="enum" enum="d1e136252"
                id="USART0@CTL@TXDIS"
                offset="[6]"/>
         <field description="Continuous Clock generation. By default, SCLK is only output while data is being transmitted in synchronous mode."
                format="enum"
                enum="d1e136298"
                id="USART0@CTL@CC"
                offset="[8]"/>
         <field description="Clear Continuous Clock." format="enum" enum="d1e136344"
                id="USART0@CTL@CLRCCONRX"
                offset="[9]"/>
         <field description="Autobaud enable." format="enum" enum="d1e136391"
                id="USART0@CTL@AUTOBAUD"
                offset="[16]"/>
      </register>
      <register description="USART Status register. The complete status value can be read here. Writing ones clears some bits in the register. Some bits can be cleared by writing a 1 to them."
                format="hex0x"
                id="USART0@STAT"
                offset="0x8"
                size="4">
         <field description="Receiver Idle. When 0, indicates that the receiver is currently in the process of receiving data. When 1, indicates that the receiver is not currently in the process of receiving data."
                format="hex0x"
                id="USART0@STAT@RXIDLE"
                offset="[1]"/>
         <field description="Transmitter Idle. When 0, indicates that the transmitter is currently in the process of sending data.When 1, indicate that the transmitter is not currently in the process of sending data."
                format="hex0x"
                id="USART0@STAT@TXIDLE"
                offset="[3]"/>
         <field description="This bit reflects the current state of the CTS signal, regardless of the setting of the CTSEN bit in the CFG register. This will be the value of the CTS input pin unless loopback mode is enabled."
                format="hex0x"
                id="USART0@STAT@CTS"
                offset="[4]"/>
         <field description="This bit is set when a change in the state is detected for the CTS flag above. This bit is cleared by software."
                format="hex0x"
                id="USART0@STAT@DELTACTS"
                offset="[5]"/>
         <field description="Transmitter Disabled Status flag. When 1, this bit indicates that the USART transmitter is fully idle after being disabled via the TXDIS bit in the CFG register (TXDIS = 1)."
                format="hex0x"
                id="USART0@STAT@TXDISSTAT"
                offset="[6]"/>
         <field description="Received Break. This bit reflects the current state of the receiver break detection logic. It is set when the Un_RXD pin remains low for 16 bit times. Note that FRAMERRINT will also be set when this condition occurs because the stop bit(s) for the character would be missing. RXBRK is cleared when the Un_RXD pin goes high."
                format="hex0x"
                id="USART0@STAT@RXBRK"
                offset="[10]"/>
         <field description="This bit is set when a change in the state of receiver break detection occurs. Cleared by software."
                format="hex0x"
                id="USART0@STAT@DELTARXBRK"
                offset="[11]"/>
         <field description="This bit is set when a start is detected on the receiver input. Its purpose is primarily to allow wake-up from Deep-sleep or Power-down mode immediately when a start is detected. Cleared by software."
                format="hex0x"
                id="USART0@STAT@START"
                offset="[12]"/>
         <field description="Framing Error interrupt flag. This flag is set when a character is received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source."
                format="hex0x"
                id="USART0@STAT@FRAMERRINT"
                offset="[13]"/>
         <field description="Parity Error interrupt flag. This flag is set when a parity error is detected in a received character."
                format="hex0x"
                id="USART0@STAT@PARITYERRINT"
                offset="[14]"/>
         <field description="Received Noise interrupt flag. Three samples of received data are taken in order to determine the value of each received data bit, except in synchronous mode. This acts as a noise filter if one sample disagrees. This flag is set when a received data bit contains one disagreeing sample. This could indicate line noise, a baud rate or character format mismatch, or loss of synchronization during data reception."
                format="hex0x"
                id="USART0@STAT@RXNOISEINT"
                offset="[15]"/>
         <field description="Auto baud Error. An auto baud error can occur if the BRG counts to its limit before the end of the start bit that is being measured, essentially an auto baud time-out."
                format="hex0x"
                id="USART0@STAT@ABERR"
                offset="[16]"/>
      </register>
      <register description="Interrupt Enable read and Set register for USART (not FIFO) status. Contains individual interrupt enable bits for each potential USART interrupt. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set."
                format="hex0x"
                id="USART0@INTENSET"
                offset="0xc"
                size="4">
         <field description="When 1, enables an interrupt when the transmitter becomes idle (TXIDLE = 1)."
                format="hex0x"
                id="USART0@INTENSET@TXIDLEEN"
                offset="[3]"/>
         <field description="When 1, enables an interrupt when there is a change in the state of the CTS input."
                format="hex0x"
                id="USART0@INTENSET@DELTACTSEN"
                offset="[5]"/>
         <field description="When 1, enables an interrupt when the transmitter is fully disabled as indicated by the TXDISINT flag in STAT. See description of the TXDISINT bit for details."
                format="hex0x"
                id="USART0@INTENSET@TXDISEN"
                offset="[6]"/>
         <field description="When 1, enables an interrupt when a change of state has occurred in the detection of a received break condition (break condition asserted or deasserted)."
                format="hex0x"
                id="USART0@INTENSET@DELTARXBRKEN"
                offset="[11]"/>
         <field description="When 1, enables an interrupt when a received start bit has been detected."
                format="hex0x"
                id="USART0@INTENSET@STARTEN"
                offset="[12]"/>
         <field description="When 1, enables an interrupt when a framing error has been detected."
                format="hex0x"
                id="USART0@INTENSET@FRAMERREN"
                offset="[13]"/>
         <field description="When 1, enables an interrupt when a parity error has been detected."
                format="hex0x"
                id="USART0@INTENSET@PARITYERREN"
                offset="[14]"/>
         <field description="When 1, enables an interrupt when noise is detected. See description of the RXNOISEINT bit in Table 354."
                format="hex0x"
                id="USART0@INTENSET@RXNOISEEN"
                offset="[15]"/>
         <field description="When 1, enables an interrupt when an auto baud error occurs."
                format="hex0x"
                id="USART0@INTENSET@ABERREN"
                offset="[16]"/>
      </register>
      <register description="Interrupt Enable Clear register. Allows clearing any combination of bits in the INTENSET register. Writing a 1 to any implemented bit position causes the corresponding bit to be cleared."
                format="hex0x"
                id="USART0@INTENCLR"
                offset="0x10"
                writeOnly="true"
                size="4">
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@TXIDLECLR"
                offset="[3]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@DELTACTSCLR"
                offset="[5]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@TXDISCLR"
                offset="[6]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@DELTARXBRKCLR"
                offset="[11]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@STARTCLR"
                offset="[12]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@FRAMERRCLR"
                offset="[13]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@PARITYERRCLR"
                offset="[14]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@RXNOISECLR"
                offset="[15]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@ABERRCLR"
                offset="[16]"/>
      </register>
      <register description="Baud Rate Generator register. 16-bit integer baud rate divisor value."
                format="hex0x"
                id="USART0@BRG"
                offset="0x20"
                size="4">
         <field description="This value is used to divide the USART input clock to determine the baud rate, based on the input clock from the FRG. 0 = FCLK is used directly by the USART function. 1 = FCLK is divided by 2 before use by the USART function. 2 = FCLK is divided by 3 before use by the USART function. 0xFFFF = FCLK is divided by 65,536 before use by the USART function."
                format="hex0x"
                id="USART0@BRG@BRGVAL"
                offset="[15:0]"/>
      </register>
      <register description="Interrupt status register. Reflects interrupts that are currently enabled."
                format="hex0x"
                id="USART0@INTSTAT"
                offset="0x24"
                readOnly="true"
                size="4">
         <field description="Transmitter Idle status." format="hex0x"
                id="USART0@INTSTAT@TXIDLE"
                offset="[3]"/>
         <field description="This bit is set when a change in the state of the CTS input is detected."
                format="hex0x"
                id="USART0@INTSTAT@DELTACTS"
                offset="[5]"/>
         <field description="Transmitter Disabled Interrupt flag." format="hex0x"
                id="USART0@INTSTAT@TXDISINT"
                offset="[6]"/>
         <field description="This bit is set when a change in the state of receiver break detection occurs."
                format="hex0x"
                id="USART0@INTSTAT@DELTARXBRK"
                offset="[11]"/>
         <field description="This bit is set when a start is detected on the receiver input."
                format="hex0x"
                id="USART0@INTSTAT@START"
                offset="[12]"/>
         <field description="Framing Error interrupt flag." format="hex0x"
                id="USART0@INTSTAT@FRAMERRINT"
                offset="[13]"/>
         <field description="Parity Error interrupt flag." format="hex0x"
                id="USART0@INTSTAT@PARITYERRINT"
                offset="[14]"/>
         <field description="Received Noise interrupt flag." format="hex0x"
                id="USART0@INTSTAT@RXNOISEINT"
                offset="[15]"/>
         <field description="Auto baud Error Interrupt flag." format="hex0x"
                id="USART0@INTSTAT@ABERRINT"
                offset="[16]"/>
      </register>
      <register description="Oversample selection register for asynchronous communication."
                format="hex0x"
                id="USART0@OSR"
                offset="0x28"
                size="4">
         <field description="Oversample Selection Value. 0 to 3 = not supported 0x4 = 5 function clocks are used to transmit and receive each data bit. 0x5 = 6 function clocks are used to transmit and receive each data bit. 0xF= 16 function clocks are used to transmit and receive each data bit."
                format="hex0x"
                id="USART0@OSR@OSRVAL"
                offset="[3:0]"/>
      </register>
      <register description="Address register for automatic address matching." format="hex0x"
                id="USART0@ADDR"
                offset="0x2c"
                size="4">
         <field description="8-bit address used with automatic address matching. Used when address detection is enabled (ADDRDET in CTL = 1) and automatic address matching is enabled (AUTOADDR in CFG = 1)."
                format="hex0x"
                id="USART0@ADDR@ADDRESS"
                offset="[7:0]"/>
      </register>
      <register description="FIFO configuration and enable register." format="hex0x"
                id="USART0@FIFOCFG"
                offset="0xe00"
                size="4">
         <field description="Enable the transmit FIFO." format="enum" enum="d1e137423"
                id="USART0@FIFOCFG@ENABLETX"
                offset="[0]"/>
         <field description="Enable the receive FIFO." format="enum" enum="d1e137469"
                id="USART0@FIFOCFG@ENABLERX"
                offset="[1]"/>
         <field description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART."
                format="hex0x"
                id="USART0@FIFOCFG@SIZE"
                offset="[5:4]"/>
         <field description="DMA configuration for transmit." format="enum" enum="d1e137533"
                id="USART0@FIFOCFG@DMATX"
                offset="[12]"/>
         <field description="DMA configuration for receive." format="enum" enum="d1e137579"
                id="USART0@FIFOCFG@DMARX"
                offset="[13]"/>
         <field description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e137626"
                id="USART0@FIFOCFG@WAKETX"
                offset="[14]"/>
         <field description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e137672"
                id="USART0@FIFOCFG@WAKERX"
                offset="[15]"/>
         <field description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied."
                format="hex0x"
                id="USART0@FIFOCFG@EMPTYTX"
                offset="[16]"/>
         <field description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied."
                format="hex0x"
                id="USART0@FIFOCFG@EMPTYRX"
                offset="[17]"/>
         <field description="Pop FIFO for debug reads." format="enum" enum="d1e137754"
                id="USART0@FIFOCFG@POPDBG"
                offset="[18]"/>
      </register>
      <register description="FIFO status register." format="hex0x" id="USART0@FIFOSTAT"
                offset="0xe04"
                size="4">
         <field description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="USART0@FIFOSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="USART0@FIFOSTAT@RXERR"
                offset="[1]"/>
         <field description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register."
                format="hex0x"
                id="USART0@FIFOSTAT@PERINT"
                offset="[3]"/>
         <field description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data."
                format="hex0x"
                id="USART0@FIFOSTAT@TXEMPTY"
                offset="[4]"/>
         <field description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow."
                format="hex0x"
                id="USART0@FIFOSTAT@TXNOTFULL"
                offset="[5]"/>
         <field description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty."
                format="hex0x"
                id="USART0@FIFOSTAT@RXNOTEMPTY"
                offset="[6]"/>
         <field description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow."
                format="hex0x"
                id="USART0@FIFOSTAT@RXFULL"
                offset="[7]"/>
         <field description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0."
                format="hex0x"
                id="USART0@FIFOSTAT@TXLVL"
                offset="[12:8]"/>
         <field description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1."
                format="hex0x"
                id="USART0@FIFOSTAT@RXLVL"
                offset="[20:16]"/>
      </register>
      <register description="FIFO trigger settings for interrupt and DMA request."
                format="hex0x"
                id="USART0@FIFOTRIG"
                offset="0xe08"
                size="4">
         <field description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set."
                format="enum"
                enum="d1e138020"
                id="USART0@FIFOTRIG@TXLVLENA"
                offset="[0]"/>
         <field description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set."
                format="enum"
                enum="d1e138066"
                id="USART0@FIFOTRIG@RXLVLENA"
                offset="[1]"/>
         <field description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)."
                format="hex0x"
                id="USART0@FIFOTRIG@TXLVL"
                offset="[11:8]"/>
         <field description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)."
                format="hex0x"
                id="USART0@FIFOTRIG@RXLVL"
                offset="[19:16]"/>
      </register>
      <register description="FIFO interrupt enable set (enable) and read register."
                format="hex0x"
                id="USART0@FIFOINTENSET"
                offset="0xe10"
                size="4">
         <field description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e138176"
                id="USART0@FIFOINTENSET@TXERR"
                offset="[0]"/>
         <field description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e138222"
                id="USART0@FIFOINTENSET@RXERR"
                offset="[1]"/>
         <field description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e138268"
                id="USART0@FIFOINTENSET@TXLVL"
                offset="[2]"/>
         <field description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e138314"
                id="USART0@FIFOINTENSET@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt enable clear (disable) and read register."
                format="hex0x"
                id="USART0@FIFOINTENCLR"
                offset="0xe14"
                size="4">
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="USART0@FIFOINTENCLR@TXERR"
                offset="[0]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="USART0@FIFOINTENCLR@RXERR"
                offset="[1]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="USART0@FIFOINTENCLR@TXLVL"
                offset="[2]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="USART0@FIFOINTENCLR@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt status register." format="hex0x"
                id="USART0@FIFOINTSTAT"
                offset="0xe18"
                readOnly="true"
                size="4">
         <field description="TX FIFO error." format="hex0x" id="USART0@FIFOINTSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error." format="hex0x" id="USART0@FIFOINTSTAT@RXERR"
                offset="[1]"/>
         <field description="Transmit FIFO level interrupt." format="hex0x"
                id="USART0@FIFOINTSTAT@TXLVL"
                offset="[2]"/>
         <field description="Receive FIFO level interrupt." format="hex0x"
                id="USART0@FIFOINTSTAT@RXLVL"
                offset="[3]"/>
         <field description="Peripheral interrupt." format="hex0x"
                id="USART0@FIFOINTSTAT@PERINT"
                offset="[4]"/>
      </register>
      <register description="FIFO write data." format="hex0x" id="USART0@FIFOWR" offset="0xe20"
                size="4">
         <field description="Transmit data to the FIFO." format="hex0x"
                id="USART0@FIFOWR@TXDATA"
                offset="[8:0]"/>
      </register>
      <register description="FIFO read data." format="hex0x" id="USART0@FIFORD" offset="0xe30"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings."
                format="hex0x"
                id="USART0@FIFORD@RXDATA"
                offset="[8:0]"/>
         <field description="Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source."
                format="hex0x"
                id="USART0@FIFORD@FRAMERR"
                offset="[13]"/>
         <field description="Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character."
                format="hex0x"
                id="USART0@FIFORD@PARITYERR"
                offset="[14]"/>
         <field description="Received Noise flag. See description of the RxNoiseInt bit in Table 354."
                format="hex0x"
                id="USART0@FIFORD@RXNOISE"
                offset="[15]"/>
      </register>
      <register description="FIFO data read with no FIFO pop." format="hex0x"
                id="USART0@FIFORDNOPOP"
                offset="0xe40"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings."
                format="hex0x"
                id="USART0@FIFORDNOPOP@RXDATA"
                offset="[8:0]"/>
         <field description="Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source."
                format="hex0x"
                id="USART0@FIFORDNOPOP@FRAMERR"
                offset="[13]"/>
         <field description="Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character."
                format="hex0x"
                id="USART0@FIFORDNOPOP@PARITYERR"
                offset="[14]"/>
         <field description="Received Noise flag. See description of the RxNoiseInt bit in Table 354."
                format="hex0x"
                id="USART0@FIFORDNOPOP@RXNOISE"
                offset="[15]"/>
      </register>
      <register description="Peripheral identification register." format="hex0x" id="USART0@ID"
                offset="0xffc"
                readOnly="true"
                size="4">
         <field description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture."
                format="hex0x"
                id="USART0@ID@APERTURE"
                offset="[7:0]"/>
         <field description="Minor revision of module implementation." format="hex0x"
                id="USART0@ID@MINOR-REV"
                offset="[11:8]"/>
         <field description="Major revision of module implementation." format="hex0x"
                id="USART0@ID@MAJOR-REV"
                offset="[15:12]"/>
         <field description="Module identifier for the selected function." format="hex0x"
                id="USART0@ID@ID"
                offset="[31:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x USARTs" id="USART5" size="0x1000">
      <register description="USART Configuration register. Basic USART configuration settings that typically are not changed during operation."
                format="hex0x"
                id="USART0@CFG"
                offset="0x0"
                size="4">
         <field description="USART Enable." format="enum" enum="d1e135324"
                id="USART0@CFG@ENABLE"
                offset="[0]"/>
         <field description="Selects the data size for the USART." format="enum"
                enum="d1e135370"
                id="USART0@CFG@DATALEN"
                offset="[3:2]"/>
         <field description="Selects what type of parity is used by the USART." format="enum"
                enum="d1e135428"
                id="USART0@CFG@PARITYSEL"
                offset="[5:4]"/>
         <field description="Number of stop bits appended to transmitted data. Only a single stop bit is required for received data."
                format="enum"
                enum="d1e135486"
                id="USART0@CFG@STOPLEN"
                offset="[6]"/>
         <field description="Selects standard or 32 kHz clocking mode." format="enum"
                enum="d1e135532"
                id="USART0@CFG@MODE32K"
                offset="[7]"/>
         <field description="LIN break mode enable." format="enum" enum="d1e135579"
                id="USART0@CFG@LINMODE"
                offset="[8]"/>
         <field description="CTS Enable. Determines whether CTS is used for flow control. CTS can be from the input pin, or from the USART's own RTS if loopback mode is enabled."
                format="enum"
                enum="d1e135625"
                id="USART0@CFG@CTSEN"
                offset="[9]"/>
         <field description="Selects synchronous or asynchronous operation." format="enum"
                enum="d1e135671"
                id="USART0@CFG@SYNCEN"
                offset="[11]"/>
         <field description="Selects the clock polarity and sampling edge of received data in synchronous mode."
                format="enum"
                enum="d1e135717"
                id="USART0@CFG@CLKPOL"
                offset="[12]"/>
         <field description="Synchronous mode Master select." format="enum" enum="d1e135763"
                id="USART0@CFG@SYNCMST"
                offset="[14]"/>
         <field description="Selects data loopback mode." format="enum" enum="d1e135809"
                id="USART0@CFG@LOOP"
                offset="[15]"/>
         <field description="Output Enable Turnaround time enable for RS-485 operation."
                format="enum"
                enum="d1e135856"
                id="USART0@CFG@OETA"
                offset="[18]"/>
         <field description="Automatic Address matching enable." format="enum" enum="d1e135902"
                id="USART0@CFG@AUTOADDR"
                offset="[19]"/>
         <field description="Output Enable Select." format="enum" enum="d1e135948"
                id="USART0@CFG@OESEL"
                offset="[20]"/>
         <field description="Output Enable Polarity." format="enum" enum="d1e135994"
                id="USART0@CFG@OEPOL"
                offset="[21]"/>
         <field description="Receive data polarity." format="enum" enum="d1e136040"
                id="USART0@CFG@RXPOL"
                offset="[22]"/>
         <field description="Transmit data polarity." format="enum" enum="d1e136086"
                id="USART0@CFG@TXPOL"
                offset="[23]"/>
      </register>
      <register description="USART Control register. USART control settings that are more likely to change during operation."
                format="hex0x"
                id="USART0@CTL"
                offset="0x4"
                size="4">
         <field description="Break Enable." format="enum" enum="d1e136160"
                id="USART0@CTL@TXBRKEN"
                offset="[1]"/>
         <field description="Enable address detect mode." format="enum" enum="d1e136206"
                id="USART0@CTL@ADDRDET"
                offset="[2]"/>
         <field description="Transmit Disable." format="enum" enum="d1e136252"
                id="USART0@CTL@TXDIS"
                offset="[6]"/>
         <field description="Continuous Clock generation. By default, SCLK is only output while data is being transmitted in synchronous mode."
                format="enum"
                enum="d1e136298"
                id="USART0@CTL@CC"
                offset="[8]"/>
         <field description="Clear Continuous Clock." format="enum" enum="d1e136344"
                id="USART0@CTL@CLRCCONRX"
                offset="[9]"/>
         <field description="Autobaud enable." format="enum" enum="d1e136391"
                id="USART0@CTL@AUTOBAUD"
                offset="[16]"/>
      </register>
      <register description="USART Status register. The complete status value can be read here. Writing ones clears some bits in the register. Some bits can be cleared by writing a 1 to them."
                format="hex0x"
                id="USART0@STAT"
                offset="0x8"
                size="4">
         <field description="Receiver Idle. When 0, indicates that the receiver is currently in the process of receiving data. When 1, indicates that the receiver is not currently in the process of receiving data."
                format="hex0x"
                id="USART0@STAT@RXIDLE"
                offset="[1]"/>
         <field description="Transmitter Idle. When 0, indicates that the transmitter is currently in the process of sending data.When 1, indicate that the transmitter is not currently in the process of sending data."
                format="hex0x"
                id="USART0@STAT@TXIDLE"
                offset="[3]"/>
         <field description="This bit reflects the current state of the CTS signal, regardless of the setting of the CTSEN bit in the CFG register. This will be the value of the CTS input pin unless loopback mode is enabled."
                format="hex0x"
                id="USART0@STAT@CTS"
                offset="[4]"/>
         <field description="This bit is set when a change in the state is detected for the CTS flag above. This bit is cleared by software."
                format="hex0x"
                id="USART0@STAT@DELTACTS"
                offset="[5]"/>
         <field description="Transmitter Disabled Status flag. When 1, this bit indicates that the USART transmitter is fully idle after being disabled via the TXDIS bit in the CFG register (TXDIS = 1)."
                format="hex0x"
                id="USART0@STAT@TXDISSTAT"
                offset="[6]"/>
         <field description="Received Break. This bit reflects the current state of the receiver break detection logic. It is set when the Un_RXD pin remains low for 16 bit times. Note that FRAMERRINT will also be set when this condition occurs because the stop bit(s) for the character would be missing. RXBRK is cleared when the Un_RXD pin goes high."
                format="hex0x"
                id="USART0@STAT@RXBRK"
                offset="[10]"/>
         <field description="This bit is set when a change in the state of receiver break detection occurs. Cleared by software."
                format="hex0x"
                id="USART0@STAT@DELTARXBRK"
                offset="[11]"/>
         <field description="This bit is set when a start is detected on the receiver input. Its purpose is primarily to allow wake-up from Deep-sleep or Power-down mode immediately when a start is detected. Cleared by software."
                format="hex0x"
                id="USART0@STAT@START"
                offset="[12]"/>
         <field description="Framing Error interrupt flag. This flag is set when a character is received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source."
                format="hex0x"
                id="USART0@STAT@FRAMERRINT"
                offset="[13]"/>
         <field description="Parity Error interrupt flag. This flag is set when a parity error is detected in a received character."
                format="hex0x"
                id="USART0@STAT@PARITYERRINT"
                offset="[14]"/>
         <field description="Received Noise interrupt flag. Three samples of received data are taken in order to determine the value of each received data bit, except in synchronous mode. This acts as a noise filter if one sample disagrees. This flag is set when a received data bit contains one disagreeing sample. This could indicate line noise, a baud rate or character format mismatch, or loss of synchronization during data reception."
                format="hex0x"
                id="USART0@STAT@RXNOISEINT"
                offset="[15]"/>
         <field description="Auto baud Error. An auto baud error can occur if the BRG counts to its limit before the end of the start bit that is being measured, essentially an auto baud time-out."
                format="hex0x"
                id="USART0@STAT@ABERR"
                offset="[16]"/>
      </register>
      <register description="Interrupt Enable read and Set register for USART (not FIFO) status. Contains individual interrupt enable bits for each potential USART interrupt. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set."
                format="hex0x"
                id="USART0@INTENSET"
                offset="0xc"
                size="4">
         <field description="When 1, enables an interrupt when the transmitter becomes idle (TXIDLE = 1)."
                format="hex0x"
                id="USART0@INTENSET@TXIDLEEN"
                offset="[3]"/>
         <field description="When 1, enables an interrupt when there is a change in the state of the CTS input."
                format="hex0x"
                id="USART0@INTENSET@DELTACTSEN"
                offset="[5]"/>
         <field description="When 1, enables an interrupt when the transmitter is fully disabled as indicated by the TXDISINT flag in STAT. See description of the TXDISINT bit for details."
                format="hex0x"
                id="USART0@INTENSET@TXDISEN"
                offset="[6]"/>
         <field description="When 1, enables an interrupt when a change of state has occurred in the detection of a received break condition (break condition asserted or deasserted)."
                format="hex0x"
                id="USART0@INTENSET@DELTARXBRKEN"
                offset="[11]"/>
         <field description="When 1, enables an interrupt when a received start bit has been detected."
                format="hex0x"
                id="USART0@INTENSET@STARTEN"
                offset="[12]"/>
         <field description="When 1, enables an interrupt when a framing error has been detected."
                format="hex0x"
                id="USART0@INTENSET@FRAMERREN"
                offset="[13]"/>
         <field description="When 1, enables an interrupt when a parity error has been detected."
                format="hex0x"
                id="USART0@INTENSET@PARITYERREN"
                offset="[14]"/>
         <field description="When 1, enables an interrupt when noise is detected. See description of the RXNOISEINT bit in Table 354."
                format="hex0x"
                id="USART0@INTENSET@RXNOISEEN"
                offset="[15]"/>
         <field description="When 1, enables an interrupt when an auto baud error occurs."
                format="hex0x"
                id="USART0@INTENSET@ABERREN"
                offset="[16]"/>
      </register>
      <register description="Interrupt Enable Clear register. Allows clearing any combination of bits in the INTENSET register. Writing a 1 to any implemented bit position causes the corresponding bit to be cleared."
                format="hex0x"
                id="USART0@INTENCLR"
                offset="0x10"
                writeOnly="true"
                size="4">
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@TXIDLECLR"
                offset="[3]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@DELTACTSCLR"
                offset="[5]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@TXDISCLR"
                offset="[6]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@DELTARXBRKCLR"
                offset="[11]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@STARTCLR"
                offset="[12]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@FRAMERRCLR"
                offset="[13]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@PARITYERRCLR"
                offset="[14]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@RXNOISECLR"
                offset="[15]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@ABERRCLR"
                offset="[16]"/>
      </register>
      <register description="Baud Rate Generator register. 16-bit integer baud rate divisor value."
                format="hex0x"
                id="USART0@BRG"
                offset="0x20"
                size="4">
         <field description="This value is used to divide the USART input clock to determine the baud rate, based on the input clock from the FRG. 0 = FCLK is used directly by the USART function. 1 = FCLK is divided by 2 before use by the USART function. 2 = FCLK is divided by 3 before use by the USART function. 0xFFFF = FCLK is divided by 65,536 before use by the USART function."
                format="hex0x"
                id="USART0@BRG@BRGVAL"
                offset="[15:0]"/>
      </register>
      <register description="Interrupt status register. Reflects interrupts that are currently enabled."
                format="hex0x"
                id="USART0@INTSTAT"
                offset="0x24"
                readOnly="true"
                size="4">
         <field description="Transmitter Idle status." format="hex0x"
                id="USART0@INTSTAT@TXIDLE"
                offset="[3]"/>
         <field description="This bit is set when a change in the state of the CTS input is detected."
                format="hex0x"
                id="USART0@INTSTAT@DELTACTS"
                offset="[5]"/>
         <field description="Transmitter Disabled Interrupt flag." format="hex0x"
                id="USART0@INTSTAT@TXDISINT"
                offset="[6]"/>
         <field description="This bit is set when a change in the state of receiver break detection occurs."
                format="hex0x"
                id="USART0@INTSTAT@DELTARXBRK"
                offset="[11]"/>
         <field description="This bit is set when a start is detected on the receiver input."
                format="hex0x"
                id="USART0@INTSTAT@START"
                offset="[12]"/>
         <field description="Framing Error interrupt flag." format="hex0x"
                id="USART0@INTSTAT@FRAMERRINT"
                offset="[13]"/>
         <field description="Parity Error interrupt flag." format="hex0x"
                id="USART0@INTSTAT@PARITYERRINT"
                offset="[14]"/>
         <field description="Received Noise interrupt flag." format="hex0x"
                id="USART0@INTSTAT@RXNOISEINT"
                offset="[15]"/>
         <field description="Auto baud Error Interrupt flag." format="hex0x"
                id="USART0@INTSTAT@ABERRINT"
                offset="[16]"/>
      </register>
      <register description="Oversample selection register for asynchronous communication."
                format="hex0x"
                id="USART0@OSR"
                offset="0x28"
                size="4">
         <field description="Oversample Selection Value. 0 to 3 = not supported 0x4 = 5 function clocks are used to transmit and receive each data bit. 0x5 = 6 function clocks are used to transmit and receive each data bit. 0xF= 16 function clocks are used to transmit and receive each data bit."
                format="hex0x"
                id="USART0@OSR@OSRVAL"
                offset="[3:0]"/>
      </register>
      <register description="Address register for automatic address matching." format="hex0x"
                id="USART0@ADDR"
                offset="0x2c"
                size="4">
         <field description="8-bit address used with automatic address matching. Used when address detection is enabled (ADDRDET in CTL = 1) and automatic address matching is enabled (AUTOADDR in CFG = 1)."
                format="hex0x"
                id="USART0@ADDR@ADDRESS"
                offset="[7:0]"/>
      </register>
      <register description="FIFO configuration and enable register." format="hex0x"
                id="USART0@FIFOCFG"
                offset="0xe00"
                size="4">
         <field description="Enable the transmit FIFO." format="enum" enum="d1e137423"
                id="USART0@FIFOCFG@ENABLETX"
                offset="[0]"/>
         <field description="Enable the receive FIFO." format="enum" enum="d1e137469"
                id="USART0@FIFOCFG@ENABLERX"
                offset="[1]"/>
         <field description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART."
                format="hex0x"
                id="USART0@FIFOCFG@SIZE"
                offset="[5:4]"/>
         <field description="DMA configuration for transmit." format="enum" enum="d1e137533"
                id="USART0@FIFOCFG@DMATX"
                offset="[12]"/>
         <field description="DMA configuration for receive." format="enum" enum="d1e137579"
                id="USART0@FIFOCFG@DMARX"
                offset="[13]"/>
         <field description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e137626"
                id="USART0@FIFOCFG@WAKETX"
                offset="[14]"/>
         <field description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e137672"
                id="USART0@FIFOCFG@WAKERX"
                offset="[15]"/>
         <field description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied."
                format="hex0x"
                id="USART0@FIFOCFG@EMPTYTX"
                offset="[16]"/>
         <field description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied."
                format="hex0x"
                id="USART0@FIFOCFG@EMPTYRX"
                offset="[17]"/>
         <field description="Pop FIFO for debug reads." format="enum" enum="d1e137754"
                id="USART0@FIFOCFG@POPDBG"
                offset="[18]"/>
      </register>
      <register description="FIFO status register." format="hex0x" id="USART0@FIFOSTAT"
                offset="0xe04"
                size="4">
         <field description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="USART0@FIFOSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="USART0@FIFOSTAT@RXERR"
                offset="[1]"/>
         <field description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register."
                format="hex0x"
                id="USART0@FIFOSTAT@PERINT"
                offset="[3]"/>
         <field description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data."
                format="hex0x"
                id="USART0@FIFOSTAT@TXEMPTY"
                offset="[4]"/>
         <field description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow."
                format="hex0x"
                id="USART0@FIFOSTAT@TXNOTFULL"
                offset="[5]"/>
         <field description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty."
                format="hex0x"
                id="USART0@FIFOSTAT@RXNOTEMPTY"
                offset="[6]"/>
         <field description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow."
                format="hex0x"
                id="USART0@FIFOSTAT@RXFULL"
                offset="[7]"/>
         <field description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0."
                format="hex0x"
                id="USART0@FIFOSTAT@TXLVL"
                offset="[12:8]"/>
         <field description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1."
                format="hex0x"
                id="USART0@FIFOSTAT@RXLVL"
                offset="[20:16]"/>
      </register>
      <register description="FIFO trigger settings for interrupt and DMA request."
                format="hex0x"
                id="USART0@FIFOTRIG"
                offset="0xe08"
                size="4">
         <field description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set."
                format="enum"
                enum="d1e138020"
                id="USART0@FIFOTRIG@TXLVLENA"
                offset="[0]"/>
         <field description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set."
                format="enum"
                enum="d1e138066"
                id="USART0@FIFOTRIG@RXLVLENA"
                offset="[1]"/>
         <field description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)."
                format="hex0x"
                id="USART0@FIFOTRIG@TXLVL"
                offset="[11:8]"/>
         <field description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)."
                format="hex0x"
                id="USART0@FIFOTRIG@RXLVL"
                offset="[19:16]"/>
      </register>
      <register description="FIFO interrupt enable set (enable) and read register."
                format="hex0x"
                id="USART0@FIFOINTENSET"
                offset="0xe10"
                size="4">
         <field description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e138176"
                id="USART0@FIFOINTENSET@TXERR"
                offset="[0]"/>
         <field description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e138222"
                id="USART0@FIFOINTENSET@RXERR"
                offset="[1]"/>
         <field description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e138268"
                id="USART0@FIFOINTENSET@TXLVL"
                offset="[2]"/>
         <field description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e138314"
                id="USART0@FIFOINTENSET@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt enable clear (disable) and read register."
                format="hex0x"
                id="USART0@FIFOINTENCLR"
                offset="0xe14"
                size="4">
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="USART0@FIFOINTENCLR@TXERR"
                offset="[0]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="USART0@FIFOINTENCLR@RXERR"
                offset="[1]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="USART0@FIFOINTENCLR@TXLVL"
                offset="[2]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="USART0@FIFOINTENCLR@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt status register." format="hex0x"
                id="USART0@FIFOINTSTAT"
                offset="0xe18"
                readOnly="true"
                size="4">
         <field description="TX FIFO error." format="hex0x" id="USART0@FIFOINTSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error." format="hex0x" id="USART0@FIFOINTSTAT@RXERR"
                offset="[1]"/>
         <field description="Transmit FIFO level interrupt." format="hex0x"
                id="USART0@FIFOINTSTAT@TXLVL"
                offset="[2]"/>
         <field description="Receive FIFO level interrupt." format="hex0x"
                id="USART0@FIFOINTSTAT@RXLVL"
                offset="[3]"/>
         <field description="Peripheral interrupt." format="hex0x"
                id="USART0@FIFOINTSTAT@PERINT"
                offset="[4]"/>
      </register>
      <register description="FIFO write data." format="hex0x" id="USART0@FIFOWR" offset="0xe20"
                size="4">
         <field description="Transmit data to the FIFO." format="hex0x"
                id="USART0@FIFOWR@TXDATA"
                offset="[8:0]"/>
      </register>
      <register description="FIFO read data." format="hex0x" id="USART0@FIFORD" offset="0xe30"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings."
                format="hex0x"
                id="USART0@FIFORD@RXDATA"
                offset="[8:0]"/>
         <field description="Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source."
                format="hex0x"
                id="USART0@FIFORD@FRAMERR"
                offset="[13]"/>
         <field description="Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character."
                format="hex0x"
                id="USART0@FIFORD@PARITYERR"
                offset="[14]"/>
         <field description="Received Noise flag. See description of the RxNoiseInt bit in Table 354."
                format="hex0x"
                id="USART0@FIFORD@RXNOISE"
                offset="[15]"/>
      </register>
      <register description="FIFO data read with no FIFO pop." format="hex0x"
                id="USART0@FIFORDNOPOP"
                offset="0xe40"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings."
                format="hex0x"
                id="USART0@FIFORDNOPOP@RXDATA"
                offset="[8:0]"/>
         <field description="Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source."
                format="hex0x"
                id="USART0@FIFORDNOPOP@FRAMERR"
                offset="[13]"/>
         <field description="Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character."
                format="hex0x"
                id="USART0@FIFORDNOPOP@PARITYERR"
                offset="[14]"/>
         <field description="Received Noise flag. See description of the RxNoiseInt bit in Table 354."
                format="hex0x"
                id="USART0@FIFORDNOPOP@RXNOISE"
                offset="[15]"/>
      </register>
      <register description="Peripheral identification register." format="hex0x" id="USART0@ID"
                offset="0xffc"
                readOnly="true"
                size="4">
         <field description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture."
                format="hex0x"
                id="USART0@ID@APERTURE"
                offset="[7:0]"/>
         <field description="Minor revision of module implementation." format="hex0x"
                id="USART0@ID@MINOR-REV"
                offset="[11:8]"/>
         <field description="Major revision of module implementation." format="hex0x"
                id="USART0@ID@MAJOR-REV"
                offset="[15:12]"/>
         <field description="Module identifier for the selected function." format="hex0x"
                id="USART0@ID@ID"
                offset="[31:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x USARTs" id="USART6" size="0x1000">
      <register description="USART Configuration register. Basic USART configuration settings that typically are not changed during operation."
                format="hex0x"
                id="USART0@CFG"
                offset="0x0"
                size="4">
         <field description="USART Enable." format="enum" enum="d1e135324"
                id="USART0@CFG@ENABLE"
                offset="[0]"/>
         <field description="Selects the data size for the USART." format="enum"
                enum="d1e135370"
                id="USART0@CFG@DATALEN"
                offset="[3:2]"/>
         <field description="Selects what type of parity is used by the USART." format="enum"
                enum="d1e135428"
                id="USART0@CFG@PARITYSEL"
                offset="[5:4]"/>
         <field description="Number of stop bits appended to transmitted data. Only a single stop bit is required for received data."
                format="enum"
                enum="d1e135486"
                id="USART0@CFG@STOPLEN"
                offset="[6]"/>
         <field description="Selects standard or 32 kHz clocking mode." format="enum"
                enum="d1e135532"
                id="USART0@CFG@MODE32K"
                offset="[7]"/>
         <field description="LIN break mode enable." format="enum" enum="d1e135579"
                id="USART0@CFG@LINMODE"
                offset="[8]"/>
         <field description="CTS Enable. Determines whether CTS is used for flow control. CTS can be from the input pin, or from the USART's own RTS if loopback mode is enabled."
                format="enum"
                enum="d1e135625"
                id="USART0@CFG@CTSEN"
                offset="[9]"/>
         <field description="Selects synchronous or asynchronous operation." format="enum"
                enum="d1e135671"
                id="USART0@CFG@SYNCEN"
                offset="[11]"/>
         <field description="Selects the clock polarity and sampling edge of received data in synchronous mode."
                format="enum"
                enum="d1e135717"
                id="USART0@CFG@CLKPOL"
                offset="[12]"/>
         <field description="Synchronous mode Master select." format="enum" enum="d1e135763"
                id="USART0@CFG@SYNCMST"
                offset="[14]"/>
         <field description="Selects data loopback mode." format="enum" enum="d1e135809"
                id="USART0@CFG@LOOP"
                offset="[15]"/>
         <field description="Output Enable Turnaround time enable for RS-485 operation."
                format="enum"
                enum="d1e135856"
                id="USART0@CFG@OETA"
                offset="[18]"/>
         <field description="Automatic Address matching enable." format="enum" enum="d1e135902"
                id="USART0@CFG@AUTOADDR"
                offset="[19]"/>
         <field description="Output Enable Select." format="enum" enum="d1e135948"
                id="USART0@CFG@OESEL"
                offset="[20]"/>
         <field description="Output Enable Polarity." format="enum" enum="d1e135994"
                id="USART0@CFG@OEPOL"
                offset="[21]"/>
         <field description="Receive data polarity." format="enum" enum="d1e136040"
                id="USART0@CFG@RXPOL"
                offset="[22]"/>
         <field description="Transmit data polarity." format="enum" enum="d1e136086"
                id="USART0@CFG@TXPOL"
                offset="[23]"/>
      </register>
      <register description="USART Control register. USART control settings that are more likely to change during operation."
                format="hex0x"
                id="USART0@CTL"
                offset="0x4"
                size="4">
         <field description="Break Enable." format="enum" enum="d1e136160"
                id="USART0@CTL@TXBRKEN"
                offset="[1]"/>
         <field description="Enable address detect mode." format="enum" enum="d1e136206"
                id="USART0@CTL@ADDRDET"
                offset="[2]"/>
         <field description="Transmit Disable." format="enum" enum="d1e136252"
                id="USART0@CTL@TXDIS"
                offset="[6]"/>
         <field description="Continuous Clock generation. By default, SCLK is only output while data is being transmitted in synchronous mode."
                format="enum"
                enum="d1e136298"
                id="USART0@CTL@CC"
                offset="[8]"/>
         <field description="Clear Continuous Clock." format="enum" enum="d1e136344"
                id="USART0@CTL@CLRCCONRX"
                offset="[9]"/>
         <field description="Autobaud enable." format="enum" enum="d1e136391"
                id="USART0@CTL@AUTOBAUD"
                offset="[16]"/>
      </register>
      <register description="USART Status register. The complete status value can be read here. Writing ones clears some bits in the register. Some bits can be cleared by writing a 1 to them."
                format="hex0x"
                id="USART0@STAT"
                offset="0x8"
                size="4">
         <field description="Receiver Idle. When 0, indicates that the receiver is currently in the process of receiving data. When 1, indicates that the receiver is not currently in the process of receiving data."
                format="hex0x"
                id="USART0@STAT@RXIDLE"
                offset="[1]"/>
         <field description="Transmitter Idle. When 0, indicates that the transmitter is currently in the process of sending data.When 1, indicate that the transmitter is not currently in the process of sending data."
                format="hex0x"
                id="USART0@STAT@TXIDLE"
                offset="[3]"/>
         <field description="This bit reflects the current state of the CTS signal, regardless of the setting of the CTSEN bit in the CFG register. This will be the value of the CTS input pin unless loopback mode is enabled."
                format="hex0x"
                id="USART0@STAT@CTS"
                offset="[4]"/>
         <field description="This bit is set when a change in the state is detected for the CTS flag above. This bit is cleared by software."
                format="hex0x"
                id="USART0@STAT@DELTACTS"
                offset="[5]"/>
         <field description="Transmitter Disabled Status flag. When 1, this bit indicates that the USART transmitter is fully idle after being disabled via the TXDIS bit in the CFG register (TXDIS = 1)."
                format="hex0x"
                id="USART0@STAT@TXDISSTAT"
                offset="[6]"/>
         <field description="Received Break. This bit reflects the current state of the receiver break detection logic. It is set when the Un_RXD pin remains low for 16 bit times. Note that FRAMERRINT will also be set when this condition occurs because the stop bit(s) for the character would be missing. RXBRK is cleared when the Un_RXD pin goes high."
                format="hex0x"
                id="USART0@STAT@RXBRK"
                offset="[10]"/>
         <field description="This bit is set when a change in the state of receiver break detection occurs. Cleared by software."
                format="hex0x"
                id="USART0@STAT@DELTARXBRK"
                offset="[11]"/>
         <field description="This bit is set when a start is detected on the receiver input. Its purpose is primarily to allow wake-up from Deep-sleep or Power-down mode immediately when a start is detected. Cleared by software."
                format="hex0x"
                id="USART0@STAT@START"
                offset="[12]"/>
         <field description="Framing Error interrupt flag. This flag is set when a character is received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source."
                format="hex0x"
                id="USART0@STAT@FRAMERRINT"
                offset="[13]"/>
         <field description="Parity Error interrupt flag. This flag is set when a parity error is detected in a received character."
                format="hex0x"
                id="USART0@STAT@PARITYERRINT"
                offset="[14]"/>
         <field description="Received Noise interrupt flag. Three samples of received data are taken in order to determine the value of each received data bit, except in synchronous mode. This acts as a noise filter if one sample disagrees. This flag is set when a received data bit contains one disagreeing sample. This could indicate line noise, a baud rate or character format mismatch, or loss of synchronization during data reception."
                format="hex0x"
                id="USART0@STAT@RXNOISEINT"
                offset="[15]"/>
         <field description="Auto baud Error. An auto baud error can occur if the BRG counts to its limit before the end of the start bit that is being measured, essentially an auto baud time-out."
                format="hex0x"
                id="USART0@STAT@ABERR"
                offset="[16]"/>
      </register>
      <register description="Interrupt Enable read and Set register for USART (not FIFO) status. Contains individual interrupt enable bits for each potential USART interrupt. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set."
                format="hex0x"
                id="USART0@INTENSET"
                offset="0xc"
                size="4">
         <field description="When 1, enables an interrupt when the transmitter becomes idle (TXIDLE = 1)."
                format="hex0x"
                id="USART0@INTENSET@TXIDLEEN"
                offset="[3]"/>
         <field description="When 1, enables an interrupt when there is a change in the state of the CTS input."
                format="hex0x"
                id="USART0@INTENSET@DELTACTSEN"
                offset="[5]"/>
         <field description="When 1, enables an interrupt when the transmitter is fully disabled as indicated by the TXDISINT flag in STAT. See description of the TXDISINT bit for details."
                format="hex0x"
                id="USART0@INTENSET@TXDISEN"
                offset="[6]"/>
         <field description="When 1, enables an interrupt when a change of state has occurred in the detection of a received break condition (break condition asserted or deasserted)."
                format="hex0x"
                id="USART0@INTENSET@DELTARXBRKEN"
                offset="[11]"/>
         <field description="When 1, enables an interrupt when a received start bit has been detected."
                format="hex0x"
                id="USART0@INTENSET@STARTEN"
                offset="[12]"/>
         <field description="When 1, enables an interrupt when a framing error has been detected."
                format="hex0x"
                id="USART0@INTENSET@FRAMERREN"
                offset="[13]"/>
         <field description="When 1, enables an interrupt when a parity error has been detected."
                format="hex0x"
                id="USART0@INTENSET@PARITYERREN"
                offset="[14]"/>
         <field description="When 1, enables an interrupt when noise is detected. See description of the RXNOISEINT bit in Table 354."
                format="hex0x"
                id="USART0@INTENSET@RXNOISEEN"
                offset="[15]"/>
         <field description="When 1, enables an interrupt when an auto baud error occurs."
                format="hex0x"
                id="USART0@INTENSET@ABERREN"
                offset="[16]"/>
      </register>
      <register description="Interrupt Enable Clear register. Allows clearing any combination of bits in the INTENSET register. Writing a 1 to any implemented bit position causes the corresponding bit to be cleared."
                format="hex0x"
                id="USART0@INTENCLR"
                offset="0x10"
                writeOnly="true"
                size="4">
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@TXIDLECLR"
                offset="[3]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@DELTACTSCLR"
                offset="[5]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@TXDISCLR"
                offset="[6]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@DELTARXBRKCLR"
                offset="[11]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@STARTCLR"
                offset="[12]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@FRAMERRCLR"
                offset="[13]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@PARITYERRCLR"
                offset="[14]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@RXNOISECLR"
                offset="[15]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@ABERRCLR"
                offset="[16]"/>
      </register>
      <register description="Baud Rate Generator register. 16-bit integer baud rate divisor value."
                format="hex0x"
                id="USART0@BRG"
                offset="0x20"
                size="4">
         <field description="This value is used to divide the USART input clock to determine the baud rate, based on the input clock from the FRG. 0 = FCLK is used directly by the USART function. 1 = FCLK is divided by 2 before use by the USART function. 2 = FCLK is divided by 3 before use by the USART function. 0xFFFF = FCLK is divided by 65,536 before use by the USART function."
                format="hex0x"
                id="USART0@BRG@BRGVAL"
                offset="[15:0]"/>
      </register>
      <register description="Interrupt status register. Reflects interrupts that are currently enabled."
                format="hex0x"
                id="USART0@INTSTAT"
                offset="0x24"
                readOnly="true"
                size="4">
         <field description="Transmitter Idle status." format="hex0x"
                id="USART0@INTSTAT@TXIDLE"
                offset="[3]"/>
         <field description="This bit is set when a change in the state of the CTS input is detected."
                format="hex0x"
                id="USART0@INTSTAT@DELTACTS"
                offset="[5]"/>
         <field description="Transmitter Disabled Interrupt flag." format="hex0x"
                id="USART0@INTSTAT@TXDISINT"
                offset="[6]"/>
         <field description="This bit is set when a change in the state of receiver break detection occurs."
                format="hex0x"
                id="USART0@INTSTAT@DELTARXBRK"
                offset="[11]"/>
         <field description="This bit is set when a start is detected on the receiver input."
                format="hex0x"
                id="USART0@INTSTAT@START"
                offset="[12]"/>
         <field description="Framing Error interrupt flag." format="hex0x"
                id="USART0@INTSTAT@FRAMERRINT"
                offset="[13]"/>
         <field description="Parity Error interrupt flag." format="hex0x"
                id="USART0@INTSTAT@PARITYERRINT"
                offset="[14]"/>
         <field description="Received Noise interrupt flag." format="hex0x"
                id="USART0@INTSTAT@RXNOISEINT"
                offset="[15]"/>
         <field description="Auto baud Error Interrupt flag." format="hex0x"
                id="USART0@INTSTAT@ABERRINT"
                offset="[16]"/>
      </register>
      <register description="Oversample selection register for asynchronous communication."
                format="hex0x"
                id="USART0@OSR"
                offset="0x28"
                size="4">
         <field description="Oversample Selection Value. 0 to 3 = not supported 0x4 = 5 function clocks are used to transmit and receive each data bit. 0x5 = 6 function clocks are used to transmit and receive each data bit. 0xF= 16 function clocks are used to transmit and receive each data bit."
                format="hex0x"
                id="USART0@OSR@OSRVAL"
                offset="[3:0]"/>
      </register>
      <register description="Address register for automatic address matching." format="hex0x"
                id="USART0@ADDR"
                offset="0x2c"
                size="4">
         <field description="8-bit address used with automatic address matching. Used when address detection is enabled (ADDRDET in CTL = 1) and automatic address matching is enabled (AUTOADDR in CFG = 1)."
                format="hex0x"
                id="USART0@ADDR@ADDRESS"
                offset="[7:0]"/>
      </register>
      <register description="FIFO configuration and enable register." format="hex0x"
                id="USART0@FIFOCFG"
                offset="0xe00"
                size="4">
         <field description="Enable the transmit FIFO." format="enum" enum="d1e137423"
                id="USART0@FIFOCFG@ENABLETX"
                offset="[0]"/>
         <field description="Enable the receive FIFO." format="enum" enum="d1e137469"
                id="USART0@FIFOCFG@ENABLERX"
                offset="[1]"/>
         <field description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART."
                format="hex0x"
                id="USART0@FIFOCFG@SIZE"
                offset="[5:4]"/>
         <field description="DMA configuration for transmit." format="enum" enum="d1e137533"
                id="USART0@FIFOCFG@DMATX"
                offset="[12]"/>
         <field description="DMA configuration for receive." format="enum" enum="d1e137579"
                id="USART0@FIFOCFG@DMARX"
                offset="[13]"/>
         <field description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e137626"
                id="USART0@FIFOCFG@WAKETX"
                offset="[14]"/>
         <field description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e137672"
                id="USART0@FIFOCFG@WAKERX"
                offset="[15]"/>
         <field description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied."
                format="hex0x"
                id="USART0@FIFOCFG@EMPTYTX"
                offset="[16]"/>
         <field description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied."
                format="hex0x"
                id="USART0@FIFOCFG@EMPTYRX"
                offset="[17]"/>
         <field description="Pop FIFO for debug reads." format="enum" enum="d1e137754"
                id="USART0@FIFOCFG@POPDBG"
                offset="[18]"/>
      </register>
      <register description="FIFO status register." format="hex0x" id="USART0@FIFOSTAT"
                offset="0xe04"
                size="4">
         <field description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="USART0@FIFOSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="USART0@FIFOSTAT@RXERR"
                offset="[1]"/>
         <field description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register."
                format="hex0x"
                id="USART0@FIFOSTAT@PERINT"
                offset="[3]"/>
         <field description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data."
                format="hex0x"
                id="USART0@FIFOSTAT@TXEMPTY"
                offset="[4]"/>
         <field description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow."
                format="hex0x"
                id="USART0@FIFOSTAT@TXNOTFULL"
                offset="[5]"/>
         <field description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty."
                format="hex0x"
                id="USART0@FIFOSTAT@RXNOTEMPTY"
                offset="[6]"/>
         <field description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow."
                format="hex0x"
                id="USART0@FIFOSTAT@RXFULL"
                offset="[7]"/>
         <field description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0."
                format="hex0x"
                id="USART0@FIFOSTAT@TXLVL"
                offset="[12:8]"/>
         <field description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1."
                format="hex0x"
                id="USART0@FIFOSTAT@RXLVL"
                offset="[20:16]"/>
      </register>
      <register description="FIFO trigger settings for interrupt and DMA request."
                format="hex0x"
                id="USART0@FIFOTRIG"
                offset="0xe08"
                size="4">
         <field description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set."
                format="enum"
                enum="d1e138020"
                id="USART0@FIFOTRIG@TXLVLENA"
                offset="[0]"/>
         <field description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set."
                format="enum"
                enum="d1e138066"
                id="USART0@FIFOTRIG@RXLVLENA"
                offset="[1]"/>
         <field description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)."
                format="hex0x"
                id="USART0@FIFOTRIG@TXLVL"
                offset="[11:8]"/>
         <field description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)."
                format="hex0x"
                id="USART0@FIFOTRIG@RXLVL"
                offset="[19:16]"/>
      </register>
      <register description="FIFO interrupt enable set (enable) and read register."
                format="hex0x"
                id="USART0@FIFOINTENSET"
                offset="0xe10"
                size="4">
         <field description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e138176"
                id="USART0@FIFOINTENSET@TXERR"
                offset="[0]"/>
         <field description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e138222"
                id="USART0@FIFOINTENSET@RXERR"
                offset="[1]"/>
         <field description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e138268"
                id="USART0@FIFOINTENSET@TXLVL"
                offset="[2]"/>
         <field description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e138314"
                id="USART0@FIFOINTENSET@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt enable clear (disable) and read register."
                format="hex0x"
                id="USART0@FIFOINTENCLR"
                offset="0xe14"
                size="4">
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="USART0@FIFOINTENCLR@TXERR"
                offset="[0]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="USART0@FIFOINTENCLR@RXERR"
                offset="[1]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="USART0@FIFOINTENCLR@TXLVL"
                offset="[2]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="USART0@FIFOINTENCLR@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt status register." format="hex0x"
                id="USART0@FIFOINTSTAT"
                offset="0xe18"
                readOnly="true"
                size="4">
         <field description="TX FIFO error." format="hex0x" id="USART0@FIFOINTSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error." format="hex0x" id="USART0@FIFOINTSTAT@RXERR"
                offset="[1]"/>
         <field description="Transmit FIFO level interrupt." format="hex0x"
                id="USART0@FIFOINTSTAT@TXLVL"
                offset="[2]"/>
         <field description="Receive FIFO level interrupt." format="hex0x"
                id="USART0@FIFOINTSTAT@RXLVL"
                offset="[3]"/>
         <field description="Peripheral interrupt." format="hex0x"
                id="USART0@FIFOINTSTAT@PERINT"
                offset="[4]"/>
      </register>
      <register description="FIFO write data." format="hex0x" id="USART0@FIFOWR" offset="0xe20"
                size="4">
         <field description="Transmit data to the FIFO." format="hex0x"
                id="USART0@FIFOWR@TXDATA"
                offset="[8:0]"/>
      </register>
      <register description="FIFO read data." format="hex0x" id="USART0@FIFORD" offset="0xe30"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings."
                format="hex0x"
                id="USART0@FIFORD@RXDATA"
                offset="[8:0]"/>
         <field description="Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source."
                format="hex0x"
                id="USART0@FIFORD@FRAMERR"
                offset="[13]"/>
         <field description="Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character."
                format="hex0x"
                id="USART0@FIFORD@PARITYERR"
                offset="[14]"/>
         <field description="Received Noise flag. See description of the RxNoiseInt bit in Table 354."
                format="hex0x"
                id="USART0@FIFORD@RXNOISE"
                offset="[15]"/>
      </register>
      <register description="FIFO data read with no FIFO pop." format="hex0x"
                id="USART0@FIFORDNOPOP"
                offset="0xe40"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings."
                format="hex0x"
                id="USART0@FIFORDNOPOP@RXDATA"
                offset="[8:0]"/>
         <field description="Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source."
                format="hex0x"
                id="USART0@FIFORDNOPOP@FRAMERR"
                offset="[13]"/>
         <field description="Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character."
                format="hex0x"
                id="USART0@FIFORDNOPOP@PARITYERR"
                offset="[14]"/>
         <field description="Received Noise flag. See description of the RxNoiseInt bit in Table 354."
                format="hex0x"
                id="USART0@FIFORDNOPOP@RXNOISE"
                offset="[15]"/>
      </register>
      <register description="Peripheral identification register." format="hex0x" id="USART0@ID"
                offset="0xffc"
                readOnly="true"
                size="4">
         <field description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture."
                format="hex0x"
                id="USART0@ID@APERTURE"
                offset="[7:0]"/>
         <field description="Minor revision of module implementation." format="hex0x"
                id="USART0@ID@MINOR-REV"
                offset="[11:8]"/>
         <field description="Major revision of module implementation." format="hex0x"
                id="USART0@ID@MAJOR-REV"
                offset="[15:12]"/>
         <field description="Module identifier for the selected function." format="hex0x"
                id="USART0@ID@ID"
                offset="[31:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x USARTs" id="USART7" size="0x1000">
      <register description="USART Configuration register. Basic USART configuration settings that typically are not changed during operation."
                format="hex0x"
                id="USART0@CFG"
                offset="0x0"
                size="4">
         <field description="USART Enable." format="enum" enum="d1e135324"
                id="USART0@CFG@ENABLE"
                offset="[0]"/>
         <field description="Selects the data size for the USART." format="enum"
                enum="d1e135370"
                id="USART0@CFG@DATALEN"
                offset="[3:2]"/>
         <field description="Selects what type of parity is used by the USART." format="enum"
                enum="d1e135428"
                id="USART0@CFG@PARITYSEL"
                offset="[5:4]"/>
         <field description="Number of stop bits appended to transmitted data. Only a single stop bit is required for received data."
                format="enum"
                enum="d1e135486"
                id="USART0@CFG@STOPLEN"
                offset="[6]"/>
         <field description="Selects standard or 32 kHz clocking mode." format="enum"
                enum="d1e135532"
                id="USART0@CFG@MODE32K"
                offset="[7]"/>
         <field description="LIN break mode enable." format="enum" enum="d1e135579"
                id="USART0@CFG@LINMODE"
                offset="[8]"/>
         <field description="CTS Enable. Determines whether CTS is used for flow control. CTS can be from the input pin, or from the USART's own RTS if loopback mode is enabled."
                format="enum"
                enum="d1e135625"
                id="USART0@CFG@CTSEN"
                offset="[9]"/>
         <field description="Selects synchronous or asynchronous operation." format="enum"
                enum="d1e135671"
                id="USART0@CFG@SYNCEN"
                offset="[11]"/>
         <field description="Selects the clock polarity and sampling edge of received data in synchronous mode."
                format="enum"
                enum="d1e135717"
                id="USART0@CFG@CLKPOL"
                offset="[12]"/>
         <field description="Synchronous mode Master select." format="enum" enum="d1e135763"
                id="USART0@CFG@SYNCMST"
                offset="[14]"/>
         <field description="Selects data loopback mode." format="enum" enum="d1e135809"
                id="USART0@CFG@LOOP"
                offset="[15]"/>
         <field description="Output Enable Turnaround time enable for RS-485 operation."
                format="enum"
                enum="d1e135856"
                id="USART0@CFG@OETA"
                offset="[18]"/>
         <field description="Automatic Address matching enable." format="enum" enum="d1e135902"
                id="USART0@CFG@AUTOADDR"
                offset="[19]"/>
         <field description="Output Enable Select." format="enum" enum="d1e135948"
                id="USART0@CFG@OESEL"
                offset="[20]"/>
         <field description="Output Enable Polarity." format="enum" enum="d1e135994"
                id="USART0@CFG@OEPOL"
                offset="[21]"/>
         <field description="Receive data polarity." format="enum" enum="d1e136040"
                id="USART0@CFG@RXPOL"
                offset="[22]"/>
         <field description="Transmit data polarity." format="enum" enum="d1e136086"
                id="USART0@CFG@TXPOL"
                offset="[23]"/>
      </register>
      <register description="USART Control register. USART control settings that are more likely to change during operation."
                format="hex0x"
                id="USART0@CTL"
                offset="0x4"
                size="4">
         <field description="Break Enable." format="enum" enum="d1e136160"
                id="USART0@CTL@TXBRKEN"
                offset="[1]"/>
         <field description="Enable address detect mode." format="enum" enum="d1e136206"
                id="USART0@CTL@ADDRDET"
                offset="[2]"/>
         <field description="Transmit Disable." format="enum" enum="d1e136252"
                id="USART0@CTL@TXDIS"
                offset="[6]"/>
         <field description="Continuous Clock generation. By default, SCLK is only output while data is being transmitted in synchronous mode."
                format="enum"
                enum="d1e136298"
                id="USART0@CTL@CC"
                offset="[8]"/>
         <field description="Clear Continuous Clock." format="enum" enum="d1e136344"
                id="USART0@CTL@CLRCCONRX"
                offset="[9]"/>
         <field description="Autobaud enable." format="enum" enum="d1e136391"
                id="USART0@CTL@AUTOBAUD"
                offset="[16]"/>
      </register>
      <register description="USART Status register. The complete status value can be read here. Writing ones clears some bits in the register. Some bits can be cleared by writing a 1 to them."
                format="hex0x"
                id="USART0@STAT"
                offset="0x8"
                size="4">
         <field description="Receiver Idle. When 0, indicates that the receiver is currently in the process of receiving data. When 1, indicates that the receiver is not currently in the process of receiving data."
                format="hex0x"
                id="USART0@STAT@RXIDLE"
                offset="[1]"/>
         <field description="Transmitter Idle. When 0, indicates that the transmitter is currently in the process of sending data.When 1, indicate that the transmitter is not currently in the process of sending data."
                format="hex0x"
                id="USART0@STAT@TXIDLE"
                offset="[3]"/>
         <field description="This bit reflects the current state of the CTS signal, regardless of the setting of the CTSEN bit in the CFG register. This will be the value of the CTS input pin unless loopback mode is enabled."
                format="hex0x"
                id="USART0@STAT@CTS"
                offset="[4]"/>
         <field description="This bit is set when a change in the state is detected for the CTS flag above. This bit is cleared by software."
                format="hex0x"
                id="USART0@STAT@DELTACTS"
                offset="[5]"/>
         <field description="Transmitter Disabled Status flag. When 1, this bit indicates that the USART transmitter is fully idle after being disabled via the TXDIS bit in the CFG register (TXDIS = 1)."
                format="hex0x"
                id="USART0@STAT@TXDISSTAT"
                offset="[6]"/>
         <field description="Received Break. This bit reflects the current state of the receiver break detection logic. It is set when the Un_RXD pin remains low for 16 bit times. Note that FRAMERRINT will also be set when this condition occurs because the stop bit(s) for the character would be missing. RXBRK is cleared when the Un_RXD pin goes high."
                format="hex0x"
                id="USART0@STAT@RXBRK"
                offset="[10]"/>
         <field description="This bit is set when a change in the state of receiver break detection occurs. Cleared by software."
                format="hex0x"
                id="USART0@STAT@DELTARXBRK"
                offset="[11]"/>
         <field description="This bit is set when a start is detected on the receiver input. Its purpose is primarily to allow wake-up from Deep-sleep or Power-down mode immediately when a start is detected. Cleared by software."
                format="hex0x"
                id="USART0@STAT@START"
                offset="[12]"/>
         <field description="Framing Error interrupt flag. This flag is set when a character is received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source."
                format="hex0x"
                id="USART0@STAT@FRAMERRINT"
                offset="[13]"/>
         <field description="Parity Error interrupt flag. This flag is set when a parity error is detected in a received character."
                format="hex0x"
                id="USART0@STAT@PARITYERRINT"
                offset="[14]"/>
         <field description="Received Noise interrupt flag. Three samples of received data are taken in order to determine the value of each received data bit, except in synchronous mode. This acts as a noise filter if one sample disagrees. This flag is set when a received data bit contains one disagreeing sample. This could indicate line noise, a baud rate or character format mismatch, or loss of synchronization during data reception."
                format="hex0x"
                id="USART0@STAT@RXNOISEINT"
                offset="[15]"/>
         <field description="Auto baud Error. An auto baud error can occur if the BRG counts to its limit before the end of the start bit that is being measured, essentially an auto baud time-out."
                format="hex0x"
                id="USART0@STAT@ABERR"
                offset="[16]"/>
      </register>
      <register description="Interrupt Enable read and Set register for USART (not FIFO) status. Contains individual interrupt enable bits for each potential USART interrupt. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set."
                format="hex0x"
                id="USART0@INTENSET"
                offset="0xc"
                size="4">
         <field description="When 1, enables an interrupt when the transmitter becomes idle (TXIDLE = 1)."
                format="hex0x"
                id="USART0@INTENSET@TXIDLEEN"
                offset="[3]"/>
         <field description="When 1, enables an interrupt when there is a change in the state of the CTS input."
                format="hex0x"
                id="USART0@INTENSET@DELTACTSEN"
                offset="[5]"/>
         <field description="When 1, enables an interrupt when the transmitter is fully disabled as indicated by the TXDISINT flag in STAT. See description of the TXDISINT bit for details."
                format="hex0x"
                id="USART0@INTENSET@TXDISEN"
                offset="[6]"/>
         <field description="When 1, enables an interrupt when a change of state has occurred in the detection of a received break condition (break condition asserted or deasserted)."
                format="hex0x"
                id="USART0@INTENSET@DELTARXBRKEN"
                offset="[11]"/>
         <field description="When 1, enables an interrupt when a received start bit has been detected."
                format="hex0x"
                id="USART0@INTENSET@STARTEN"
                offset="[12]"/>
         <field description="When 1, enables an interrupt when a framing error has been detected."
                format="hex0x"
                id="USART0@INTENSET@FRAMERREN"
                offset="[13]"/>
         <field description="When 1, enables an interrupt when a parity error has been detected."
                format="hex0x"
                id="USART0@INTENSET@PARITYERREN"
                offset="[14]"/>
         <field description="When 1, enables an interrupt when noise is detected. See description of the RXNOISEINT bit in Table 354."
                format="hex0x"
                id="USART0@INTENSET@RXNOISEEN"
                offset="[15]"/>
         <field description="When 1, enables an interrupt when an auto baud error occurs."
                format="hex0x"
                id="USART0@INTENSET@ABERREN"
                offset="[16]"/>
      </register>
      <register description="Interrupt Enable Clear register. Allows clearing any combination of bits in the INTENSET register. Writing a 1 to any implemented bit position causes the corresponding bit to be cleared."
                format="hex0x"
                id="USART0@INTENCLR"
                offset="0x10"
                writeOnly="true"
                size="4">
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@TXIDLECLR"
                offset="[3]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@DELTACTSCLR"
                offset="[5]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@TXDISCLR"
                offset="[6]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@DELTARXBRKCLR"
                offset="[11]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@STARTCLR"
                offset="[12]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@FRAMERRCLR"
                offset="[13]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@PARITYERRCLR"
                offset="[14]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@RXNOISECLR"
                offset="[15]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@ABERRCLR"
                offset="[16]"/>
      </register>
      <register description="Baud Rate Generator register. 16-bit integer baud rate divisor value."
                format="hex0x"
                id="USART0@BRG"
                offset="0x20"
                size="4">
         <field description="This value is used to divide the USART input clock to determine the baud rate, based on the input clock from the FRG. 0 = FCLK is used directly by the USART function. 1 = FCLK is divided by 2 before use by the USART function. 2 = FCLK is divided by 3 before use by the USART function. 0xFFFF = FCLK is divided by 65,536 before use by the USART function."
                format="hex0x"
                id="USART0@BRG@BRGVAL"
                offset="[15:0]"/>
      </register>
      <register description="Interrupt status register. Reflects interrupts that are currently enabled."
                format="hex0x"
                id="USART0@INTSTAT"
                offset="0x24"
                readOnly="true"
                size="4">
         <field description="Transmitter Idle status." format="hex0x"
                id="USART0@INTSTAT@TXIDLE"
                offset="[3]"/>
         <field description="This bit is set when a change in the state of the CTS input is detected."
                format="hex0x"
                id="USART0@INTSTAT@DELTACTS"
                offset="[5]"/>
         <field description="Transmitter Disabled Interrupt flag." format="hex0x"
                id="USART0@INTSTAT@TXDISINT"
                offset="[6]"/>
         <field description="This bit is set when a change in the state of receiver break detection occurs."
                format="hex0x"
                id="USART0@INTSTAT@DELTARXBRK"
                offset="[11]"/>
         <field description="This bit is set when a start is detected on the receiver input."
                format="hex0x"
                id="USART0@INTSTAT@START"
                offset="[12]"/>
         <field description="Framing Error interrupt flag." format="hex0x"
                id="USART0@INTSTAT@FRAMERRINT"
                offset="[13]"/>
         <field description="Parity Error interrupt flag." format="hex0x"
                id="USART0@INTSTAT@PARITYERRINT"
                offset="[14]"/>
         <field description="Received Noise interrupt flag." format="hex0x"
                id="USART0@INTSTAT@RXNOISEINT"
                offset="[15]"/>
         <field description="Auto baud Error Interrupt flag." format="hex0x"
                id="USART0@INTSTAT@ABERRINT"
                offset="[16]"/>
      </register>
      <register description="Oversample selection register for asynchronous communication."
                format="hex0x"
                id="USART0@OSR"
                offset="0x28"
                size="4">
         <field description="Oversample Selection Value. 0 to 3 = not supported 0x4 = 5 function clocks are used to transmit and receive each data bit. 0x5 = 6 function clocks are used to transmit and receive each data bit. 0xF= 16 function clocks are used to transmit and receive each data bit."
                format="hex0x"
                id="USART0@OSR@OSRVAL"
                offset="[3:0]"/>
      </register>
      <register description="Address register for automatic address matching." format="hex0x"
                id="USART0@ADDR"
                offset="0x2c"
                size="4">
         <field description="8-bit address used with automatic address matching. Used when address detection is enabled (ADDRDET in CTL = 1) and automatic address matching is enabled (AUTOADDR in CFG = 1)."
                format="hex0x"
                id="USART0@ADDR@ADDRESS"
                offset="[7:0]"/>
      </register>
      <register description="FIFO configuration and enable register." format="hex0x"
                id="USART0@FIFOCFG"
                offset="0xe00"
                size="4">
         <field description="Enable the transmit FIFO." format="enum" enum="d1e137423"
                id="USART0@FIFOCFG@ENABLETX"
                offset="[0]"/>
         <field description="Enable the receive FIFO." format="enum" enum="d1e137469"
                id="USART0@FIFOCFG@ENABLERX"
                offset="[1]"/>
         <field description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART."
                format="hex0x"
                id="USART0@FIFOCFG@SIZE"
                offset="[5:4]"/>
         <field description="DMA configuration for transmit." format="enum" enum="d1e137533"
                id="USART0@FIFOCFG@DMATX"
                offset="[12]"/>
         <field description="DMA configuration for receive." format="enum" enum="d1e137579"
                id="USART0@FIFOCFG@DMARX"
                offset="[13]"/>
         <field description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e137626"
                id="USART0@FIFOCFG@WAKETX"
                offset="[14]"/>
         <field description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e137672"
                id="USART0@FIFOCFG@WAKERX"
                offset="[15]"/>
         <field description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied."
                format="hex0x"
                id="USART0@FIFOCFG@EMPTYTX"
                offset="[16]"/>
         <field description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied."
                format="hex0x"
                id="USART0@FIFOCFG@EMPTYRX"
                offset="[17]"/>
         <field description="Pop FIFO for debug reads." format="enum" enum="d1e137754"
                id="USART0@FIFOCFG@POPDBG"
                offset="[18]"/>
      </register>
      <register description="FIFO status register." format="hex0x" id="USART0@FIFOSTAT"
                offset="0xe04"
                size="4">
         <field description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="USART0@FIFOSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="USART0@FIFOSTAT@RXERR"
                offset="[1]"/>
         <field description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register."
                format="hex0x"
                id="USART0@FIFOSTAT@PERINT"
                offset="[3]"/>
         <field description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data."
                format="hex0x"
                id="USART0@FIFOSTAT@TXEMPTY"
                offset="[4]"/>
         <field description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow."
                format="hex0x"
                id="USART0@FIFOSTAT@TXNOTFULL"
                offset="[5]"/>
         <field description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty."
                format="hex0x"
                id="USART0@FIFOSTAT@RXNOTEMPTY"
                offset="[6]"/>
         <field description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow."
                format="hex0x"
                id="USART0@FIFOSTAT@RXFULL"
                offset="[7]"/>
         <field description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0."
                format="hex0x"
                id="USART0@FIFOSTAT@TXLVL"
                offset="[12:8]"/>
         <field description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1."
                format="hex0x"
                id="USART0@FIFOSTAT@RXLVL"
                offset="[20:16]"/>
      </register>
      <register description="FIFO trigger settings for interrupt and DMA request."
                format="hex0x"
                id="USART0@FIFOTRIG"
                offset="0xe08"
                size="4">
         <field description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set."
                format="enum"
                enum="d1e138020"
                id="USART0@FIFOTRIG@TXLVLENA"
                offset="[0]"/>
         <field description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set."
                format="enum"
                enum="d1e138066"
                id="USART0@FIFOTRIG@RXLVLENA"
                offset="[1]"/>
         <field description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)."
                format="hex0x"
                id="USART0@FIFOTRIG@TXLVL"
                offset="[11:8]"/>
         <field description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)."
                format="hex0x"
                id="USART0@FIFOTRIG@RXLVL"
                offset="[19:16]"/>
      </register>
      <register description="FIFO interrupt enable set (enable) and read register."
                format="hex0x"
                id="USART0@FIFOINTENSET"
                offset="0xe10"
                size="4">
         <field description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e138176"
                id="USART0@FIFOINTENSET@TXERR"
                offset="[0]"/>
         <field description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e138222"
                id="USART0@FIFOINTENSET@RXERR"
                offset="[1]"/>
         <field description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e138268"
                id="USART0@FIFOINTENSET@TXLVL"
                offset="[2]"/>
         <field description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e138314"
                id="USART0@FIFOINTENSET@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt enable clear (disable) and read register."
                format="hex0x"
                id="USART0@FIFOINTENCLR"
                offset="0xe14"
                size="4">
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="USART0@FIFOINTENCLR@TXERR"
                offset="[0]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="USART0@FIFOINTENCLR@RXERR"
                offset="[1]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="USART0@FIFOINTENCLR@TXLVL"
                offset="[2]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="USART0@FIFOINTENCLR@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt status register." format="hex0x"
                id="USART0@FIFOINTSTAT"
                offset="0xe18"
                readOnly="true"
                size="4">
         <field description="TX FIFO error." format="hex0x" id="USART0@FIFOINTSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error." format="hex0x" id="USART0@FIFOINTSTAT@RXERR"
                offset="[1]"/>
         <field description="Transmit FIFO level interrupt." format="hex0x"
                id="USART0@FIFOINTSTAT@TXLVL"
                offset="[2]"/>
         <field description="Receive FIFO level interrupt." format="hex0x"
                id="USART0@FIFOINTSTAT@RXLVL"
                offset="[3]"/>
         <field description="Peripheral interrupt." format="hex0x"
                id="USART0@FIFOINTSTAT@PERINT"
                offset="[4]"/>
      </register>
      <register description="FIFO write data." format="hex0x" id="USART0@FIFOWR" offset="0xe20"
                size="4">
         <field description="Transmit data to the FIFO." format="hex0x"
                id="USART0@FIFOWR@TXDATA"
                offset="[8:0]"/>
      </register>
      <register description="FIFO read data." format="hex0x" id="USART0@FIFORD" offset="0xe30"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings."
                format="hex0x"
                id="USART0@FIFORD@RXDATA"
                offset="[8:0]"/>
         <field description="Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source."
                format="hex0x"
                id="USART0@FIFORD@FRAMERR"
                offset="[13]"/>
         <field description="Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character."
                format="hex0x"
                id="USART0@FIFORD@PARITYERR"
                offset="[14]"/>
         <field description="Received Noise flag. See description of the RxNoiseInt bit in Table 354."
                format="hex0x"
                id="USART0@FIFORD@RXNOISE"
                offset="[15]"/>
      </register>
      <register description="FIFO data read with no FIFO pop." format="hex0x"
                id="USART0@FIFORDNOPOP"
                offset="0xe40"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings."
                format="hex0x"
                id="USART0@FIFORDNOPOP@RXDATA"
                offset="[8:0]"/>
         <field description="Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source."
                format="hex0x"
                id="USART0@FIFORDNOPOP@FRAMERR"
                offset="[13]"/>
         <field description="Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character."
                format="hex0x"
                id="USART0@FIFORDNOPOP@PARITYERR"
                offset="[14]"/>
         <field description="Received Noise flag. See description of the RxNoiseInt bit in Table 354."
                format="hex0x"
                id="USART0@FIFORDNOPOP@RXNOISE"
                offset="[15]"/>
      </register>
      <register description="Peripheral identification register." format="hex0x" id="USART0@ID"
                offset="0xffc"
                readOnly="true"
                size="4">
         <field description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture."
                format="hex0x"
                id="USART0@ID@APERTURE"
                offset="[7:0]"/>
         <field description="Minor revision of module implementation." format="hex0x"
                id="USART0@ID@MINOR-REV"
                offset="[11:8]"/>
         <field description="Major revision of module implementation." format="hex0x"
                id="USART0@ID@MAJOR-REV"
                offset="[15:12]"/>
         <field description="Module identifier for the selected function." format="hex0x"
                id="USART0@ID@ID"
                offset="[31:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x USARTs" id="USART8" size="0x1000">
      <register description="USART Configuration register. Basic USART configuration settings that typically are not changed during operation."
                format="hex0x"
                id="USART0@CFG"
                offset="0x0"
                size="4">
         <field description="USART Enable." format="enum" enum="d1e135324"
                id="USART0@CFG@ENABLE"
                offset="[0]"/>
         <field description="Selects the data size for the USART." format="enum"
                enum="d1e135370"
                id="USART0@CFG@DATALEN"
                offset="[3:2]"/>
         <field description="Selects what type of parity is used by the USART." format="enum"
                enum="d1e135428"
                id="USART0@CFG@PARITYSEL"
                offset="[5:4]"/>
         <field description="Number of stop bits appended to transmitted data. Only a single stop bit is required for received data."
                format="enum"
                enum="d1e135486"
                id="USART0@CFG@STOPLEN"
                offset="[6]"/>
         <field description="Selects standard or 32 kHz clocking mode." format="enum"
                enum="d1e135532"
                id="USART0@CFG@MODE32K"
                offset="[7]"/>
         <field description="LIN break mode enable." format="enum" enum="d1e135579"
                id="USART0@CFG@LINMODE"
                offset="[8]"/>
         <field description="CTS Enable. Determines whether CTS is used for flow control. CTS can be from the input pin, or from the USART's own RTS if loopback mode is enabled."
                format="enum"
                enum="d1e135625"
                id="USART0@CFG@CTSEN"
                offset="[9]"/>
         <field description="Selects synchronous or asynchronous operation." format="enum"
                enum="d1e135671"
                id="USART0@CFG@SYNCEN"
                offset="[11]"/>
         <field description="Selects the clock polarity and sampling edge of received data in synchronous mode."
                format="enum"
                enum="d1e135717"
                id="USART0@CFG@CLKPOL"
                offset="[12]"/>
         <field description="Synchronous mode Master select." format="enum" enum="d1e135763"
                id="USART0@CFG@SYNCMST"
                offset="[14]"/>
         <field description="Selects data loopback mode." format="enum" enum="d1e135809"
                id="USART0@CFG@LOOP"
                offset="[15]"/>
         <field description="Output Enable Turnaround time enable for RS-485 operation."
                format="enum"
                enum="d1e135856"
                id="USART0@CFG@OETA"
                offset="[18]"/>
         <field description="Automatic Address matching enable." format="enum" enum="d1e135902"
                id="USART0@CFG@AUTOADDR"
                offset="[19]"/>
         <field description="Output Enable Select." format="enum" enum="d1e135948"
                id="USART0@CFG@OESEL"
                offset="[20]"/>
         <field description="Output Enable Polarity." format="enum" enum="d1e135994"
                id="USART0@CFG@OEPOL"
                offset="[21]"/>
         <field description="Receive data polarity." format="enum" enum="d1e136040"
                id="USART0@CFG@RXPOL"
                offset="[22]"/>
         <field description="Transmit data polarity." format="enum" enum="d1e136086"
                id="USART0@CFG@TXPOL"
                offset="[23]"/>
      </register>
      <register description="USART Control register. USART control settings that are more likely to change during operation."
                format="hex0x"
                id="USART0@CTL"
                offset="0x4"
                size="4">
         <field description="Break Enable." format="enum" enum="d1e136160"
                id="USART0@CTL@TXBRKEN"
                offset="[1]"/>
         <field description="Enable address detect mode." format="enum" enum="d1e136206"
                id="USART0@CTL@ADDRDET"
                offset="[2]"/>
         <field description="Transmit Disable." format="enum" enum="d1e136252"
                id="USART0@CTL@TXDIS"
                offset="[6]"/>
         <field description="Continuous Clock generation. By default, SCLK is only output while data is being transmitted in synchronous mode."
                format="enum"
                enum="d1e136298"
                id="USART0@CTL@CC"
                offset="[8]"/>
         <field description="Clear Continuous Clock." format="enum" enum="d1e136344"
                id="USART0@CTL@CLRCCONRX"
                offset="[9]"/>
         <field description="Autobaud enable." format="enum" enum="d1e136391"
                id="USART0@CTL@AUTOBAUD"
                offset="[16]"/>
      </register>
      <register description="USART Status register. The complete status value can be read here. Writing ones clears some bits in the register. Some bits can be cleared by writing a 1 to them."
                format="hex0x"
                id="USART0@STAT"
                offset="0x8"
                size="4">
         <field description="Receiver Idle. When 0, indicates that the receiver is currently in the process of receiving data. When 1, indicates that the receiver is not currently in the process of receiving data."
                format="hex0x"
                id="USART0@STAT@RXIDLE"
                offset="[1]"/>
         <field description="Transmitter Idle. When 0, indicates that the transmitter is currently in the process of sending data.When 1, indicate that the transmitter is not currently in the process of sending data."
                format="hex0x"
                id="USART0@STAT@TXIDLE"
                offset="[3]"/>
         <field description="This bit reflects the current state of the CTS signal, regardless of the setting of the CTSEN bit in the CFG register. This will be the value of the CTS input pin unless loopback mode is enabled."
                format="hex0x"
                id="USART0@STAT@CTS"
                offset="[4]"/>
         <field description="This bit is set when a change in the state is detected for the CTS flag above. This bit is cleared by software."
                format="hex0x"
                id="USART0@STAT@DELTACTS"
                offset="[5]"/>
         <field description="Transmitter Disabled Status flag. When 1, this bit indicates that the USART transmitter is fully idle after being disabled via the TXDIS bit in the CFG register (TXDIS = 1)."
                format="hex0x"
                id="USART0@STAT@TXDISSTAT"
                offset="[6]"/>
         <field description="Received Break. This bit reflects the current state of the receiver break detection logic. It is set when the Un_RXD pin remains low for 16 bit times. Note that FRAMERRINT will also be set when this condition occurs because the stop bit(s) for the character would be missing. RXBRK is cleared when the Un_RXD pin goes high."
                format="hex0x"
                id="USART0@STAT@RXBRK"
                offset="[10]"/>
         <field description="This bit is set when a change in the state of receiver break detection occurs. Cleared by software."
                format="hex0x"
                id="USART0@STAT@DELTARXBRK"
                offset="[11]"/>
         <field description="This bit is set when a start is detected on the receiver input. Its purpose is primarily to allow wake-up from Deep-sleep or Power-down mode immediately when a start is detected. Cleared by software."
                format="hex0x"
                id="USART0@STAT@START"
                offset="[12]"/>
         <field description="Framing Error interrupt flag. This flag is set when a character is received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source."
                format="hex0x"
                id="USART0@STAT@FRAMERRINT"
                offset="[13]"/>
         <field description="Parity Error interrupt flag. This flag is set when a parity error is detected in a received character."
                format="hex0x"
                id="USART0@STAT@PARITYERRINT"
                offset="[14]"/>
         <field description="Received Noise interrupt flag. Three samples of received data are taken in order to determine the value of each received data bit, except in synchronous mode. This acts as a noise filter if one sample disagrees. This flag is set when a received data bit contains one disagreeing sample. This could indicate line noise, a baud rate or character format mismatch, or loss of synchronization during data reception."
                format="hex0x"
                id="USART0@STAT@RXNOISEINT"
                offset="[15]"/>
         <field description="Auto baud Error. An auto baud error can occur if the BRG counts to its limit before the end of the start bit that is being measured, essentially an auto baud time-out."
                format="hex0x"
                id="USART0@STAT@ABERR"
                offset="[16]"/>
      </register>
      <register description="Interrupt Enable read and Set register for USART (not FIFO) status. Contains individual interrupt enable bits for each potential USART interrupt. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set."
                format="hex0x"
                id="USART0@INTENSET"
                offset="0xc"
                size="4">
         <field description="When 1, enables an interrupt when the transmitter becomes idle (TXIDLE = 1)."
                format="hex0x"
                id="USART0@INTENSET@TXIDLEEN"
                offset="[3]"/>
         <field description="When 1, enables an interrupt when there is a change in the state of the CTS input."
                format="hex0x"
                id="USART0@INTENSET@DELTACTSEN"
                offset="[5]"/>
         <field description="When 1, enables an interrupt when the transmitter is fully disabled as indicated by the TXDISINT flag in STAT. See description of the TXDISINT bit for details."
                format="hex0x"
                id="USART0@INTENSET@TXDISEN"
                offset="[6]"/>
         <field description="When 1, enables an interrupt when a change of state has occurred in the detection of a received break condition (break condition asserted or deasserted)."
                format="hex0x"
                id="USART0@INTENSET@DELTARXBRKEN"
                offset="[11]"/>
         <field description="When 1, enables an interrupt when a received start bit has been detected."
                format="hex0x"
                id="USART0@INTENSET@STARTEN"
                offset="[12]"/>
         <field description="When 1, enables an interrupt when a framing error has been detected."
                format="hex0x"
                id="USART0@INTENSET@FRAMERREN"
                offset="[13]"/>
         <field description="When 1, enables an interrupt when a parity error has been detected."
                format="hex0x"
                id="USART0@INTENSET@PARITYERREN"
                offset="[14]"/>
         <field description="When 1, enables an interrupt when noise is detected. See description of the RXNOISEINT bit in Table 354."
                format="hex0x"
                id="USART0@INTENSET@RXNOISEEN"
                offset="[15]"/>
         <field description="When 1, enables an interrupt when an auto baud error occurs."
                format="hex0x"
                id="USART0@INTENSET@ABERREN"
                offset="[16]"/>
      </register>
      <register description="Interrupt Enable Clear register. Allows clearing any combination of bits in the INTENSET register. Writing a 1 to any implemented bit position causes the corresponding bit to be cleared."
                format="hex0x"
                id="USART0@INTENCLR"
                offset="0x10"
                writeOnly="true"
                size="4">
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@TXIDLECLR"
                offset="[3]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@DELTACTSCLR"
                offset="[5]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@TXDISCLR"
                offset="[6]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@DELTARXBRKCLR"
                offset="[11]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@STARTCLR"
                offset="[12]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@FRAMERRCLR"
                offset="[13]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@PARITYERRCLR"
                offset="[14]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@RXNOISECLR"
                offset="[15]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@ABERRCLR"
                offset="[16]"/>
      </register>
      <register description="Baud Rate Generator register. 16-bit integer baud rate divisor value."
                format="hex0x"
                id="USART0@BRG"
                offset="0x20"
                size="4">
         <field description="This value is used to divide the USART input clock to determine the baud rate, based on the input clock from the FRG. 0 = FCLK is used directly by the USART function. 1 = FCLK is divided by 2 before use by the USART function. 2 = FCLK is divided by 3 before use by the USART function. 0xFFFF = FCLK is divided by 65,536 before use by the USART function."
                format="hex0x"
                id="USART0@BRG@BRGVAL"
                offset="[15:0]"/>
      </register>
      <register description="Interrupt status register. Reflects interrupts that are currently enabled."
                format="hex0x"
                id="USART0@INTSTAT"
                offset="0x24"
                readOnly="true"
                size="4">
         <field description="Transmitter Idle status." format="hex0x"
                id="USART0@INTSTAT@TXIDLE"
                offset="[3]"/>
         <field description="This bit is set when a change in the state of the CTS input is detected."
                format="hex0x"
                id="USART0@INTSTAT@DELTACTS"
                offset="[5]"/>
         <field description="Transmitter Disabled Interrupt flag." format="hex0x"
                id="USART0@INTSTAT@TXDISINT"
                offset="[6]"/>
         <field description="This bit is set when a change in the state of receiver break detection occurs."
                format="hex0x"
                id="USART0@INTSTAT@DELTARXBRK"
                offset="[11]"/>
         <field description="This bit is set when a start is detected on the receiver input."
                format="hex0x"
                id="USART0@INTSTAT@START"
                offset="[12]"/>
         <field description="Framing Error interrupt flag." format="hex0x"
                id="USART0@INTSTAT@FRAMERRINT"
                offset="[13]"/>
         <field description="Parity Error interrupt flag." format="hex0x"
                id="USART0@INTSTAT@PARITYERRINT"
                offset="[14]"/>
         <field description="Received Noise interrupt flag." format="hex0x"
                id="USART0@INTSTAT@RXNOISEINT"
                offset="[15]"/>
         <field description="Auto baud Error Interrupt flag." format="hex0x"
                id="USART0@INTSTAT@ABERRINT"
                offset="[16]"/>
      </register>
      <register description="Oversample selection register for asynchronous communication."
                format="hex0x"
                id="USART0@OSR"
                offset="0x28"
                size="4">
         <field description="Oversample Selection Value. 0 to 3 = not supported 0x4 = 5 function clocks are used to transmit and receive each data bit. 0x5 = 6 function clocks are used to transmit and receive each data bit. 0xF= 16 function clocks are used to transmit and receive each data bit."
                format="hex0x"
                id="USART0@OSR@OSRVAL"
                offset="[3:0]"/>
      </register>
      <register description="Address register for automatic address matching." format="hex0x"
                id="USART0@ADDR"
                offset="0x2c"
                size="4">
         <field description="8-bit address used with automatic address matching. Used when address detection is enabled (ADDRDET in CTL = 1) and automatic address matching is enabled (AUTOADDR in CFG = 1)."
                format="hex0x"
                id="USART0@ADDR@ADDRESS"
                offset="[7:0]"/>
      </register>
      <register description="FIFO configuration and enable register." format="hex0x"
                id="USART0@FIFOCFG"
                offset="0xe00"
                size="4">
         <field description="Enable the transmit FIFO." format="enum" enum="d1e137423"
                id="USART0@FIFOCFG@ENABLETX"
                offset="[0]"/>
         <field description="Enable the receive FIFO." format="enum" enum="d1e137469"
                id="USART0@FIFOCFG@ENABLERX"
                offset="[1]"/>
         <field description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART."
                format="hex0x"
                id="USART0@FIFOCFG@SIZE"
                offset="[5:4]"/>
         <field description="DMA configuration for transmit." format="enum" enum="d1e137533"
                id="USART0@FIFOCFG@DMATX"
                offset="[12]"/>
         <field description="DMA configuration for receive." format="enum" enum="d1e137579"
                id="USART0@FIFOCFG@DMARX"
                offset="[13]"/>
         <field description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e137626"
                id="USART0@FIFOCFG@WAKETX"
                offset="[14]"/>
         <field description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e137672"
                id="USART0@FIFOCFG@WAKERX"
                offset="[15]"/>
         <field description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied."
                format="hex0x"
                id="USART0@FIFOCFG@EMPTYTX"
                offset="[16]"/>
         <field description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied."
                format="hex0x"
                id="USART0@FIFOCFG@EMPTYRX"
                offset="[17]"/>
         <field description="Pop FIFO for debug reads." format="enum" enum="d1e137754"
                id="USART0@FIFOCFG@POPDBG"
                offset="[18]"/>
      </register>
      <register description="FIFO status register." format="hex0x" id="USART0@FIFOSTAT"
                offset="0xe04"
                size="4">
         <field description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="USART0@FIFOSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="USART0@FIFOSTAT@RXERR"
                offset="[1]"/>
         <field description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register."
                format="hex0x"
                id="USART0@FIFOSTAT@PERINT"
                offset="[3]"/>
         <field description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data."
                format="hex0x"
                id="USART0@FIFOSTAT@TXEMPTY"
                offset="[4]"/>
         <field description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow."
                format="hex0x"
                id="USART0@FIFOSTAT@TXNOTFULL"
                offset="[5]"/>
         <field description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty."
                format="hex0x"
                id="USART0@FIFOSTAT@RXNOTEMPTY"
                offset="[6]"/>
         <field description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow."
                format="hex0x"
                id="USART0@FIFOSTAT@RXFULL"
                offset="[7]"/>
         <field description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0."
                format="hex0x"
                id="USART0@FIFOSTAT@TXLVL"
                offset="[12:8]"/>
         <field description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1."
                format="hex0x"
                id="USART0@FIFOSTAT@RXLVL"
                offset="[20:16]"/>
      </register>
      <register description="FIFO trigger settings for interrupt and DMA request."
                format="hex0x"
                id="USART0@FIFOTRIG"
                offset="0xe08"
                size="4">
         <field description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set."
                format="enum"
                enum="d1e138020"
                id="USART0@FIFOTRIG@TXLVLENA"
                offset="[0]"/>
         <field description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set."
                format="enum"
                enum="d1e138066"
                id="USART0@FIFOTRIG@RXLVLENA"
                offset="[1]"/>
         <field description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)."
                format="hex0x"
                id="USART0@FIFOTRIG@TXLVL"
                offset="[11:8]"/>
         <field description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)."
                format="hex0x"
                id="USART0@FIFOTRIG@RXLVL"
                offset="[19:16]"/>
      </register>
      <register description="FIFO interrupt enable set (enable) and read register."
                format="hex0x"
                id="USART0@FIFOINTENSET"
                offset="0xe10"
                size="4">
         <field description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e138176"
                id="USART0@FIFOINTENSET@TXERR"
                offset="[0]"/>
         <field description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e138222"
                id="USART0@FIFOINTENSET@RXERR"
                offset="[1]"/>
         <field description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e138268"
                id="USART0@FIFOINTENSET@TXLVL"
                offset="[2]"/>
         <field description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e138314"
                id="USART0@FIFOINTENSET@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt enable clear (disable) and read register."
                format="hex0x"
                id="USART0@FIFOINTENCLR"
                offset="0xe14"
                size="4">
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="USART0@FIFOINTENCLR@TXERR"
                offset="[0]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="USART0@FIFOINTENCLR@RXERR"
                offset="[1]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="USART0@FIFOINTENCLR@TXLVL"
                offset="[2]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="USART0@FIFOINTENCLR@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt status register." format="hex0x"
                id="USART0@FIFOINTSTAT"
                offset="0xe18"
                readOnly="true"
                size="4">
         <field description="TX FIFO error." format="hex0x" id="USART0@FIFOINTSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error." format="hex0x" id="USART0@FIFOINTSTAT@RXERR"
                offset="[1]"/>
         <field description="Transmit FIFO level interrupt." format="hex0x"
                id="USART0@FIFOINTSTAT@TXLVL"
                offset="[2]"/>
         <field description="Receive FIFO level interrupt." format="hex0x"
                id="USART0@FIFOINTSTAT@RXLVL"
                offset="[3]"/>
         <field description="Peripheral interrupt." format="hex0x"
                id="USART0@FIFOINTSTAT@PERINT"
                offset="[4]"/>
      </register>
      <register description="FIFO write data." format="hex0x" id="USART0@FIFOWR" offset="0xe20"
                size="4">
         <field description="Transmit data to the FIFO." format="hex0x"
                id="USART0@FIFOWR@TXDATA"
                offset="[8:0]"/>
      </register>
      <register description="FIFO read data." format="hex0x" id="USART0@FIFORD" offset="0xe30"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings."
                format="hex0x"
                id="USART0@FIFORD@RXDATA"
                offset="[8:0]"/>
         <field description="Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source."
                format="hex0x"
                id="USART0@FIFORD@FRAMERR"
                offset="[13]"/>
         <field description="Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character."
                format="hex0x"
                id="USART0@FIFORD@PARITYERR"
                offset="[14]"/>
         <field description="Received Noise flag. See description of the RxNoiseInt bit in Table 354."
                format="hex0x"
                id="USART0@FIFORD@RXNOISE"
                offset="[15]"/>
      </register>
      <register description="FIFO data read with no FIFO pop." format="hex0x"
                id="USART0@FIFORDNOPOP"
                offset="0xe40"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings."
                format="hex0x"
                id="USART0@FIFORDNOPOP@RXDATA"
                offset="[8:0]"/>
         <field description="Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source."
                format="hex0x"
                id="USART0@FIFORDNOPOP@FRAMERR"
                offset="[13]"/>
         <field description="Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character."
                format="hex0x"
                id="USART0@FIFORDNOPOP@PARITYERR"
                offset="[14]"/>
         <field description="Received Noise flag. See description of the RxNoiseInt bit in Table 354."
                format="hex0x"
                id="USART0@FIFORDNOPOP@RXNOISE"
                offset="[15]"/>
      </register>
      <register description="Peripheral identification register." format="hex0x" id="USART0@ID"
                offset="0xffc"
                readOnly="true"
                size="4">
         <field description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture."
                format="hex0x"
                id="USART0@ID@APERTURE"
                offset="[7:0]"/>
         <field description="Minor revision of module implementation." format="hex0x"
                id="USART0@ID@MINOR-REV"
                offset="[11:8]"/>
         <field description="Major revision of module implementation." format="hex0x"
                id="USART0@ID@MAJOR-REV"
                offset="[15:12]"/>
         <field description="Module identifier for the selected function." format="hex0x"
                id="USART0@ID@ID"
                offset="[31:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x USARTs" id="USART9" size="0x1000">
      <register description="USART Configuration register. Basic USART configuration settings that typically are not changed during operation."
                format="hex0x"
                id="USART0@CFG"
                offset="0x0"
                size="4">
         <field description="USART Enable." format="enum" enum="d1e135324"
                id="USART0@CFG@ENABLE"
                offset="[0]"/>
         <field description="Selects the data size for the USART." format="enum"
                enum="d1e135370"
                id="USART0@CFG@DATALEN"
                offset="[3:2]"/>
         <field description="Selects what type of parity is used by the USART." format="enum"
                enum="d1e135428"
                id="USART0@CFG@PARITYSEL"
                offset="[5:4]"/>
         <field description="Number of stop bits appended to transmitted data. Only a single stop bit is required for received data."
                format="enum"
                enum="d1e135486"
                id="USART0@CFG@STOPLEN"
                offset="[6]"/>
         <field description="Selects standard or 32 kHz clocking mode." format="enum"
                enum="d1e135532"
                id="USART0@CFG@MODE32K"
                offset="[7]"/>
         <field description="LIN break mode enable." format="enum" enum="d1e135579"
                id="USART0@CFG@LINMODE"
                offset="[8]"/>
         <field description="CTS Enable. Determines whether CTS is used for flow control. CTS can be from the input pin, or from the USART's own RTS if loopback mode is enabled."
                format="enum"
                enum="d1e135625"
                id="USART0@CFG@CTSEN"
                offset="[9]"/>
         <field description="Selects synchronous or asynchronous operation." format="enum"
                enum="d1e135671"
                id="USART0@CFG@SYNCEN"
                offset="[11]"/>
         <field description="Selects the clock polarity and sampling edge of received data in synchronous mode."
                format="enum"
                enum="d1e135717"
                id="USART0@CFG@CLKPOL"
                offset="[12]"/>
         <field description="Synchronous mode Master select." format="enum" enum="d1e135763"
                id="USART0@CFG@SYNCMST"
                offset="[14]"/>
         <field description="Selects data loopback mode." format="enum" enum="d1e135809"
                id="USART0@CFG@LOOP"
                offset="[15]"/>
         <field description="Output Enable Turnaround time enable for RS-485 operation."
                format="enum"
                enum="d1e135856"
                id="USART0@CFG@OETA"
                offset="[18]"/>
         <field description="Automatic Address matching enable." format="enum" enum="d1e135902"
                id="USART0@CFG@AUTOADDR"
                offset="[19]"/>
         <field description="Output Enable Select." format="enum" enum="d1e135948"
                id="USART0@CFG@OESEL"
                offset="[20]"/>
         <field description="Output Enable Polarity." format="enum" enum="d1e135994"
                id="USART0@CFG@OEPOL"
                offset="[21]"/>
         <field description="Receive data polarity." format="enum" enum="d1e136040"
                id="USART0@CFG@RXPOL"
                offset="[22]"/>
         <field description="Transmit data polarity." format="enum" enum="d1e136086"
                id="USART0@CFG@TXPOL"
                offset="[23]"/>
      </register>
      <register description="USART Control register. USART control settings that are more likely to change during operation."
                format="hex0x"
                id="USART0@CTL"
                offset="0x4"
                size="4">
         <field description="Break Enable." format="enum" enum="d1e136160"
                id="USART0@CTL@TXBRKEN"
                offset="[1]"/>
         <field description="Enable address detect mode." format="enum" enum="d1e136206"
                id="USART0@CTL@ADDRDET"
                offset="[2]"/>
         <field description="Transmit Disable." format="enum" enum="d1e136252"
                id="USART0@CTL@TXDIS"
                offset="[6]"/>
         <field description="Continuous Clock generation. By default, SCLK is only output while data is being transmitted in synchronous mode."
                format="enum"
                enum="d1e136298"
                id="USART0@CTL@CC"
                offset="[8]"/>
         <field description="Clear Continuous Clock." format="enum" enum="d1e136344"
                id="USART0@CTL@CLRCCONRX"
                offset="[9]"/>
         <field description="Autobaud enable." format="enum" enum="d1e136391"
                id="USART0@CTL@AUTOBAUD"
                offset="[16]"/>
      </register>
      <register description="USART Status register. The complete status value can be read here. Writing ones clears some bits in the register. Some bits can be cleared by writing a 1 to them."
                format="hex0x"
                id="USART0@STAT"
                offset="0x8"
                size="4">
         <field description="Receiver Idle. When 0, indicates that the receiver is currently in the process of receiving data. When 1, indicates that the receiver is not currently in the process of receiving data."
                format="hex0x"
                id="USART0@STAT@RXIDLE"
                offset="[1]"/>
         <field description="Transmitter Idle. When 0, indicates that the transmitter is currently in the process of sending data.When 1, indicate that the transmitter is not currently in the process of sending data."
                format="hex0x"
                id="USART0@STAT@TXIDLE"
                offset="[3]"/>
         <field description="This bit reflects the current state of the CTS signal, regardless of the setting of the CTSEN bit in the CFG register. This will be the value of the CTS input pin unless loopback mode is enabled."
                format="hex0x"
                id="USART0@STAT@CTS"
                offset="[4]"/>
         <field description="This bit is set when a change in the state is detected for the CTS flag above. This bit is cleared by software."
                format="hex0x"
                id="USART0@STAT@DELTACTS"
                offset="[5]"/>
         <field description="Transmitter Disabled Status flag. When 1, this bit indicates that the USART transmitter is fully idle after being disabled via the TXDIS bit in the CFG register (TXDIS = 1)."
                format="hex0x"
                id="USART0@STAT@TXDISSTAT"
                offset="[6]"/>
         <field description="Received Break. This bit reflects the current state of the receiver break detection logic. It is set when the Un_RXD pin remains low for 16 bit times. Note that FRAMERRINT will also be set when this condition occurs because the stop bit(s) for the character would be missing. RXBRK is cleared when the Un_RXD pin goes high."
                format="hex0x"
                id="USART0@STAT@RXBRK"
                offset="[10]"/>
         <field description="This bit is set when a change in the state of receiver break detection occurs. Cleared by software."
                format="hex0x"
                id="USART0@STAT@DELTARXBRK"
                offset="[11]"/>
         <field description="This bit is set when a start is detected on the receiver input. Its purpose is primarily to allow wake-up from Deep-sleep or Power-down mode immediately when a start is detected. Cleared by software."
                format="hex0x"
                id="USART0@STAT@START"
                offset="[12]"/>
         <field description="Framing Error interrupt flag. This flag is set when a character is received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source."
                format="hex0x"
                id="USART0@STAT@FRAMERRINT"
                offset="[13]"/>
         <field description="Parity Error interrupt flag. This flag is set when a parity error is detected in a received character."
                format="hex0x"
                id="USART0@STAT@PARITYERRINT"
                offset="[14]"/>
         <field description="Received Noise interrupt flag. Three samples of received data are taken in order to determine the value of each received data bit, except in synchronous mode. This acts as a noise filter if one sample disagrees. This flag is set when a received data bit contains one disagreeing sample. This could indicate line noise, a baud rate or character format mismatch, or loss of synchronization during data reception."
                format="hex0x"
                id="USART0@STAT@RXNOISEINT"
                offset="[15]"/>
         <field description="Auto baud Error. An auto baud error can occur if the BRG counts to its limit before the end of the start bit that is being measured, essentially an auto baud time-out."
                format="hex0x"
                id="USART0@STAT@ABERR"
                offset="[16]"/>
      </register>
      <register description="Interrupt Enable read and Set register for USART (not FIFO) status. Contains individual interrupt enable bits for each potential USART interrupt. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set."
                format="hex0x"
                id="USART0@INTENSET"
                offset="0xc"
                size="4">
         <field description="When 1, enables an interrupt when the transmitter becomes idle (TXIDLE = 1)."
                format="hex0x"
                id="USART0@INTENSET@TXIDLEEN"
                offset="[3]"/>
         <field description="When 1, enables an interrupt when there is a change in the state of the CTS input."
                format="hex0x"
                id="USART0@INTENSET@DELTACTSEN"
                offset="[5]"/>
         <field description="When 1, enables an interrupt when the transmitter is fully disabled as indicated by the TXDISINT flag in STAT. See description of the TXDISINT bit for details."
                format="hex0x"
                id="USART0@INTENSET@TXDISEN"
                offset="[6]"/>
         <field description="When 1, enables an interrupt when a change of state has occurred in the detection of a received break condition (break condition asserted or deasserted)."
                format="hex0x"
                id="USART0@INTENSET@DELTARXBRKEN"
                offset="[11]"/>
         <field description="When 1, enables an interrupt when a received start bit has been detected."
                format="hex0x"
                id="USART0@INTENSET@STARTEN"
                offset="[12]"/>
         <field description="When 1, enables an interrupt when a framing error has been detected."
                format="hex0x"
                id="USART0@INTENSET@FRAMERREN"
                offset="[13]"/>
         <field description="When 1, enables an interrupt when a parity error has been detected."
                format="hex0x"
                id="USART0@INTENSET@PARITYERREN"
                offset="[14]"/>
         <field description="When 1, enables an interrupt when noise is detected. See description of the RXNOISEINT bit in Table 354."
                format="hex0x"
                id="USART0@INTENSET@RXNOISEEN"
                offset="[15]"/>
         <field description="When 1, enables an interrupt when an auto baud error occurs."
                format="hex0x"
                id="USART0@INTENSET@ABERREN"
                offset="[16]"/>
      </register>
      <register description="Interrupt Enable Clear register. Allows clearing any combination of bits in the INTENSET register. Writing a 1 to any implemented bit position causes the corresponding bit to be cleared."
                format="hex0x"
                id="USART0@INTENCLR"
                offset="0x10"
                writeOnly="true"
                size="4">
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@TXIDLECLR"
                offset="[3]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@DELTACTSCLR"
                offset="[5]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@TXDISCLR"
                offset="[6]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@DELTARXBRKCLR"
                offset="[11]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@STARTCLR"
                offset="[12]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@FRAMERRCLR"
                offset="[13]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@PARITYERRCLR"
                offset="[14]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@RXNOISECLR"
                offset="[15]"/>
         <field description="Writing 1 clears the corresponding bit in the INTENSET register."
                format="hex0x"
                id="USART0@INTENCLR@ABERRCLR"
                offset="[16]"/>
      </register>
      <register description="Baud Rate Generator register. 16-bit integer baud rate divisor value."
                format="hex0x"
                id="USART0@BRG"
                offset="0x20"
                size="4">
         <field description="This value is used to divide the USART input clock to determine the baud rate, based on the input clock from the FRG. 0 = FCLK is used directly by the USART function. 1 = FCLK is divided by 2 before use by the USART function. 2 = FCLK is divided by 3 before use by the USART function. 0xFFFF = FCLK is divided by 65,536 before use by the USART function."
                format="hex0x"
                id="USART0@BRG@BRGVAL"
                offset="[15:0]"/>
      </register>
      <register description="Interrupt status register. Reflects interrupts that are currently enabled."
                format="hex0x"
                id="USART0@INTSTAT"
                offset="0x24"
                readOnly="true"
                size="4">
         <field description="Transmitter Idle status." format="hex0x"
                id="USART0@INTSTAT@TXIDLE"
                offset="[3]"/>
         <field description="This bit is set when a change in the state of the CTS input is detected."
                format="hex0x"
                id="USART0@INTSTAT@DELTACTS"
                offset="[5]"/>
         <field description="Transmitter Disabled Interrupt flag." format="hex0x"
                id="USART0@INTSTAT@TXDISINT"
                offset="[6]"/>
         <field description="This bit is set when a change in the state of receiver break detection occurs."
                format="hex0x"
                id="USART0@INTSTAT@DELTARXBRK"
                offset="[11]"/>
         <field description="This bit is set when a start is detected on the receiver input."
                format="hex0x"
                id="USART0@INTSTAT@START"
                offset="[12]"/>
         <field description="Framing Error interrupt flag." format="hex0x"
                id="USART0@INTSTAT@FRAMERRINT"
                offset="[13]"/>
         <field description="Parity Error interrupt flag." format="hex0x"
                id="USART0@INTSTAT@PARITYERRINT"
                offset="[14]"/>
         <field description="Received Noise interrupt flag." format="hex0x"
                id="USART0@INTSTAT@RXNOISEINT"
                offset="[15]"/>
         <field description="Auto baud Error Interrupt flag." format="hex0x"
                id="USART0@INTSTAT@ABERRINT"
                offset="[16]"/>
      </register>
      <register description="Oversample selection register for asynchronous communication."
                format="hex0x"
                id="USART0@OSR"
                offset="0x28"
                size="4">
         <field description="Oversample Selection Value. 0 to 3 = not supported 0x4 = 5 function clocks are used to transmit and receive each data bit. 0x5 = 6 function clocks are used to transmit and receive each data bit. 0xF= 16 function clocks are used to transmit and receive each data bit."
                format="hex0x"
                id="USART0@OSR@OSRVAL"
                offset="[3:0]"/>
      </register>
      <register description="Address register for automatic address matching." format="hex0x"
                id="USART0@ADDR"
                offset="0x2c"
                size="4">
         <field description="8-bit address used with automatic address matching. Used when address detection is enabled (ADDRDET in CTL = 1) and automatic address matching is enabled (AUTOADDR in CFG = 1)."
                format="hex0x"
                id="USART0@ADDR@ADDRESS"
                offset="[7:0]"/>
      </register>
      <register description="FIFO configuration and enable register." format="hex0x"
                id="USART0@FIFOCFG"
                offset="0xe00"
                size="4">
         <field description="Enable the transmit FIFO." format="enum" enum="d1e137423"
                id="USART0@FIFOCFG@ENABLETX"
                offset="[0]"/>
         <field description="Enable the receive FIFO." format="enum" enum="d1e137469"
                id="USART0@FIFOCFG@ENABLERX"
                offset="[1]"/>
         <field description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART."
                format="hex0x"
                id="USART0@FIFOCFG@SIZE"
                offset="[5:4]"/>
         <field description="DMA configuration for transmit." format="enum" enum="d1e137533"
                id="USART0@FIFOCFG@DMATX"
                offset="[12]"/>
         <field description="DMA configuration for receive." format="enum" enum="d1e137579"
                id="USART0@FIFOCFG@DMARX"
                offset="[13]"/>
         <field description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e137626"
                id="USART0@FIFOCFG@WAKETX"
                offset="[14]"/>
         <field description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e137672"
                id="USART0@FIFOCFG@WAKERX"
                offset="[15]"/>
         <field description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied."
                format="hex0x"
                id="USART0@FIFOCFG@EMPTYTX"
                offset="[16]"/>
         <field description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied."
                format="hex0x"
                id="USART0@FIFOCFG@EMPTYRX"
                offset="[17]"/>
         <field description="Pop FIFO for debug reads." format="enum" enum="d1e137754"
                id="USART0@FIFOCFG@POPDBG"
                offset="[18]"/>
      </register>
      <register description="FIFO status register." format="hex0x" id="USART0@FIFOSTAT"
                offset="0xe04"
                size="4">
         <field description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="USART0@FIFOSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="USART0@FIFOSTAT@RXERR"
                offset="[1]"/>
         <field description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register."
                format="hex0x"
                id="USART0@FIFOSTAT@PERINT"
                offset="[3]"/>
         <field description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data."
                format="hex0x"
                id="USART0@FIFOSTAT@TXEMPTY"
                offset="[4]"/>
         <field description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow."
                format="hex0x"
                id="USART0@FIFOSTAT@TXNOTFULL"
                offset="[5]"/>
         <field description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty."
                format="hex0x"
                id="USART0@FIFOSTAT@RXNOTEMPTY"
                offset="[6]"/>
         <field description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow."
                format="hex0x"
                id="USART0@FIFOSTAT@RXFULL"
                offset="[7]"/>
         <field description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0."
                format="hex0x"
                id="USART0@FIFOSTAT@TXLVL"
                offset="[12:8]"/>
         <field description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1."
                format="hex0x"
                id="USART0@FIFOSTAT@RXLVL"
                offset="[20:16]"/>
      </register>
      <register description="FIFO trigger settings for interrupt and DMA request."
                format="hex0x"
                id="USART0@FIFOTRIG"
                offset="0xe08"
                size="4">
         <field description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set."
                format="enum"
                enum="d1e138020"
                id="USART0@FIFOTRIG@TXLVLENA"
                offset="[0]"/>
         <field description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set."
                format="enum"
                enum="d1e138066"
                id="USART0@FIFOTRIG@RXLVLENA"
                offset="[1]"/>
         <field description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)."
                format="hex0x"
                id="USART0@FIFOTRIG@TXLVL"
                offset="[11:8]"/>
         <field description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)."
                format="hex0x"
                id="USART0@FIFOTRIG@RXLVL"
                offset="[19:16]"/>
      </register>
      <register description="FIFO interrupt enable set (enable) and read register."
                format="hex0x"
                id="USART0@FIFOINTENSET"
                offset="0xe10"
                size="4">
         <field description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e138176"
                id="USART0@FIFOINTENSET@TXERR"
                offset="[0]"/>
         <field description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e138222"
                id="USART0@FIFOINTENSET@RXERR"
                offset="[1]"/>
         <field description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e138268"
                id="USART0@FIFOINTENSET@TXLVL"
                offset="[2]"/>
         <field description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e138314"
                id="USART0@FIFOINTENSET@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt enable clear (disable) and read register."
                format="hex0x"
                id="USART0@FIFOINTENCLR"
                offset="0xe14"
                size="4">
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="USART0@FIFOINTENCLR@TXERR"
                offset="[0]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="USART0@FIFOINTENCLR@RXERR"
                offset="[1]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="USART0@FIFOINTENCLR@TXLVL"
                offset="[2]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="USART0@FIFOINTENCLR@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt status register." format="hex0x"
                id="USART0@FIFOINTSTAT"
                offset="0xe18"
                readOnly="true"
                size="4">
         <field description="TX FIFO error." format="hex0x" id="USART0@FIFOINTSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error." format="hex0x" id="USART0@FIFOINTSTAT@RXERR"
                offset="[1]"/>
         <field description="Transmit FIFO level interrupt." format="hex0x"
                id="USART0@FIFOINTSTAT@TXLVL"
                offset="[2]"/>
         <field description="Receive FIFO level interrupt." format="hex0x"
                id="USART0@FIFOINTSTAT@RXLVL"
                offset="[3]"/>
         <field description="Peripheral interrupt." format="hex0x"
                id="USART0@FIFOINTSTAT@PERINT"
                offset="[4]"/>
      </register>
      <register description="FIFO write data." format="hex0x" id="USART0@FIFOWR" offset="0xe20"
                size="4">
         <field description="Transmit data to the FIFO." format="hex0x"
                id="USART0@FIFOWR@TXDATA"
                offset="[8:0]"/>
      </register>
      <register description="FIFO read data." format="hex0x" id="USART0@FIFORD" offset="0xe30"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings."
                format="hex0x"
                id="USART0@FIFORD@RXDATA"
                offset="[8:0]"/>
         <field description="Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source."
                format="hex0x"
                id="USART0@FIFORD@FRAMERR"
                offset="[13]"/>
         <field description="Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character."
                format="hex0x"
                id="USART0@FIFORD@PARITYERR"
                offset="[14]"/>
         <field description="Received Noise flag. See description of the RxNoiseInt bit in Table 354."
                format="hex0x"
                id="USART0@FIFORD@RXNOISE"
                offset="[15]"/>
      </register>
      <register description="FIFO data read with no FIFO pop." format="hex0x"
                id="USART0@FIFORDNOPOP"
                offset="0xe40"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings."
                format="hex0x"
                id="USART0@FIFORDNOPOP@RXDATA"
                offset="[8:0]"/>
         <field description="Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source."
                format="hex0x"
                id="USART0@FIFORDNOPOP@FRAMERR"
                offset="[13]"/>
         <field description="Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character."
                format="hex0x"
                id="USART0@FIFORDNOPOP@PARITYERR"
                offset="[14]"/>
         <field description="Received Noise flag. See description of the RxNoiseInt bit in Table 354."
                format="hex0x"
                id="USART0@FIFORDNOPOP@RXNOISE"
                offset="[15]"/>
      </register>
      <register description="Peripheral identification register." format="hex0x" id="USART0@ID"
                offset="0xffc"
                readOnly="true"
                size="4">
         <field description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture."
                format="hex0x"
                id="USART0@ID@APERTURE"
                offset="[7:0]"/>
         <field description="Minor revision of module implementation." format="hex0x"
                id="USART0@ID@MINOR-REV"
                offset="[11:8]"/>
         <field description="Major revision of module implementation." format="hex0x"
                id="USART0@ID@MAJOR-REV"
                offset="[15:12]"/>
         <field description="Module identifier for the selected function." format="hex0x"
                id="USART0@ID@ID"
                offset="[31:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x General Purpose I/O (GPIO)" id="GPIO"
               size="0x2498">
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-0"
                offset="0x0"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-0@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-1"
                offset="0x1"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-1@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-2"
                offset="0x2"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-2@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-3"
                offset="0x3"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-3@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-4"
                offset="0x4"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-4@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-5"
                offset="0x5"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-5@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-6"
                offset="0x6"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-6@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-7"
                offset="0x7"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-7@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-8"
                offset="0x8"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-8@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-9"
                offset="0x9"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-9@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-10"
                offset="0xa"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-10@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-11"
                offset="0xb"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-11@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-12"
                offset="0xc"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-12@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-13"
                offset="0xd"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-13@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-14"
                offset="0xe"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-14@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-15"
                offset="0xf"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-15@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-16"
                offset="0x10"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-16@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-17"
                offset="0x11"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-17@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-18"
                offset="0x12"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-18@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-19"
                offset="0x13"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-19@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-20"
                offset="0x14"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-20@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-21"
                offset="0x15"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-21@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-22"
                offset="0x16"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-22@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-23"
                offset="0x17"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-23@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-24"
                offset="0x18"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-24@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-25"
                offset="0x19"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-25@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-26"
                offset="0x1a"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-26@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-27"
                offset="0x1b"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-27@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-28"
                offset="0x1c"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-28@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-29"
                offset="0x1d"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-29@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-30"
                offset="0x1e"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-30@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-31"
                offset="0x1f"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-31@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-32"
                offset="0x20"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-32@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-33"
                offset="0x21"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-33@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-34"
                offset="0x22"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-34@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-35"
                offset="0x23"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-35@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-36"
                offset="0x24"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-36@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-37"
                offset="0x25"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-37@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-38"
                offset="0x26"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-38@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-39"
                offset="0x27"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-39@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-40"
                offset="0x28"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-40@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-41"
                offset="0x29"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-41@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-42"
                offset="0x2a"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-42@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-43"
                offset="0x2b"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-43@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-44"
                offset="0x2c"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-44@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-45"
                offset="0x2d"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-45@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-46"
                offset="0x2e"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-46@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-47"
                offset="0x2f"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-47@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-48"
                offset="0x30"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-48@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-49"
                offset="0x31"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-49@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-50"
                offset="0x32"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-50@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-51"
                offset="0x33"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-51@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-52"
                offset="0x34"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-52@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-53"
                offset="0x35"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-53@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-54"
                offset="0x36"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-54@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-55"
                offset="0x37"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-55@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-56"
                offset="0x38"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-56@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-57"
                offset="0x39"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-57@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-58"
                offset="0x3a"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-58@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-59"
                offset="0x3b"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-59@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-60"
                offset="0x3c"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-60@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-61"
                offset="0x3d"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-61@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-62"
                offset="0x3e"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-62@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-63"
                offset="0x3f"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-63@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-64"
                offset="0x40"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-64@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-65"
                offset="0x41"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-65@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-66"
                offset="0x42"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-66@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-67"
                offset="0x43"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-67@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-68"
                offset="0x44"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-68@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-69"
                offset="0x45"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-69@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-70"
                offset="0x46"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-70@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-71"
                offset="0x47"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-71@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-72"
                offset="0x48"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-72@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-73"
                offset="0x49"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-73@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-74"
                offset="0x4a"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-74@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-75"
                offset="0x4b"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-75@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-76"
                offset="0x4c"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-76@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-77"
                offset="0x4d"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-77@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-78"
                offset="0x4e"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-78@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-79"
                offset="0x4f"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-79@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-80"
                offset="0x50"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-80@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-81"
                offset="0x51"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-81@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-82"
                offset="0x52"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-82@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-83"
                offset="0x53"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-83@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-84"
                offset="0x54"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-84@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-85"
                offset="0x55"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-85@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-86"
                offset="0x56"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-86@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-87"
                offset="0x57"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-87@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-88"
                offset="0x58"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-88@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-89"
                offset="0x59"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-89@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-90"
                offset="0x5a"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-90@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-91"
                offset="0x5b"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-91@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-92"
                offset="0x5c"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-92@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-93"
                offset="0x5d"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-93@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-94"
                offset="0x5e"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-94@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-95"
                offset="0x5f"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-95@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-96"
                offset="0x60"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-96@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-97"
                offset="0x61"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-97@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-98"
                offset="0x62"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-98@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-99"
                offset="0x63"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-99@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-100"
                offset="0x64"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-100@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-101"
                offset="0x65"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-101@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-102"
                offset="0x66"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-102@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-103"
                offset="0x67"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-103@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-104"
                offset="0x68"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-104@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-105"
                offset="0x69"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-105@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-106"
                offset="0x6a"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-106@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-107"
                offset="0x6b"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-107@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-108"
                offset="0x6c"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-108@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-109"
                offset="0x6d"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-109@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-110"
                offset="0x6e"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-110@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-111"
                offset="0x6f"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-111@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-112"
                offset="0x70"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-112@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-113"
                offset="0x71"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-113@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-114"
                offset="0x72"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-114@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-115"
                offset="0x73"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-115@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-116"
                offset="0x74"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-116@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-117"
                offset="0x75"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-117@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-118"
                offset="0x76"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-118@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-119"
                offset="0x77"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-119@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-120"
                offset="0x78"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-120@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-121"
                offset="0x79"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-121@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-122"
                offset="0x7a"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-122@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-123"
                offset="0x7b"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-123@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-124"
                offset="0x7c"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-124@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-125"
                offset="0x7d"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-125@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-126"
                offset="0x7e"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-126@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-127"
                offset="0x7f"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-127@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-128"
                offset="0x80"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-128@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-129"
                offset="0x81"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-129@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-130"
                offset="0x82"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-130@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-131"
                offset="0x83"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-131@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-132"
                offset="0x84"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-132@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-133"
                offset="0x85"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-133@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-134"
                offset="0x86"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-134@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-135"
                offset="0x87"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-135@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-136"
                offset="0x88"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-136@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-137"
                offset="0x89"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-137@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-138"
                offset="0x8a"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-138@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-139"
                offset="0x8b"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-139@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-140"
                offset="0x8c"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-140@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-141"
                offset="0x8d"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-141@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-142"
                offset="0x8e"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-142@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-143"
                offset="0x8f"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-143@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-144"
                offset="0x90"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-144@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-145"
                offset="0x91"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-145@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-146"
                offset="0x92"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-146@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-147"
                offset="0x93"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-147@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-148"
                offset="0x94"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-148@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-149"
                offset="0x95"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-149@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-150"
                offset="0x96"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-150@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-151"
                offset="0x97"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-151@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-152"
                offset="0x98"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-152@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-153"
                offset="0x99"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-153@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-154"
                offset="0x9a"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-154@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-155"
                offset="0x9b"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-155@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-156"
                offset="0x9c"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-156@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-157"
                offset="0x9d"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-157@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-158"
                offset="0x9e"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-158@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-159"
                offset="0x9f"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-159@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-160"
                offset="0xa0"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-160@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-161"
                offset="0xa1"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-161@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-162"
                offset="0xa2"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-162@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-163"
                offset="0xa3"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-163@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-164"
                offset="0xa4"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-164@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-165"
                offset="0xa5"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-165@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-166"
                offset="0xa6"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-166@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-167"
                offset="0xa7"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-167@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-168"
                offset="0xa8"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-168@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-169"
                offset="0xa9"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-169@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-170"
                offset="0xaa"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-170@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-171"
                offset="0xab"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-171@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-172"
                offset="0xac"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-172@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-173"
                offset="0xad"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-173@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-174"
                offset="0xae"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-174@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-175"
                offset="0xaf"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-175@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-176"
                offset="0xb0"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-176@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-177"
                offset="0xb1"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-177@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-178"
                offset="0xb2"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-178@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-179"
                offset="0xb3"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-179@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-180"
                offset="0xb4"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-180@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-181"
                offset="0xb5"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-181@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-182"
                offset="0xb6"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-182@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-183"
                offset="0xb7"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-183@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-184"
                offset="0xb8"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-184@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-185"
                offset="0xb9"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-185@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-186"
                offset="0xba"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-186@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-187"
                offset="0xbb"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-187@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-188"
                offset="0xbc"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-188@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-189"
                offset="0xbd"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-189@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-190"
                offset="0xbe"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-190@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Byte pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@B-191"
                offset="0xbf"
                size="1">
         <field description="Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@B-191@PBYTE"
                offset="[0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-0"
                offset="0x1000"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-0@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-1"
                offset="0x1004"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-1@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-2"
                offset="0x1008"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-2@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-3"
                offset="0x100c"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-3@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-4"
                offset="0x1010"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-4@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-5"
                offset="0x1014"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-5@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-6"
                offset="0x1018"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-6@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-7"
                offset="0x101c"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-7@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-8"
                offset="0x1020"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-8@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-9"
                offset="0x1024"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-9@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-10"
                offset="0x1028"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-10@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-11"
                offset="0x102c"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-11@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-12"
                offset="0x1030"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-12@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-13"
                offset="0x1034"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-13@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-14"
                offset="0x1038"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-14@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-15"
                offset="0x103c"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-15@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-16"
                offset="0x1040"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-16@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-17"
                offset="0x1044"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-17@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-18"
                offset="0x1048"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-18@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-19"
                offset="0x104c"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-19@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-20"
                offset="0x1050"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-20@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-21"
                offset="0x1054"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-21@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-22"
                offset="0x1058"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-22@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-23"
                offset="0x105c"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-23@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-24"
                offset="0x1060"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-24@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-25"
                offset="0x1064"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-25@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-26"
                offset="0x1068"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-26@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-27"
                offset="0x106c"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-27@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-28"
                offset="0x1070"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-28@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-29"
                offset="0x1074"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-29@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-30"
                offset="0x1078"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-30@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-31"
                offset="0x107c"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-31@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-32"
                offset="0x1080"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-32@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-33"
                offset="0x1084"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-33@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-34"
                offset="0x1088"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-34@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-35"
                offset="0x108c"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-35@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-36"
                offset="0x1090"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-36@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-37"
                offset="0x1094"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-37@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-38"
                offset="0x1098"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-38@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-39"
                offset="0x109c"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-39@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-40"
                offset="0x10a0"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-40@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-41"
                offset="0x10a4"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-41@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-42"
                offset="0x10a8"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-42@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-43"
                offset="0x10ac"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-43@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-44"
                offset="0x10b0"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-44@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-45"
                offset="0x10b4"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-45@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-46"
                offset="0x10b8"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-46@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-47"
                offset="0x10bc"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-47@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-48"
                offset="0x10c0"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-48@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-49"
                offset="0x10c4"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-49@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-50"
                offset="0x10c8"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-50@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-51"
                offset="0x10cc"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-51@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-52"
                offset="0x10d0"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-52@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-53"
                offset="0x10d4"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-53@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-54"
                offset="0x10d8"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-54@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-55"
                offset="0x10dc"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-55@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-56"
                offset="0x10e0"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-56@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-57"
                offset="0x10e4"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-57@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-58"
                offset="0x10e8"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-58@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-59"
                offset="0x10ec"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-59@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-60"
                offset="0x10f0"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-60@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-61"
                offset="0x10f4"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-61@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-62"
                offset="0x10f8"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-62@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-63"
                offset="0x10fc"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-63@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-64"
                offset="0x1100"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-64@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-65"
                offset="0x1104"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-65@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-66"
                offset="0x1108"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-66@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-67"
                offset="0x110c"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-67@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-68"
                offset="0x1110"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-68@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-69"
                offset="0x1114"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-69@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-70"
                offset="0x1118"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-70@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-71"
                offset="0x111c"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-71@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-72"
                offset="0x1120"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-72@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-73"
                offset="0x1124"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-73@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-74"
                offset="0x1128"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-74@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-75"
                offset="0x112c"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-75@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-76"
                offset="0x1130"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-76@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-77"
                offset="0x1134"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-77@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-78"
                offset="0x1138"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-78@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-79"
                offset="0x113c"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-79@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-80"
                offset="0x1140"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-80@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-81"
                offset="0x1144"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-81@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-82"
                offset="0x1148"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-82@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-83"
                offset="0x114c"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-83@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-84"
                offset="0x1150"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-84@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-85"
                offset="0x1154"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-85@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-86"
                offset="0x1158"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-86@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-87"
                offset="0x115c"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-87@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-88"
                offset="0x1160"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-88@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-89"
                offset="0x1164"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-89@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-90"
                offset="0x1168"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-90@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-91"
                offset="0x116c"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-91@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-92"
                offset="0x1170"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-92@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-93"
                offset="0x1174"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-93@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-94"
                offset="0x1178"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-94@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-95"
                offset="0x117c"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-95@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-96"
                offset="0x1180"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-96@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-97"
                offset="0x1184"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-97@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-98"
                offset="0x1188"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-98@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-99"
                offset="0x118c"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-99@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-100"
                offset="0x1190"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-100@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-101"
                offset="0x1194"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-101@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-102"
                offset="0x1198"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-102@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-103"
                offset="0x119c"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-103@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-104"
                offset="0x11a0"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-104@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-105"
                offset="0x11a4"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-105@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-106"
                offset="0x11a8"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-106@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-107"
                offset="0x11ac"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-107@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-108"
                offset="0x11b0"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-108@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-109"
                offset="0x11b4"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-109@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-110"
                offset="0x11b8"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-110@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-111"
                offset="0x11bc"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-111@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-112"
                offset="0x11c0"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-112@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-113"
                offset="0x11c4"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-113@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-114"
                offset="0x11c8"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-114@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-115"
                offset="0x11cc"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-115@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-116"
                offset="0x11d0"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-116@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-117"
                offset="0x11d4"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-117@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-118"
                offset="0x11d8"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-118@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-119"
                offset="0x11dc"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-119@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-120"
                offset="0x11e0"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-120@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-121"
                offset="0x11e4"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-121@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-122"
                offset="0x11e8"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-122@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-123"
                offset="0x11ec"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-123@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-124"
                offset="0x11f0"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-124@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-125"
                offset="0x11f4"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-125@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-126"
                offset="0x11f8"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-126@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-127"
                offset="0x11fc"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-127@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-128"
                offset="0x1200"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-128@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-129"
                offset="0x1204"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-129@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-130"
                offset="0x1208"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-130@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-131"
                offset="0x120c"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-131@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-132"
                offset="0x1210"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-132@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-133"
                offset="0x1214"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-133@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-134"
                offset="0x1218"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-134@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-135"
                offset="0x121c"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-135@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-136"
                offset="0x1220"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-136@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-137"
                offset="0x1224"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-137@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-138"
                offset="0x1228"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-138@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-139"
                offset="0x122c"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-139@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-140"
                offset="0x1230"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-140@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-141"
                offset="0x1234"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-141@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-142"
                offset="0x1238"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-142@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-143"
                offset="0x123c"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-143@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-144"
                offset="0x1240"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-144@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-145"
                offset="0x1244"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-145@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-146"
                offset="0x1248"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-146@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-147"
                offset="0x124c"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-147@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-148"
                offset="0x1250"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-148@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-149"
                offset="0x1254"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-149@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-150"
                offset="0x1258"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-150@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-151"
                offset="0x125c"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-151@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-152"
                offset="0x1260"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-152@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-153"
                offset="0x1264"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-153@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-154"
                offset="0x1268"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-154@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-155"
                offset="0x126c"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-155@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-156"
                offset="0x1270"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-156@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-157"
                offset="0x1274"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-157@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-158"
                offset="0x1278"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-158@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-159"
                offset="0x127c"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-159@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-160"
                offset="0x1280"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-160@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-161"
                offset="0x1284"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-161@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-162"
                offset="0x1288"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-162@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-163"
                offset="0x128c"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-163@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-164"
                offset="0x1290"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-164@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-165"
                offset="0x1294"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-165@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-166"
                offset="0x1298"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-166@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-167"
                offset="0x129c"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-167@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-168"
                offset="0x12a0"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-168@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-169"
                offset="0x12a4"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-169@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-170"
                offset="0x12a8"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-170@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-171"
                offset="0x12ac"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-171@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-172"
                offset="0x12b0"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-172@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-173"
                offset="0x12b4"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-173@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-174"
                offset="0x12b8"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-174@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-175"
                offset="0x12bc"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-175@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-176"
                offset="0x12c0"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-176@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-177"
                offset="0x12c4"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-177@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-178"
                offset="0x12c8"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-178@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-179"
                offset="0x12cc"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-179@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-180"
                offset="0x12d0"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-180@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-181"
                offset="0x12d4"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-181@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-182"
                offset="0x12d8"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-182@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-183"
                offset="0x12dc"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-183@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-184"
                offset="0x12e0"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-184@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-185"
                offset="0x12e4"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-185@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-186"
                offset="0x12e8"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-186@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-187"
                offset="0x12ec"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-187@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-188"
                offset="0x12f0"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-188@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-189"
                offset="0x12f4"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-189@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-190"
                offset="0x12f8"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-190@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Word pin registers for all port 0 and 1 GPIO pins" format="hex0x"
                id="GPIO@W-191"
                offset="0x12fc"
                size="4">
         <field description="Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package."
                format="hex0x"
                id="GPIO@W-191@PWORD"
                offset="[31:0]"/>
      </register>
      <register description="Direction registers" format="hex0x" id="GPIO@DIR0" offset="0x2000"
                size="4">
         <field description="Selects pin direction for pin PIOm_n (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = input. 1 = output."
                format="hex0x"
                id="GPIO@DIR0@DIRP"
                offset="[31:0]"/>
      </register>
      <register description="Direction registers" format="hex0x" id="GPIO@DIR1" offset="0x2004"
                size="4">
         <field description="Selects pin direction for pin PIOm_n (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = input. 1 = output."
                format="hex0x"
                id="GPIO@DIR1@DIRP"
                offset="[31:0]"/>
      </register>
      <register description="Direction registers" format="hex0x" id="GPIO@DIR2" offset="0x2008"
                size="4">
         <field description="Selects pin direction for pin PIOm_n (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = input. 1 = output."
                format="hex0x"
                id="GPIO@DIR2@DIRP"
                offset="[31:0]"/>
      </register>
      <register description="Direction registers" format="hex0x" id="GPIO@DIR3" offset="0x200c"
                size="4">
         <field description="Selects pin direction for pin PIOm_n (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = input. 1 = output."
                format="hex0x"
                id="GPIO@DIR3@DIRP"
                offset="[31:0]"/>
      </register>
      <register description="Direction registers" format="hex0x" id="GPIO@DIR4" offset="0x2010"
                size="4">
         <field description="Selects pin direction for pin PIOm_n (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = input. 1 = output."
                format="hex0x"
                id="GPIO@DIR4@DIRP"
                offset="[31:0]"/>
      </register>
      <register description="Direction registers" format="hex0x" id="GPIO@DIR5" offset="0x2014"
                size="4">
         <field description="Selects pin direction for pin PIOm_n (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = input. 1 = output."
                format="hex0x"
                id="GPIO@DIR5@DIRP"
                offset="[31:0]"/>
      </register>
      <register description="Mask register" format="hex0x" id="GPIO@MASK0" offset="0x2080"
                size="4">
         <field description="Controls which bits corresponding to PIOm_n are active in the MPORT register (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read MPORT: pin state; write MPORT: load output bit. 1 = Read MPORT: 0; write MPORT: output bit not affected."
                format="hex0x"
                id="GPIO@MASK0@MASKP"
                offset="[31:0]"/>
      </register>
      <register description="Mask register" format="hex0x" id="GPIO@MASK1" offset="0x2084"
                size="4">
         <field description="Controls which bits corresponding to PIOm_n are active in the MPORT register (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read MPORT: pin state; write MPORT: load output bit. 1 = Read MPORT: 0; write MPORT: output bit not affected."
                format="hex0x"
                id="GPIO@MASK1@MASKP"
                offset="[31:0]"/>
      </register>
      <register description="Mask register" format="hex0x" id="GPIO@MASK2" offset="0x2088"
                size="4">
         <field description="Controls which bits corresponding to PIOm_n are active in the MPORT register (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read MPORT: pin state; write MPORT: load output bit. 1 = Read MPORT: 0; write MPORT: output bit not affected."
                format="hex0x"
                id="GPIO@MASK2@MASKP"
                offset="[31:0]"/>
      </register>
      <register description="Mask register" format="hex0x" id="GPIO@MASK3" offset="0x208c"
                size="4">
         <field description="Controls which bits corresponding to PIOm_n are active in the MPORT register (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read MPORT: pin state; write MPORT: load output bit. 1 = Read MPORT: 0; write MPORT: output bit not affected."
                format="hex0x"
                id="GPIO@MASK3@MASKP"
                offset="[31:0]"/>
      </register>
      <register description="Mask register" format="hex0x" id="GPIO@MASK4" offset="0x2090"
                size="4">
         <field description="Controls which bits corresponding to PIOm_n are active in the MPORT register (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read MPORT: pin state; write MPORT: load output bit. 1 = Read MPORT: 0; write MPORT: output bit not affected."
                format="hex0x"
                id="GPIO@MASK4@MASKP"
                offset="[31:0]"/>
      </register>
      <register description="Mask register" format="hex0x" id="GPIO@MASK5" offset="0x2094"
                size="4">
         <field description="Controls which bits corresponding to PIOm_n are active in the MPORT register (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read MPORT: pin state; write MPORT: load output bit. 1 = Read MPORT: 0; write MPORT: output bit not affected."
                format="hex0x"
                id="GPIO@MASK5@MASKP"
                offset="[31:0]"/>
      </register>
      <register description="Port pin register" format="hex0x" id="GPIO@PIN0" offset="0x2100"
                size="4">
         <field description="Reads pin states or loads output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: pin is low; write: clear output bit. 1 = Read: pin is high; write: set output bit."
                format="hex0x"
                id="GPIO@PIN0@PORT"
                offset="[31:0]"/>
      </register>
      <register description="Port pin register" format="hex0x" id="GPIO@PIN1" offset="0x2104"
                size="4">
         <field description="Reads pin states or loads output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: pin is low; write: clear output bit. 1 = Read: pin is high; write: set output bit."
                format="hex0x"
                id="GPIO@PIN1@PORT"
                offset="[31:0]"/>
      </register>
      <register description="Port pin register" format="hex0x" id="GPIO@PIN2" offset="0x2108"
                size="4">
         <field description="Reads pin states or loads output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: pin is low; write: clear output bit. 1 = Read: pin is high; write: set output bit."
                format="hex0x"
                id="GPIO@PIN2@PORT"
                offset="[31:0]"/>
      </register>
      <register description="Port pin register" format="hex0x" id="GPIO@PIN3" offset="0x210c"
                size="4">
         <field description="Reads pin states or loads output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: pin is low; write: clear output bit. 1 = Read: pin is high; write: set output bit."
                format="hex0x"
                id="GPIO@PIN3@PORT"
                offset="[31:0]"/>
      </register>
      <register description="Port pin register" format="hex0x" id="GPIO@PIN4" offset="0x2110"
                size="4">
         <field description="Reads pin states or loads output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: pin is low; write: clear output bit. 1 = Read: pin is high; write: set output bit."
                format="hex0x"
                id="GPIO@PIN4@PORT"
                offset="[31:0]"/>
      </register>
      <register description="Port pin register" format="hex0x" id="GPIO@PIN5" offset="0x2114"
                size="4">
         <field description="Reads pin states or loads output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: pin is low; write: clear output bit. 1 = Read: pin is high; write: set output bit."
                format="hex0x"
                id="GPIO@PIN5@PORT"
                offset="[31:0]"/>
      </register>
      <register description="Masked port register" format="hex0x" id="GPIO@MPIN0"
                offset="0x2180"
                size="4">
         <field description="Masked port register (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: pin is LOW and/or the corresponding bit in the MASK register is 1; write: clear output bit if the corresponding bit in the MASK register is 0. 1 = Read: pin is HIGH and the corresponding bit in the MASK register is 0; write: set output bit if the corresponding bit in the MASK register is 0."
                format="hex0x"
                id="GPIO@MPIN0@MPORTP"
                offset="[31:0]"/>
      </register>
      <register description="Masked port register" format="hex0x" id="GPIO@MPIN1"
                offset="0x2184"
                size="4">
         <field description="Masked port register (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: pin is LOW and/or the corresponding bit in the MASK register is 1; write: clear output bit if the corresponding bit in the MASK register is 0. 1 = Read: pin is HIGH and the corresponding bit in the MASK register is 0; write: set output bit if the corresponding bit in the MASK register is 0."
                format="hex0x"
                id="GPIO@MPIN1@MPORTP"
                offset="[31:0]"/>
      </register>
      <register description="Masked port register" format="hex0x" id="GPIO@MPIN2"
                offset="0x2188"
                size="4">
         <field description="Masked port register (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: pin is LOW and/or the corresponding bit in the MASK register is 1; write: clear output bit if the corresponding bit in the MASK register is 0. 1 = Read: pin is HIGH and the corresponding bit in the MASK register is 0; write: set output bit if the corresponding bit in the MASK register is 0."
                format="hex0x"
                id="GPIO@MPIN2@MPORTP"
                offset="[31:0]"/>
      </register>
      <register description="Masked port register" format="hex0x" id="GPIO@MPIN3"
                offset="0x218c"
                size="4">
         <field description="Masked port register (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: pin is LOW and/or the corresponding bit in the MASK register is 1; write: clear output bit if the corresponding bit in the MASK register is 0. 1 = Read: pin is HIGH and the corresponding bit in the MASK register is 0; write: set output bit if the corresponding bit in the MASK register is 0."
                format="hex0x"
                id="GPIO@MPIN3@MPORTP"
                offset="[31:0]"/>
      </register>
      <register description="Masked port register" format="hex0x" id="GPIO@MPIN4"
                offset="0x2190"
                size="4">
         <field description="Masked port register (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: pin is LOW and/or the corresponding bit in the MASK register is 1; write: clear output bit if the corresponding bit in the MASK register is 0. 1 = Read: pin is HIGH and the corresponding bit in the MASK register is 0; write: set output bit if the corresponding bit in the MASK register is 0."
                format="hex0x"
                id="GPIO@MPIN4@MPORTP"
                offset="[31:0]"/>
      </register>
      <register description="Masked port register" format="hex0x" id="GPIO@MPIN5"
                offset="0x2194"
                size="4">
         <field description="Masked port register (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: pin is LOW and/or the corresponding bit in the MASK register is 1; write: clear output bit if the corresponding bit in the MASK register is 0. 1 = Read: pin is HIGH and the corresponding bit in the MASK register is 0; write: set output bit if the corresponding bit in the MASK register is 0."
                format="hex0x"
                id="GPIO@MPIN5@MPORTP"
                offset="[31:0]"/>
      </register>
      <register description="Write: Set register for port Read: output bits for port"
                format="hex0x"
                id="GPIO@SET0"
                offset="0x2200"
                size="4">
         <field description="Read or set output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: output bit: write: no operation. 1 = Read: output bit; write: set output bit."
                format="hex0x"
                id="GPIO@SET0@SETP"
                offset="[31:0]"/>
      </register>
      <register description="Write: Set register for port Read: output bits for port"
                format="hex0x"
                id="GPIO@SET1"
                offset="0x2204"
                size="4">
         <field description="Read or set output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: output bit: write: no operation. 1 = Read: output bit; write: set output bit."
                format="hex0x"
                id="GPIO@SET1@SETP"
                offset="[31:0]"/>
      </register>
      <register description="Write: Set register for port Read: output bits for port"
                format="hex0x"
                id="GPIO@SET2"
                offset="0x2208"
                size="4">
         <field description="Read or set output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: output bit: write: no operation. 1 = Read: output bit; write: set output bit."
                format="hex0x"
                id="GPIO@SET2@SETP"
                offset="[31:0]"/>
      </register>
      <register description="Write: Set register for port Read: output bits for port"
                format="hex0x"
                id="GPIO@SET3"
                offset="0x220c"
                size="4">
         <field description="Read or set output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: output bit: write: no operation. 1 = Read: output bit; write: set output bit."
                format="hex0x"
                id="GPIO@SET3@SETP"
                offset="[31:0]"/>
      </register>
      <register description="Write: Set register for port Read: output bits for port"
                format="hex0x"
                id="GPIO@SET4"
                offset="0x2210"
                size="4">
         <field description="Read or set output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: output bit: write: no operation. 1 = Read: output bit; write: set output bit."
                format="hex0x"
                id="GPIO@SET4@SETP"
                offset="[31:0]"/>
      </register>
      <register description="Write: Set register for port Read: output bits for port"
                format="hex0x"
                id="GPIO@SET5"
                offset="0x2214"
                size="4">
         <field description="Read or set output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: output bit: write: no operation. 1 = Read: output bit; write: set output bit."
                format="hex0x"
                id="GPIO@SET5@SETP"
                offset="[31:0]"/>
      </register>
      <register description="Clear port" format="hex0x" id="GPIO@CLR0" offset="0x2280"
                writeOnly="true"
                size="4">
         <field description="Clear output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Clear output bit."
                format="hex0x"
                id="GPIO@CLR0@CLRP"
                offset="[31:0]"/>
      </register>
      <register description="Clear port" format="hex0x" id="GPIO@CLR1" offset="0x2284"
                writeOnly="true"
                size="4">
         <field description="Clear output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Clear output bit."
                format="hex0x"
                id="GPIO@CLR1@CLRP"
                offset="[31:0]"/>
      </register>
      <register description="Clear port" format="hex0x" id="GPIO@CLR2" offset="0x2288"
                writeOnly="true"
                size="4">
         <field description="Clear output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Clear output bit."
                format="hex0x"
                id="GPIO@CLR2@CLRP"
                offset="[31:0]"/>
      </register>
      <register description="Clear port" format="hex0x" id="GPIO@CLR3" offset="0x228c"
                writeOnly="true"
                size="4">
         <field description="Clear output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Clear output bit."
                format="hex0x"
                id="GPIO@CLR3@CLRP"
                offset="[31:0]"/>
      </register>
      <register description="Clear port" format="hex0x" id="GPIO@CLR4" offset="0x2290"
                writeOnly="true"
                size="4">
         <field description="Clear output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Clear output bit."
                format="hex0x"
                id="GPIO@CLR4@CLRP"
                offset="[31:0]"/>
      </register>
      <register description="Clear port" format="hex0x" id="GPIO@CLR5" offset="0x2294"
                writeOnly="true"
                size="4">
         <field description="Clear output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Clear output bit."
                format="hex0x"
                id="GPIO@CLR5@CLRP"
                offset="[31:0]"/>
      </register>
      <register description="Toggle port" format="hex0x" id="GPIO@NOT0" offset="0x2300"
                writeOnly="true"
                size="4">
         <field description="Toggle output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = no operation. 1 = Toggle output bit."
                format="hex0x"
                id="GPIO@NOT0@NOTP"
                offset="[31:0]"/>
      </register>
      <register description="Toggle port" format="hex0x" id="GPIO@NOT1" offset="0x2304"
                writeOnly="true"
                size="4">
         <field description="Toggle output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = no operation. 1 = Toggle output bit."
                format="hex0x"
                id="GPIO@NOT1@NOTP"
                offset="[31:0]"/>
      </register>
      <register description="Toggle port" format="hex0x" id="GPIO@NOT2" offset="0x2308"
                writeOnly="true"
                size="4">
         <field description="Toggle output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = no operation. 1 = Toggle output bit."
                format="hex0x"
                id="GPIO@NOT2@NOTP"
                offset="[31:0]"/>
      </register>
      <register description="Toggle port" format="hex0x" id="GPIO@NOT3" offset="0x230c"
                writeOnly="true"
                size="4">
         <field description="Toggle output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = no operation. 1 = Toggle output bit."
                format="hex0x"
                id="GPIO@NOT3@NOTP"
                offset="[31:0]"/>
      </register>
      <register description="Toggle port" format="hex0x" id="GPIO@NOT4" offset="0x2310"
                writeOnly="true"
                size="4">
         <field description="Toggle output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = no operation. 1 = Toggle output bit."
                format="hex0x"
                id="GPIO@NOT4@NOTP"
                offset="[31:0]"/>
      </register>
      <register description="Toggle port" format="hex0x" id="GPIO@NOT5" offset="0x2314"
                writeOnly="true"
                size="4">
         <field description="Toggle output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = no operation. 1 = Toggle output bit."
                format="hex0x"
                id="GPIO@NOT5@NOTP"
                offset="[31:0]"/>
      </register>
      <register description="Set pin direction bits for port" format="hex0x" id="GPIO@DIRSET0"
                offset="0x2380"
                writeOnly="true"
                size="4">
         <field description="Set direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Set direction bit."
                format="hex0x"
                id="GPIO@DIRSET0@DIRSETP"
                offset="[28:0]"/>
      </register>
      <register description="Set pin direction bits for port" format="hex0x" id="GPIO@DIRSET1"
                offset="0x2384"
                writeOnly="true"
                size="4">
         <field description="Set direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Set direction bit."
                format="hex0x"
                id="GPIO@DIRSET1@DIRSETP"
                offset="[28:0]"/>
      </register>
      <register description="Set pin direction bits for port" format="hex0x" id="GPIO@DIRSET2"
                offset="0x2388"
                writeOnly="true"
                size="4">
         <field description="Set direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Set direction bit."
                format="hex0x"
                id="GPIO@DIRSET2@DIRSETP"
                offset="[28:0]"/>
      </register>
      <register description="Set pin direction bits for port" format="hex0x" id="GPIO@DIRSET3"
                offset="0x238c"
                writeOnly="true"
                size="4">
         <field description="Set direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Set direction bit."
                format="hex0x"
                id="GPIO@DIRSET3@DIRSETP"
                offset="[28:0]"/>
      </register>
      <register description="Set pin direction bits for port" format="hex0x" id="GPIO@DIRSET4"
                offset="0x2390"
                writeOnly="true"
                size="4">
         <field description="Set direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Set direction bit."
                format="hex0x"
                id="GPIO@DIRSET4@DIRSETP"
                offset="[28:0]"/>
      </register>
      <register description="Set pin direction bits for port" format="hex0x" id="GPIO@DIRSET5"
                offset="0x2394"
                writeOnly="true"
                size="4">
         <field description="Set direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Set direction bit."
                format="hex0x"
                id="GPIO@DIRSET5@DIRSETP"
                offset="[28:0]"/>
      </register>
      <register description="Clear pin direction bits for port" format="hex0x"
                id="GPIO@DIRCLR0"
                offset="0x2400"
                writeOnly="true"
                size="4">
         <field description="Clear direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Clear direction bit."
                format="hex0x"
                id="GPIO@DIRCLR0@DIRCLRP"
                offset="[28:0]"/>
      </register>
      <register description="Clear pin direction bits for port" format="hex0x"
                id="GPIO@DIRCLR1"
                offset="0x2404"
                writeOnly="true"
                size="4">
         <field description="Clear direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Clear direction bit."
                format="hex0x"
                id="GPIO@DIRCLR1@DIRCLRP"
                offset="[28:0]"/>
      </register>
      <register description="Clear pin direction bits for port" format="hex0x"
                id="GPIO@DIRCLR2"
                offset="0x2408"
                writeOnly="true"
                size="4">
         <field description="Clear direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Clear direction bit."
                format="hex0x"
                id="GPIO@DIRCLR2@DIRCLRP"
                offset="[28:0]"/>
      </register>
      <register description="Clear pin direction bits for port" format="hex0x"
                id="GPIO@DIRCLR3"
                offset="0x240c"
                writeOnly="true"
                size="4">
         <field description="Clear direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Clear direction bit."
                format="hex0x"
                id="GPIO@DIRCLR3@DIRCLRP"
                offset="[28:0]"/>
      </register>
      <register description="Clear pin direction bits for port" format="hex0x"
                id="GPIO@DIRCLR4"
                offset="0x2410"
                writeOnly="true"
                size="4">
         <field description="Clear direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Clear direction bit."
                format="hex0x"
                id="GPIO@DIRCLR4@DIRCLRP"
                offset="[28:0]"/>
      </register>
      <register description="Clear pin direction bits for port" format="hex0x"
                id="GPIO@DIRCLR5"
                offset="0x2414"
                writeOnly="true"
                size="4">
         <field description="Clear direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Clear direction bit."
                format="hex0x"
                id="GPIO@DIRCLR5@DIRCLRP"
                offset="[28:0]"/>
      </register>
      <register description="Toggle pin direction bits for port" format="hex0x"
                id="GPIO@DIRNOT0"
                offset="0x2480"
                writeOnly="true"
                size="4">
         <field description="Toggle direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = no operation. 1 = Toggle direction bit."
                format="hex0x"
                id="GPIO@DIRNOT0@DIRNOTP"
                offset="[28:0]"/>
      </register>
      <register description="Toggle pin direction bits for port" format="hex0x"
                id="GPIO@DIRNOT1"
                offset="0x2484"
                writeOnly="true"
                size="4">
         <field description="Toggle direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = no operation. 1 = Toggle direction bit."
                format="hex0x"
                id="GPIO@DIRNOT1@DIRNOTP"
                offset="[28:0]"/>
      </register>
      <register description="Toggle pin direction bits for port" format="hex0x"
                id="GPIO@DIRNOT2"
                offset="0x2488"
                writeOnly="true"
                size="4">
         <field description="Toggle direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = no operation. 1 = Toggle direction bit."
                format="hex0x"
                id="GPIO@DIRNOT2@DIRNOTP"
                offset="[28:0]"/>
      </register>
      <register description="Toggle pin direction bits for port" format="hex0x"
                id="GPIO@DIRNOT3"
                offset="0x248c"
                writeOnly="true"
                size="4">
         <field description="Toggle direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = no operation. 1 = Toggle direction bit."
                format="hex0x"
                id="GPIO@DIRNOT3@DIRNOTP"
                offset="[28:0]"/>
      </register>
      <register description="Toggle pin direction bits for port" format="hex0x"
                id="GPIO@DIRNOT4"
                offset="0x2490"
                writeOnly="true"
                size="4">
         <field description="Toggle direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = no operation. 1 = Toggle direction bit."
                format="hex0x"
                id="GPIO@DIRNOT4@DIRNOTP"
                offset="[28:0]"/>
      </register>
      <register description="Toggle pin direction bits for port" format="hex0x"
                id="GPIO@DIRNOT5"
                offset="0x2494"
                writeOnly="true"
                size="4">
         <field description="Toggle direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = no operation. 1 = Toggle direction bit."
                format="hex0x"
                id="GPIO@DIRNOT5@DIRNOTP"
                offset="[28:0]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x DMIC Subsystem (DMIC))" id="DMIC0"
               size="0x1000">
      <register description="Oversample Rate register 0" format="hex0x" id="DMIC0@CHANNEL0-OSR"
                offset="0x0"
                size="4">
         <field description="Selects the oversample rate for the related input channel."
                format="hex0x"
                id="DMIC0@CHANNEL0-OSR@OSR"
                offset="[7:0]"/>
      </register>
      <register description="DMIC Clock Register 0" format="hex0x" id="DMIC0@CHANNEL0-DIVHFCLK"
                offset="0x4"
                size="4">
         <field description="PDM clock divider value. 0 = divide by 1 1 = divide by 2 2 = divide by 3 3 = divide by 4 4 = divide by 6 5 = divide by 8 6 = divide by 12 7 = divide by 16 8 = divide by 24 9 = divide by 32 10 = divide by 48 11 = divide by 64 12 = divide by 96 13 = divide by 128 others = reserved."
                format="hex0x"
                id="DMIC0@CHANNEL0-DIVHFCLK@PDMDIV"
                offset="[3:0]"/>
      </register>
      <register description="Pre-Emphasis Filter Coefficient for 2 FS register" format="hex0x"
                id="DMIC0@CHANNEL0-PREAC2FSCOEF"
                offset="0x8"
                size="4">
         <field description="Pre-emphasis filer coefficient for 2 FS mode. 0 = Compensation = 0 1 = Compensation = 16 2 = Compensation = 15 3 = Compensation = 13"
                format="hex0x"
                id="DMIC0@CHANNEL0-PREAC2FSCOEF@COMP"
                offset="[1:0]"/>
      </register>
      <register description="Pre-Emphasis Filter Coefficient for 4 FS register" format="hex0x"
                id="DMIC0@CHANNEL0-PREAC4FSCOEF"
                offset="0xc"
                size="4">
         <field description="Pre-emphasis filer coefficient for 4 FS mode. 0 = Compensation = 0 1 = Compensation = 16 2 = Compensation = 15 3 = Compensation = 13"
                format="hex0x"
                id="DMIC0@CHANNEL0-PREAC4FSCOEF@COMP"
                offset="[1:0]"/>
      </register>
      <register description="Decimator Gain Shift register" format="hex0x"
                id="DMIC0@CHANNEL0-GAINSHIFT"
                offset="0x10"
                size="4">
         <field description="Gain control, as a positive or negative (two's complement) number of bits to shift."
                format="hex0x"
                id="DMIC0@CHANNEL0-GAINSHIFT@GAIN"
                offset="[5:0]"/>
      </register>
      <register description="FIFO Control register 0" format="hex0x"
                id="DMIC0@CHANNEL0-FIFO-CTRL"
                offset="0x80"
                size="4">
         <field description="FIFO enable." format="enum" enum="d1e140307"
                id="DMIC0@CHANNEL0-FIFO-CTRL@ENABLE"
                offset="[0]"/>
         <field description="FIFO reset." format="enum" enum="d1e140353"
                id="DMIC0@CHANNEL0-FIFO-CTRL@RESETN"
                offset="[1]"/>
         <field description="Interrupt enable." format="enum" enum="d1e140399"
                id="DMIC0@CHANNEL0-FIFO-CTRL@INTEN"
                offset="[2]"/>
         <field description="DMA enable" format="enum" enum="d1e140445"
                id="DMIC0@CHANNEL0-FIFO-CTRL@DMAEN"
                offset="[3]"/>
         <field description="FIFO trigger level. Selects the data trigger level for interrupt or DMA operation. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode See Section 4.5.66 'Hardware Wake-up control register'. 0 = trigger when the FIFO has received one entry (is no longer empty). 1 = trigger when the FIFO has received two entries. 15 = trigger when the FIFO has received 16 entries (has become full)."
                format="hex0x"
                id="DMIC0@CHANNEL0-FIFO-CTRL@TRIGLVL"
                offset="[20:16]"/>
      </register>
      <register description="FIFO Status register 0" format="hex0x"
                id="DMIC0@CHANNEL0-FIFO-STATUS"
                offset="0x84"
                size="4">
         <field description="Interrupt flag. Asserted when FIFO data reaches the level specified in the FIFOCTRL register. Writing a one to this bit clears the flag. Remark: note that the bus clock to the DMIC subsystem must be running in order for an interrupt to occur."
                format="hex0x"
                id="DMIC0@CHANNEL0-FIFO-STATUS@INT"
                offset="[0]"/>
         <field description="Overrun flag. Indicates that a FIFO overflow has occurred at some point. Writing a one to this bit clears the flag. This flag does not cause an interrupt."
                format="hex0x"
                id="DMIC0@CHANNEL0-FIFO-STATUS@OVERRUN"
                offset="[1]"/>
         <field description="Underrun flag. Indicates that a FIFO underflow has occurred at some point. Writing a one to this bit clears the flag."
                format="hex0x"
                id="DMIC0@CHANNEL0-FIFO-STATUS@UNDERRUN"
                offset="[2]"/>
      </register>
      <register description="FIFO Data Register 0" format="hex0x" id="DMIC0@CHANNEL0-FIFO-DATA"
                offset="0x88"
                size="4">
         <field description="Data from the top of the input filter FIFO." format="hex0x"
                id="DMIC0@CHANNEL0-FIFO-DATA@DATA"
                offset="[23:0]"/>
      </register>
      <register description="PDM Source Configuration register 0" format="hex0x"
                id="DMIC0@CHANNEL0-PHY-CTRL"
                offset="0x8c"
                size="4">
         <field description="Capture PDM_DATA" format="enum" enum="d1e140666"
                id="DMIC0@CHANNEL0-PHY-CTRL@PHY-FALL"
                offset="[0]"/>
         <field description="Half rate sampling" format="enum" enum="d1e140712"
                id="DMIC0@CHANNEL0-PHY-CTRL@PHY-HALF"
                offset="[1]"/>
      </register>
      <register description="DC Control register 0" format="hex0x" id="DMIC0@CHANNEL0-DC-CTRL"
                offset="0x90"
                size="4">
         <field description="DC block filter" format="enum" enum="d1e140786"
                id="DMIC0@CHANNEL0-DC-CTRL@DCPOLE"
                offset="[1:0]"/>
         <field description="Fine gain adjustment in the form of a number of bits to downshift."
                format="hex0x"
                id="DMIC0@CHANNEL0-DC-CTRL@DCGAIN"
                offset="[7:4]"/>
         <field description="Selects 16-bit saturation." format="enum" enum="d1e140874"
                id="DMIC0@CHANNEL0-DC-CTRL@SATURATEAT16BIT"
                offset="[8]"/>
      </register>
      <register description="Oversample Rate register 0" format="hex0x" id="DMIC0@CHANNEL1-OSR"
                offset="0x100"
                size="4">
         <field description="Selects the oversample rate for the related input channel."
                format="hex0x"
                id="DMIC0@CHANNEL1-OSR@OSR"
                offset="[7:0]"/>
      </register>
      <register description="DMIC Clock Register 0" format="hex0x" id="DMIC0@CHANNEL1-DIVHFCLK"
                offset="0x104"
                size="4">
         <field description="PDM clock divider value. 0 = divide by 1 1 = divide by 2 2 = divide by 3 3 = divide by 4 4 = divide by 6 5 = divide by 8 6 = divide by 12 7 = divide by 16 8 = divide by 24 9 = divide by 32 10 = divide by 48 11 = divide by 64 12 = divide by 96 13 = divide by 128 others = reserved."
                format="hex0x"
                id="DMIC0@CHANNEL1-DIVHFCLK@PDMDIV"
                offset="[3:0]"/>
      </register>
      <register description="Pre-Emphasis Filter Coefficient for 2 FS register" format="hex0x"
                id="DMIC0@CHANNEL1-PREAC2FSCOEF"
                offset="0x108"
                size="4">
         <field description="Pre-emphasis filer coefficient for 2 FS mode. 0 = Compensation = 0 1 = Compensation = 16 2 = Compensation = 15 3 = Compensation = 13"
                format="hex0x"
                id="DMIC0@CHANNEL1-PREAC2FSCOEF@COMP"
                offset="[1:0]"/>
      </register>
      <register description="Pre-Emphasis Filter Coefficient for 4 FS register" format="hex0x"
                id="DMIC0@CHANNEL1-PREAC4FSCOEF"
                offset="0x10c"
                size="4">
         <field description="Pre-emphasis filer coefficient for 4 FS mode. 0 = Compensation = 0 1 = Compensation = 16 2 = Compensation = 15 3 = Compensation = 13"
                format="hex0x"
                id="DMIC0@CHANNEL1-PREAC4FSCOEF@COMP"
                offset="[1:0]"/>
      </register>
      <register description="Decimator Gain Shift register" format="hex0x"
                id="DMIC0@CHANNEL1-GAINSHIFT"
                offset="0x110"
                size="4">
         <field description="Gain control, as a positive or negative (two's complement) number of bits to shift."
                format="hex0x"
                id="DMIC0@CHANNEL1-GAINSHIFT@GAIN"
                offset="[5:0]"/>
      </register>
      <register description="FIFO Control register 0" format="hex0x"
                id="DMIC0@CHANNEL1-FIFO-CTRL"
                offset="0x180"
                size="4">
         <field description="FIFO enable." format="enum" enum="d1e140307"
                id="DMIC0@CHANNEL1-FIFO-CTRL@ENABLE"
                offset="[0]"/>
         <field description="FIFO reset." format="enum" enum="d1e140353"
                id="DMIC0@CHANNEL1-FIFO-CTRL@RESETN"
                offset="[1]"/>
         <field description="Interrupt enable." format="enum" enum="d1e140399"
                id="DMIC0@CHANNEL1-FIFO-CTRL@INTEN"
                offset="[2]"/>
         <field description="DMA enable" format="enum" enum="d1e140445"
                id="DMIC0@CHANNEL1-FIFO-CTRL@DMAEN"
                offset="[3]"/>
         <field description="FIFO trigger level. Selects the data trigger level for interrupt or DMA operation. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode See Section 4.5.66 'Hardware Wake-up control register'. 0 = trigger when the FIFO has received one entry (is no longer empty). 1 = trigger when the FIFO has received two entries. 15 = trigger when the FIFO has received 16 entries (has become full)."
                format="hex0x"
                id="DMIC0@CHANNEL1-FIFO-CTRL@TRIGLVL"
                offset="[20:16]"/>
      </register>
      <register description="FIFO Status register 0" format="hex0x"
                id="DMIC0@CHANNEL1-FIFO-STATUS"
                offset="0x184"
                size="4">
         <field description="Interrupt flag. Asserted when FIFO data reaches the level specified in the FIFOCTRL register. Writing a one to this bit clears the flag. Remark: note that the bus clock to the DMIC subsystem must be running in order for an interrupt to occur."
                format="hex0x"
                id="DMIC0@CHANNEL1-FIFO-STATUS@INT"
                offset="[0]"/>
         <field description="Overrun flag. Indicates that a FIFO overflow has occurred at some point. Writing a one to this bit clears the flag. This flag does not cause an interrupt."
                format="hex0x"
                id="DMIC0@CHANNEL1-FIFO-STATUS@OVERRUN"
                offset="[1]"/>
         <field description="Underrun flag. Indicates that a FIFO underflow has occurred at some point. Writing a one to this bit clears the flag."
                format="hex0x"
                id="DMIC0@CHANNEL1-FIFO-STATUS@UNDERRUN"
                offset="[2]"/>
      </register>
      <register description="FIFO Data Register 0" format="hex0x" id="DMIC0@CHANNEL1-FIFO-DATA"
                offset="0x188"
                size="4">
         <field description="Data from the top of the input filter FIFO." format="hex0x"
                id="DMIC0@CHANNEL1-FIFO-DATA@DATA"
                offset="[23:0]"/>
      </register>
      <register description="PDM Source Configuration register 0" format="hex0x"
                id="DMIC0@CHANNEL1-PHY-CTRL"
                offset="0x18c"
                size="4">
         <field description="Capture PDM_DATA" format="enum" enum="d1e140666"
                id="DMIC0@CHANNEL1-PHY-CTRL@PHY-FALL"
                offset="[0]"/>
         <field description="Half rate sampling" format="enum" enum="d1e140712"
                id="DMIC0@CHANNEL1-PHY-CTRL@PHY-HALF"
                offset="[1]"/>
      </register>
      <register description="DC Control register 0" format="hex0x" id="DMIC0@CHANNEL1-DC-CTRL"
                offset="0x190"
                size="4">
         <field description="DC block filter" format="enum" enum="d1e140786"
                id="DMIC0@CHANNEL1-DC-CTRL@DCPOLE"
                offset="[1:0]"/>
         <field description="Fine gain adjustment in the form of a number of bits to downshift."
                format="hex0x"
                id="DMIC0@CHANNEL1-DC-CTRL@DCGAIN"
                offset="[7:4]"/>
         <field description="Selects 16-bit saturation." format="enum" enum="d1e140874"
                id="DMIC0@CHANNEL1-DC-CTRL@SATURATEAT16BIT"
                offset="[8]"/>
      </register>
      <register description="Channel Enable register" format="hex0x" id="DMIC0@CHANEN"
                offset="0xf00"
                size="4">
         <field description="Enable channel 0. When 1, PDM channel 0 is enabled."
                format="hex0x"
                id="DMIC0@CHANEN@EN-CH0"
                offset="[0]"/>
         <field description="Enable channel 1. When 1, PDM channel 1 is enabled."
                format="hex0x"
                id="DMIC0@CHANEN@EN-CH1"
                offset="[1]"/>
      </register>
      <register description="I/O Configuration register" format="hex0x" id="DMIC0@IOCFG"
                offset="0xf0c"
                size="4">
         <field description="Bypass CLK0. When 1, PDM_DATA1 becomes the clock for PDM channel 0. This provides for the possibility of an external codec taking over the PDM bus."
                format="hex0x"
                id="DMIC0@IOCFG@CLK-BYPASS0"
                offset="[0]"/>
         <field description="Bypass CLK1. When 1, PDM_DATA1 becomes the clock for PDM channel 1. This provides for the possibility of an external codec taking over the PDM bus."
                format="hex0x"
                id="DMIC0@IOCFG@CLK-BYPASS1"
                offset="[1]"/>
         <field description="Stereo PDM select. When 1, PDM_DATA0 is routed to both PDM channels in a configuration that supports a single stereo digital microphone."
                format="hex0x"
                id="DMIC0@IOCFG@STEREO-DATA0"
                offset="[2]"/>
      </register>
      <register description="Use 2FS register" format="hex0x" id="DMIC0@USE2FS" offset="0xf10"
                size="4">
         <field description="Use 2FS register" format="enum" enum="d1e141095"
                id="DMIC0@USE2FS@USE2FS"
                offset="[0]"/>
      </register>
      <register description="HWVAD input gain register" format="hex0x" id="DMIC0@HWVADGAIN"
                offset="0xf80"
                size="4">
         <field description="Shift value for input bits 0x00 -10 bits 0x01 -8 bits 0x02 -6 bits 0x03 -4 bits 0x04 -2 bits 0x05 0 bits (default) 0x06 +2 bits 0x07 +4 bits 0x08 +6 bits 0x09 +8 bits 0x0A +10 bits 0x0B +12 bits 0x0C +14 bits 0x0D to 0x0F Reserved."
                format="hex0x"
                id="DMIC0@HWVADGAIN@INPUTGAIN"
                offset="[3:0]"/>
      </register>
      <register description="HWVAD filter control register" format="hex0x" id="DMIC0@HWVADHPFS"
                offset="0xf84"
                size="4">
         <field description="High pass filter" format="enum" enum="d1e141216"
                id="DMIC0@HWVADHPFS@HPFS"
                offset="[1:0]"/>
      </register>
      <register description="HWVAD control register" format="hex0x" id="DMIC0@HWVADST10"
                offset="0xf88"
                size="4">
         <field description="Stage 0" format="enum" enum="d1e141302" id="DMIC0@HWVADST10@ST10"
                offset="[0]"/>
      </register>
      <register description="HWVAD filter reset register" format="hex0x" id="DMIC0@HWVADRSTT"
                offset="0xf8c"
                size="4">
         <field description="Writing a 1 resets all filter values" format="hex0x"
                id="DMIC0@HWVADRSTT@RSTT"
                offset="[0]"/>
      </register>
      <register description="HWVAD noise estimator gain register" format="hex0x"
                id="DMIC0@HWVADTHGN"
                offset="0xf90"
                size="4">
         <field description="Gain value for the noise estimator. Values 0 to 14. 0 corresponds to a gain of 1."
                format="hex0x"
                id="DMIC0@HWVADTHGN@THGN"
                offset="[3:0]"/>
      </register>
      <register description="HWVAD signal estimator gain register" format="hex0x"
                id="DMIC0@HWVADTHGS"
                offset="0xf94"
                size="4">
         <field description="Gain value for the signal estimator. Values 0 to 14. 0 corresponds to a gain of 1."
                format="hex0x"
                id="DMIC0@HWVADTHGS@THGS"
                offset="[3:0]"/>
      </register>
      <register description="HWVAD noise envelope estimator register" format="hex0x"
                id="DMIC0@HWVADLOWZ"
                offset="0xf98"
                readOnly="true"
                size="4">
         <field description="Noise envelope estimator value." format="hex0x"
                id="DMIC0@HWVADLOWZ@LOWZ"
                offset="[15:0]"/>
      </register>
      <register description="Module Identification register" format="hex0x" id="DMIC0@ID"
                offset="0xffc"
                readOnly="true"
                size="4">
         <field description="Indicates module ID and the number of channels in this DMIC interface."
                format="hex0x"
                id="DMIC0@ID@ID"
                offset="[31:0]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC54S60x/LPC5460x Ethernet controller" id="ENET"
               size="0x1184">
      <register description="MAC configuration register" format="hex0x" id="ENET@MAC-CONFIG"
                offset="0x0"
                size="4">
         <field description="Receiver Enable When this bit is set, the receiver state machine of the MAC is enabled for receiving frames from the MII."
                format="hex0x"
                id="ENET@MAC-CONFIG@RE"
                offset="[0]"/>
         <field description="Transmitter Enable When this bit is set, the transmit state machine of the MAC is enabled for transmission on the MII."
                format="hex0x"
                id="ENET@MAC-CONFIG@TE"
                offset="[1]"/>
         <field description="Preamble Length for Transmit packets These bits control the number of preamble bytes that are added to the beginning of every Tx packet."
                format="hex0x"
                id="ENET@MAC-CONFIG@PRELEN"
                offset="[3:2]"/>
         <field description="Deferral Check When this bit is set, the deferral check function is enabled in the MAC."
                format="hex0x"
                id="ENET@MAC-CONFIG@DC"
                offset="[4]"/>
         <field description="Back-Off Limit The Back-Off limit determines the random integer number (r) of slot time delays (4,096 bit times for 1000 Mbps and 512 bit times for 10/100 Mbps) the MAC waits before rescheduling a transmission attempt during retries after a collision."
                format="hex0x"
                id="ENET@MAC-CONFIG@BL"
                offset="[6:5]"/>
         <field description="Disable Retry When this bit is set, the MAC will attempt only one transmission."
                format="hex0x"
                id="ENET@MAC-CONFIG@DR"
                offset="[8]"/>
         <field description="Disable Carrier Sense During Transmission When this bit is set, the MAC transmitter ignores the MII CRS signal during packet transmission in the half-duplex mode."
                format="hex0x"
                id="ENET@MAC-CONFIG@DCRS"
                offset="[9]"/>
         <field description="Disable Receive Own When this bit is set, the MAC disables the reception of frames when the gmii_txen_o is asserted in Half-Duplex mode."
                format="hex0x"
                id="ENET@MAC-CONFIG@DO"
                offset="[10]"/>
         <field description="Enable Carrier Sense Before Transmission in Full-Duplex Mode When this bit is set, the MAC transmitter checks the CRS signal before packet transmission in the full-duplex mode."
                format="hex0x"
                id="ENET@MAC-CONFIG@ECRSFD"
                offset="[11]"/>
         <field description="Loopback Mode When this bit is set, the MAC operates in loopback mode at MII."
                format="hex0x"
                id="ENET@MAC-CONFIG@LM"
                offset="[12]"/>
         <field description="Duplex Mode When this bit is set, the MAC operates in a Full-Duplex mode where it can transmit and receive simultaneously."
                format="hex0x"
                id="ENET@MAC-CONFIG@DM"
                offset="[13]"/>
         <field description="Speed Indicates the speed in Fast Ethernet (MII) mode: This bit is reserved (RO) by default and is enabled only when RMII/SMII is enabled during configuration."
                format="hex0x"
                id="ENET@MAC-CONFIG@FES"
                offset="[14]"/>
         <field description="Portselect." format="hex0x" id="ENET@MAC-CONFIG@PS" offset="[15]"/>
         <field description="Jumbo Frame Enable When this bit is set, MAC allows Jumbo frames of 9,018 bytes (9,022 bytes for tagged frames) without reporting a giant frame error in the receive frame status."
                format="hex0x"
                id="ENET@MAC-CONFIG@JE"
                offset="[16]"/>
         <field description="Jabber Disable When this bit is set, the MAC disables the jabber timer on the transmitter, and can transfer frames of up to 16,384 bytes."
                format="hex0x"
                id="ENET@MAC-CONFIG@JD"
                offset="[17]"/>
         <field description="Packet Burst Enable When this bit is set, the MAC allows packet bursting during transmission in the MII half-duplex mode."
                format="hex0x"
                id="ENET@MAC-CONFIG@BE"
                offset="[18]"/>
         <field description="Watchdog Disable When this bit is set, the MAC disables the watchdog timer on the receiver, and can receive frames of up to 16,384 bytes."
                format="hex0x"
                id="ENET@MAC-CONFIG@WD"
                offset="[19]"/>
         <field description="Automatic Pad or CRC Stripping When this bit is set, the MAC strips the Pad or FCS field on the incoming packets only if the value of the length field is less than 1,536 bytes."
                format="hex0x"
                id="ENET@MAC-CONFIG@ACS"
                offset="[20]"/>
         <field description="CRC stripping for Type packets When this bit is set, the last four bytes (FCS) of all packets of Ether type (type field greater than 1,536) are stripped and dropped before forwarding the packet to the application."
                format="hex0x"
                id="ENET@MAC-CONFIG@CST"
                offset="[21]"/>
         <field description="IEEE 802." format="hex0x" id="ENET@MAC-CONFIG@S2KP" offset="[22]"/>
         <field description="Giant Packet Size Limit Control Enable When this bit is set, the MAC considers the value in GPSL field in MAC Ext Configuration register to declare a received packet as Giant packet."
                format="hex0x"
                id="ENET@MAC-CONFIG@GPSLCE"
                offset="[23]"/>
         <field description="Inter-Packet Gap These bits control the minimum IPG between packets during transmission."
                format="hex0x"
                id="ENET@MAC-CONFIG@IPG"
                offset="[26:24]"/>
         <field description="Checksum Offload When set, this bit enables the IPv4 header checksum checking and IPv4 or IPv6 TCP, UDP, or ICMP payload checksum checking."
                format="hex0x"
                id="ENET@MAC-CONFIG@IPC"
                offset="[27]"/>
      </register>
      <register description="no description available" format="hex0x" id="ENET@MAC-EXT-CONFIG"
                offset="0x4"
                size="4">
         <field description="Giant Packet Size Limit If the received packet size is greater than the value programmed in this field in units of bytes, the MAC declares the received packet as Giant packet."
                format="hex0x"
                id="ENET@MAC-EXT-CONFIG@GPSL"
                offset="[13:0]"/>
         <field description="Disable CRC Checking for Received Packets When this bit is set, the MAC receiver does not check the CRC field in the received packets."
                format="hex0x"
                id="ENET@MAC-EXT-CONFIG@DCRCC"
                offset="[16]"/>
         <field description="Slow Protocol Detection Enable When this bit is set, MAC processes the Slow Protocol packets (Ether Type 0x8809) and provides the Rx status."
                format="hex0x"
                id="ENET@MAC-EXT-CONFIG@SPEN"
                offset="[17]"/>
         <field description="Unicast Slow Protocol Packet Detect When this bit is set, the MAC detects the Slow Protocol packets with unicast address of the station specified in the MAC Address High Table 747 and MAC Address Low Table 748 registers."
                format="hex0x"
                id="ENET@MAC-EXT-CONFIG@USP"
                offset="[18]"/>
      </register>
      <register description="MAC frame filter register" format="hex0x"
                id="ENET@MAC-FRAME-FILTER"
                offset="0x8"
                size="4">
         <field description="Promiscuous Mode When this bit is set, the Address Filter module passes all incoming frames regardless of its destination or source address."
                format="hex0x"
                id="ENET@MAC-FRAME-FILTER@PR"
                offset="[0]"/>
         <field description="DA Inverse Filtering When this bit is set, the Address Check block operates in inverse filtering mode for the DA address comparison for both unicast and multicast frames."
                format="hex0x"
                id="ENET@MAC-FRAME-FILTER@DAIF"
                offset="[3]"/>
         <field description="Pass All Multicast When set, this bit indicates that all received frames with a multicast destination address (first bit in the destination address field is '1') are passed."
                format="hex0x"
                id="ENET@MAC-FRAME-FILTER@PM"
                offset="[4]"/>
         <field description="Disable Broadcast Frames When this bit is set, the AFM module filters all incoming broadcast frames."
                format="hex0x"
                id="ENET@MAC-FRAME-FILTER@DBF"
                offset="[5]"/>
         <field description="Pass Control Frames These bits control the forwarding of all control frames (including unicast and multicast PAUSE frames)."
                format="hex0x"
                id="ENET@MAC-FRAME-FILTER@PCF"
                offset="[7:6]"/>
         <field description="SA Inverse Filtering When this bit is set, the Address Check block operates in the inverse filtering mode for SA address comparison."
                format="hex0x"
                id="ENET@MAC-FRAME-FILTER@SAIF"
                offset="[8]"/>
         <field description="Source Address Filter Enable When this bit is set, the MAC compares the SA field of the received packets with the values programmed in the enabled SA registers."
                format="hex0x"
                id="ENET@MAC-FRAME-FILTER@SAF"
                offset="[9]"/>
         <field description="Receive all When this bit is set, the MAC Receiver module passes to the Application all frames received irrespective of whether they pass the address filter."
                format="hex0x"
                id="ENET@MAC-FRAME-FILTER@RA"
                offset="[31]"/>
      </register>
      <register description="MAC watchdog Timeout register" format="hex0x"
                id="ENET@MAC-WD-TIMEROUT"
                offset="0xc"
                size="4">
         <field description="Watchdog Timeout When the PWE bit is set and the WD bit of the MAC Configuration register Table 722 is reset, this field is used as watchdog timeout for a received packet."
                format="hex0x"
                id="ENET@MAC-WD-TIMEROUT@WTO"
                offset="[3:0]"/>
         <field description="Programmable Watchdog Enable When this bit is set and the WD bit of the MAC Configuration register Table 722 is reset, the WTO field is used as watchdog timeout for a received packet."
                format="hex0x"
                id="ENET@MAC-WD-TIMEROUT@PWE"
                offset="[8]"/>
      </register>
      <register description="MAC vlan tag register" format="hex0x" id="ENET@MAC-VLAN-TAG"
                offset="0x50"
                size="4">
         <field description="VLAN Tag Identifier for Receive Packets." format="hex0x"
                id="ENET@MAC-VLAN-TAG@VL"
                offset="[15:0]"/>
         <field description="Enable 12-Bit VLAN Tag Comparison." format="hex0x"
                id="ENET@MAC-VLAN-TAG@ETV"
                offset="[16]"/>
         <field description="VLAN Tag Inverse Match Enable." format="hex0x"
                id="ENET@MAC-VLAN-TAG@VTIM"
                offset="[17]"/>
         <field description="Enable S-VLAN." format="hex0x" id="ENET@MAC-VLAN-TAG@ESVL"
                offset="[18]"/>
         <field description="Enable Receive S-VLAN Match." format="hex0x"
                id="ENET@MAC-VLAN-TAG@ERSVLM"
                offset="[19]"/>
         <field description="Disable VLAN Type Check." format="hex0x"
                id="ENET@MAC-VLAN-TAG@DOVLTC"
                offset="[20]"/>
         <field description="Enable VLAN Tag Stripping on Receive." format="hex0x"
                id="ENET@MAC-VLAN-TAG@EVLS"
                offset="[22:21]"/>
         <field description="Enable VLAN Tag in Rx status." format="hex0x"
                id="ENET@MAC-VLAN-TAG@EVLRXS"
                offset="[24]"/>
         <field description="Disable VLAN Type Check." format="hex0x"
                id="ENET@MAC-VLAN-TAG@VTHM"
                offset="[25]"/>
         <field description="Enable Double VLAN Processing." format="hex0x"
                id="ENET@MAC-VLAN-TAG@EDVLP"
                offset="[26]"/>
         <field description="Enable Inner VLAN Tag." format="hex0x"
                id="ENET@MAC-VLAN-TAG@ERIVLT"
                offset="[27]"/>
         <field description="Enable Inner VLAN Tag Stripping on Receive." format="hex0x"
                id="ENET@MAC-VLAN-TAG@EIVLS"
                offset="[29:28]"/>
         <field description="Enable Inner VLAN Tag in Rx Status." format="hex0x"
                id="ENET@MAC-VLAN-TAG@EIVLRXS"
                offset="[31]"/>
      </register>
      <register description="Transmit flow control register" format="hex0x"
                id="ENET@MAC-TX-FLOW-CTRL-Q0"
                offset="0x70"
                size="4">
         <field description="Flow Control Busy/Backpressure Activate This register field can be read by the application (Read), can be set to 1 by the application with a register write of 1 (Write Set), and is cleared to 0 by the core (Self Clear)."
                format="hex0x"
                id="ENET@MAC-TX-FLOW-CTRL-Q0@FCB"
                offset="[0]"/>
         <field description="Transmit Flow Control Enable In Full-Duplex mode, when this bit is set, the MAC enables the flow control operation to transmit Pause frames."
                format="hex0x"
                id="ENET@MAC-TX-FLOW-CTRL-Q0@TFE"
                offset="[1]"/>
         <field description="Pause Low Threshold This field configures the threshold of the PAUSE timer at which the input flow control signal is checked for automatic retransmission of PAUSE Frame."
                format="hex0x"
                id="ENET@MAC-TX-FLOW-CTRL-Q0@PLT"
                offset="[6:4]"/>
         <field description="Disable Zero-Quanta Pause When set, this bit disables the automatic generation of Zero-Quanta Pause Control frames on the deassertion of the flow-control signal from the FIFO layer."
                format="hex0x"
                id="ENET@MAC-TX-FLOW-CTRL-Q0@DZPQ"
                offset="[7]"/>
         <field description="Pause time This field holds the value to be used in the Pause Time field in the transmit control frame."
                format="hex0x"
                id="ENET@MAC-TX-FLOW-CTRL-Q0@PT"
                offset="[31:16]"/>
      </register>
      <register description="Transmit flow control register" format="hex0x"
                id="ENET@MAC-TX-FLOW-CTRL-Q1"
                offset="0x74"
                size="4">
         <field description="Flow Control Busy/Backpressure Activate This register field can be read by the application (Read), can be set to 1 by the application with a register write of 1 (Write Set), and is cleared to 0 by the core (Self Clear)."
                format="hex0x"
                id="ENET@MAC-TX-FLOW-CTRL-Q1@FCB"
                offset="[0]"/>
         <field description="Transmit Flow Control Enable In Full-Duplex mode, when this bit is set, the MAC enables the flow control operation to transmit Pause frames."
                format="hex0x"
                id="ENET@MAC-TX-FLOW-CTRL-Q1@TFE"
                offset="[1]"/>
         <field description="Pause Low Threshold This field configures the threshold of the PAUSE timer at which the input flow control signal is checked for automatic retransmission of PAUSE Frame."
                format="hex0x"
                id="ENET@MAC-TX-FLOW-CTRL-Q1@PLT"
                offset="[6:4]"/>
         <field description="Disable Zero-Quanta Pause When set, this bit disables the automatic generation of Zero-Quanta Pause Control frames on the deassertion of the flow-control signal from the FIFO layer."
                format="hex0x"
                id="ENET@MAC-TX-FLOW-CTRL-Q1@DZPQ"
                offset="[7]"/>
         <field description="Pause time This field holds the value to be used in the Pause Time field in the transmit control frame."
                format="hex0x"
                id="ENET@MAC-TX-FLOW-CTRL-Q1@PT"
                offset="[31:16]"/>
      </register>
      <register description="Receive flow control register" format="hex0x"
                id="ENET@MAC-RX-FLOW-CTRL"
                offset="0x90"
                size="4">
         <field description="Receive Flow Control Enable When this bit is set and the MAC is operating in full-duplex mode, the MAC decodes the received Pause packet and disables its transmitter for a specified (Pause) time."
                format="hex0x"
                id="ENET@MAC-RX-FLOW-CTRL@RFE"
                offset="[0]"/>
         <field description="Unicast Pause Packet Detect A pause packet is processed when it has the unique multicast address specified in the IEEE 802."
                format="hex0x"
                id="ENET@MAC-RX-FLOW-CTRL@UP"
                offset="[1]"/>
      </register>
      <register description="no description available" format="hex0x"
                id="ENET@MAC-TXQ-PRIO-MAP"
                offset="0x98"
                size="4">
         <field description="Priorities Selected in Transmit Queue 0 This field holds the priorities assigned to Tx Queue 0 by the software."
                format="hex0x"
                id="ENET@MAC-TXQ-PRIO-MAP@PSTQ0"
                offset="[7:0]"/>
         <field description="Priorities Selected in Transmit Queue 1 This bit is similar to the PSTQ0 bit."
                format="hex0x"
                id="ENET@MAC-TXQ-PRIO-MAP@PSTQ1"
                offset="[15:8]"/>
      </register>
      <register description="Receive Queue Control 0 register 0x0000" format="hex0x"
                id="ENET@MAC-RXQ-CTRL0"
                offset="0xa0"
                size="4">
         <field description="Receive Queue 0 Enable." format="hex0x"
                id="ENET@MAC-RXQ-CTRL0@RXQ0EN"
                offset="[1:0]"/>
         <field description="Receive Queue 1 Enable." format="hex0x"
                id="ENET@MAC-RXQ-CTRL0@RXQ1EN"
                offset="[3:2]"/>
      </register>
      <register description="Receive Queue Control 0 register 0x0000" format="hex0x"
                id="ENET@MAC-RXQ-CTRL1"
                offset="0xa4"
                size="4">
         <field description="AV Untagged Control Packets Queue." format="hex0x"
                id="ENET@MAC-RXQ-CTRL1@AVCPQ"
                offset="[2:0]"/>
         <field description="AV PTP Packets Queue." format="hex0x"
                id="ENET@MAC-RXQ-CTRL1@AVPTPQ"
                offset="[6:4]"/>
         <field description="Untagged Packet Queue." format="hex0x" id="ENET@MAC-RXQ-CTRL1@UPQ"
                offset="[14:12]"/>
         <field description="Multicast and Broadcast Queue." format="hex0x"
                id="ENET@MAC-RXQ-CTRL1@MCBCQ"
                offset="[18:16]"/>
         <field description="Multicast and Broadcast Queue Enable." format="hex0x"
                id="ENET@MAC-RXQ-CTRL1@MCBCQEN"
                offset="[20]"/>
      </register>
      <register description="Receive Queue Control 0 register 0x0000" format="hex0x"
                id="ENET@MAC-RXQ-CTRL2"
                offset="0xa8"
                size="4">
         <field description="Priorities Selected in the Receive Queue 0." format="hex0x"
                id="ENET@MAC-RXQ-CTRL2@PSRQ0"
                offset="[7:0]"/>
         <field description="Priorities Selected in the Receive Queue 1." format="hex0x"
                id="ENET@MAC-RXQ-CTRL2@PSRQ1"
                offset="[15:8]"/>
         <field description="Priorities Selected in the Receive Queue 2." format="hex0x"
                id="ENET@MAC-RXQ-CTRL2@PSRQ2"
                offset="[23:16]"/>
         <field description="Priorities Selected in the Receive Queue 3." format="hex0x"
                id="ENET@MAC-RXQ-CTRL2@PSRQ3"
                offset="[31:24]"/>
      </register>
      <register description="Interrupt status register 0x0000" format="hex0x"
                id="ENET@MAC-INTR-STAT"
                offset="0xb0"
                readOnly="true"
                size="4">
         <field description="PHY Interrupt." format="hex0x" id="ENET@MAC-INTR-STAT@PHYIS"
                offset="[3]"/>
         <field description="PMT Interrupt Status." format="hex0x"
                id="ENET@MAC-INTR-STAT@PMTIS"
                offset="[4]"/>
         <field description="LPI Interrupt Status." format="hex0x"
                id="ENET@MAC-INTR-STAT@LPIIS"
                offset="[5]"/>
         <field description="Timestamp interrupt status." format="hex0x"
                id="ENET@MAC-INTR-STAT@TSIS"
                offset="[12]"/>
         <field description="Transmit Status Interrupt." format="hex0x"
                id="ENET@MAC-INTR-STAT@TXSTSIS"
                offset="[13]"/>
         <field description="Receive Status Interrupt." format="hex0x"
                id="ENET@MAC-INTR-STAT@RXSTSIS"
                offset="[14]"/>
      </register>
      <register description="Interrupt enable register 0x0000" format="hex0x"
                id="ENET@MAC-INTR-EN"
                offset="0xb4"
                size="4">
         <field description="PHY Interrupt Enable." format="hex0x" id="ENET@MAC-INTR-EN@PHYIE"
                offset="[3]"/>
         <field description="PMT Interrupt Enable." format="hex0x" id="ENET@MAC-INTR-EN@PMTIE"
                offset="[4]"/>
         <field description="LPI Interrupt Enable." format="hex0x" id="ENET@MAC-INTR-EN@LPIIE"
                offset="[5]"/>
         <field description="Timestamp Interrupt Enable." format="hex0x"
                id="ENET@MAC-INTR-EN@TSIE"
                offset="[12]"/>
         <field description="Transmit Status Interrupt Enable." format="hex0x"
                id="ENET@MAC-INTR-EN@TXSTSIE"
                offset="[13]"/>
         <field description="Receive Status Interrupt Enable." format="hex0x"
                id="ENET@MAC-INTR-EN@RXSTSIS"
                offset="[14]"/>
      </register>
      <register description="Receive Transmit Status register" format="hex0x"
                id="ENET@MAC-RXTX-STAT"
                offset="0xb8"
                readOnly="true"
                size="4">
         <field description="PHY Interrupt Enable When this bit is set, it enables the assertion of the interrupt signal because of the setting of PHYIS bit in MAC Interrupt Status register Table 731."
                format="hex0x"
                id="ENET@MAC-RXTX-STAT@TJT"
                offset="[0]"/>
         <field description="No Carrier When the DTXSTS bit is set in the MTL Operation Mode register Table 758, this bit indicates that the carrier signal from the PHY is not present at the end of preamble transmission."
                format="hex0x"
                id="ENET@MAC-RXTX-STAT@NCARR"
                offset="[1]"/>
         <field description="Loss of Carrier When the DTXSTS bit is set in the MTL Operation Mode register Table 758, this bit indicates that the loss of carrier occurred during packet transmission, that is, the PHY Carrier signal was inactive for one or more transmission clock periods during packet transmission."
                format="hex0x"
                id="ENET@MAC-RXTX-STAT@LCARR"
                offset="[2]"/>
         <field description="Excessive Deferral When the DTXSTS bit is set in the MTL Operation Mode register Table 758 and the DC bit is set in the MAC Configuration register Table 758, this bit indicates that the transmission ended because of excessive deferral of over 24,288 bit times (155,680 when Jumbo packet is enabled)."
                format="hex0x"
                id="ENET@MAC-RXTX-STAT@EXDEF"
                offset="[3]"/>
         <field description="Late Collision When the DTXSTS bit is set in the MTL Operation Mode register Table 758, this bit indicates that the packet transmission aborted because a collision occurred after the collision window (64 bytes including Preamble in MII mode)."
                format="hex0x"
                id="ENET@MAC-RXTX-STAT@LCOL"
                offset="[4]"/>
         <field description="Excessive Collisions When the DTXSTS bit is set in the MTL Operation Mode register Table 758, this bit indicates that the transmission aborted after 16 successive collisions while attempting to transmit the current packet."
                format="hex0x"
                id="ENET@MAC-RXTX-STAT@EXCOL"
                offset="[5]"/>
         <field description="Receive Watchdog Timeout This bit is set when a packet with length greater than 2,048 bytes is received (10,240 bytes when Jumbo Packet mode is enabled) and the WD bit is reset in the MAC Configuration register Table 722."
                format="hex0x"
                id="ENET@MAC-RXTX-STAT@RWT"
                offset="[8]"/>
      </register>
      <register description="no description available" format="hex0x"
                id="ENET@MAC-PMT-CRTL-STAT"
                offset="0xc0"
                size="4">
         <field description="Transmit LPI Entry When this bit is set, it indicates that the MAC Transmitter has entered the LPI state because of the setting of the LPIEN bit."
                format="hex0x"
                id="ENET@MAC-PMT-CRTL-STAT@PWRDWN"
                offset="[0]"/>
         <field description="Magic Packet Enable." format="hex0x"
                id="ENET@MAC-PMT-CRTL-STAT@MGKPKTEN"
                offset="[1]"/>
         <field description="Remote Wake-Up Packet Enable When this bit is set, a power management event is generated when the MAC receives a remote wake-up packet."
                format="hex0x"
                id="ENET@MAC-PMT-CRTL-STAT@RWKPKTEN"
                offset="[2]"/>
         <field description="Magic Packet Received." format="hex0x"
                id="ENET@MAC-PMT-CRTL-STAT@MGKPRCVD"
                offset="[5]"/>
         <field description="Remote Wake-Up Packet Received." format="hex0x"
                id="ENET@MAC-PMT-CRTL-STAT@RWKPRCVD"
                offset="[6]"/>
         <field description="Global Unicast When this bit set, any unicast packet filtered by the MAC (DAF) address recognition is detected as a remote wake-up packet."
                format="hex0x"
                id="ENET@MAC-PMT-CRTL-STAT@GLBLUCAST"
                offset="[9]"/>
         <field description="Remote Wake-up Packet Forwarding Enable When this bit is set along with RWKPKTEN, the MAC receiver drops all received frames until it receives the expected wake-up frame."
                format="hex0x"
                id="ENET@MAC-PMT-CRTL-STAT@RWKPFE"
                offset="[10]"/>
         <field description="Remote Wake-up FIFO Pointer This field gives the current value (0 to 7) of the Remote Wake-up Packet Filter register pointer."
                format="hex0x"
                id="ENET@MAC-PMT-CRTL-STAT@RWKPTR"
                offset="[28:24]"/>
         <field description="Remote Wake-Up Packet Filter Register Pointer Reset When this bit is set, the remote wake-up packet filter register pointer is reset to 3'b000."
                format="hex0x"
                id="ENET@MAC-PMT-CRTL-STAT@RWKFILTRST"
                offset="[31]"/>
      </register>
      <register description="Remote wake-up frame filter" format="hex0x"
                id="ENET@MAC-RWAKE-FRFLT"
                offset="0xc4"
                size="4">
         <field description="WKUPFMFILTER address." format="hex0x"
                id="ENET@MAC-RWAKE-FRFLT@ADDR"
                offset="[31:0]"/>
      </register>
      <register description="LPI Control and Status Register" format="hex0x"
                id="ENET@MAC-LPI-CTRL-STAT"
                offset="0xd0"
                size="4">
         <field description="Transmit LPI Entry When this bit is set, it indicates that the MAC Transmitter has entered the LPI state because of the setting of the LPIEN bit."
                format="hex0x"
                id="ENET@MAC-LPI-CTRL-STAT@TLPIEN"
                offset="[0]"/>
         <field description="Transmit LPI Exit When this bit is set, it indicates that the MAC transmitter exited the LPI state after the application cleared the LPIEN bit and the LPI TW Timer has expired."
                format="hex0x"
                id="ENET@MAC-LPI-CTRL-STAT@TLPIEX"
                offset="[1]"/>
         <field description="Receive LPI Entry When this bit is set, it indicates that the MAC Receiver has received an LPI pattern and entered the LPI state."
                format="hex0x"
                id="ENET@MAC-LPI-CTRL-STAT@RLPIEN"
                offset="[2]"/>
         <field description="Receive LPI Exit When this bit is set, it indicates that the MAC Receiver has stopped receiving the LPI pattern on the MII interface, exited the LPI state, and resumed the normal reception."
                format="hex0x"
                id="ENET@MAC-LPI-CTRL-STAT@RLPIEX"
                offset="[3]"/>
         <field description="Transmit LPI State When this bit is set, it indicates that the MAC is transmitting the LPI pattern on the MII interface."
                format="hex0x"
                id="ENET@MAC-LPI-CTRL-STAT@TLPIST"
                offset="[8]"/>
         <field description="Receive LPI State When this bit is set, it indicates that the MAC is receiving the LPI pattern on the MII interface."
                format="hex0x"
                id="ENET@MAC-LPI-CTRL-STAT@RLPIST"
                offset="[9]"/>
         <field description="LPI Enable When this bit is set, it instructs the MAC Transmitter to enter the LPI state."
                format="hex0x"
                id="ENET@MAC-LPI-CTRL-STAT@LPIEN"
                offset="[16]"/>
         <field description="PHY Link Status This bit indicates the link status of the PHY."
                format="hex0x"
                id="ENET@MAC-LPI-CTRL-STAT@PLS"
                offset="[17]"/>
         <field description="LPI Tx Automate This bit controls the behavior of the MAC when it is entering or coming out of the LPI mode on the Transmit side."
                format="hex0x"
                id="ENET@MAC-LPI-CTRL-STAT@LPITXA"
                offset="[19]"/>
         <field description="LPI Timer Enable This bit controls the automatic entry of the MAC Transmitter into and exit out of the LPI state."
                format="hex0x"
                id="ENET@MAC-LPI-CTRL-STAT@LPIATE"
                offset="[20]"/>
         <field description="LPI Tx Clock Stop Enable When this bit is set, the MAC asserts LPI Tx Clock Gating Control signal high after it enters Tx LPI mode to indicate that the Tx clock to MAC can be stopped."
                format="hex0x"
                id="ENET@MAC-LPI-CTRL-STAT@LPITCSE"
                offset="[21]"/>
      </register>
      <register description="LPI Timers Control register" format="hex0x"
                id="ENET@MAC-LPI-TIMER-CTRL"
                offset="0xd4"
                size="4">
         <field description="LPI TW Timer This field specifies the minimum time (in microseconds) for which the MAC waits after it stops transmitting the LPI pattern to the PHY and before it resumes the normal transmission."
                format="hex0x"
                id="ENET@MAC-LPI-TIMER-CTRL@TWT"
                offset="[15:0]"/>
         <field description="LPI LS Timer This field specifies the minimum time (in milliseconds) for which the link status from the PHY should be up (OKAY) before the LPI pattern can be transmitted to the PHY."
                format="hex0x"
                id="ENET@MAC-LPI-TIMER-CTRL@LST"
                offset="[25:16]"/>
      </register>
      <register description="LPI entry Timer register" format="hex0x"
                id="ENET@MAC-LPI-ENTR-TIMR"
                offset="0xd8"
                size="4">
         <field description="LPI Entry Timer This field specifies the time in microseconds the MAC will wait to enter LPI mode, after it has transmitted all the frames."
                format="hex0x"
                id="ENET@MAC-LPI-ENTR-TIMR@LPIET"
                offset="[19:3]"/>
      </register>
      <register description="no description available" format="hex0x"
                id="ENET@MAC-1US-TIC-COUNTR"
                offset="0xdc"
                size="4">
         <field description="1US TIC Counter The application must program this counter so that the number of clock cycles of CSR clock is 1us."
                format="hex0x"
                id="ENET@MAC-1US-TIC-COUNTR@TIC-1US-CNTR"
                offset="[11:0]"/>
      </register>
      <register description="MAC version register" format="hex0x" id="ENET@MAC-VERSION"
                offset="0x110"
                size="4">
         <field description="NXP defined version." format="hex0x" id="ENET@MAC-VERSION@SNPVER"
                offset="[7:0]"/>
         <field description="User defined version." format="hex0x"
                id="ENET@MAC-VERSION@USERVER"
                offset="[15:8]"/>
      </register>
      <register description="MAC debug register" format="hex0x" id="ENET@MAC-DBG"
                offset="0x114"
                readOnly="true"
                size="4">
         <field description="MAC MII Receive Protocol Engine Status When this bit is set, it indicates that the MAC MII receive protocol engine is actively receiving data, and it is not in the Idle state."
                format="hex0x"
                id="ENET@MAC-DBG@REPESTS"
                offset="[0]"/>
         <field description="MAC Receive Packet Controller FIFO Status When this bit is set, this field indicates the active state of the small FIFO Read and Write controllers of the MAC Receive Packet Controller module."
                format="hex0x"
                id="ENET@MAC-DBG@RFCFCSTS"
                offset="[2:1]"/>
         <field description="MAC MII Transmit Protocol Engine Status When this bit is set, it indicates that the MAC or MII transmit protocol engine is actively transmitting data, and it is not in the Idle state."
                format="hex0x"
                id="ENET@MAC-DBG@TPESTS"
                offset="[16]"/>
         <field description="MAC Transmit Packet Controller Status This field indicates the state of the MAC Transmit Packet Controller module."
                format="hex0x"
                id="ENET@MAC-DBG@TFCSTS"
                offset="[18:17]"/>
      </register>
      <register description="MAC hardware feature register 0x0201" format="hex0x"
                id="ENET@MAC-HW-FEAT0"
                offset="0x11c"
                size="4">
         <field description="10 or 100 Mbps Support." format="hex0x"
                id="ENET@MAC-HW-FEAT0@MIISEL"
                offset="[0]"/>
         <field description="Half-duplex Support." format="hex0x" id="ENET@MAC-HW-FEAT0@HDSEL"
                offset="[2]"/>
         <field description="Hash Table Based Filtering option." format="hex0x"
                id="ENET@MAC-HW-FEAT0@VLHASH"
                offset="[4]"/>
         <field description="SMA (MDIO) Interface." format="hex0x"
                id="ENET@MAC-HW-FEAT0@SMASEL"
                offset="[5]"/>
         <field description="PMT Remote Wake-up Packet Detection." format="hex0x"
                id="ENET@MAC-HW-FEAT0@RWKSEL"
                offset="[6]"/>
         <field description="PMT magic packet detection." format="hex0x"
                id="ENET@MAC-HW-FEAT0@MGKSEL"
                offset="[7]"/>
         <field description="RMON Module Enable." format="hex0x" id="ENET@MAC-HW-FEAT0@MMCSEL"
                offset="[8]"/>
         <field description="ARP Offload Enabled." format="hex0x"
                id="ENET@MAC-HW-FEAT0@ARPOFFSEL"
                offset="[9]"/>
         <field description="IEEE 1588-2008 Timestamp support ." format="hex0x"
                id="ENET@MAC-HW-FEAT0@TSSEL"
                offset="[12]"/>
         <field description="Energy Efficient Ethernet Support ." format="hex0x"
                id="ENET@MAC-HW-FEAT0@EEESEL"
                offset="[13]"/>
         <field description="Transmit Checksum Offload Support." format="hex0x"
                id="ENET@MAC-HW-FEAT0@TXCOESEL"
                offset="[14]"/>
         <field description="Receive Checksum Offload Support." format="hex0x"
                id="ENET@MAC-HW-FEAT0@RXCOESEL"
                offset="[16]"/>
         <field description="Timestamp System Time Source." format="hex0x"
                id="ENET@MAC-HW-FEAT0@TSSTSSEL"
                offset="[26:25]"/>
         <field description="Active PHY Selected." format="hex0x"
                id="ENET@MAC-HW-FEAT0@ACTPHYSEL"
                offset="[30:28]"/>
      </register>
      <register description="MAC hardware feature register 0x0201" format="hex0x"
                id="ENET@MAC-HW-FEAT1"
                offset="0x120"
                readOnly="true"
                size="4">
         <field description="MTL Receive FIFO Size." format="hex0x"
                id="ENET@MAC-HW-FEAT1@RXFIFOSIZE"
                offset="[4:0]"/>
         <field description="MTL Transmit FIFO Size." format="hex0x"
                id="ENET@MAC-HW-FEAT1@TXFIFOSIZE"
                offset="[10:6]"/>
         <field description="One-Step Timestamping Feature." format="hex0x"
                id="ENET@MAC-HW-FEAT1@OSTEN"
                offset="[11]"/>
         <field description="PTP OffLoad Feature." format="hex0x" id="ENET@MAC-HW-FEAT1@PTOEN"
                offset="[12]"/>
         <field description="IEEE 1588 High Word Register Feature." format="hex0x"
                id="ENET@MAC-HW-FEAT1@ADVTHWORD"
                offset="[13]"/>
         <field description="Address width." format="hex0x" id="ENET@MAC-HW-FEAT1@ADDR64"
                offset="[15:14]"/>
         <field description="Data Center Bridging feature." format="hex0x"
                id="ENET@MAC-HW-FEAT1@DCBEN"
                offset="[16]"/>
         <field description="Split Header Structure feature." format="hex0x"
                id="ENET@MAC-HW-FEAT1@SPEN"
                offset="[17]"/>
         <field description="TCP Segment Offload Feature." format="hex0x"
                id="ENET@MAC-HW-FEAT1@TSOEN"
                offset="[18]"/>
         <field description="DMA Debug Register Feature." format="hex0x"
                id="ENET@MAC-HW-FEAT1@DBGMEMA"
                offset="[19]"/>
         <field description="Audio Video Bridging Feature." format="hex0x"
                id="ENET@MAC-HW-FEAT1@AVSEL"
                offset="[20]"/>
         <field description="Low Power Mode Feature Support ." format="hex0x"
                id="ENET@MAC-HW-FEAT1@LPMODEEN"
                offset="[23]"/>
         <field description="Hash Table Size." format="hex0x" id="ENET@MAC-HW-FEAT1@HASHTBLSZ"
                offset="[25:24]"/>
         <field description="Total Number of L3 and L4 Filters ." format="hex0x"
                id="ENET@MAC-HW-FEAT1@L3-L4-FILTER"
                offset="[30:27]"/>
      </register>
      <register description="MAC hardware feature register 0x0201" format="hex0x"
                id="ENET@MAC-HW-FEAT2"
                offset="0x124"
                readOnly="true"
                size="4">
         <field description="Number of MTL Receive Queues." format="hex0x"
                id="ENET@MAC-HW-FEAT2@RXQCNT"
                offset="[3:0]"/>
         <field description="Number of MTL Transmit Queues." format="hex0x"
                id="ENET@MAC-HW-FEAT2@TXQCNT"
                offset="[9:6]"/>
         <field description="Number of DMA Receive Channels." format="hex0x"
                id="ENET@MAC-HW-FEAT2@RXCHCNT"
                offset="[15:12]"/>
         <field description="Number of DMA Transmit Channels." format="hex0x"
                id="ENET@MAC-HW-FEAT2@TXCHCNT"
                offset="[21:18]"/>
         <field description="Number of PPS Outputs." format="hex0x"
                id="ENET@MAC-HW-FEAT2@PPSOUTNUM"
                offset="[26:24]"/>
         <field description="Number of Auxiliary Snapshot Inputs." format="hex0x"
                id="ENET@MAC-HW-FEAT2@AUXSNAPNUM"
                offset="[30:28]"/>
      </register>
      <register description="MIDO address Register" format="hex0x" id="ENET@MAC-MDIO-ADDR"
                offset="0x200"
                size="4">
         <field description="MII busy." format="hex0x" id="ENET@MAC-MDIO-ADDR@MB" offset="[0]"/>
         <field description="MII Operation Command." format="hex0x" id="ENET@MAC-MDIO-ADDR@MOC"
                offset="[3:2]"/>
         <field description="CSR Clock Range." format="hex0x" id="ENET@MAC-MDIO-ADDR@CR"
                offset="[11:8]"/>
         <field description="Number of Training Clocks This field controls the number of trailing clock cycles generated on MDC after the end of transmission of MDIO frame."
                format="hex0x"
                id="ENET@MAC-MDIO-ADDR@NTC"
                offset="[14:12]"/>
         <field description="Register/Device Address These bits select the PHY register in selected PHY device."
                format="hex0x"
                id="ENET@MAC-MDIO-ADDR@RDA"
                offset="[20:16]"/>
         <field description="Physical Layer Address This field indicates which PHY devices (out of 32 devices) the MAC is accessing."
                format="hex0x"
                id="ENET@MAC-MDIO-ADDR@PA"
                offset="[25:21]"/>
         <field description="Back to Back transactions When this bit is set and the NTC has value greater than 0, then the MAC will inform the completion of a read or write command at the end of frame transfer (before the trailing clocks are transmitted)."
                format="hex0x"
                id="ENET@MAC-MDIO-ADDR@BTB"
                offset="[26]"/>
         <field description="Preamble Suppression Enable When this bit is set, the SMA will suppress the 32-bit preamble and transmit MDIO frames with only 1 preamble bit."
                format="hex0x"
                id="ENET@MAC-MDIO-ADDR@PSE"
                offset="[27]"/>
      </register>
      <register description="MDIO Data register" format="hex0x" id="ENET@MAC-MDIO-DATA"
                offset="0x204"
                size="4">
         <field description="MII Data This field contains the 16-bit data value read from the PHY after a Management Read operation or the 16-bit data value to be written to the PHY before a Management Write operation."
                format="hex0x"
                id="ENET@MAC-MDIO-DATA@MD"
                offset="[15:0]"/>
      </register>
      <register description="MAC address0 high register" format="hex0x" id="ENET@MAC-ADDR-HIGH"
                offset="0x300"
                size="4">
         <field description="MAC Address0 [47:32] This field contains the upper 16 bits (47:32) of the 6-byte first MAC address."
                format="hex0x"
                id="ENET@MAC-ADDR-HIGH@A47-32"
                offset="[15:0]"/>
         <field description="DMA Channel Select This field contains the DMA Channel number to which the Rx packet whose DA matches the MAC Address content is routed."
                format="hex0x"
                id="ENET@MAC-ADDR-HIGH@DCS"
                offset="[16]"/>
         <field description="Address Enable." format="hex0x" id="ENET@MAC-ADDR-HIGH@AE"
                offset="[31]"/>
      </register>
      <register description="MAC address0 low register" format="hex0x" id="ENET@MAC-ADDR-LOW"
                offset="0x304"
                size="4">
         <field description="MAC Address0 [31:0] This field contains the lower 32 bits of the 6-byte first MAC address."
                format="hex0x"
                id="ENET@MAC-ADDR-LOW@A31-0"
                offset="[31:0]"/>
      </register>
      <register description="Time stamp control register" format="hex0x"
                id="ENET@MAC-TIMESTAMP-CTRL"
                offset="0xb00"
                size="4">
         <field description="Enable Timestamp When this bit is set, the timestamp is added for Transmit and Receive packets."
                format="hex0x"
                id="ENET@MAC-TIMESTAMP-CTRL@TSENA"
                offset="[0]"/>
         <field description="Fine or Coarse Timestamp Update When this bit is set, the Fine method is used to update system timestamp."
                format="hex0x"
                id="ENET@MAC-TIMESTAMP-CTRL@TSCFUPDT"
                offset="[1]"/>
         <field description="Initialize Timestamp When this bit is set, the system time is initialized (overwritten) with the value specified in the MAC Register 80 (System Time Seconds Update."
                format="hex0x"
                id="ENET@MAC-TIMESTAMP-CTRL@TSINIT"
                offset="[2]"/>
         <field description="Update Timestamp When this bit is set, the system time is updated (added or subtracted) with the value specified in MAC System Time Seconds Update Table 753 and MAC System Time Nanoseconds Update Table 754."
                format="hex0x"
                id="ENET@MAC-TIMESTAMP-CTRL@TSUPDT"
                offset="[3]"/>
         <field description="Enable Timestamp Interrupt Trigger When this bit is set, the timestamp interrupt is generated when the System Time becomes greater than the value written in the Target Time register."
                format="hex0x"
                id="ENET@MAC-TIMESTAMP-CTRL@TSTRIG"
                offset="[4]"/>
         <field description="Update Addend Register When this bit is set, the content of the Timestamp Addend register is updated in the PTP block for fine correction."
                format="hex0x"
                id="ENET@MAC-TIMESTAMP-CTRL@TADDREG"
                offset="[5]"/>
         <field description="Enable Timestamp for All Packets When this bit is set, the timestamp snapshot is enabled for all packets received by the MAC."
                format="hex0x"
                id="ENET@MAC-TIMESTAMP-CTRL@TSENALL"
                offset="[8]"/>
         <field description="Timestamp Digital or Binary Rollover Control When this bit is set, the Timestamp Low register rolls over after 0x3B9AC9FF value (that is, 1 nanosecond accuracy) and increments the timestamp (High) seconds."
                format="hex0x"
                id="ENET@MAC-TIMESTAMP-CTRL@TSCTRLSSR"
                offset="[9]"/>
         <field description="Enable PTP Packet Processing for Version 2 Format When this bit is set, the IEEE 1588 version 2 format is used to process the PTP packets."
                format="hex0x"
                id="ENET@MAC-TIMESTAMP-CTRL@TSVER2ENA"
                offset="[10]"/>
         <field description="Enable Processing of PTP over Ethernet Packets When this bit is set, the MAC receiver processes the PTP packets encapsulated directly in the Ethernet packets."
                format="hex0x"
                id="ENET@MAC-TIMESTAMP-CTRL@TSIPENA"
                offset="[11]"/>
         <field description="Enable Processing of PTP Packets Sent over 1Pv6-UDP When this bit is set, the MAC receiver processes the PTP packets encapsulated in IPv6-UDP packets."
                format="hex0x"
                id="ENET@MAC-TIMESTAMP-CTRL@TSIPV6ENA"
                offset="[12]"/>
         <field description="Enable Processing of PTP Packets Sent over IPv4-UDP When this bit is set, the MAC receiver processes the PTP packets encapsulated in IPv4-UDP packets."
                format="hex0x"
                id="ENET@MAC-TIMESTAMP-CTRL@TSIPV4ENA"
                offset="[13]"/>
         <field description="Enable Timestamp Snapshot for Event Messages When this bit is set, the timestamp snapshot is taken only for event messages (SYNC, Delay_Req, Pdelay_Req, or Pdelay_Resp)."
                format="hex0x"
                id="ENET@MAC-TIMESTAMP-CTRL@TSEVTENA"
                offset="[14]"/>
         <field description="Enable Snapshot for Messages Relevant to Master When this bit is set, the snapshot is taken only for the messages that are relevant to the master node."
                format="hex0x"
                id="ENET@MAC-TIMESTAMP-CTRL@TSMSTRENA"
                offset="[15]"/>
         <field description="Select PTP packets for Taking Snapshots These bits, along with Bits 15 and 14, decide the set of PTP packet types for which snapshot needs to be taken."
                format="hex0x"
                id="ENET@MAC-TIMESTAMP-CTRL@SNAPTYPSEL"
                offset="[17:16]"/>
         <field description="Enable MAC Address for PTP Packet Filtering When this bit is set, the DA MAC address (that matches any MAC Address register) is used to filter the PTP packets when PTP is directly sent over Ethernet."
                format="hex0x"
                id="ENET@MAC-TIMESTAMP-CTRL@TSENMACADDR"
                offset="[18]"/>
         <field description="Transmit Timestamp Status Mode When this bit is set, the MAC overwrites the earlier transmit timestamp status even if it is not read by the software."
                format="hex0x"
                id="ENET@MAC-TIMESTAMP-CTRL@TXTTSSTSM"
                offset="[24]"/>
         <field description="AV 802." format="hex0x" id="ENET@MAC-TIMESTAMP-CTRL@AV8021ASMEN"
                offset="[28]"/>
      </register>
      <register description="Sub-second increment register" format="hex0x"
                id="ENET@MAC-SUB-SCND-INCR"
                offset="0xb04"
                size="4">
         <field description="Sub-second increment value." format="hex0x"
                id="ENET@MAC-SUB-SCND-INCR@SSINC"
                offset="[23:16]"/>
      </register>
      <register description="System time seconds register" format="hex0x"
                id="ENET@MAC-SYS-TIME-SCND"
                offset="0xb08"
                readOnly="true"
                size="4">
         <field description="Time stamp second The value in this field indicates the current value in seconds of the System Time maintained by the MAC."
                format="hex0x"
                id="ENET@MAC-SYS-TIME-SCND@TSS"
                offset="[31:0]"/>
      </register>
      <register description="System time nanoseconds register" format="hex0x"
                id="ENET@MAC-SYS-TIME-NSCND"
                offset="0xb0c"
                readOnly="true"
                size="4">
         <field description="Time stamp sub seconds The value in this field has the sub second representation of time, with an accuracy of 0."
                format="hex0x"
                id="ENET@MAC-SYS-TIME-NSCND@TSSS"
                offset="[30:0]"/>
      </register>
      <register description="no description available" format="hex0x"
                id="ENET@MAC-SYS-TIME-SCND-UPD"
                offset="0xb10"
                size="4">
         <field description="Time stamp second The value in this field indicates the time, in seconds, to be initialized or added to the system time."
                format="hex0x"
                id="ENET@MAC-SYS-TIME-SCND-UPD@TSS"
                offset="[31:0]"/>
      </register>
      <register description="no description available" format="hex0x"
                id="ENET@MAC-SYS-TIME-NSCND-UPD"
                offset="0xb14"
                size="4">
         <field description="Time stamp sub seconds The value in this field has the sub second representation of time, with an accuracy of 0."
                format="hex0x"
                id="ENET@MAC-SYS-TIME-NSCND-UPD@TSSS"
                offset="[30:0]"/>
         <field description="Add or subtract time When this bit is set, the time value is subtracted with the contents of the update register."
                format="hex0x"
                id="ENET@MAC-SYS-TIME-NSCND-UPD@ADDSUB"
                offset="[31]"/>
      </register>
      <register description="Time stamp addend register" format="hex0x"
                id="ENET@MAC-SYS-TIMESTMP-ADDEND"
                offset="0xb18"
                size="4">
         <field description="Time stamp addend This register indicates the 32-bit time value to be added to the Accumulator register to achieve time synchronization."
                format="hex0x"
                id="ENET@MAC-SYS-TIMESTMP-ADDEND@TSAR"
                offset="[31:0]"/>
      </register>
      <register description="no description available" format="hex0x"
                id="ENET@MAC-SYS-TIME-HWORD-SCND"
                offset="0xb1c"
                size="4">
         <field description="Time stamp higher word Contains the most significant 16-bits of the Time stamp seconds value."
                format="hex0x"
                id="ENET@MAC-SYS-TIME-HWORD-SCND@TSHWR"
                offset="[15:0]"/>
      </register>
      <register description="Time stamp status register" format="hex0x"
                id="ENET@MAC-SYS-TIMESTMP-STAT"
                offset="0xb20"
                readOnly="true"
                size="4">
         <field description="Time stamp seconds overflow When set, indicates that the seconds value of the Time stamp has overflowed beyond 0xFFFF_FFFF."
                format="hex0x"
                id="ENET@MAC-SYS-TIMESTMP-STAT@TSSOVF"
                offset="[0]"/>
      </register>
      <register description="Tx timestamp status nanoseconds" format="hex0x"
                id="ENET@MAC-Tx-TIMESTAMP-STATUS-NANOSECONDS"
                offset="0xb30"
                readOnly="true"
                size="4">
         <field description="Transmit timestamp status low." format="hex0x"
                id="ENET@MAC-Tx-TIMESTAMP-STATUS-NANOSECONDS@TXTSSTSLO"
                offset="[30:0]"/>
         <field description="Transmit timestamp status missed." format="hex0x"
                id="ENET@MAC-Tx-TIMESTAMP-STATUS-NANOSECONDS@TXTSSTSMIS"
                offset="[31]"/>
      </register>
      <register description="Tx timestamp status seconds" format="hex0x"
                id="ENET@MAC-Tx-TIMESTAMP-STATUS-SECONDS"
                offset="0xb34"
                readOnly="true"
                size="4">
         <field description="Transmit timestamp status high." format="hex0x"
                id="ENET@MAC-Tx-TIMESTAMP-STATUS-SECONDS@TXTSSTSHI"
                offset="[31:0]"/>
      </register>
      <register description="Timestamp ingress correction" format="hex0x"
                id="ENET@MAC-TIMESTAMP-INGRESS-CORR-NANOSECOND"
                offset="0xb58"
                size="4">
         <field description="Transmit ingress correction." format="hex0x"
                id="ENET@MAC-TIMESTAMP-INGRESS-CORR-NANOSECOND@TSIC"
                offset="[31:0]"/>
      </register>
      <register description="Timestamp egress correction" format="hex0x"
                id="ENET@MAC-TIMESTAMP-EGRESS-CORR-NANOSECOND"
                offset="0xb5c"
                size="4">
         <field description="Transmit egress correction." format="hex0x"
                id="ENET@MAC-TIMESTAMP-EGRESS-CORR-NANOSECOND@TSEC"
                offset="[31:0]"/>
      </register>
      <register description="MTL Operation Mode Register" format="hex0x" id="ENET@MTL-OP-MODE"
                offset="0xc00"
                size="4">
         <field description="Drop Transmit Status When this bit is set, the Tx packet status received from the MAC is dropped in the MTL."
                format="hex0x"
                id="ENET@MTL-OP-MODE@DTXSTS"
                offset="[1]"/>
         <field description="Receive Arbitration Algorithm This field is used to select the arbitration algorithm for the Rx side."
                format="hex0x"
                id="ENET@MTL-OP-MODE@RAA"
                offset="[2]"/>
         <field description="Tx Scheduling Algorithm This field indicates the algorithm for Tx scheduling: 0x00: WRR algorithm 0x1: Reserved 0x2: Reserved 0x3: Strict priority algorithm."
                format="hex0x"
                id="ENET@MTL-OP-MODE@SCHALG"
                offset="[6:5]"/>
         <field description="Counters Preset When this bit is set, MTL TxQ0 Underflow register (Table 762) and MTL_TxQ1_Underflow (Table 762) registers are initialized/preset to 0x7F0."
                format="hex0x"
                id="ENET@MTL-OP-MODE@CNTPRST"
                offset="[8]"/>
         <field description="Counters Reset When this bit is set, all counters are reset."
                format="hex0x"
                id="ENET@MTL-OP-MODE@CNTCLR"
                offset="[9]"/>
      </register>
      <register description="MTL Interrupt Status register" format="hex0x"
                id="ENET@MTL-INTR-STAT"
                offset="0xc20"
                readOnly="true"
                size="4">
         <field description="Queue 0 Interrupt status This bit indicates that there is an interrupt from Queue 0."
                format="hex0x"
                id="ENET@MTL-INTR-STAT@Q0IS"
                offset="[0]"/>
         <field description="Queue 1 Interrupt status This bit indicates that there is an interrupt from Queue 1."
                format="hex0x"
                id="ENET@MTL-INTR-STAT@Q1IS"
                offset="[1]"/>
      </register>
      <register description="MTL Receive Queue and DMA Channel Mapping register" format="hex0x"
                id="ENET@MTL-RXQ-DMA-MAP"
                offset="0xc30"
                size="4">
         <field description="Queue 0 Mapped to DMA Channel This field controls the routing of the packet received in Queue 0 to the DMA channel: 0: DMA Channel 0 1: DMA Channel 1 This field is valid when the Q0DDMACH field is reset."
                format="hex0x"
                id="ENET@MTL-RXQ-DMA-MAP@Q0MDMACH"
                offset="[0]"/>
         <field description="Queue 0 Enabled for DA-based DMA Channel Selection When set, this bit indicates that the packets received in Queue 0 are routed to a particular DMA channel as decided in the MAC Receiver based on the DMA channel number programmed in the L3-L4 filter registers, or the Ethernet DA address."
                format="hex0x"
                id="ENET@MTL-RXQ-DMA-MAP@Q0DDMACH"
                offset="[4]"/>
         <field description="Queue 1 Mapped to DMA Channel This field controls the routing of the received packet in Queue 1 to the DMA channel: 0: DMA Channel 0 1: DMA Channel 1 This field is valid when the Q1DDMACH field is reset."
                format="hex0x"
                id="ENET@MTL-RXQ-DMA-MAP@Q1MDMACH"
                offset="[8]"/>
         <field description="Queue 1 Enabled for DA-based DMA Channel Selection When set, this bit indicates that the packets received in Queue 1 are routed to a particular DMA channel as decided in the MAC Receiver based on the DMA channel number programmed in the L3-L4 filter registers, or the Ethernet DA address."
                format="hex0x"
                id="ENET@MTL-RXQ-DMA-MAP@Q1DDMACH"
                offset="[12]"/>
      </register>
      <register description="MTL TxQx Operation Mode register" format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-TXQx-OP-MODE"
                offset="0xd00"
                size="4">
         <field description="Flush Transmit Queue When this bit is set, the Tx queue controller logic is reset to its default values."
                format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-TXQx-OP-MODE@FTQ"
                offset="[0]"/>
         <field description="Transmit Store and Forward When this bit is set, the transmission starts when a full packet resides in the MTL Tx queue."
                format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-TXQx-OP-MODE@TSF"
                offset="[1]"/>
         <field description="Transmit Queue Enable This field is used to enable/disable the transmit queue 0."
                format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-TXQx-OP-MODE@TXQEN"
                offset="[3:2]"/>
         <field description="Transmit Threshold Control These bits control the threshold level of the MTL Tx Queue."
                format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-TXQx-OP-MODE@TTC"
                offset="[6:4]"/>
         <field description="Transmit Queue Size This field indicates the size of the allocated Transmit queues in blocks of 256 bytes."
                format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-TXQx-OP-MODE@TQS"
                offset="[18:16]"/>
      </register>
      <register description="MTL TxQx Underflow register" format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-TXQx-UNDRFLW"
                offset="0xd04"
                readOnly="true"
                size="4">
         <field description="Underflow Packet Counter This field indicates the number of packets aborted by the controller because of Tx Queue Underflow."
                format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-TXQx-UNDRFLW@UFFRMCNT"
                offset="[10:0]"/>
         <field description="Overflow Bit for Underflow Packet Counter This bit is set every time the Tx queue Underflow Packet Counter field overflows, that is, it has crossed the maximum count."
                format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-TXQx-UNDRFLW@UFCNTOVF"
                offset="[11]"/>
      </register>
      <register description="MTL TxQx Debug register" format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-TXQx-DBG"
                offset="0xd08"
                readOnly="true"
                size="4">
         <field description="Transmit Queue in Pause When this bit is high and the Rx flow control is enabled, it indicates that the Tx Queue is in the Pause condition (in the full-duplex only mode) because of the following: - Reception of the PFC packet for the priorities assigned to the Tx Queue when PFC is enabled - Reception of 802."
                format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-TXQx-DBG@TXQPAUSED"
                offset="[0]"/>
         <field description="MTL Tx Queue Read Controller Status This field indicates the state of the Tx Queue Read Controller: 00: Idle state 01: Read state (transferring data to the MAC transmitter) 10: Waiting for pending Tx Status from the MAC transmitter 11: Flushing the Tx queue because of the Packet Abort request from the MAC."
                format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-TXQx-DBG@TRCSTS"
                offset="[2:1]"/>
         <field description="MTL Tx Queue Write Controller Status When high, this bit indicates that the MTL Tx Queue Write Controller is active, and it is transferring the data to the Tx Queue."
                format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-TXQx-DBG@TWCSTS"
                offset="[3]"/>
         <field description="MTL Tx Queue Not Empty Status When this bit is high, it indicates that the MTL Tx Queue is not empty and some data is left for transmission."
                format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-TXQx-DBG@TXQSTS"
                offset="[4]"/>
         <field description="MTL Tx Status FIFO Full Status When high, this bit indicates that the MTL Tx Status FIFO is full."
                format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-TXQx-DBG@TXSTSFSTS"
                offset="[5]"/>
         <field description="Number of Packets in the Transmit Queue This field indicates the current number of packets in the Tx Queue."
                format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-TXQx-DBG@PTXQ"
                offset="[18:16]"/>
         <field description="Number of Status Words in Tx Status FIFO of Queue This field indicates the current number of status in the Tx Status FIFO of this queue."
                format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-TXQx-DBG@STSXSTSF"
                offset="[22:20]"/>
      </register>
      <register description="MTL TxQx ETS control register, only TxQ1 support" format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-TXQx-ETS-CTRL"
                offset="0xd10"
                size="4">
         <field description="AV Algorithm." format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-TXQx-ETS-CTRL@AVALG"
                offset="[2]"/>
         <field description="Credit Control." format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-TXQx-ETS-CTRL@CC"
                offset="[3]"/>
         <field description="Credit Control." format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-TXQx-ETS-CTRL@SLC"
                offset="[6:4]"/>
      </register>
      <register description="MTL TxQx ETS Status register" format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-TXQx-ETS-STAT"
                offset="0xd14"
                size="4">
         <field description="Average Bits per Slot." format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-TXQx-ETS-STAT@ABS"
                offset="[23:0]"/>
      </register>
      <register description="no description available" format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-TXQx-QNTM-WGHT"
                offset="0xd18"
                size="4">
         <field description="Average Bits per Slot." format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-TXQx-QNTM-WGHT@ISCQW"
                offset="[20:0]"/>
      </register>
      <register description="MTL TxQx SendSlopCredit register, only TxQ1 support"
                format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-TXQx-SNDSLP-CRDT"
                offset="0xd1c"
                size="4">
         <field description="sendSlopeCredit." format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-TXQx-SNDSLP-CRDT@SSC"
                offset="[13:0]"/>
      </register>
      <register description="MTL TxQx hiCredit register, only TxQ1 support" format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-TXQx-HI-CRDT"
                offset="0xd20"
                size="4">
         <field description="hiCredit." format="hex0x" id="ENET@MTL-QUEUE0-MTL-TXQx-HI-CRDT@HC"
                offset="[28:0]"/>
      </register>
      <register description="MTL TxQx loCredit register, only TxQ1 support" format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-TXQx-LO-CRDT"
                offset="0xd24"
                size="4">
         <field description="loCredit." format="hex0x" id="ENET@MTL-QUEUE0-MTL-TXQx-LO-CRDT@LC"
                offset="[28:0]"/>
      </register>
      <register description="no description available" format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-TXQx-INTCTRL-STAT"
                offset="0xd2c"
                size="4">
         <field description="Transmit Queue Underflow Interrupt Status This bit indicates that the Transmit Queue had an underflow while transmitting the packet."
                format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-TXQx-INTCTRL-STAT@TXUNFIS"
                offset="[0]"/>
         <field description="Average Bits Per Slot Interrupt Status When set, this bit indicates that the MAC has updated the ABS value."
                format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-TXQx-INTCTRL-STAT@ABPSIS"
                offset="[1]"/>
         <field description="Transmit Queue Underflow Interrupt Enable When this bit is set, the Transmit Queue Underflow interrupt is enabled."
                format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-TXQx-INTCTRL-STAT@TXUIE"
                offset="[8]"/>
         <field description="Average Bits Per Slot Interrupt Enable When this bit is set, the MAC asserts the interrupt when the average bits per slot status is updated."
                format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-TXQx-INTCTRL-STAT@ABPSIE"
                offset="[9]"/>
         <field description="Receive Queue Overflow Interrupt Status This bit indicates that the Receive Queue had an overflow while receiving the packet."
                format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-TXQx-INTCTRL-STAT@RXOVFIS"
                offset="[16]"/>
         <field description="Receive Queue Overflow Interrupt Enable When this bit is set, the Receive Queue Overflow interrupt is enabled."
                format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-TXQx-INTCTRL-STAT@RXOIE"
                offset="[24]"/>
      </register>
      <register description="MTL RxQx Operation Mode register" format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-RXQx-OP-MODE"
                offset="0xd30"
                size="4">
         <field description="Receive Queue Threshold Control These bits control the threshold level of the MTL Rx queue (in bytes): 00: 64 01: 32 10: 96 11: 128 The packet received is transferred to the application or DMA when the packet size within the MTL Rx queue is larger than the threshold."
                format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-RXQx-OP-MODE@RTC"
                offset="[1:0]"/>
         <field description="Forward Undersized Good Packets When this bit is set, the Rx queue forwards the undersized good packets (packets with no error and length less than 64 bytes), including pad-bytes and CRC."
                format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-RXQx-OP-MODE@FUP"
                offset="[3]"/>
         <field description="Forward Error Packets When this bit is reset, the Rx queue drops packets with error status (CRC error, Mll_ER, watchdog timeout, or overflow)."
                format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-RXQx-OP-MODE@FEP"
                offset="[4]"/>
         <field description="Receive Queue Store and Forward When this bit is set, the ethernet block on this chip reads a packet from the Rx queue only after the complete packet has been written to it, ignoring the RTC field of this register."
                format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-RXQx-OP-MODE@RSF"
                offset="[5]"/>
         <field description="Disable Dropping of TCP/IP Checksum Error Packets When this bit is set, the MAC does not drop the packets which only have the errors detected by the Receive Checksum Offload engine."
                format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-RXQx-OP-MODE@DIS-TCP-EF"
                offset="[6]"/>
         <field description="This field indicates the size of the allocated Receive queues in blocks of 256 bytes."
                format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-RXQx-OP-MODE@RQS"
                offset="[22:20]"/>
      </register>
      <register description="MTL RxQx Missed Packet Overflow Counter register" format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-RXQx-MISSPKT-OVRFLW-CNT"
                offset="0xd34"
                size="4">
         <field description="Overflow Packet Counter This field indicates the number of packets discarded by the Ethernet block because of Receive queue overflow."
                format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-RXQx-MISSPKT-OVRFLW-CNT@OVFPKTCNT"
                offset="[10:0]"/>
         <field description="Overflow Counter Overflow Bit When set, this bit indicates that the Rx Queue Overflow Packet Counter field crossed the maximum limit."
                format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-RXQx-MISSPKT-OVRFLW-CNT@OVFCNTOVF"
                offset="[11]"/>
      </register>
      <register description="MTL RxQx Debug register" format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-RXQx-DBG"
                offset="0xd38"
                size="4">
         <field description="MTL Rx Queue Write Controller Active Status When high, this bit indicates that the MTL Rx queue Write controller is active, and it is transferring a received packet to the Rx Queue."
                format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-RXQx-DBG@RWCSTS"
                offset="[0]"/>
         <field description="MTL Rx Queue Read Controller State This field gives the state of the Rx queue Read controller: 00: Idle state 01: Reading packet data 10: Reading packet status (or timestamp) 11: Flushing the packet data and status."
                format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-RXQx-DBG@RRCSTS"
                offset="[2:1]"/>
         <field description="MTL Rx Queue Fill-Level Status This field gives the status of the fill-level of the Rx Queue: 0x0: Rx Queue empty 0x1: Rx Queue fill-level below flow-control deactivate threshold 0x2: Rx Queue fill-level above flow-control activate threshold 0x3: Rx Queue full."
                format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-RXQx-DBG@RXQSTS"
                offset="[5:4]"/>
         <field description="Number of Packets in Receive Queue This field indicates the current number of packets in the Rx Queue."
                format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-RXQx-DBG@PRXQ"
                offset="[29:16]"/>
      </register>
      <register description="MTL RxQx Control register" format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-RXQx-CTRL"
                offset="0xd3c"
                size="4">
         <field description="Receive Queue Weight This field indicates the weight assigned to the Rx Queue 0."
                format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-RXQx-CTRL@RXQ-WEGT"
                offset="[2:0]"/>
         <field description="Receive Queue Packet Arbitration When this bit is set, the The ethernet block drives the packet data to the ARI interface such that the entire packet data of currently-selected queue is transmitted before switching to other queue."
                format="hex0x"
                id="ENET@MTL-QUEUE0-MTL-RXQx-CTRL@RXQ-FRM-ARBIT"
                offset="[3]"/>
      </register>
      <register description="MTL TxQx Operation Mode register" format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-TXQx-OP-MODE"
                offset="0xd40"
                size="4">
         <field description="Flush Transmit Queue When this bit is set, the Tx queue controller logic is reset to its default values."
                format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-TXQx-OP-MODE@FTQ"
                offset="[0]"/>
         <field description="Transmit Store and Forward When this bit is set, the transmission starts when a full packet resides in the MTL Tx queue."
                format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-TXQx-OP-MODE@TSF"
                offset="[1]"/>
         <field description="Transmit Queue Enable This field is used to enable/disable the transmit queue 0."
                format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-TXQx-OP-MODE@TXQEN"
                offset="[3:2]"/>
         <field description="Transmit Threshold Control These bits control the threshold level of the MTL Tx Queue."
                format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-TXQx-OP-MODE@TTC"
                offset="[6:4]"/>
         <field description="Transmit Queue Size This field indicates the size of the allocated Transmit queues in blocks of 256 bytes."
                format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-TXQx-OP-MODE@TQS"
                offset="[18:16]"/>
      </register>
      <register description="MTL TxQx Underflow register" format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-TXQx-UNDRFLW"
                offset="0xd44"
                readOnly="true"
                size="4">
         <field description="Underflow Packet Counter This field indicates the number of packets aborted by the controller because of Tx Queue Underflow."
                format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-TXQx-UNDRFLW@UFFRMCNT"
                offset="[10:0]"/>
         <field description="Overflow Bit for Underflow Packet Counter This bit is set every time the Tx queue Underflow Packet Counter field overflows, that is, it has crossed the maximum count."
                format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-TXQx-UNDRFLW@UFCNTOVF"
                offset="[11]"/>
      </register>
      <register description="MTL TxQx Debug register" format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-TXQx-DBG"
                offset="0xd48"
                readOnly="true"
                size="4">
         <field description="Transmit Queue in Pause When this bit is high and the Rx flow control is enabled, it indicates that the Tx Queue is in the Pause condition (in the full-duplex only mode) because of the following: - Reception of the PFC packet for the priorities assigned to the Tx Queue when PFC is enabled - Reception of 802."
                format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-TXQx-DBG@TXQPAUSED"
                offset="[0]"/>
         <field description="MTL Tx Queue Read Controller Status This field indicates the state of the Tx Queue Read Controller: 00: Idle state 01: Read state (transferring data to the MAC transmitter) 10: Waiting for pending Tx Status from the MAC transmitter 11: Flushing the Tx queue because of the Packet Abort request from the MAC."
                format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-TXQx-DBG@TRCSTS"
                offset="[2:1]"/>
         <field description="MTL Tx Queue Write Controller Status When high, this bit indicates that the MTL Tx Queue Write Controller is active, and it is transferring the data to the Tx Queue."
                format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-TXQx-DBG@TWCSTS"
                offset="[3]"/>
         <field description="MTL Tx Queue Not Empty Status When this bit is high, it indicates that the MTL Tx Queue is not empty and some data is left for transmission."
                format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-TXQx-DBG@TXQSTS"
                offset="[4]"/>
         <field description="MTL Tx Status FIFO Full Status When high, this bit indicates that the MTL Tx Status FIFO is full."
                format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-TXQx-DBG@TXSTSFSTS"
                offset="[5]"/>
         <field description="Number of Packets in the Transmit Queue This field indicates the current number of packets in the Tx Queue."
                format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-TXQx-DBG@PTXQ"
                offset="[18:16]"/>
         <field description="Number of Status Words in Tx Status FIFO of Queue This field indicates the current number of status in the Tx Status FIFO of this queue."
                format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-TXQx-DBG@STSXSTSF"
                offset="[22:20]"/>
      </register>
      <register description="MTL TxQx ETS control register, only TxQ1 support" format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-TXQx-ETS-CTRL"
                offset="0xd50"
                size="4">
         <field description="AV Algorithm." format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-TXQx-ETS-CTRL@AVALG"
                offset="[2]"/>
         <field description="Credit Control." format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-TXQx-ETS-CTRL@CC"
                offset="[3]"/>
         <field description="Credit Control." format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-TXQx-ETS-CTRL@SLC"
                offset="[6:4]"/>
      </register>
      <register description="MTL TxQx ETS Status register" format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-TXQx-ETS-STAT"
                offset="0xd54"
                size="4">
         <field description="Average Bits per Slot." format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-TXQx-ETS-STAT@ABS"
                offset="[23:0]"/>
      </register>
      <register description="no description available" format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-TXQx-QNTM-WGHT"
                offset="0xd58"
                size="4">
         <field description="Average Bits per Slot." format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-TXQx-QNTM-WGHT@ISCQW"
                offset="[20:0]"/>
      </register>
      <register description="MTL TxQx SendSlopCredit register, only TxQ1 support"
                format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-TXQx-SNDSLP-CRDT"
                offset="0xd5c"
                size="4">
         <field description="sendSlopeCredit." format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-TXQx-SNDSLP-CRDT@SSC"
                offset="[13:0]"/>
      </register>
      <register description="MTL TxQx hiCredit register, only TxQ1 support" format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-TXQx-HI-CRDT"
                offset="0xd60"
                size="4">
         <field description="hiCredit." format="hex0x" id="ENET@MTL-QUEUE1-MTL-TXQx-HI-CRDT@HC"
                offset="[28:0]"/>
      </register>
      <register description="MTL TxQx loCredit register, only TxQ1 support" format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-TXQx-LO-CRDT"
                offset="0xd64"
                size="4">
         <field description="loCredit." format="hex0x" id="ENET@MTL-QUEUE1-MTL-TXQx-LO-CRDT@LC"
                offset="[28:0]"/>
      </register>
      <register description="no description available" format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-TXQx-INTCTRL-STAT"
                offset="0xd6c"
                size="4">
         <field description="Transmit Queue Underflow Interrupt Status This bit indicates that the Transmit Queue had an underflow while transmitting the packet."
                format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-TXQx-INTCTRL-STAT@TXUNFIS"
                offset="[0]"/>
         <field description="Average Bits Per Slot Interrupt Status When set, this bit indicates that the MAC has updated the ABS value."
                format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-TXQx-INTCTRL-STAT@ABPSIS"
                offset="[1]"/>
         <field description="Transmit Queue Underflow Interrupt Enable When this bit is set, the Transmit Queue Underflow interrupt is enabled."
                format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-TXQx-INTCTRL-STAT@TXUIE"
                offset="[8]"/>
         <field description="Average Bits Per Slot Interrupt Enable When this bit is set, the MAC asserts the interrupt when the average bits per slot status is updated."
                format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-TXQx-INTCTRL-STAT@ABPSIE"
                offset="[9]"/>
         <field description="Receive Queue Overflow Interrupt Status This bit indicates that the Receive Queue had an overflow while receiving the packet."
                format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-TXQx-INTCTRL-STAT@RXOVFIS"
                offset="[16]"/>
         <field description="Receive Queue Overflow Interrupt Enable When this bit is set, the Receive Queue Overflow interrupt is enabled."
                format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-TXQx-INTCTRL-STAT@RXOIE"
                offset="[24]"/>
      </register>
      <register description="MTL RxQx Operation Mode register" format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-RXQx-OP-MODE"
                offset="0xd70"
                size="4">
         <field description="Receive Queue Threshold Control These bits control the threshold level of the MTL Rx queue (in bytes): 00: 64 01: 32 10: 96 11: 128 The packet received is transferred to the application or DMA when the packet size within the MTL Rx queue is larger than the threshold."
                format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-RXQx-OP-MODE@RTC"
                offset="[1:0]"/>
         <field description="Forward Undersized Good Packets When this bit is set, the Rx queue forwards the undersized good packets (packets with no error and length less than 64 bytes), including pad-bytes and CRC."
                format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-RXQx-OP-MODE@FUP"
                offset="[3]"/>
         <field description="Forward Error Packets When this bit is reset, the Rx queue drops packets with error status (CRC error, Mll_ER, watchdog timeout, or overflow)."
                format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-RXQx-OP-MODE@FEP"
                offset="[4]"/>
         <field description="Receive Queue Store and Forward When this bit is set, the ethernet block on this chip reads a packet from the Rx queue only after the complete packet has been written to it, ignoring the RTC field of this register."
                format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-RXQx-OP-MODE@RSF"
                offset="[5]"/>
         <field description="Disable Dropping of TCP/IP Checksum Error Packets When this bit is set, the MAC does not drop the packets which only have the errors detected by the Receive Checksum Offload engine."
                format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-RXQx-OP-MODE@DIS-TCP-EF"
                offset="[6]"/>
         <field description="This field indicates the size of the allocated Receive queues in blocks of 256 bytes."
                format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-RXQx-OP-MODE@RQS"
                offset="[22:20]"/>
      </register>
      <register description="MTL RxQx Missed Packet Overflow Counter register" format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-RXQx-MISSPKT-OVRFLW-CNT"
                offset="0xd74"
                size="4">
         <field description="Overflow Packet Counter This field indicates the number of packets discarded by the Ethernet block because of Receive queue overflow."
                format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-RXQx-MISSPKT-OVRFLW-CNT@OVFPKTCNT"
                offset="[10:0]"/>
         <field description="Overflow Counter Overflow Bit When set, this bit indicates that the Rx Queue Overflow Packet Counter field crossed the maximum limit."
                format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-RXQx-MISSPKT-OVRFLW-CNT@OVFCNTOVF"
                offset="[11]"/>
      </register>
      <register description="MTL RxQx Debug register" format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-RXQx-DBG"
                offset="0xd78"
                size="4">
         <field description="MTL Rx Queue Write Controller Active Status When high, this bit indicates that the MTL Rx queue Write controller is active, and it is transferring a received packet to the Rx Queue."
                format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-RXQx-DBG@RWCSTS"
                offset="[0]"/>
         <field description="MTL Rx Queue Read Controller State This field gives the state of the Rx queue Read controller: 00: Idle state 01: Reading packet data 10: Reading packet status (or timestamp) 11: Flushing the packet data and status."
                format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-RXQx-DBG@RRCSTS"
                offset="[2:1]"/>
         <field description="MTL Rx Queue Fill-Level Status This field gives the status of the fill-level of the Rx Queue: 0x0: Rx Queue empty 0x1: Rx Queue fill-level below flow-control deactivate threshold 0x2: Rx Queue fill-level above flow-control activate threshold 0x3: Rx Queue full."
                format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-RXQx-DBG@RXQSTS"
                offset="[5:4]"/>
         <field description="Number of Packets in Receive Queue This field indicates the current number of packets in the Rx Queue."
                format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-RXQx-DBG@PRXQ"
                offset="[29:16]"/>
      </register>
      <register description="MTL RxQx Control register" format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-RXQx-CTRL"
                offset="0xd7c"
                size="4">
         <field description="Receive Queue Weight This field indicates the weight assigned to the Rx Queue 0."
                format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-RXQx-CTRL@RXQ-WEGT"
                offset="[2:0]"/>
         <field description="Receive Queue Packet Arbitration When this bit is set, the The ethernet block drives the packet data to the ARI interface such that the entire packet data of currently-selected queue is transmitted before switching to other queue."
                format="hex0x"
                id="ENET@MTL-QUEUE1-MTL-RXQx-CTRL@RXQ-FRM-ARBIT"
                offset="[3]"/>
      </register>
      <register description="DMA mode register" format="hex0x" id="ENET@DMA-MODE"
                offset="0x1000"
                size="4">
         <field description="Software Reset When this bit is set, the MAC and the OMA controller reset the logic and all internal registers of the OMA, MTL, and MAC."
                format="hex0x"
                id="ENET@DMA-MODE@SWR"
                offset="[0]"/>
         <field description="DMA Tx or Rx Arbitration Scheme This bit specifies the arbitration scheme between the Transmit and Receive paths of all channels: The Tx path has priority over the Rx path when the TXPR bit is set."
                format="hex0x"
                id="ENET@DMA-MODE@DA"
                offset="[1]"/>
         <field description="Transmit Arbitration Algorithm This field is used to select the arbitration algorithm for the Transmit side when multiple Tx DMAs are selected."
                format="hex0x"
                id="ENET@DMA-MODE@TAA"
                offset="[4:2]"/>
         <field description="Transmit Priority When set, this bit indicates that the Tx DMA has higher priority than the Rx DMA during arbitration for the system-side bus."
                format="hex0x"
                id="ENET@DMA-MODE@TXPR"
                offset="[11]"/>
         <field description="Priority Ratio These bits control the priority ratio in weighted round-robin arbitration between the Rx DMA and Tx DMA."
                format="hex0x"
                id="ENET@DMA-MODE@PR"
                offset="[14:12]"/>
      </register>
      <register description="DMA System Bus mode" format="hex0x" id="ENET@DMA-SYSBUS-MODE"
                offset="0x1004"
                size="4">
         <field description="Fixed Burst Length When this bit is set to 1, the AHB master will initiate burst transfers of specified length (INCRx or SINGLE)."
                format="hex0x"
                id="ENET@DMA-SYSBUS-MODE@FB"
                offset="[0]"/>
         <field description="Address-Aligned Beats When this bit is set to 1, the AHB master performs address-aligned burst transfers on Read and Write channels."
                format="hex0x"
                id="ENET@DMA-SYSBUS-MODE@AAL"
                offset="[12]"/>
         <field description="Mixed Burst When this bit is set high and the FB bit is low, the AHB master performs undefined bursts transfers (INCR) for burst length of 16 or more."
                format="hex0x"
                id="ENET@DMA-SYSBUS-MODE@MB"
                offset="[14]"/>
         <field description="Rebuild INCRx Burst When this bit is set high and the AHB master gets SPLIT, RETRY, or EarlyBurst Termination (EBT) response, the AHB master interface rebuilds the pending beats of any initiated burst transfer with INCRx and SINGLEtransfers."
                format="hex0x"
                id="ENET@DMA-SYSBUS-MODE@RB"
                offset="[15]"/>
      </register>
      <register description="DMA Interrupt status" format="hex0x" id="ENET@DMA-INTR-STAT"
                offset="0x1008"
                size="4">
         <field description="DMA Channel 0 Interrupt Status This bit indicates an interrupt event in DMA Channel 0."
                format="hex0x"
                id="ENET@DMA-INTR-STAT@DC0IS"
                offset="[0]"/>
         <field description="DMA Channel 1 Interrupt Status This bit indicates an interrupt event in DMA Channel 1."
                format="hex0x"
                id="ENET@DMA-INTR-STAT@DC1IS"
                offset="[1]"/>
         <field description="MTL Interrupt Status This bit indicates an interrupt event in the MTL."
                format="hex0x"
                id="ENET@DMA-INTR-STAT@MTLIS"
                offset="[16]"/>
         <field description="MAC Interrupt Status This bit indicates an interrupt event in the MAC."
                format="hex0x"
                id="ENET@DMA-INTR-STAT@MACIS"
                offset="[17]"/>
      </register>
      <register description="DMA Debug Status" format="hex0x" id="ENET@DMA-DBG-STAT"
                offset="0x100c"
                size="4">
         <field description="AHB Master Status When high, this bit indicates that the AHB master FSMs are in the non-idle state."
                format="hex0x"
                id="ENET@DMA-DBG-STAT@AHSTS"
                offset="[0]"/>
         <field description="DMA Channel 0 Receive Process State This field indicates the Rx DMA FSM state for Channel 0: 0x0: Stopped (Reset or Stop Receive Command issued) 0x1: Running (Fetching Rx Transfer ) 0x2: Reserved 0x3: Running (Waiting for Rx packet) 0x4: Suspended (Rx Unavailable) 0x5: Running (Closing the Rx) 0x6: Timestamp write state 0x7: Running (Transferring the received packet data from the Rx buffer to the system memory) This field does not generate an interrupt."
                format="hex0x"
                id="ENET@DMA-DBG-STAT@RPS0"
                offset="[11:8]"/>
         <field description="DMA Channel 0 Transmit Process State This field indicates the Tx DMA FSM state for Channel 0: 000: Stopped (Reset or Stop Transmit Command issued) 0x1: Running (Fetching Tx Transfer) 0x2: Running (Waiting for status) 0x3: Running (Reading Data from system memory buffer and queuing it to the Tx buffer (Tx FIFO)) 0x4: Timestamp write state 0x5: Reserved for future use 0x6: Suspended (Tx Unavailable or Tx Buffer Underflow) 0x7: Running (Closing Tx ) This field does not generate an interrupt."
                format="hex0x"
                id="ENET@DMA-DBG-STAT@TPS0"
                offset="[15:12]"/>
         <field description="DMA Channel 1 Receive Process State This field indicates the Rx DMA FSM state for Channel 1."
                format="hex0x"
                id="ENET@DMA-DBG-STAT@RPS1"
                offset="[19:16]"/>
         <field description="DMA Channel 1 Transmit Process State This field indicates the Tx DMA FSM state for Channel 1."
                format="hex0x"
                id="ENET@DMA-DBG-STAT@TPS1"
                offset="[23:20]"/>
      </register>
      <register description="DMA Channelx Control" format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-CTRL"
                offset="0x1100"
                size="4">
         <field description="8xPBL mode When this bit is set, the PBL value programmed in Bits[21:16] in DMA Channel Transmit Control Table 780 is multiplied eight times."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-CTRL@PBLx8"
                offset="[16]"/>
         <field description="Skip Length This bit specifies the Word, Dword, or Lword number (depending on the 32- bit, 64-bit, or 128-bit bus) to skip between two unchained s."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-CTRL@DSL"
                offset="[20:18]"/>
      </register>
      <register description="DMA Channelx Transmit Control" format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-TX-CTRL"
                offset="0x1104"
                size="4">
         <field description="Start or Stop Transmission Command When this bit is set, transmission is placed in the Running state."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-TX-CTRL@ST"
                offset="[0]"/>
         <field description="Transmit Channel Weight This field indicates the weight assigned to the corresponding Transmit channel."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-TX-CTRL@TCW"
                offset="[3:1]"/>
         <field description="Operate on Second Frame When this bit is set, it instructs the DMA to process the second packet of the Transmit data even before the status for the first packet is obtained."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-TX-CTRL@OSF"
                offset="[4]"/>
         <field description="Transmit Programmable Burst Length These bits indicate the maximum number of beats to be transferred in one DMA data transfer."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-TX-CTRL@TxPBL"
                offset="[21:16]"/>
      </register>
      <register description="DMA Channelx Receive Control" format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-RX-CTRL"
                offset="0x1108"
                size="4">
         <field description="Start or Stop Receive When this bit is set, the DMA tries to acquire the from the receive list and processes the incoming packets."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-RX-CTRL@SR"
                offset="[0]"/>
         <field description="Receive Buffer size This field indicates the size of the Rx buffers specified in bytes."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-RX-CTRL@RBSZ"
                offset="[14:3]"/>
         <field description="Receive Programmable Burst Length These bits indicate the maximum number of beats to be transferred in one DMA data transfer."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-RX-CTRL@RxPBL"
                offset="[21:16]"/>
         <field description="DMA Rx Channel 0 Packet Flush When this bit is set to 1, the DMA will automatically flush the packet from the Rx Queues destined to DMA Rx Channel 0 when the DMA Rx Channel 0 is stopped after a system bus error has occurred."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-RX-CTRL@RPF"
                offset="[31]"/>
      </register>
      <register description="no description available" format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-TXDESC-LIST-ADDR"
                offset="0x1114"
                size="4">
         <field description="Start of transmit list This field contains the base address of the first in the Transmit list."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-TXDESC-LIST-ADDR@STL"
                offset="[31:2]"/>
      </register>
      <register description="no description available" format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-RXDESC-LIST-ADDR"
                offset="0x111c"
                size="4">
         <field description="Start of receive list This field contains the base address of the First in the Receive list."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-RXDESC-LIST-ADDR@SRL"
                offset="[31:2]"/>
      </register>
      <register description="no description available" format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-TXDESC-TAIL-PTR"
                offset="0x1120"
                size="4">
         <field description="Transmit Tail Pointer This field contains the tail pointer for the Tx ring."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-TXDESC-TAIL-PTR@TDTP"
                offset="[31:2]"/>
      </register>
      <register description="no description available" format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-RXDESC-TAIL-PTR"
                offset="0x1128"
                size="4">
         <field description="Receive Tail Pointer This field contains the tail pointer for the Rx ring."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-RXDESC-TAIL-PTR@RDTP"
                offset="[31:2]"/>
      </register>
      <register description="no description available" format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-TXDESC-RING-LENGTH"
                offset="0x112c"
                size="4">
         <field description="Transmit Ring Length This field sets the maximum number of Tx descriptors in the circular ring."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-TXDESC-RING-LENGTH@TDRL"
                offset="[9:0]"/>
      </register>
      <register description="Channelx Rx descriptor Ring Length" format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-RXDESC-RING-LENGTH"
                offset="0x1130"
                size="4">
         <field description="Receive Ring Length This register sets the maximum number of Rx descriptors in the circular ring."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-RXDESC-RING-LENGTH@RDRL"
                offset="[9:0]"/>
      </register>
      <register description="Channelx Interrupt Enable" format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-INT-EN"
                offset="0x1134"
                size="4">
         <field description="Transmit interrupt enable When this bit is set with Normal Interrupt Summary Enable (bit 16 in this register), Transmit Interrupt is enabled."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-INT-EN@TIE"
                offset="[0]"/>
         <field description="Transmit stopped enable When this bit is set with Abnormal Interrupt Summary Enable (bit 15 in this register), Transmission Stopped Interrupt is enabled."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-INT-EN@TSE"
                offset="[1]"/>
         <field description="Transmit buffer unavailable enable When this bit is set with Normal Interrupt Summary Enable (bit 16 in this register), Transmit Buffer Unavailable Interrupt is enabled."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-INT-EN@TBUE"
                offset="[2]"/>
         <field description="Receive interrupt enable When this bit is set with Normal Interrupt Summary Enable (bit 16 in this register), Receive Interrupt is enabled."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-INT-EN@RIE"
                offset="[6]"/>
         <field description="Receive buffer unavailable enable When this bit is set with Abnormal Interrupt Summary Enable (bit 15 in this register), Receive Buffer Unavailable Interrupt is enabled."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-INT-EN@RBUE"
                offset="[7]"/>
         <field description="Received stopped enable When this bit is set with Abnormal Interrupt Summary Enable (bit 15 in this register), Receive Stopped Interrupt is enabled."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-INT-EN@RSE"
                offset="[8]"/>
         <field description="Receive watchdog timeout enable When this bit is set with Abnormal Interrupt Summary Enable (bit 15 in this register), the Receive Watchdog Timeout Interrupt is enabled."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-INT-EN@RWTE"
                offset="[9]"/>
         <field description="Early transmit interrupt enable When this bit is set with an Abnormal Interrupt Summary Enable (bit 15 in this register), Early Transmit Interrupt is enabled."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-INT-EN@ETIE"
                offset="[10]"/>
         <field description="Early receive interrupt enable When this bit is set with Normal Interrupt Summary Enable (bit 16 in this register), Early Receive Interrupt is enabled."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-INT-EN@ERIE"
                offset="[11]"/>
         <field description="Fatal bus error enable When this bit is set with Abnormal Interrupt Summary Enable (bit 15 in this register), the Fatal Bus Error Interrupt is enabled."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-INT-EN@FBEE"
                offset="[12]"/>
         <field description="Abnormal interrupt summary enable When this bit is set, an Abnormal Interrupt summary is enabled."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-INT-EN@AIE"
                offset="[14]"/>
         <field description="Normal interrupt summary enable When this bit is set, a normal interrupt is enabled."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-INT-EN@NIE"
                offset="[15]"/>
      </register>
      <register description="Receive Interrupt Watchdog Timer" format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-RX-INT-WDTIMER"
                offset="0x1138"
                size="4">
         <field description="Receive Interrupt Watchdog Timer Count Indicates the number of system clock cycles multiplied by 256 for which the watchdog timer is set."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-RX-INT-WDTIMER@RIWT"
                offset="[7:0]"/>
      </register>
      <register description="Slot Function Control and Status" format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-SLOT-FUNC-CTRL-STAT"
                offset="0x113c"
                size="4">
         <field description="Enable Slot Comparison When set, this bit enables the checking of the slot numbers programmed in the Tx descriptor with the current reference given in the RSN field."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-SLOT-FUNC-CTRL-STAT@ESC"
                offset="[0]"/>
         <field description="Advance Slot Check When set, this bit enables the D MA to fetch the data from the buffer when the slot number (SLOTNUM) programmed in the Tx descriptor is equal to the reference slot number given in the RSN field or, ahead of the reference slot number by up to two slots This bit is applicable only when the ESC bit is set."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-SLOT-FUNC-CTRL-STAT@ASC"
                offset="[1]"/>
         <field description="Reference Slot Number This field gives the current value of the reference slot number in the DMA."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-SLOT-FUNC-CTRL-STAT@RSN"
                offset="[19:16]"/>
      </register>
      <register description="Channelx Current Host Transmit descriptor" format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-CUR-HST-TXDESC"
                offset="0x1144"
                readOnly="true"
                size="4">
         <field description="Host Transmit descriptor Address Pointer Cleared on Reset."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-CUR-HST-TXDESC@HTD"
                offset="[31:0]"/>
      </register>
      <register description="no description available" format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-CUR-HST-RXDESC"
                offset="0x114c"
                readOnly="true"
                size="4">
         <field description="Host Receive descriptor Address Pointer Cleared on Reset."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-CUR-HST-RXDESC@HRD"
                offset="[31:0]"/>
      </register>
      <register description="no description available" format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-CUR-HST-TXBUF"
                offset="0x1154"
                readOnly="true"
                size="4">
         <field description="Host Transmit Buffer Address Pointer Cleared on Reset."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-CUR-HST-TXBUF@HTB"
                offset="[31:0]"/>
      </register>
      <register description="Channelx Current Application Receive Buffer Address"
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-CUR-HST-RXBUF"
                offset="0x115c"
                readOnly="true"
                size="4">
         <field description="Host Receive Buffer Address Pointer Cleared on Reset."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-CUR-HST-RXBUF@HRB"
                offset="[31:0]"/>
      </register>
      <register description="Channelx DMA status register" format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-STAT"
                offset="0x1160"
                size="4">
         <field description="Transmit Interrupt This bit indicates that the packet transmission is complete."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-STAT@TI"
                offset="[0]"/>
         <field description="Transmit Process Stopped This bit is set when the transmission is stopped."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-STAT@TPS"
                offset="[1]"/>
         <field description="Transmit Buffer Unavailable This bit indicates that the application owns the next descriptor in the transmit list, and the DMA cannot acquire it."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-STAT@TBU"
                offset="[2]"/>
         <field description="Receive Interrupt This bit indicates that the packet reception is complete."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-STAT@RI"
                offset="[6]"/>
         <field description="Receive Buffer Unavailable This bit indicates that the application owns the next in the receive list, and the DMA cannot acquire it."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-STAT@RBU"
                offset="[7]"/>
         <field description="Receive Process Stopped This bit is asserted when the Rx process enters the Stopped state."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-STAT@RPS"
                offset="[8]"/>
         <field description="Receive Watchdog time out This bit is asserted when a packet with length greater than 2,048 bytes (10,240 bytes when Jumbo Packet mode is enabled) is received."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-STAT@RWT"
                offset="[9]"/>
         <field description="Early Transmit Interrupt This bit indicates that the packet to be transmitted is fully transferred to the MTL Tx FIFO."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-STAT@ETI"
                offset="[10]"/>
         <field description="Early Receive Interrupt This bit indicates that the DMA filled the first data buffer of the packet."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-STAT@ERI"
                offset="[11]"/>
         <field description="Fatal Bus Error This bit indicates that a bus error occurred (as described in the EB field)."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-STAT@FBE"
                offset="[12]"/>
         <field description="Abnormal Interrupt Summary Abnormal Interrupt Summary bit value is the logical OR of the following when the corresponding interrupt bits are enabled in the DMA Channel Interrupt Enable register Table 778: Bit 1: Transmit Process Stopped Bit 7: Receive Buffer Unavailable Bit 8: Receive Process Stopped Bit 10: Ear1y Transmit Interrupt Bit 12: Fatal Bus Error Only unmasked bits affect the Abnormal Interrupt Summary bit."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-STAT@AIS"
                offset="[14]"/>
         <field description="Normal Interrupt Summary Normal Interrupt Summary bit value is the logical OR of the following bits when the corresponding interrupt bits are enabled in the DMA Channel Interrupt Enable register Table 778: Bit 0: Transmit Interrupt Bit 2: Transmit Buffer Unavailable Bit 6: Receive Interrupt Bit 11: Early Receive Interrupt Only unmasked bits (interrupts for which interrupt enable is set in DMA Channel Interrupt Enable register Table 778) affect the Normal Interrupt Summary bit."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-STAT@NIS"
                offset="[15]"/>
         <field description="DMA Error Bits This field indicates the type of error that caused a Bus Error."
                format="hex0x"
                id="ENET@DMA-CH0-DMA-CHx-STAT@EB"
                offset="[18:16]"/>
      </register>
      <register description="DMA Channelx Control" format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-CTRL"
                offset="0x1180"
                size="4">
         <field description="8xPBL mode When this bit is set, the PBL value programmed in Bits[21:16] in DMA Channel Transmit Control Table 780 is multiplied eight times."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-CTRL@PBLx8"
                offset="[16]"/>
         <field description="Skip Length This bit specifies the Word, Dword, or Lword number (depending on the 32- bit, 64-bit, or 128-bit bus) to skip between two unchained s."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-CTRL@DSL"
                offset="[20:18]"/>
      </register>
      <register description="DMA Channelx Transmit Control" format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-TX-CTRL"
                offset="0x1184"
                size="4">
         <field description="Start or Stop Transmission Command When this bit is set, transmission is placed in the Running state."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-TX-CTRL@ST"
                offset="[0]"/>
         <field description="Transmit Channel Weight This field indicates the weight assigned to the corresponding Transmit channel."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-TX-CTRL@TCW"
                offset="[3:1]"/>
         <field description="Operate on Second Frame When this bit is set, it instructs the DMA to process the second packet of the Transmit data even before the status for the first packet is obtained."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-TX-CTRL@OSF"
                offset="[4]"/>
         <field description="Transmit Programmable Burst Length These bits indicate the maximum number of beats to be transferred in one DMA data transfer."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-TX-CTRL@TxPBL"
                offset="[21:16]"/>
      </register>
      <register description="DMA Channelx Receive Control" format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-RX-CTRL"
                offset="0x1188"
                size="4">
         <field description="Start or Stop Receive When this bit is set, the DMA tries to acquire the from the receive list and processes the incoming packets."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-RX-CTRL@SR"
                offset="[0]"/>
         <field description="Receive Buffer size This field indicates the size of the Rx buffers specified in bytes."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-RX-CTRL@RBSZ"
                offset="[14:3]"/>
         <field description="Receive Programmable Burst Length These bits indicate the maximum number of beats to be transferred in one DMA data transfer."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-RX-CTRL@RxPBL"
                offset="[21:16]"/>
         <field description="DMA Rx Channel 0 Packet Flush When this bit is set to 1, the DMA will automatically flush the packet from the Rx Queues destined to DMA Rx Channel 0 when the DMA Rx Channel 0 is stopped after a system bus error has occurred."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-RX-CTRL@RPF"
                offset="[31]"/>
      </register>
      <register description="no description available" format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-TXDESC-LIST-ADDR"
                offset="0x1194"
                size="4">
         <field description="Start of transmit list This field contains the base address of the first in the Transmit list."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-TXDESC-LIST-ADDR@STL"
                offset="[31:2]"/>
      </register>
      <register description="no description available" format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-RXDESC-LIST-ADDR"
                offset="0x119c"
                size="4">
         <field description="Start of receive list This field contains the base address of the First in the Receive list."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-RXDESC-LIST-ADDR@SRL"
                offset="[31:2]"/>
      </register>
      <register description="no description available" format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-TXDESC-TAIL-PTR"
                offset="0x11a0"
                size="4">
         <field description="Transmit Tail Pointer This field contains the tail pointer for the Tx ring."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-TXDESC-TAIL-PTR@TDTP"
                offset="[31:2]"/>
      </register>
      <register description="no description available" format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-RXDESC-TAIL-PTR"
                offset="0x11a8"
                size="4">
         <field description="Receive Tail Pointer This field contains the tail pointer for the Rx ring."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-RXDESC-TAIL-PTR@RDTP"
                offset="[31:2]"/>
      </register>
      <register description="no description available" format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-TXDESC-RING-LENGTH"
                offset="0x11ac"
                size="4">
         <field description="Transmit Ring Length This field sets the maximum number of Tx descriptors in the circular ring."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-TXDESC-RING-LENGTH@TDRL"
                offset="[9:0]"/>
      </register>
      <register description="Channelx Rx descriptor Ring Length" format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-RXDESC-RING-LENGTH"
                offset="0x11b0"
                size="4">
         <field description="Receive Ring Length This register sets the maximum number of Rx descriptors in the circular ring."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-RXDESC-RING-LENGTH@RDRL"
                offset="[9:0]"/>
      </register>
      <register description="Channelx Interrupt Enable" format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-INT-EN"
                offset="0x11b4"
                size="4">
         <field description="Transmit interrupt enable When this bit is set with Normal Interrupt Summary Enable (bit 16 in this register), Transmit Interrupt is enabled."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-INT-EN@TIE"
                offset="[0]"/>
         <field description="Transmit stopped enable When this bit is set with Abnormal Interrupt Summary Enable (bit 15 in this register), Transmission Stopped Interrupt is enabled."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-INT-EN@TSE"
                offset="[1]"/>
         <field description="Transmit buffer unavailable enable When this bit is set with Normal Interrupt Summary Enable (bit 16 in this register), Transmit Buffer Unavailable Interrupt is enabled."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-INT-EN@TBUE"
                offset="[2]"/>
         <field description="Receive interrupt enable When this bit is set with Normal Interrupt Summary Enable (bit 16 in this register), Receive Interrupt is enabled."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-INT-EN@RIE"
                offset="[6]"/>
         <field description="Receive buffer unavailable enable When this bit is set with Abnormal Interrupt Summary Enable (bit 15 in this register), Receive Buffer Unavailable Interrupt is enabled."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-INT-EN@RBUE"
                offset="[7]"/>
         <field description="Received stopped enable When this bit is set with Abnormal Interrupt Summary Enable (bit 15 in this register), Receive Stopped Interrupt is enabled."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-INT-EN@RSE"
                offset="[8]"/>
         <field description="Receive watchdog timeout enable When this bit is set with Abnormal Interrupt Summary Enable (bit 15 in this register), the Receive Watchdog Timeout Interrupt is enabled."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-INT-EN@RWTE"
                offset="[9]"/>
         <field description="Early transmit interrupt enable When this bit is set with an Abnormal Interrupt Summary Enable (bit 15 in this register), Early Transmit Interrupt is enabled."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-INT-EN@ETIE"
                offset="[10]"/>
         <field description="Early receive interrupt enable When this bit is set with Normal Interrupt Summary Enable (bit 16 in this register), Early Receive Interrupt is enabled."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-INT-EN@ERIE"
                offset="[11]"/>
         <field description="Fatal bus error enable When this bit is set with Abnormal Interrupt Summary Enable (bit 15 in this register), the Fatal Bus Error Interrupt is enabled."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-INT-EN@FBEE"
                offset="[12]"/>
         <field description="Abnormal interrupt summary enable When this bit is set, an Abnormal Interrupt summary is enabled."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-INT-EN@AIE"
                offset="[14]"/>
         <field description="Normal interrupt summary enable When this bit is set, a normal interrupt is enabled."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-INT-EN@NIE"
                offset="[15]"/>
      </register>
      <register description="Receive Interrupt Watchdog Timer" format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-RX-INT-WDTIMER"
                offset="0x11b8"
                size="4">
         <field description="Receive Interrupt Watchdog Timer Count Indicates the number of system clock cycles multiplied by 256 for which the watchdog timer is set."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-RX-INT-WDTIMER@RIWT"
                offset="[7:0]"/>
      </register>
      <register description="Slot Function Control and Status" format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-SLOT-FUNC-CTRL-STAT"
                offset="0x11bc"
                size="4">
         <field description="Enable Slot Comparison When set, this bit enables the checking of the slot numbers programmed in the Tx descriptor with the current reference given in the RSN field."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-SLOT-FUNC-CTRL-STAT@ESC"
                offset="[0]"/>
         <field description="Advance Slot Check When set, this bit enables the D MA to fetch the data from the buffer when the slot number (SLOTNUM) programmed in the Tx descriptor is equal to the reference slot number given in the RSN field or, ahead of the reference slot number by up to two slots This bit is applicable only when the ESC bit is set."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-SLOT-FUNC-CTRL-STAT@ASC"
                offset="[1]"/>
         <field description="Reference Slot Number This field gives the current value of the reference slot number in the DMA."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-SLOT-FUNC-CTRL-STAT@RSN"
                offset="[19:16]"/>
      </register>
      <register description="Channelx Current Host Transmit descriptor" format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-CUR-HST-TXDESC"
                offset="0x11c4"
                readOnly="true"
                size="4">
         <field description="Host Transmit descriptor Address Pointer Cleared on Reset."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-CUR-HST-TXDESC@HTD"
                offset="[31:0]"/>
      </register>
      <register description="no description available" format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-CUR-HST-RXDESC"
                offset="0x11cc"
                readOnly="true"
                size="4">
         <field description="Host Receive descriptor Address Pointer Cleared on Reset."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-CUR-HST-RXDESC@HRD"
                offset="[31:0]"/>
      </register>
      <register description="no description available" format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-CUR-HST-TXBUF"
                offset="0x11d4"
                readOnly="true"
                size="4">
         <field description="Host Transmit Buffer Address Pointer Cleared on Reset."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-CUR-HST-TXBUF@HTB"
                offset="[31:0]"/>
      </register>
      <register description="Channelx Current Application Receive Buffer Address"
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-CUR-HST-RXBUF"
                offset="0x11dc"
                readOnly="true"
                size="4">
         <field description="Host Receive Buffer Address Pointer Cleared on Reset."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-CUR-HST-RXBUF@HRB"
                offset="[31:0]"/>
      </register>
      <register description="Channelx DMA status register" format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-STAT"
                offset="0x11e0"
                size="4">
         <field description="Transmit Interrupt This bit indicates that the packet transmission is complete."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-STAT@TI"
                offset="[0]"/>
         <field description="Transmit Process Stopped This bit is set when the transmission is stopped."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-STAT@TPS"
                offset="[1]"/>
         <field description="Transmit Buffer Unavailable This bit indicates that the application owns the next descriptor in the transmit list, and the DMA cannot acquire it."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-STAT@TBU"
                offset="[2]"/>
         <field description="Receive Interrupt This bit indicates that the packet reception is complete."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-STAT@RI"
                offset="[6]"/>
         <field description="Receive Buffer Unavailable This bit indicates that the application owns the next in the receive list, and the DMA cannot acquire it."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-STAT@RBU"
                offset="[7]"/>
         <field description="Receive Process Stopped This bit is asserted when the Rx process enters the Stopped state."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-STAT@RPS"
                offset="[8]"/>
         <field description="Receive Watchdog time out This bit is asserted when a packet with length greater than 2,048 bytes (10,240 bytes when Jumbo Packet mode is enabled) is received."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-STAT@RWT"
                offset="[9]"/>
         <field description="Early Transmit Interrupt This bit indicates that the packet to be transmitted is fully transferred to the MTL Tx FIFO."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-STAT@ETI"
                offset="[10]"/>
         <field description="Early Receive Interrupt This bit indicates that the DMA filled the first data buffer of the packet."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-STAT@ERI"
                offset="[11]"/>
         <field description="Fatal Bus Error This bit indicates that a bus error occurred (as described in the EB field)."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-STAT@FBE"
                offset="[12]"/>
         <field description="Abnormal Interrupt Summary Abnormal Interrupt Summary bit value is the logical OR of the following when the corresponding interrupt bits are enabled in the DMA Channel Interrupt Enable register Table 778: Bit 1: Transmit Process Stopped Bit 7: Receive Buffer Unavailable Bit 8: Receive Process Stopped Bit 10: Ear1y Transmit Interrupt Bit 12: Fatal Bus Error Only unmasked bits affect the Abnormal Interrupt Summary bit."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-STAT@AIS"
                offset="[14]"/>
         <field description="Normal Interrupt Summary Normal Interrupt Summary bit value is the logical OR of the following bits when the corresponding interrupt bits are enabled in the DMA Channel Interrupt Enable register Table 778: Bit 0: Transmit Interrupt Bit 2: Transmit Buffer Unavailable Bit 6: Receive Interrupt Bit 11: Early Receive Interrupt Only unmasked bits (interrupts for which interrupt enable is set in DMA Channel Interrupt Enable register Table 778) affect the Normal Interrupt Summary bit."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-STAT@NIS"
                offset="[15]"/>
         <field description="DMA Error Bits This field indicates the type of error that caused a Bus Error."
                format="hex0x"
                id="ENET@DMA-CH1-DMA-CHx-STAT@EB"
                offset="[18:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4"
               description="LPC54S60x/LPC5460x USB1 High-speed Device Controller"
               id="USBHSD"
               size="0x40">
      <register description="USB Device Command/Status register" format="hex0x"
                id="USBHSD@DEVCMDSTAT"
                offset="0x0"
                size="4">
         <field description="USB device address." format="hex0x"
                id="USBHSD@DEVCMDSTAT@DEV-ADDR"
                offset="[6:0]"/>
         <field description="USB device enable." format="hex0x" id="USBHSD@DEVCMDSTAT@DEV-EN"
                offset="[7]"/>
         <field description="SETUP token received." format="hex0x" id="USBHSD@DEVCMDSTAT@SETUP"
                offset="[8]"/>
         <field description="Forces the NEEDCLK output to always be on:." format="hex0x"
                id="USBHSD@DEVCMDSTAT@FORCE-NEEDCLK"
                offset="[9]"/>
         <field description="If this bit is set to 1, the VBUS voltage indicators from the PHY are overruled."
                format="hex0x"
                id="USBHSD@DEVCMDSTAT@FORCE-VBUS"
                offset="[10]"/>
         <field description="LPM Supported:." format="hex0x" id="USBHSD@DEVCMDSTAT@LPM-SUP"
                offset="[11]"/>
         <field description="Interrupt on NAK for interrupt and bulk OUT EP:." format="hex0x"
                id="USBHSD@DEVCMDSTAT@INTONNAK-AO"
                offset="[12]"/>
         <field description="Interrupt on NAK for interrupt and bulk IN EP:." format="hex0x"
                id="USBHSD@DEVCMDSTAT@INTONNAK-AI"
                offset="[13]"/>
         <field description="Interrupt on NAK for control OUT EP:." format="hex0x"
                id="USBHSD@DEVCMDSTAT@INTONNAK-CO"
                offset="[14]"/>
         <field description="Interrupt on NAK for control IN EP:." format="hex0x"
                id="USBHSD@DEVCMDSTAT@INTONNAK-CI"
                offset="[15]"/>
         <field description="Device status - connect." format="hex0x"
                id="USBHSD@DEVCMDSTAT@DCON"
                offset="[16]"/>
         <field description="Device status - suspend." format="hex0x"
                id="USBHSD@DEVCMDSTAT@DSUS"
                offset="[17]"/>
         <field description="Device status - LPM Suspend." format="hex0x"
                id="USBHSD@DEVCMDSTAT@LPM-SUS"
                offset="[19]"/>
         <field description="LPM Remote Wake-up Enabled by USB host." format="hex0x"
                id="USBHSD@DEVCMDSTAT@LPM-REWP"
                offset="[20]"/>
         <field description="This field indicates the speed at which the device operates: 00b: reserved 01b: full-speed 10b: high-speed 11b: super-speed (reserved for future use)."
                format="hex0x"
                id="USBHSD@DEVCMDSTAT@Speed"
                offset="[23:22]"/>
         <field description="Device status - connect change." format="hex0x"
                id="USBHSD@DEVCMDSTAT@DCON-C"
                offset="[24]"/>
         <field description="Device status - suspend change." format="hex0x"
                id="USBHSD@DEVCMDSTAT@DSUS-C"
                offset="[25]"/>
         <field description="Device status - reset change." format="hex0x"
                id="USBHSD@DEVCMDSTAT@DRES-C"
                offset="[26]"/>
         <field description="This bit indicates if VBUS is detected or not." format="hex0x"
                id="USBHSD@DEVCMDSTAT@VBUS-DEBOUNCED"
                offset="[28]"/>
         <field description="This field is written by firmware to put the PHY into a test mode as defined by the USB2."
                format="hex0x"
                id="USBHSD@DEVCMDSTAT@PHY-TEST-MODE"
                offset="[31:29]"/>
      </register>
      <register description="USB Info register" format="hex0x" id="USBHSD@INFO" offset="0x4"
                readOnly="true"
                size="4">
         <field description="Frame number." format="hex0x" id="USBHSD@INFO@FRAME-NR"
                offset="[10:0]"/>
         <field description="The error code which last occurred:." format="hex0x"
                id="USBHSD@INFO@ERR-CODE"
                offset="[14:11]"/>
         <field description="Minor revision." format="hex0x" id="USBHSD@INFO@Minrev"
                offset="[23:16]"/>
         <field description="Major revision." format="hex0x" id="USBHSD@INFO@Majrev"
                offset="[31:24]"/>
      </register>
      <register description="USB EP Command/Status List start address" format="hex0x"
                id="USBHSD@EPLISTSTART"
                offset="0x8"
                size="4">
         <field description="Programmable portion of the USB EP Command/Status List address."
                format="hex0x"
                id="USBHSD@EPLISTSTART@EP-LIST-PRG"
                offset="[19:8]"/>
         <field description="Fixed portion of USB EP Command/Status List address."
                format="hex0x"
                id="USBHSD@EPLISTSTART@EP-LIST-FIXED"
                offset="[31:20]"/>
      </register>
      <register description="USB Data buffer start address" format="hex0x"
                id="USBHSD@DATABUFSTART"
                offset="0xc"
                size="4">
         <field description="Start address of the memory page where all endpoint data buffers are located."
                format="hex0x"
                id="USBHSD@DATABUFSTART@DA-BUF"
                offset="[31:0]"/>
      </register>
      <register description="USB Link Power Management register" format="hex0x" id="USBHSD@LPM"
                offset="0x10"
                size="4">
         <field description="Host Initiated Resume Duration - HW." format="hex0x"
                id="USBHSD@LPM@HIRD-HW"
                offset="[3:0]"/>
         <field description="Host Initiated Resume Duration - SW." format="hex0x"
                id="USBHSD@LPM@HIRD-SW"
                offset="[7:4]"/>
         <field description="As long as this bit is set to one and LPM supported bit is set to one, HW will return a NYET handshake on every LPM token it receives."
                format="hex0x"
                id="USBHSD@LPM@DATA-PENDING"
                offset="[8]"/>
      </register>
      <register description="USB Endpoint skip" format="hex0x" id="USBHSD@EPSKIP" offset="0x14"
                size="4">
         <field description="Endpoint skip: Writing 1 to one of these bits, will indicate to HW that it must deactivate the buffer assigned to this endpoint and return control back to software."
                format="hex0x"
                id="USBHSD@EPSKIP@SKIP"
                offset="[11:0]"/>
      </register>
      <register description="USB Endpoint Buffer in use" format="hex0x" id="USBHSD@EPINUSE"
                offset="0x18"
                size="4">
         <field description="Buffer in use: This register has one bit per physical endpoint."
                format="hex0x"
                id="USBHSD@EPINUSE@BUF"
                offset="[11:2]"/>
      </register>
      <register description="USB Endpoint Buffer Configuration register" format="hex0x"
                id="USBHSD@EPBUFCFG"
                offset="0x1c"
                size="4">
         <field description="Buffer usage: This register has one bit per physical endpoint."
                format="hex0x"
                id="USBHSD@EPBUFCFG@BUF-SB"
                offset="[11:2]"/>
      </register>
      <register description="USB interrupt status register" format="hex0x" id="USBHSD@INTSTAT"
                offset="0x20"
                size="4">
         <field description="Interrupt status register bit for the Control EP0 OUT direction."
                format="hex0x"
                id="USBHSD@INTSTAT@EP0OUT"
                offset="[0]"/>
         <field description="Interrupt status register bit for the Control EP0 IN direction."
                format="hex0x"
                id="USBHSD@INTSTAT@EP0IN"
                offset="[1]"/>
         <field description="Interrupt status register bit for the EP1 OUT direction."
                format="hex0x"
                id="USBHSD@INTSTAT@EP1OUT"
                offset="[2]"/>
         <field description="Interrupt status register bit for the EP1 IN direction."
                format="hex0x"
                id="USBHSD@INTSTAT@EP1IN"
                offset="[3]"/>
         <field description="Interrupt status register bit for the EP2 OUT direction."
                format="hex0x"
                id="USBHSD@INTSTAT@EP2OUT"
                offset="[4]"/>
         <field description="Interrupt status register bit for the EP2 IN direction."
                format="hex0x"
                id="USBHSD@INTSTAT@EP2IN"
                offset="[5]"/>
         <field description="Interrupt status register bit for the EP3 OUT direction."
                format="hex0x"
                id="USBHSD@INTSTAT@EP3OUT"
                offset="[6]"/>
         <field description="Interrupt status register bit for the EP3 IN direction."
                format="hex0x"
                id="USBHSD@INTSTAT@EP3IN"
                offset="[7]"/>
         <field description="Interrupt status register bit for the EP4 OUT direction."
                format="hex0x"
                id="USBHSD@INTSTAT@EP4OUT"
                offset="[8]"/>
         <field description="Interrupt status register bit for the EP4 IN direction."
                format="hex0x"
                id="USBHSD@INTSTAT@EP4IN"
                offset="[9]"/>
         <field description="Interrupt status register bit for the EP5 OUT direction."
                format="hex0x"
                id="USBHSD@INTSTAT@EP5OUT"
                offset="[10]"/>
         <field description="Interrupt status register bit for the EP5 IN direction."
                format="hex0x"
                id="USBHSD@INTSTAT@EP5IN"
                offset="[11]"/>
         <field description="Frame interrupt." format="hex0x" id="USBHSD@INTSTAT@FRAME-INT"
                offset="[30]"/>
         <field description="Device status interrupt." format="hex0x"
                id="USBHSD@INTSTAT@DEV-INT"
                offset="[31]"/>
      </register>
      <register description="USB interrupt enable register" format="hex0x" id="USBHSD@INTEN"
                offset="0x24"
                size="4">
         <field description="If this bit is set and the corresponding USB interrupt status bit is set, a HW interrupt is generated on the interrupt line."
                format="hex0x"
                id="USBHSD@INTEN@EP-INT-EN"
                offset="[11:0]"/>
         <field description="If this bit is set and the corresponding USB interrupt status bit is set, a HW interrupt is generated on the interrupt line."
                format="hex0x"
                id="USBHSD@INTEN@FRAME-INT-EN"
                offset="[30]"/>
         <field description="If this bit is set and the corresponding USB interrupt status bit is set, a HW interrupt is generated on the interrupt line."
                format="hex0x"
                id="USBHSD@INTEN@DEV-INT-EN"
                offset="[31]"/>
      </register>
      <register description="USB set interrupt status register" format="hex0x"
                id="USBHSD@INTSETSTAT"
                offset="0x28"
                size="4">
         <field description="If software writes a one to one of these bits, the corresponding USB interrupt status bit is set."
                format="hex0x"
                id="USBHSD@INTSETSTAT@EP-SET-INT"
                offset="[11:0]"/>
         <field description="If software writes a one to one of these bits, the corresponding USB interrupt status bit is set."
                format="hex0x"
                id="USBHSD@INTSETSTAT@FRAME-SET-INT"
                offset="[30]"/>
         <field description="If software writes a one to one of these bits, the corresponding USB interrupt status bit is set."
                format="hex0x"
                id="USBHSD@INTSETSTAT@DEV-SET-INT"
                offset="[31]"/>
      </register>
      <register description="USB Endpoint toggle register" format="hex0x" id="USBHSD@EPTOGGLE"
                offset="0x34"
                size="4">
         <field description="Endpoint data toggle: This field indicates the current value of the data toggle for the corresponding endpoint."
                format="hex0x"
                id="USBHSD@EPTOGGLE@TOGGLE"
                offset="[29:0]"/>
      </register>
      <register description="UTMI/ULPI debug register" format="hex0x" id="USBHSD@ULPIDEBUG"
                offset="0x3c"
                size="4">
         <field description="ULPI mode: Bits 7:0 are used as the address when doing a register access over the ULPI interface."
                format="hex0x"
                id="USBHSD@ULPIDEBUG@PHY-ADDR"
                offset="[7:0]"/>
         <field description="UTMI+ mode: Reserved." format="hex0x"
                id="USBHSD@ULPIDEBUG@PHY-WDATA"
                offset="[15:8]"/>
         <field description="UTMI+ mode: Bits 7:0 contains the value returned by the VStatus signal on Vendor Interface of UTMI+."
                format="hex0x"
                id="USBHSD@ULPIDEBUG@PHY-RDATA"
                offset="[23:16]"/>
         <field description="UTMI+ mode: Reserved." format="hex0x" id="USBHSD@ULPIDEBUG@PHY-RW"
                offset="[24]"/>
         <field description="Software writes this bit to one to start a read or write operation."
                format="hex0x"
                id="USBHSD@ULPIDEBUG@PHY-ACCESS"
                offset="[25]"/>
         <field description="This bit indicates if the interface between the controller is UTMI+ or ULPI."
                format="hex0x"
                id="USBHSD@ULPIDEBUG@PHY-MODE"
                offset="[31]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x CRC engine" id="CRC-ENGINE" size="0xc">
      <register description="CRC mode register" format="hex0x" id="CRC-ENGINE@MODE"
                offset="0x0"
                size="4">
         <field description="CRC polynomial: 1X = CRC-32 polynomial 01 = CRC-16 polynomial 00 = CRC-CCITT polynomial"
                format="hex0x"
                id="CRC-ENGINE@MODE@CRC-POLY"
                offset="[1:0]"/>
         <field description="Data bit order: 1 = Bit order reverse for CRC_WR_DATA (per byte) 0 = No bit order reverse for CRC_WR_DATA (per byte)"
                format="hex0x"
                id="CRC-ENGINE@MODE@BIT-RVS-WR"
                offset="[2]"/>
         <field description="Data complement: 1 = 1's complement for CRC_WR_DATA 0 = No 1's complement for CRC_WR_DATA"
                format="hex0x"
                id="CRC-ENGINE@MODE@CMPL-WR"
                offset="[3]"/>
         <field description="CRC sum bit order: 1 = Bit order reverse for CRC_SUM 0 = No bit order reverse for CRC_SUM"
                format="hex0x"
                id="CRC-ENGINE@MODE@BIT-RVS-SUM"
                offset="[4]"/>
         <field description="CRC sum complement: 1 = 1's complement for CRC_SUM 0 = No 1's complement for CRC_SUM"
                format="hex0x"
                id="CRC-ENGINE@MODE@CMPL-SUM"
                offset="[5]"/>
      </register>
      <register description="CRC seed register" format="hex0x" id="CRC-ENGINE@SEED"
                offset="0x4"
                size="4">
         <field description="A write access to this register will load CRC seed value to CRC_SUM register with selected bit order and 1's complement pre-processes. A write access to this register will overrule the CRC calculation in progresses."
                format="hex0x"
                id="CRC-ENGINE@SEED@CRC-SEED"
                offset="[31:0]"/>
      </register>
      <register description="CRC checksum register" format="hex0x" id="CRC-ENGINE@SUM"
                offset="0x8"
                readOnly="true"
                size="4">
         <field description="The most recent CRC sum can be read through this register with selected bit order and 1's complement post-processes."
                format="hex0x"
                id="CRC-ENGINE@SUM@CRC-SUM"
                offset="[31:0]"/>
      </register>
      <register description="CRC data register" format="hex0x" id="CRC-ENGINE@WR-DATA"
                offset="0x8"
                writeOnly="true"
                size="4">
         <field description="Data written to this register will be taken to perform CRC calculation with selected bit order and 1's complement pre-process. Any write size 8, 16 or 32-bit are allowed and accept back-to-back transactions."
                format="hex0x"
                id="CRC-ENGINE@WR-DATA@CRC-WR-DATA"
                offset="[31:0]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x I2S interface" id="I2S0" size="0x1e00">
      <register description="Configuration register 1 for channel pair" format="hex0x"
                id="I2S0@SECCHANNEL0-PCFG1"
                offset="0xc20"
                size="4">
         <field description="Enable for this channel pair.." format="hex0x"
                id="I2S0@SECCHANNEL0-PCFG1@PAIRENABLE"
                offset="[0]"/>
         <field description="Single channel mode." format="hex0x"
                id="I2S0@SECCHANNEL0-PCFG1@ONECHANNEL"
                offset="[10]"/>
      </register>
      <register description="Configuration register 2 for channel pair" format="hex0x"
                id="I2S0@SECCHANNEL0-PCFG2"
                offset="0xc24"
                size="4">
         <field description="Data Position." format="hex0x"
                id="I2S0@SECCHANNEL0-PCFG2@POSITION"
                offset="[24:16]"/>
      </register>
      <register description="Status register for channel pair" format="hex0x"
                id="I2S0@SECCHANNEL0-PSTAT"
                offset="0xc28"
                size="4">
         <field description="Busy status for this channel pair." format="hex0x"
                id="I2S0@SECCHANNEL0-PSTAT@BUSY"
                offset="[0]"/>
         <field description="Save Frame Error flag." format="hex0x"
                id="I2S0@SECCHANNEL0-PSTAT@SLVFRMERR"
                offset="[1]"/>
         <field description="Left/Right indication." format="hex0x"
                id="I2S0@SECCHANNEL0-PSTAT@LR"
                offset="[2]"/>
         <field description="Data Paused status flag." format="hex0x"
                id="I2S0@SECCHANNEL0-PSTAT@DATAPAUSED"
                offset="[3]"/>
      </register>
      <register description="Configuration register 1 for channel pair" format="hex0x"
                id="I2S0@SECCHANNEL1-PCFG1"
                offset="0xc40"
                size="4">
         <field description="Enable for this channel pair.." format="hex0x"
                id="I2S0@SECCHANNEL1-PCFG1@PAIRENABLE"
                offset="[0]"/>
         <field description="Single channel mode." format="hex0x"
                id="I2S0@SECCHANNEL1-PCFG1@ONECHANNEL"
                offset="[10]"/>
      </register>
      <register description="Configuration register 2 for channel pair" format="hex0x"
                id="I2S0@SECCHANNEL1-PCFG2"
                offset="0xc44"
                size="4">
         <field description="Data Position." format="hex0x"
                id="I2S0@SECCHANNEL1-PCFG2@POSITION"
                offset="[24:16]"/>
      </register>
      <register description="Status register for channel pair" format="hex0x"
                id="I2S0@SECCHANNEL1-PSTAT"
                offset="0xc48"
                size="4">
         <field description="Busy status for this channel pair." format="hex0x"
                id="I2S0@SECCHANNEL1-PSTAT@BUSY"
                offset="[0]"/>
         <field description="Save Frame Error flag." format="hex0x"
                id="I2S0@SECCHANNEL1-PSTAT@SLVFRMERR"
                offset="[1]"/>
         <field description="Left/Right indication." format="hex0x"
                id="I2S0@SECCHANNEL1-PSTAT@LR"
                offset="[2]"/>
         <field description="Data Paused status flag." format="hex0x"
                id="I2S0@SECCHANNEL1-PSTAT@DATAPAUSED"
                offset="[3]"/>
      </register>
      <register description="Configuration register 1 for channel pair" format="hex0x"
                id="I2S0@SECCHANNEL2-PCFG1"
                offset="0xc60"
                size="4">
         <field description="Enable for this channel pair.." format="hex0x"
                id="I2S0@SECCHANNEL2-PCFG1@PAIRENABLE"
                offset="[0]"/>
         <field description="Single channel mode." format="hex0x"
                id="I2S0@SECCHANNEL2-PCFG1@ONECHANNEL"
                offset="[10]"/>
      </register>
      <register description="Configuration register 2 for channel pair" format="hex0x"
                id="I2S0@SECCHANNEL2-PCFG2"
                offset="0xc64"
                size="4">
         <field description="Data Position." format="hex0x"
                id="I2S0@SECCHANNEL2-PCFG2@POSITION"
                offset="[24:16]"/>
      </register>
      <register description="Status register for channel pair" format="hex0x"
                id="I2S0@SECCHANNEL2-PSTAT"
                offset="0xc68"
                size="4">
         <field description="Busy status for this channel pair." format="hex0x"
                id="I2S0@SECCHANNEL2-PSTAT@BUSY"
                offset="[0]"/>
         <field description="Save Frame Error flag." format="hex0x"
                id="I2S0@SECCHANNEL2-PSTAT@SLVFRMERR"
                offset="[1]"/>
         <field description="Left/Right indication." format="hex0x"
                id="I2S0@SECCHANNEL2-PSTAT@LR"
                offset="[2]"/>
         <field description="Data Paused status flag." format="hex0x"
                id="I2S0@SECCHANNEL2-PSTAT@DATAPAUSED"
                offset="[3]"/>
      </register>
      <register description="Configuration register 1 for the primary channel pair."
                format="hex0x"
                id="I2S0@CFG1"
                offset="0xc00"
                size="4">
         <field description="Main enable for I 2S function in this Flexcomm" format="enum"
                enum="d1e151800"
                id="I2S0@CFG1@MAINENABLE"
                offset="[0]"/>
         <field description="Data flow Pause. Allows pausing data flow between the I2S serializer/deserializer and the FIFO. This could be done in order to change streams, or while restarting after a data underflow or overflow. When paused, FIFO operations can be done without corrupting data that is in the process of being sent or received. Once a data pause has been requested, the interface may need to complete sending data that was in progress before interrupting the flow of data. Software must check that the pause is actually in effect before taking action. This is done by monitoring the DATAPAUSED flag in the STAT register. When DATAPAUSE is cleared, data transfer will resume at the beginning of the next frame."
                format="enum"
                enum="d1e151846"
                id="I2S0@CFG1@DATAPAUSE"
                offset="[1]"/>
         <field description="Provides the number of I2S channel pairs in this Flexcomm This is a read-only field whose value may be different in other Flexcomms. 00 = there is 1 I2S channel pair in this Flexcomm. 01 = there are 2 I2S channel pairs in this Flexcomm. 10 = there are 3 I2S channel pairs in this Flexcomm. 11 = there are 4 I2S channel pairs in this Flexcomm."
                format="enum"
                enum="d1e151892"
                id="I2S0@CFG1@PAIRCOUNT"
                offset="[3:2]"/>
         <field description="Master / slave configuration selection, determining how SCK and WS are used by all channel pairs in this Flexcomm."
                format="enum"
                enum="d1e151962"
                id="I2S0@CFG1@MSTSLVCFG"
                offset="[5:4]"/>
         <field description="Selects the basic I2S operating mode. Other configurations modify this to obtain all supported cases. See Formats and modes for examples."
                format="enum"
                enum="d1e152032"
                id="I2S0@CFG1@MODE"
                offset="[7:6]"/>
         <field description="Right channel data is in the Low portion of FIFO data. Essentially, this swaps left and right channel data as it is transferred to or from the FIFO. This bit is not used if the data width is greater than 24 bits or if PDMDATA = 1. Note that if the ONECHANNEL field (bit 10 of this register) = 1, the one channel to be used is the nominally the left channel. POSITION can still place that data in the frame where right channel data is normally located. if all enabled channel pairs have ONECHANNEL = 1, then RIGHTLOW = 1 is not allowed."
                format="enum"
                enum="d1e152103"
                id="I2S0@CFG1@RIGHTLOW"
                offset="[8]"/>
         <field description="Left Justify data." format="enum" enum="d1e152149"
                id="I2S0@CFG1@LEFTJUST"
                offset="[9]"/>
         <field description="Single channel mode. Applies to both transmit and receive. This configuration bit applies only to the first I2S channel pair. Other channel pairs may select this mode independently in their separate CFG1 registers."
                format="enum"
                enum="d1e152195"
                id="I2S0@CFG1@ONECHANNEL"
                offset="[10]"/>
         <field description="PDM Data selection. This bit controls the data source for I2S transmit, and cannot be set in Rx mode. This bit only has an effect if the device the Flexcomm resides in includes a D-Mic subsystem. For the LPC5411x, this bit applies only to Flexcomm 7."
                format="enum"
                enum="d1e152241"
                id="I2S0@CFG1@PDMDATA"
                offset="[11]"/>
         <field description="SCK polarity." format="enum" enum="d1e152287"
                id="I2S0@CFG1@SCK-POL"
                offset="[12]"/>
         <field description="WS polarity." format="enum" enum="d1e152333" id="I2S0@CFG1@WS-POL"
                offset="[13]"/>
         <field description="Data Length, minus 1 encoded, defines the number of data bits to be transmitted or received for all I2S channel pairs in this Flexcomm. Note that data is only driven to or received from SDA for the number of bits defined by DATALEN. DATALEN is also used in these ways by the I2S: Determines the size of data transfers between the FIFO and the I2S serializer/deserializer. See FIFO buffer configurations and usage In mode 1, 2, and 3, determines the location of right data following left data in the frame. In mode 3 (where WS has a one data slot long pulse at the beginning of each data frame) determines the duration of the WS pulse. Values: 0x00 to 0x02 = not supported 0x03 = data is 4 bits in length 0x04 = data is 5 bits in length 0x1F = data is 32 bits in length"
                format="hex0x"
                id="I2S0@CFG1@DATALEN"
                offset="[20:16]"/>
      </register>
      <register description="Configuration register 2 for the primary channel pair."
                format="hex0x"
                id="I2S0@CFG2"
                offset="0xc04"
                size="4">
         <field description="Frame Length, minus 1 encoded, defines the number of clocks and data bits in the frames that this channel pair participates in. See Frame format. 0x000 to 0x002 = not supported 0x003 = frame is 4 bits in total length 0x004 = frame is 5 bits in total length 0x1FF = frame is 512 bits in total length if FRAMELEN is an defines an odd length frame (e.g. 33 clocks) in mode 0 or 1, the extra clock appears in the right half. When MODE = 3, FRAMELEN must be larger than DATALEN in order for the WS pulse to be generated correctly."
                format="hex0x"
                id="I2S0@CFG2@FRAMELEN"
                offset="[8:0]"/>
         <field description="Data Position. Defines the location within the frame of the data for this channel pair. POSITION + DATALEN must be less than FRAMELEN. See Frame format. When MODE = 0, POSITION defines the location of data in both the left phase and right phase, starting one clock after the WS edge. In other modes, POSITION defines the location of data within the entire frame. ONECHANNEL = 1 while MODE = 0 is a special case, see the description of ONECHANNEL. The combination of DATALEN and the POSITION fields of all channel pairs must be made such that the channels do not overlap within the frame. 0x000 = data begins at bit position 0 (the first bit position) within the frame or WS phase. 0x001 = data begins at bit position 1 within the frame or WS phase. 0x002 = data begins at bit position 2 within the frame or WS phase."
                format="hex0x"
                id="I2S0@CFG2@POSITION"
                offset="[24:16]"/>
      </register>
      <register description="Status register for the primary channel pair." format="hex0x"
                id="I2S0@STAT"
                offset="0xc08"
                size="4">
         <field description="Busy status for the primary channel pair. Other BUSY flags may be found in the STAT register for each channel pair."
                format="enum"
                enum="d1e152490"
                id="I2S0@STAT@BUSY"
                offset="[0]"/>
         <field description="Slave Frame Error flag. This applies when at least one channel pair is operating as a slave. An error indicates that the incoming WS signal did not transition as expected due to a mismatch between FRAMELEN and the actual incoming I2S stream."
                format="enum"
                enum="d1e152536"
                id="I2S0@STAT@SLVFRMERR"
                offset="[1]"/>
         <field description="Left/Right indication. This flag is considered to be a debugging aid and is not expected to be used by an I2S driver. Valid when one channel pair is busy. Indicates left or right data being processed for the currently busy channel pair."
                format="enum"
                enum="d1e152582"
                id="I2S0@STAT@LR"
                offset="[2]"/>
         <field description="Data Paused status flag. Applies to all I2S channels"
                format="enum"
                enum="d1e152628"
                id="I2S0@STAT@DATAPAUSED"
                offset="[3]"/>
      </register>
      <register description="Clock divider, used by all channel pairs." format="hex0x"
                id="I2S0@DIV"
                offset="0xc1c"
                size="4">
         <field description="This field controls how this I2S block uses the Flexcomm function clock. 0x000 = The Flexcomm function clock is used directly. 0x001 = The Flexcomm function clock is divided by 2. 0x002 = The Flexcomm function clock is divided by 3. 0xFFF = The Flexcomm function clock is divided by 4,096."
                format="hex0x"
                id="I2S0@DIV@DIV"
                offset="[11:0]"/>
      </register>
      <register description="FIFO configuration and enable register." format="hex0x"
                id="I2S0@FIFOCFG"
                offset="0xe00"
                size="4">
         <field description="Enable the transmit FIFO." format="enum" enum="d1e152749"
                id="I2S0@FIFOCFG@ENABLETX"
                offset="[0]"/>
         <field description="Enable the receive FIFO." format="enum" enum="d1e152795"
                id="I2S0@FIFOCFG@ENABLERX"
                offset="[1]"/>
         <field description="Transmit I2S empty 0. Determines the value sent by the I2S in transmit mode if the TX FIFO becomes empty. This value is sent repeatedly until the I2S is paused, the error is cleared, new data is provided, and the I2S is un-paused."
                format="enum"
                enum="d1e152841"
                id="I2S0@FIFOCFG@TXI2SE0"
                offset="[2]"/>
         <field description="Packing format for 48-bit data. This relates to how data is entered into or taken from the FIFO by software or DMA."
                format="enum"
                enum="d1e152887"
                id="I2S0@FIFOCFG@PACK48"
                offset="[3]"/>
         <field description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART."
                format="hex0x"
                id="I2S0@FIFOCFG@SIZE"
                offset="[5:4]"/>
         <field description="DMA configuration for transmit." format="enum" enum="d1e152952"
                id="I2S0@FIFOCFG@DMATX"
                offset="[12]"/>
         <field description="DMA configuration for receive." format="enum" enum="d1e152998"
                id="I2S0@FIFOCFG@DMARX"
                offset="[13]"/>
         <field description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e153044"
                id="I2S0@FIFOCFG@WAKETX"
                offset="[14]"/>
         <field description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e153090"
                id="I2S0@FIFOCFG@WAKERX"
                offset="[15]"/>
         <field description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied."
                format="hex0x"
                id="I2S0@FIFOCFG@EMPTYTX"
                offset="[16]"/>
         <field description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied."
                format="hex0x"
                id="I2S0@FIFOCFG@EMPTYRX"
                offset="[17]"/>
         <field description="Pop FIFO for debug reads." format="enum" enum="d1e153173"
                id="I2S0@FIFOCFG@POPDBG"
                offset="[18]"/>
      </register>
      <register description="FIFO status register." format="hex0x" id="I2S0@FIFOSTAT"
                offset="0xe04"
                size="4">
         <field description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="I2S0@FIFOSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="I2S0@FIFOSTAT@RXERR"
                offset="[1]"/>
         <field description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register."
                format="hex0x"
                id="I2S0@FIFOSTAT@PERINT"
                offset="[3]"/>
         <field description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data."
                format="hex0x"
                id="I2S0@FIFOSTAT@TXEMPTY"
                offset="[4]"/>
         <field description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow."
                format="hex0x"
                id="I2S0@FIFOSTAT@TXNOTFULL"
                offset="[5]"/>
         <field description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty."
                format="hex0x"
                id="I2S0@FIFOSTAT@RXNOTEMPTY"
                offset="[6]"/>
         <field description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow."
                format="hex0x"
                id="I2S0@FIFOSTAT@RXFULL"
                offset="[7]"/>
         <field description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0."
                format="hex0x"
                id="I2S0@FIFOSTAT@TXLVL"
                offset="[12:8]"/>
         <field description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1."
                format="hex0x"
                id="I2S0@FIFOSTAT@RXLVL"
                offset="[20:16]"/>
      </register>
      <register description="FIFO trigger settings for interrupt and DMA request."
                format="hex0x"
                id="I2S0@FIFOTRIG"
                offset="0xe08"
                size="4">
         <field description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set."
                format="enum"
                enum="d1e153438"
                id="I2S0@FIFOTRIG@TXLVLENA"
                offset="[0]"/>
         <field description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set."
                format="enum"
                enum="d1e153484"
                id="I2S0@FIFOTRIG@RXLVLENA"
                offset="[1]"/>
         <field description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)."
                format="hex0x"
                id="I2S0@FIFOTRIG@TXLVL"
                offset="[11:8]"/>
         <field description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)."
                format="hex0x"
                id="I2S0@FIFOTRIG@RXLVL"
                offset="[19:16]"/>
      </register>
      <register description="FIFO interrupt enable set (enable) and read register."
                format="hex0x"
                id="I2S0@FIFOINTENSET"
                offset="0xe10"
                size="4">
         <field description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e153594"
                id="I2S0@FIFOINTENSET@TXERR"
                offset="[0]"/>
         <field description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e153640"
                id="I2S0@FIFOINTENSET@RXERR"
                offset="[1]"/>
         <field description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e153686"
                id="I2S0@FIFOINTENSET@TXLVL"
                offset="[2]"/>
         <field description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e153732"
                id="I2S0@FIFOINTENSET@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt enable clear (disable) and read register."
                format="hex0x"
                id="I2S0@FIFOINTENCLR"
                offset="0xe14"
                size="4">
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="I2S0@FIFOINTENCLR@TXERR"
                offset="[0]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="I2S0@FIFOINTENCLR@RXERR"
                offset="[1]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="I2S0@FIFOINTENCLR@TXLVL"
                offset="[2]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="I2S0@FIFOINTENCLR@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt status register." format="hex0x"
                id="I2S0@FIFOINTSTAT"
                offset="0xe18"
                readOnly="true"
                size="4">
         <field description="TX FIFO error." format="hex0x" id="I2S0@FIFOINTSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error." format="hex0x" id="I2S0@FIFOINTSTAT@RXERR"
                offset="[1]"/>
         <field description="Transmit FIFO level interrupt." format="hex0x"
                id="I2S0@FIFOINTSTAT@TXLVL"
                offset="[2]"/>
         <field description="Receive FIFO level interrupt." format="hex0x"
                id="I2S0@FIFOINTSTAT@RXLVL"
                offset="[3]"/>
         <field description="Peripheral interrupt." format="hex0x" id="I2S0@FIFOINTSTAT@PERINT"
                offset="[4]"/>
      </register>
      <register description="FIFO write data." format="hex0x" id="I2S0@FIFOWR" offset="0xe20"
                writeOnly="true"
                size="4">
         <field description="Transmit data to the FIFO. The number of bits used depends on configuration details."
                format="hex0x"
                id="I2S0@FIFOWR@TXDATA"
                offset="[31:0]"/>
      </register>
      <register description="FIFO write data for upper data bits. May only be used if the I2S is configured for 2x 24-bit data and not using DMA."
                format="hex0x"
                id="I2S0@FIFOWR48H"
                offset="0xe24"
                writeOnly="true"
                size="4">
         <field description="Transmit data to the FIFO. Whether this register is used and the number of bits used depends on configuration details."
                format="hex0x"
                id="I2S0@FIFOWR48H@TXDATA"
                offset="[23:0]"/>
      </register>
      <register description="FIFO read data." format="hex0x" id="I2S0@FIFORD" offset="0xe30"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO. The number of bits used depends on configuration details."
                format="hex0x"
                id="I2S0@FIFORD@RXDATA"
                offset="[31:0]"/>
      </register>
      <register description="FIFO read data for upper data bits. May only be used if the I2S is configured for 2x 24-bit data and not using DMA."
                format="hex0x"
                id="I2S0@FIFORD48H"
                offset="0xe34"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO. Whether this register is used and the number of bits used depends on configuration details."
                format="hex0x"
                id="I2S0@FIFORD48H@RXDATA"
                offset="[23:0]"/>
      </register>
      <register description="FIFO data read with no FIFO pop." format="hex0x"
                id="I2S0@FIFORDNOPOP"
                offset="0xe40"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO." format="hex0x"
                id="I2S0@FIFORDNOPOP@RXDATA"
                offset="[31:0]"/>
      </register>
      <register description="FIFO data read for upper data bits with no FIFO pop. May only be used if the I2S is configured for 2x 24-bit data and not using DMA."
                format="hex0x"
                id="I2S0@FIFORD48HNOPOP"
                offset="0xe44"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO. Whether this register is used and the number of bits used depends on configuration details."
                format="hex0x"
                id="I2S0@FIFORD48HNOPOP@RXDATA"
                offset="[23:0]"/>
      </register>
      <register description="I2S Module identification" format="hex0x" id="I2S0@ID"
                offset="0x1dfc"
                readOnly="true"
                size="4">
         <field description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture."
                format="hex0x"
                id="I2S0@ID@Aperture"
                offset="[7:0]"/>
         <field description="Minor revision of module implementation, starting at 0."
                format="hex0x"
                id="I2S0@ID@Minor-Rev"
                offset="[11:8]"/>
         <field description="Major revision of module implementation, starting at 0."
                format="hex0x"
                id="I2S0@ID@Major-Rev"
                offset="[15:12]"/>
         <field description="Unique module identifier for this IP block." format="hex0x"
                id="I2S0@ID@ID"
                offset="[31:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x I2S interface" id="I2S1" size="0x1e00">
      <register description="Configuration register 1 for channel pair" format="hex0x"
                id="I2S0@SECCHANNEL0-PCFG1"
                offset="0xc20"
                size="4">
         <field description="Enable for this channel pair.." format="hex0x"
                id="I2S0@SECCHANNEL0-PCFG1@PAIRENABLE"
                offset="[0]"/>
         <field description="Single channel mode." format="hex0x"
                id="I2S0@SECCHANNEL0-PCFG1@ONECHANNEL"
                offset="[10]"/>
      </register>
      <register description="Configuration register 2 for channel pair" format="hex0x"
                id="I2S0@SECCHANNEL0-PCFG2"
                offset="0xc24"
                size="4">
         <field description="Data Position." format="hex0x"
                id="I2S0@SECCHANNEL0-PCFG2@POSITION"
                offset="[24:16]"/>
      </register>
      <register description="Status register for channel pair" format="hex0x"
                id="I2S0@SECCHANNEL0-PSTAT"
                offset="0xc28"
                size="4">
         <field description="Busy status for this channel pair." format="hex0x"
                id="I2S0@SECCHANNEL0-PSTAT@BUSY"
                offset="[0]"/>
         <field description="Save Frame Error flag." format="hex0x"
                id="I2S0@SECCHANNEL0-PSTAT@SLVFRMERR"
                offset="[1]"/>
         <field description="Left/Right indication." format="hex0x"
                id="I2S0@SECCHANNEL0-PSTAT@LR"
                offset="[2]"/>
         <field description="Data Paused status flag." format="hex0x"
                id="I2S0@SECCHANNEL0-PSTAT@DATAPAUSED"
                offset="[3]"/>
      </register>
      <register description="Configuration register 1 for channel pair" format="hex0x"
                id="I2S0@SECCHANNEL1-PCFG1"
                offset="0xc40"
                size="4">
         <field description="Enable for this channel pair.." format="hex0x"
                id="I2S0@SECCHANNEL1-PCFG1@PAIRENABLE"
                offset="[0]"/>
         <field description="Single channel mode." format="hex0x"
                id="I2S0@SECCHANNEL1-PCFG1@ONECHANNEL"
                offset="[10]"/>
      </register>
      <register description="Configuration register 2 for channel pair" format="hex0x"
                id="I2S0@SECCHANNEL1-PCFG2"
                offset="0xc44"
                size="4">
         <field description="Data Position." format="hex0x"
                id="I2S0@SECCHANNEL1-PCFG2@POSITION"
                offset="[24:16]"/>
      </register>
      <register description="Status register for channel pair" format="hex0x"
                id="I2S0@SECCHANNEL1-PSTAT"
                offset="0xc48"
                size="4">
         <field description="Busy status for this channel pair." format="hex0x"
                id="I2S0@SECCHANNEL1-PSTAT@BUSY"
                offset="[0]"/>
         <field description="Save Frame Error flag." format="hex0x"
                id="I2S0@SECCHANNEL1-PSTAT@SLVFRMERR"
                offset="[1]"/>
         <field description="Left/Right indication." format="hex0x"
                id="I2S0@SECCHANNEL1-PSTAT@LR"
                offset="[2]"/>
         <field description="Data Paused status flag." format="hex0x"
                id="I2S0@SECCHANNEL1-PSTAT@DATAPAUSED"
                offset="[3]"/>
      </register>
      <register description="Configuration register 1 for channel pair" format="hex0x"
                id="I2S0@SECCHANNEL2-PCFG1"
                offset="0xc60"
                size="4">
         <field description="Enable for this channel pair.." format="hex0x"
                id="I2S0@SECCHANNEL2-PCFG1@PAIRENABLE"
                offset="[0]"/>
         <field description="Single channel mode." format="hex0x"
                id="I2S0@SECCHANNEL2-PCFG1@ONECHANNEL"
                offset="[10]"/>
      </register>
      <register description="Configuration register 2 for channel pair" format="hex0x"
                id="I2S0@SECCHANNEL2-PCFG2"
                offset="0xc64"
                size="4">
         <field description="Data Position." format="hex0x"
                id="I2S0@SECCHANNEL2-PCFG2@POSITION"
                offset="[24:16]"/>
      </register>
      <register description="Status register for channel pair" format="hex0x"
                id="I2S0@SECCHANNEL2-PSTAT"
                offset="0xc68"
                size="4">
         <field description="Busy status for this channel pair." format="hex0x"
                id="I2S0@SECCHANNEL2-PSTAT@BUSY"
                offset="[0]"/>
         <field description="Save Frame Error flag." format="hex0x"
                id="I2S0@SECCHANNEL2-PSTAT@SLVFRMERR"
                offset="[1]"/>
         <field description="Left/Right indication." format="hex0x"
                id="I2S0@SECCHANNEL2-PSTAT@LR"
                offset="[2]"/>
         <field description="Data Paused status flag." format="hex0x"
                id="I2S0@SECCHANNEL2-PSTAT@DATAPAUSED"
                offset="[3]"/>
      </register>
      <register description="Configuration register 1 for the primary channel pair."
                format="hex0x"
                id="I2S0@CFG1"
                offset="0xc00"
                size="4">
         <field description="Main enable for I 2S function in this Flexcomm" format="enum"
                enum="d1e151800"
                id="I2S0@CFG1@MAINENABLE"
                offset="[0]"/>
         <field description="Data flow Pause. Allows pausing data flow between the I2S serializer/deserializer and the FIFO. This could be done in order to change streams, or while restarting after a data underflow or overflow. When paused, FIFO operations can be done without corrupting data that is in the process of being sent or received. Once a data pause has been requested, the interface may need to complete sending data that was in progress before interrupting the flow of data. Software must check that the pause is actually in effect before taking action. This is done by monitoring the DATAPAUSED flag in the STAT register. When DATAPAUSE is cleared, data transfer will resume at the beginning of the next frame."
                format="enum"
                enum="d1e151846"
                id="I2S0@CFG1@DATAPAUSE"
                offset="[1]"/>
         <field description="Provides the number of I2S channel pairs in this Flexcomm This is a read-only field whose value may be different in other Flexcomms. 00 = there is 1 I2S channel pair in this Flexcomm. 01 = there are 2 I2S channel pairs in this Flexcomm. 10 = there are 3 I2S channel pairs in this Flexcomm. 11 = there are 4 I2S channel pairs in this Flexcomm."
                format="enum"
                enum="d1e151892"
                id="I2S0@CFG1@PAIRCOUNT"
                offset="[3:2]"/>
         <field description="Master / slave configuration selection, determining how SCK and WS are used by all channel pairs in this Flexcomm."
                format="enum"
                enum="d1e151962"
                id="I2S0@CFG1@MSTSLVCFG"
                offset="[5:4]"/>
         <field description="Selects the basic I2S operating mode. Other configurations modify this to obtain all supported cases. See Formats and modes for examples."
                format="enum"
                enum="d1e152032"
                id="I2S0@CFG1@MODE"
                offset="[7:6]"/>
         <field description="Right channel data is in the Low portion of FIFO data. Essentially, this swaps left and right channel data as it is transferred to or from the FIFO. This bit is not used if the data width is greater than 24 bits or if PDMDATA = 1. Note that if the ONECHANNEL field (bit 10 of this register) = 1, the one channel to be used is the nominally the left channel. POSITION can still place that data in the frame where right channel data is normally located. if all enabled channel pairs have ONECHANNEL = 1, then RIGHTLOW = 1 is not allowed."
                format="enum"
                enum="d1e152103"
                id="I2S0@CFG1@RIGHTLOW"
                offset="[8]"/>
         <field description="Left Justify data." format="enum" enum="d1e152149"
                id="I2S0@CFG1@LEFTJUST"
                offset="[9]"/>
         <field description="Single channel mode. Applies to both transmit and receive. This configuration bit applies only to the first I2S channel pair. Other channel pairs may select this mode independently in their separate CFG1 registers."
                format="enum"
                enum="d1e152195"
                id="I2S0@CFG1@ONECHANNEL"
                offset="[10]"/>
         <field description="PDM Data selection. This bit controls the data source for I2S transmit, and cannot be set in Rx mode. This bit only has an effect if the device the Flexcomm resides in includes a D-Mic subsystem. For the LPC5411x, this bit applies only to Flexcomm 7."
                format="enum"
                enum="d1e152241"
                id="I2S0@CFG1@PDMDATA"
                offset="[11]"/>
         <field description="SCK polarity." format="enum" enum="d1e152287"
                id="I2S0@CFG1@SCK-POL"
                offset="[12]"/>
         <field description="WS polarity." format="enum" enum="d1e152333" id="I2S0@CFG1@WS-POL"
                offset="[13]"/>
         <field description="Data Length, minus 1 encoded, defines the number of data bits to be transmitted or received for all I2S channel pairs in this Flexcomm. Note that data is only driven to or received from SDA for the number of bits defined by DATALEN. DATALEN is also used in these ways by the I2S: Determines the size of data transfers between the FIFO and the I2S serializer/deserializer. See FIFO buffer configurations and usage In mode 1, 2, and 3, determines the location of right data following left data in the frame. In mode 3 (where WS has a one data slot long pulse at the beginning of each data frame) determines the duration of the WS pulse. Values: 0x00 to 0x02 = not supported 0x03 = data is 4 bits in length 0x04 = data is 5 bits in length 0x1F = data is 32 bits in length"
                format="hex0x"
                id="I2S0@CFG1@DATALEN"
                offset="[20:16]"/>
      </register>
      <register description="Configuration register 2 for the primary channel pair."
                format="hex0x"
                id="I2S0@CFG2"
                offset="0xc04"
                size="4">
         <field description="Frame Length, minus 1 encoded, defines the number of clocks and data bits in the frames that this channel pair participates in. See Frame format. 0x000 to 0x002 = not supported 0x003 = frame is 4 bits in total length 0x004 = frame is 5 bits in total length 0x1FF = frame is 512 bits in total length if FRAMELEN is an defines an odd length frame (e.g. 33 clocks) in mode 0 or 1, the extra clock appears in the right half. When MODE = 3, FRAMELEN must be larger than DATALEN in order for the WS pulse to be generated correctly."
                format="hex0x"
                id="I2S0@CFG2@FRAMELEN"
                offset="[8:0]"/>
         <field description="Data Position. Defines the location within the frame of the data for this channel pair. POSITION + DATALEN must be less than FRAMELEN. See Frame format. When MODE = 0, POSITION defines the location of data in both the left phase and right phase, starting one clock after the WS edge. In other modes, POSITION defines the location of data within the entire frame. ONECHANNEL = 1 while MODE = 0 is a special case, see the description of ONECHANNEL. The combination of DATALEN and the POSITION fields of all channel pairs must be made such that the channels do not overlap within the frame. 0x000 = data begins at bit position 0 (the first bit position) within the frame or WS phase. 0x001 = data begins at bit position 1 within the frame or WS phase. 0x002 = data begins at bit position 2 within the frame or WS phase."
                format="hex0x"
                id="I2S0@CFG2@POSITION"
                offset="[24:16]"/>
      </register>
      <register description="Status register for the primary channel pair." format="hex0x"
                id="I2S0@STAT"
                offset="0xc08"
                size="4">
         <field description="Busy status for the primary channel pair. Other BUSY flags may be found in the STAT register for each channel pair."
                format="enum"
                enum="d1e152490"
                id="I2S0@STAT@BUSY"
                offset="[0]"/>
         <field description="Slave Frame Error flag. This applies when at least one channel pair is operating as a slave. An error indicates that the incoming WS signal did not transition as expected due to a mismatch between FRAMELEN and the actual incoming I2S stream."
                format="enum"
                enum="d1e152536"
                id="I2S0@STAT@SLVFRMERR"
                offset="[1]"/>
         <field description="Left/Right indication. This flag is considered to be a debugging aid and is not expected to be used by an I2S driver. Valid when one channel pair is busy. Indicates left or right data being processed for the currently busy channel pair."
                format="enum"
                enum="d1e152582"
                id="I2S0@STAT@LR"
                offset="[2]"/>
         <field description="Data Paused status flag. Applies to all I2S channels"
                format="enum"
                enum="d1e152628"
                id="I2S0@STAT@DATAPAUSED"
                offset="[3]"/>
      </register>
      <register description="Clock divider, used by all channel pairs." format="hex0x"
                id="I2S0@DIV"
                offset="0xc1c"
                size="4">
         <field description="This field controls how this I2S block uses the Flexcomm function clock. 0x000 = The Flexcomm function clock is used directly. 0x001 = The Flexcomm function clock is divided by 2. 0x002 = The Flexcomm function clock is divided by 3. 0xFFF = The Flexcomm function clock is divided by 4,096."
                format="hex0x"
                id="I2S0@DIV@DIV"
                offset="[11:0]"/>
      </register>
      <register description="FIFO configuration and enable register." format="hex0x"
                id="I2S0@FIFOCFG"
                offset="0xe00"
                size="4">
         <field description="Enable the transmit FIFO." format="enum" enum="d1e152749"
                id="I2S0@FIFOCFG@ENABLETX"
                offset="[0]"/>
         <field description="Enable the receive FIFO." format="enum" enum="d1e152795"
                id="I2S0@FIFOCFG@ENABLERX"
                offset="[1]"/>
         <field description="Transmit I2S empty 0. Determines the value sent by the I2S in transmit mode if the TX FIFO becomes empty. This value is sent repeatedly until the I2S is paused, the error is cleared, new data is provided, and the I2S is un-paused."
                format="enum"
                enum="d1e152841"
                id="I2S0@FIFOCFG@TXI2SE0"
                offset="[2]"/>
         <field description="Packing format for 48-bit data. This relates to how data is entered into or taken from the FIFO by software or DMA."
                format="enum"
                enum="d1e152887"
                id="I2S0@FIFOCFG@PACK48"
                offset="[3]"/>
         <field description="FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART."
                format="hex0x"
                id="I2S0@FIFOCFG@SIZE"
                offset="[5:4]"/>
         <field description="DMA configuration for transmit." format="enum" enum="d1e152952"
                id="I2S0@FIFOCFG@DMATX"
                offset="[12]"/>
         <field description="DMA configuration for receive." format="enum" enum="d1e152998"
                id="I2S0@FIFOCFG@DMARX"
                offset="[13]"/>
         <field description="Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e153044"
                id="I2S0@FIFOCFG@WAKETX"
                offset="[14]"/>
         <field description="Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register."
                format="enum"
                enum="d1e153090"
                id="I2S0@FIFOCFG@WAKERX"
                offset="[15]"/>
         <field description="Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied."
                format="hex0x"
                id="I2S0@FIFOCFG@EMPTYTX"
                offset="[16]"/>
         <field description="Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied."
                format="hex0x"
                id="I2S0@FIFOCFG@EMPTYRX"
                offset="[17]"/>
         <field description="Pop FIFO for debug reads." format="enum" enum="d1e153173"
                id="I2S0@FIFOCFG@POPDBG"
                offset="[18]"/>
      </register>
      <register description="FIFO status register." format="hex0x" id="I2S0@FIFOSTAT"
                offset="0xe04"
                size="4">
         <field description="TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="I2S0@FIFOSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit."
                format="hex0x"
                id="I2S0@FIFOSTAT@RXERR"
                offset="[1]"/>
         <field description="Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register."
                format="hex0x"
                id="I2S0@FIFOSTAT@PERINT"
                offset="[3]"/>
         <field description="Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data."
                format="hex0x"
                id="I2S0@FIFOSTAT@TXEMPTY"
                offset="[4]"/>
         <field description="Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow."
                format="hex0x"
                id="I2S0@FIFOSTAT@TXNOTFULL"
                offset="[5]"/>
         <field description="Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty."
                format="hex0x"
                id="I2S0@FIFOSTAT@RXNOTEMPTY"
                offset="[6]"/>
         <field description="Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow."
                format="hex0x"
                id="I2S0@FIFOSTAT@RXFULL"
                offset="[7]"/>
         <field description="Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0."
                format="hex0x"
                id="I2S0@FIFOSTAT@TXLVL"
                offset="[12:8]"/>
         <field description="Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1."
                format="hex0x"
                id="I2S0@FIFOSTAT@RXLVL"
                offset="[20:16]"/>
      </register>
      <register description="FIFO trigger settings for interrupt and DMA request."
                format="hex0x"
                id="I2S0@FIFOTRIG"
                offset="0xe08"
                size="4">
         <field description="Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set."
                format="enum"
                enum="d1e153438"
                id="I2S0@FIFOTRIG@TXLVLENA"
                offset="[0]"/>
         <field description="Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set."
                format="enum"
                enum="d1e153484"
                id="I2S0@FIFOTRIG@RXLVLENA"
                offset="[1]"/>
         <field description="Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full)."
                format="hex0x"
                id="I2S0@FIFOTRIG@TXLVL"
                offset="[11:8]"/>
         <field description="Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full)."
                format="hex0x"
                id="I2S0@FIFOTRIG@RXLVL"
                offset="[19:16]"/>
      </register>
      <register description="FIFO interrupt enable set (enable) and read register."
                format="hex0x"
                id="I2S0@FIFOINTENSET"
                offset="0xe10"
                size="4">
         <field description="Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e153594"
                id="I2S0@FIFOINTENSET@TXERR"
                offset="[0]"/>
         <field description="Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register."
                format="enum"
                enum="d1e153640"
                id="I2S0@FIFOINTENSET@RXERR"
                offset="[1]"/>
         <field description="Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e153686"
                id="I2S0@FIFOINTENSET@TXLVL"
                offset="[2]"/>
         <field description="Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register."
                format="enum"
                enum="d1e153732"
                id="I2S0@FIFOINTENSET@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt enable clear (disable) and read register."
                format="hex0x"
                id="I2S0@FIFOINTENCLR"
                offset="0xe14"
                size="4">
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="I2S0@FIFOINTENCLR@TXERR"
                offset="[0]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="I2S0@FIFOINTENCLR@RXERR"
                offset="[1]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="I2S0@FIFOINTENCLR@TXLVL"
                offset="[2]"/>
         <field description="Writing one clears the corresponding bits in the FIFOINTENSET register."
                format="hex0x"
                id="I2S0@FIFOINTENCLR@RXLVL"
                offset="[3]"/>
      </register>
      <register description="FIFO interrupt status register." format="hex0x"
                id="I2S0@FIFOINTSTAT"
                offset="0xe18"
                readOnly="true"
                size="4">
         <field description="TX FIFO error." format="hex0x" id="I2S0@FIFOINTSTAT@TXERR"
                offset="[0]"/>
         <field description="RX FIFO error." format="hex0x" id="I2S0@FIFOINTSTAT@RXERR"
                offset="[1]"/>
         <field description="Transmit FIFO level interrupt." format="hex0x"
                id="I2S0@FIFOINTSTAT@TXLVL"
                offset="[2]"/>
         <field description="Receive FIFO level interrupt." format="hex0x"
                id="I2S0@FIFOINTSTAT@RXLVL"
                offset="[3]"/>
         <field description="Peripheral interrupt." format="hex0x" id="I2S0@FIFOINTSTAT@PERINT"
                offset="[4]"/>
      </register>
      <register description="FIFO write data." format="hex0x" id="I2S0@FIFOWR" offset="0xe20"
                writeOnly="true"
                size="4">
         <field description="Transmit data to the FIFO. The number of bits used depends on configuration details."
                format="hex0x"
                id="I2S0@FIFOWR@TXDATA"
                offset="[31:0]"/>
      </register>
      <register description="FIFO write data for upper data bits. May only be used if the I2S is configured for 2x 24-bit data and not using DMA."
                format="hex0x"
                id="I2S0@FIFOWR48H"
                offset="0xe24"
                writeOnly="true"
                size="4">
         <field description="Transmit data to the FIFO. Whether this register is used and the number of bits used depends on configuration details."
                format="hex0x"
                id="I2S0@FIFOWR48H@TXDATA"
                offset="[23:0]"/>
      </register>
      <register description="FIFO read data." format="hex0x" id="I2S0@FIFORD" offset="0xe30"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO. The number of bits used depends on configuration details."
                format="hex0x"
                id="I2S0@FIFORD@RXDATA"
                offset="[31:0]"/>
      </register>
      <register description="FIFO read data for upper data bits. May only be used if the I2S is configured for 2x 24-bit data and not using DMA."
                format="hex0x"
                id="I2S0@FIFORD48H"
                offset="0xe34"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO. Whether this register is used and the number of bits used depends on configuration details."
                format="hex0x"
                id="I2S0@FIFORD48H@RXDATA"
                offset="[23:0]"/>
      </register>
      <register description="FIFO data read with no FIFO pop." format="hex0x"
                id="I2S0@FIFORDNOPOP"
                offset="0xe40"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO." format="hex0x"
                id="I2S0@FIFORDNOPOP@RXDATA"
                offset="[31:0]"/>
      </register>
      <register description="FIFO data read for upper data bits with no FIFO pop. May only be used if the I2S is configured for 2x 24-bit data and not using DMA."
                format="hex0x"
                id="I2S0@FIFORD48HNOPOP"
                offset="0xe44"
                readOnly="true"
                size="4">
         <field description="Received data from the FIFO. Whether this register is used and the number of bits used depends on configuration details."
                format="hex0x"
                id="I2S0@FIFORD48HNOPOP@RXDATA"
                offset="[23:0]"/>
      </register>
      <register description="I2S Module identification" format="hex0x" id="I2S0@ID"
                offset="0x1dfc"
                readOnly="true"
                size="4">
         <field description="Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture."
                format="hex0x"
                id="I2S0@ID@Aperture"
                offset="[7:0]"/>
         <field description="Minor revision of module implementation, starting at 0."
                format="hex0x"
                id="I2S0@ID@Minor-Rev"
                offset="[11:8]"/>
         <field description="Major revision of module implementation, starting at 0."
                format="hex0x"
                id="I2S0@ID@Major-Rev"
                offset="[15:12]"/>
         <field description="Unique module identifier for this IP block." format="hex0x"
                id="I2S0@ID@ID"
                offset="[31:16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="SDMMC" id="SDIF" size="0x300">
      <register description="Control register" format="hex0x" id="SDIF@CTRL" offset="0x0"
                size="4">
         <field description="Controller reset." format="hex0x" id="SDIF@CTRL@CONTROLLER-RESET"
                offset="[0]"/>
         <field description="Fifo reset." format="hex0x" id="SDIF@CTRL@FIFO-RESET" offset="[1]"/>
         <field description="DMA reset." format="hex0x" id="SDIF@CTRL@DMA-RESET" offset="[2]"/>
         <field description="Global interrupt enable/disable bit." format="hex0x"
                id="SDIF@CTRL@INT-ENABLE"
                offset="[4]"/>
         <field description="Read/wait." format="hex0x" id="SDIF@CTRL@READ-WAIT" offset="[6]"/>
         <field description="Send irq response." format="hex0x"
                id="SDIF@CTRL@SEND-IRQ-RESPONSE"
                offset="[7]"/>
         <field description="Abort read data." format="hex0x" id="SDIF@CTRL@ABORT-READ-DATA"
                offset="[8]"/>
         <field description="Send ccsd." format="hex0x" id="SDIF@CTRL@SEND-CCSD" offset="[9]"/>
         <field description="Send auto stop ccsd." format="hex0x"
                id="SDIF@CTRL@SEND-AUTO-STOP-CCSD"
                offset="[10]"/>
         <field description="CEATA device interrupt status." format="hex0x"
                id="SDIF@CTRL@CEATA-DEVICE-INTERRUPT-STATUS"
                offset="[11]"/>
         <field description="Controls the state of the SD_VOLT0 pin." format="hex0x"
                id="SDIF@CTRL@CARD-VOLTAGE-A0"
                offset="[16]"/>
         <field description="Controls the state of the SD_VOLT1 pin." format="hex0x"
                id="SDIF@CTRL@CARD-VOLTAGE-A1"
                offset="[17]"/>
         <field description="Controls the state of the SD_VOLT2 pin." format="hex0x"
                id="SDIF@CTRL@CARD-VOLTAGE-A2"
                offset="[18]"/>
         <field description="SD/MMC DMA use." format="hex0x" id="SDIF@CTRL@USE-INTERNAL-DMAC"
                offset="[25]"/>
      </register>
      <register description="Power Enable register" format="hex0x" id="SDIF@PWREN" offset="0x4"
                size="4">
         <field description="Power on/off switch for card; once power is turned on, software should wait for regulator/switch ramp-up time before trying to initialize card."
                format="hex0x"
                id="SDIF@PWREN@POWER-ENABLE"
                offset="[0]"/>
      </register>
      <register description="Clock Divider register" format="hex0x" id="SDIF@CLKDIV"
                offset="0x8"
                size="4">
         <field description="Clock divider-0 value." format="hex0x"
                id="SDIF@CLKDIV@CLK-DIVIDER0"
                offset="[7:0]"/>
      </register>
      <register description="Clock Enable register" format="hex0x" id="SDIF@CLKENA"
                offset="0x10"
                size="4">
         <field description="Clock-enable control for SD card clock." format="hex0x"
                id="SDIF@CLKENA@CCLK-ENABLE"
                offset="[0]"/>
         <field description="Low-power control for SD card clock." format="hex0x"
                id="SDIF@CLKENA@CCLK-LOW-POWER"
                offset="[16]"/>
      </register>
      <register description="Time-out register" format="hex0x" id="SDIF@TMOUT" offset="0x14"
                size="4">
         <field description="Response time-out value." format="hex0x"
                id="SDIF@TMOUT@RESPONSE-TIMEOUT"
                offset="[7:0]"/>
         <field description="Value for card Data Read time-out; same value also used for Data Starvation by Host time-out."
                format="hex0x"
                id="SDIF@TMOUT@DATA-TIMEOUT"
                offset="[31:8]"/>
      </register>
      <register description="Card Type register" format="hex0x" id="SDIF@CTYPE" offset="0x18"
                size="4">
         <field description="Indicates if card is 1-bit or 4-bit: 0 - 1-bit mode 1 - 4-bit mode 1 and 4-bit modes only work when 8-bit mode in CARD_WIDTH1 is not enabled (bit 16 in this register is set to 0)."
                format="hex0x"
                id="SDIF@CTYPE@CARD-WIDTH0"
                offset="[0]"/>
         <field description="Indicates if card is 8-bit: 0 - Non 8-bit mode 1 - 8-bit mode."
                format="hex0x"
                id="SDIF@CTYPE@CARD-WIDTH1"
                offset="[16]"/>
      </register>
      <register description="Block Size register" format="hex0x" id="SDIF@BLKSIZ" offset="0x1c"
                size="4">
         <field description="Block size." format="hex0x" id="SDIF@BLKSIZ@BLOCK-SIZE"
                offset="[15:0]"/>
      </register>
      <register description="Byte Count register" format="hex0x" id="SDIF@BYTCNT" offset="0x20"
                size="4">
         <field description="Number of bytes to be transferred; should be integer multiple of Block Size for block transfers."
                format="hex0x"
                id="SDIF@BYTCNT@BYTE-COUNT"
                offset="[31:0]"/>
      </register>
      <register description="Interrupt Mask register" format="hex0x" id="SDIF@INTMASK"
                offset="0x24"
                size="4">
         <field description="Card detect." format="hex0x" id="SDIF@INTMASK@CDET" offset="[0]"/>
         <field description="Response error." format="hex0x" id="SDIF@INTMASK@RE" offset="[1]"/>
         <field description="Command done." format="hex0x" id="SDIF@INTMASK@CDONE" offset="[2]"/>
         <field description="Data transfer over." format="hex0x" id="SDIF@INTMASK@DTO"
                offset="[3]"/>
         <field description="Transmit FIFO data request." format="hex0x" id="SDIF@INTMASK@TXDR"
                offset="[4]"/>
         <field description="Receive FIFO data request." format="hex0x" id="SDIF@INTMASK@RXDR"
                offset="[5]"/>
         <field description="Response CRC error." format="hex0x" id="SDIF@INTMASK@RCRC"
                offset="[6]"/>
         <field description="Data CRC error." format="hex0x" id="SDIF@INTMASK@DCRC"
                offset="[7]"/>
         <field description="Response time-out." format="hex0x" id="SDIF@INTMASK@RTO"
                offset="[8]"/>
         <field description="Data read time-out." format="hex0x" id="SDIF@INTMASK@DRTO"
                offset="[9]"/>
         <field description="Data starvation-by-host time-out (HTO)." format="hex0x"
                id="SDIF@INTMASK@HTO"
                offset="[10]"/>
         <field description="FIFO underrun/overrun error." format="hex0x"
                id="SDIF@INTMASK@FRUN"
                offset="[11]"/>
         <field description="Hardware locked write error." format="hex0x" id="SDIF@INTMASK@HLE"
                offset="[12]"/>
         <field description="Start-bit error." format="hex0x" id="SDIF@INTMASK@SBE"
                offset="[13]"/>
         <field description="Auto command done." format="hex0x" id="SDIF@INTMASK@ACD"
                offset="[14]"/>
         <field description="End-bit error (read)/Write no CRC." format="hex0x"
                id="SDIF@INTMASK@EBE"
                offset="[15]"/>
         <field description="Mask SDIO interrupt." format="hex0x"
                id="SDIF@INTMASK@SDIO-INT-MASK"
                offset="[16]"/>
      </register>
      <register description="Command Argument register" format="hex0x" id="SDIF@CMDARG"
                offset="0x28"
                size="4">
         <field description="Value indicates command argument to be passed to card."
                format="hex0x"
                id="SDIF@CMDARG@CMD-ARG"
                offset="[31:0]"/>
      </register>
      <register description="Command register" format="hex0x" id="SDIF@CMD" offset="0x2c"
                size="4">
         <field description="Command index." format="hex0x" id="SDIF@CMD@CMD-INDEX"
                offset="[5:0]"/>
         <field description="Response expect." format="hex0x" id="SDIF@CMD@RESPONSE-EXPECT"
                offset="[6]"/>
         <field description="Response length." format="hex0x" id="SDIF@CMD@RESPONSE-LENGTH"
                offset="[7]"/>
         <field description="Check response CRC." format="hex0x"
                id="SDIF@CMD@CHECK-RESPONSE-CRC"
                offset="[8]"/>
         <field description="Data expected." format="hex0x" id="SDIF@CMD@DATA-EXPECTED"
                offset="[9]"/>
         <field description="read/write." format="hex0x" id="SDIF@CMD@READ-WRITE" offset="[10]"/>
         <field description="Transfer mode." format="hex0x" id="SDIF@CMD@TRANSFER-MODE"
                offset="[11]"/>
         <field description="Send auto stop." format="hex0x" id="SDIF@CMD@SEND-AUTO-STOP"
                offset="[12]"/>
         <field description="Wait prvdata complete." format="hex0x"
                id="SDIF@CMD@WAIT-PRVDATA-COMPLETE"
                offset="[13]"/>
         <field description="Stop abort command." format="hex0x" id="SDIF@CMD@STOP-ABORT-CMD"
                offset="[14]"/>
         <field description="Send initialization." format="hex0x"
                id="SDIF@CMD@SEND-INITIALIZATION"
                offset="[15]"/>
         <field description="Update clock registers only." format="hex0x"
                id="SDIF@CMD@UPDATE-CLOCK-REGISTERS-ONLY"
                offset="[21]"/>
         <field description="Read ceata device." format="hex0x" id="SDIF@CMD@READ-CEATA-DEVICE"
                offset="[22]"/>
         <field description="CCS expected." format="hex0x" id="SDIF@CMD@CCS-EXPECTED"
                offset="[23]"/>
         <field description="Enable Boot - this bit should be set only for mandatory boot mode."
                format="hex0x"
                id="SDIF@CMD@ENABLE-BOOT"
                offset="[24]"/>
         <field description="Expect Boot Acknowledge." format="hex0x"
                id="SDIF@CMD@EXPECT-BOOT-ACK"
                offset="[25]"/>
         <field description="Disable Boot." format="hex0x" id="SDIF@CMD@DISABLE-BOOT"
                offset="[26]"/>
         <field description="Boot Mode." format="hex0x" id="SDIF@CMD@BOOT-MODE" offset="[27]"/>
         <field description="Voltage switch bit." format="hex0x" id="SDIF@CMD@VOLT-SWITCH"
                offset="[28]"/>
         <field description="Use Hold Register." format="hex0x" id="SDIF@CMD@USE-HOLD-REG"
                offset="[29]"/>
         <field description="Start command." format="hex0x" id="SDIF@CMD@START-CMD"
                offset="[31]"/>
      </register>
      <register description="Response register" format="hex0x" id="SDIF@RESP0" offset="0x30"
                size="4">
         <field description="Bits of response." format="hex0x" id="SDIF@RESP0@RESPONSE"
                offset="[31:0]"/>
      </register>
      <register description="Response register" format="hex0x" id="SDIF@RESP1" offset="0x34"
                size="4">
         <field description="Bits of response." format="hex0x" id="SDIF@RESP1@RESPONSE"
                offset="[31:0]"/>
      </register>
      <register description="Response register" format="hex0x" id="SDIF@RESP2" offset="0x38"
                size="4">
         <field description="Bits of response." format="hex0x" id="SDIF@RESP2@RESPONSE"
                offset="[31:0]"/>
      </register>
      <register description="Response register" format="hex0x" id="SDIF@RESP3" offset="0x3c"
                size="4">
         <field description="Bits of response." format="hex0x" id="SDIF@RESP3@RESPONSE"
                offset="[31:0]"/>
      </register>
      <register description="Masked Interrupt Status register" format="hex0x" id="SDIF@MINTSTS"
                offset="0x40"
                size="4">
         <field description="Card detect." format="hex0x" id="SDIF@MINTSTS@CDET" offset="[0]"/>
         <field description="Response error." format="hex0x" id="SDIF@MINTSTS@RE" offset="[1]"/>
         <field description="Command done." format="hex0x" id="SDIF@MINTSTS@CDONE" offset="[2]"/>
         <field description="Data transfer over." format="hex0x" id="SDIF@MINTSTS@DTO"
                offset="[3]"/>
         <field description="Transmit FIFO data request." format="hex0x" id="SDIF@MINTSTS@TXDR"
                offset="[4]"/>
         <field description="Receive FIFO data request." format="hex0x" id="SDIF@MINTSTS@RXDR"
                offset="[5]"/>
         <field description="Response CRC error." format="hex0x" id="SDIF@MINTSTS@RCRC"
                offset="[6]"/>
         <field description="Data CRC error." format="hex0x" id="SDIF@MINTSTS@DCRC"
                offset="[7]"/>
         <field description="Response time-out." format="hex0x" id="SDIF@MINTSTS@RTO"
                offset="[8]"/>
         <field description="Data read time-out." format="hex0x" id="SDIF@MINTSTS@DRTO"
                offset="[9]"/>
         <field description="Data starvation-by-host time-out (HTO)." format="hex0x"
                id="SDIF@MINTSTS@HTO"
                offset="[10]"/>
         <field description="FIFO underrun/overrun error." format="hex0x"
                id="SDIF@MINTSTS@FRUN"
                offset="[11]"/>
         <field description="Hardware locked write error." format="hex0x" id="SDIF@MINTSTS@HLE"
                offset="[12]"/>
         <field description="Start-bit error." format="hex0x" id="SDIF@MINTSTS@SBE"
                offset="[13]"/>
         <field description="Auto command done." format="hex0x" id="SDIF@MINTSTS@ACD"
                offset="[14]"/>
         <field description="End-bit error (read)/write no CRC." format="hex0x"
                id="SDIF@MINTSTS@EBE"
                offset="[15]"/>
         <field description="Interrupt from SDIO card." format="hex0x"
                id="SDIF@MINTSTS@SDIO-INTERRUPT"
                offset="[16]"/>
      </register>
      <register description="Raw Interrupt Status register" format="hex0x" id="SDIF@RINTSTS"
                offset="0x44"
                size="4">
         <field description="Card detect." format="hex0x" id="SDIF@RINTSTS@CDET" offset="[0]"/>
         <field description="Response error." format="hex0x" id="SDIF@RINTSTS@RE" offset="[1]"/>
         <field description="Command done." format="hex0x" id="SDIF@RINTSTS@CDONE" offset="[2]"/>
         <field description="Data transfer over." format="hex0x" id="SDIF@RINTSTS@DTO"
                offset="[3]"/>
         <field description="Transmit FIFO data request." format="hex0x" id="SDIF@RINTSTS@TXDR"
                offset="[4]"/>
         <field description="Receive FIFO data request." format="hex0x" id="SDIF@RINTSTS@RXDR"
                offset="[5]"/>
         <field description="Response CRC error." format="hex0x" id="SDIF@RINTSTS@RCRC"
                offset="[6]"/>
         <field description="Data CRC error." format="hex0x" id="SDIF@RINTSTS@DCRC"
                offset="[7]"/>
         <field description="Response time-out (RTO)/Boot Ack Received (BAR)." format="hex0x"
                id="SDIF@RINTSTS@RTO-BAR"
                offset="[8]"/>
         <field description="Data read time-out (DRTO)/Boot Data Start (BDS)." format="hex0x"
                id="SDIF@RINTSTS@DRTO-BDS"
                offset="[9]"/>
         <field description="Data starvation-by-host time-out (HTO)." format="hex0x"
                id="SDIF@RINTSTS@HTO"
                offset="[10]"/>
         <field description="FIFO underrun/overrun error." format="hex0x"
                id="SDIF@RINTSTS@FRUN"
                offset="[11]"/>
         <field description="Hardware locked write error." format="hex0x" id="SDIF@RINTSTS@HLE"
                offset="[12]"/>
         <field description="Start-bit error." format="hex0x" id="SDIF@RINTSTS@SBE"
                offset="[13]"/>
         <field description="Auto command done." format="hex0x" id="SDIF@RINTSTS@ACD"
                offset="[14]"/>
         <field description="End-bit error (read)/write no CRC." format="hex0x"
                id="SDIF@RINTSTS@EBE"
                offset="[15]"/>
         <field description="Interrupt from SDIO card." format="hex0x"
                id="SDIF@RINTSTS@SDIO-INTERRUPT"
                offset="[16]"/>
      </register>
      <register description="Status register" format="hex0x" id="SDIF@STATUS" offset="0x48"
                size="4">
         <field description="FIFO reached Receive watermark level; not qualified with data transfer."
                format="hex0x"
                id="SDIF@STATUS@FIFO-RX-WATERMARK"
                offset="[0]"/>
         <field description="FIFO reached Transmit watermark level; not qualified with data transfer."
                format="hex0x"
                id="SDIF@STATUS@FIFO-TX-WATERMARK"
                offset="[1]"/>
         <field description="FIFO is empty status." format="hex0x" id="SDIF@STATUS@FIFO-EMPTY"
                offset="[2]"/>
         <field description="FIFO is full status." format="hex0x" id="SDIF@STATUS@FIFO-FULL"
                offset="[3]"/>
         <field description="Command FSM states: 0 - Idle 1 - Send init sequence 2 - Tx cmd start bit 3 - Tx cmd tx bit 4 - Tx cmd index + arg 5 - Tx cmd crc7 6 - Tx cmd end bit 7 - Rx resp start bit 8 - Rx resp IRQ response 9 - Rx resp tx bit 10 - Rx resp cmd idx 11 - Rx resp data 12 - Rx resp crc7 13 - Rx resp end bit 14 - Cmd path wait NCC 15 - Wait; CMD-to-response turnaround NOTE: The command FSM state is represented using 19 bits."
                format="hex0x"
                id="SDIF@STATUS@CMDFSMSTATES"
                offset="[7:4]"/>
         <field description="Raw selected card_data[3]; checks whether card is present 0 - card not present 1 - card present."
                format="hex0x"
                id="SDIF@STATUS@DATA-3-STATUS"
                offset="[8]"/>
         <field description="Inverted version of raw selected card_data[0] 0 - card data not busy 1 - card data busy."
                format="hex0x"
                id="SDIF@STATUS@DATA-BUSY"
                offset="[9]"/>
         <field description="Data transmit or receive state-machine is busy." format="hex0x"
                id="SDIF@STATUS@DATA-STATE-MC-BUSY"
                offset="[10]"/>
         <field description="Index of previous response, including any auto-stop sent by core."
                format="hex0x"
                id="SDIF@STATUS@RESPONSE-INDEX"
                offset="[16:11]"/>
         <field description="FIFO count - Number of filled locations in FIFO." format="hex0x"
                id="SDIF@STATUS@FIFO-COUNT"
                offset="[29:17]"/>
         <field description="DMA acknowledge signal state." format="hex0x"
                id="SDIF@STATUS@DMA-ACK"
                offset="[30]"/>
         <field description="DMA request signal state." format="hex0x" id="SDIF@STATUS@DMA-REQ"
                offset="[31]"/>
      </register>
      <register description="FIFO Threshold Watermark register" format="hex0x" id="SDIF@FIFOTH"
                offset="0x4c"
                size="4">
         <field description="FIFO threshold watermark level when transmitting data to card."
                format="hex0x"
                id="SDIF@FIFOTH@TX-WMARK"
                offset="[11:0]"/>
         <field description="FIFO threshold watermark level when receiving data to card."
                format="hex0x"
                id="SDIF@FIFOTH@RX-WMARK"
                offset="[27:16]"/>
         <field description="Burst size of multiple transaction; should be programmed same as DW-DMA controller multiple-transaction-size SRC/DEST_MSIZE."
                format="hex0x"
                id="SDIF@FIFOTH@DMA-MTS"
                offset="[30:28]"/>
      </register>
      <register description="Card Detect register" format="hex0x" id="SDIF@CDETECT"
                offset="0x50"
                size="4">
         <field description="Card detect." format="hex0x" id="SDIF@CDETECT@CARD-DETECT"
                offset="[0]"/>
      </register>
      <register description="Write Protect register" format="hex0x" id="SDIF@WRTPRT"
                offset="0x54"
                size="4">
         <field description="Write protect." format="hex0x" id="SDIF@WRTPRT@WRITE-PROTECT"
                offset="[0]"/>
      </register>
      <register description="Transferred CIU Card Byte Count register" format="hex0x"
                id="SDIF@TCBCNT"
                offset="0x5c"
                size="4">
         <field description="Number of bytes transferred by CIU unit to card." format="hex0x"
                id="SDIF@TCBCNT@TRANS-CARD-BYTE-COUNT"
                offset="[31:0]"/>
      </register>
      <register description="Transferred Host to BIU-FIFO Byte Count register" format="hex0x"
                id="SDIF@TBBCNT"
                offset="0x60"
                size="4">
         <field description="Number of bytes transferred between Host/DMA memory and BIU FIFO."
                format="hex0x"
                id="SDIF@TBBCNT@TRANS-FIFO-BYTE-COUNT"
                offset="[31:0]"/>
      </register>
      <register description="Debounce Count register" format="hex0x" id="SDIF@DEBNCE"
                offset="0x64"
                size="4">
         <field description="Number of host clocks (SD_CLK) used by debounce filter logic for card detect; typical debounce time is 5-25 ms."
                format="hex0x"
                id="SDIF@DEBNCE@DEBOUNCE-COUNT"
                offset="[23:0]"/>
      </register>
      <register description="Hardware Reset" format="hex0x" id="SDIF@RST-N" offset="0x78"
                size="4">
         <field description="Hardware reset." format="hex0x" id="SDIF@RST-N@CARD-RESET"
                offset="[0]"/>
      </register>
      <register description="Bus Mode register" format="hex0x" id="SDIF@BMOD" offset="0x80"
                size="4">
         <field description="Software Reset." format="hex0x" id="SDIF@BMOD@SWR" offset="[0]"/>
         <field description="Fixed Burst." format="hex0x" id="SDIF@BMOD@FB" offset="[1]"/>
         <field description="Descriptor Skip Length." format="hex0x" id="SDIF@BMOD@DSL"
                offset="[6:2]"/>
         <field description="SD/MMC DMA Enable." format="hex0x" id="SDIF@BMOD@DE" offset="[7]"/>
         <field description="Programmable Burst Length." format="hex0x" id="SDIF@BMOD@PBL"
                offset="[10:8]"/>
      </register>
      <register description="Poll Demand register" format="hex0x" id="SDIF@PLDMND"
                offset="0x84"
                size="4">
         <field description="Poll Demand." format="hex0x" id="SDIF@PLDMND@PD" offset="[31:0]"/>
      </register>
      <register description="Descriptor List Base Address register" format="hex0x"
                id="SDIF@DBADDR"
                offset="0x88"
                size="4">
         <field description="Start of Descriptor List." format="hex0x" id="SDIF@DBADDR@SDL"
                offset="[31:0]"/>
      </register>
      <register description="Internal DMAC Status register" format="hex0x" id="SDIF@IDSTS"
                offset="0x8c"
                size="4">
         <field description="Transmit Interrupt." format="hex0x" id="SDIF@IDSTS@TI"
                offset="[0]"/>
         <field description="Receive Interrupt." format="hex0x" id="SDIF@IDSTS@RI" offset="[1]"/>
         <field description="Fatal Bus Error Interrupt." format="hex0x" id="SDIF@IDSTS@FBE"
                offset="[2]"/>
         <field description="Descriptor Unavailable Interrupt." format="hex0x"
                id="SDIF@IDSTS@DU"
                offset="[4]"/>
         <field description="Card Error Summary." format="hex0x" id="SDIF@IDSTS@CES"
                offset="[5]"/>
         <field description="Normal Interrupt Summary." format="hex0x" id="SDIF@IDSTS@NIS"
                offset="[8]"/>
         <field description="Abnormal Interrupt Summary." format="hex0x" id="SDIF@IDSTS@AIS"
                offset="[9]"/>
         <field description="Error Bits." format="hex0x" id="SDIF@IDSTS@EB" offset="[12:10]"/>
         <field description="DMAC state machine present state." format="hex0x"
                id="SDIF@IDSTS@FSM"
                offset="[16:13]"/>
      </register>
      <register description="Internal DMAC Interrupt Enable register" format="hex0x"
                id="SDIF@IDINTEN"
                offset="0x90"
                size="4">
         <field description="Transmit Interrupt Enable." format="hex0x" id="SDIF@IDINTEN@TI"
                offset="[0]"/>
         <field description="Receive Interrupt Enable." format="hex0x" id="SDIF@IDINTEN@RI"
                offset="[1]"/>
         <field description="Fatal Bus Error Enable." format="hex0x" id="SDIF@IDINTEN@FBE"
                offset="[2]"/>
         <field description="Descriptor Unavailable Interrupt." format="hex0x"
                id="SDIF@IDINTEN@DU"
                offset="[4]"/>
         <field description="Card Error summary Interrupt Enable." format="hex0x"
                id="SDIF@IDINTEN@CES"
                offset="[5]"/>
         <field description="Normal Interrupt Summary Enable." format="hex0x"
                id="SDIF@IDINTEN@NIS"
                offset="[8]"/>
         <field description="Abnormal Interrupt Summary Enable." format="hex0x"
                id="SDIF@IDINTEN@AIS"
                offset="[9]"/>
      </register>
      <register description="Current Host Descriptor Address register" format="hex0x"
                id="SDIF@DSCADDR"
                offset="0x94"
                size="4">
         <field description="Host Descriptor Address Pointer." format="hex0x"
                id="SDIF@DSCADDR@HDA"
                offset="[31:0]"/>
      </register>
      <register description="Current Buffer Descriptor Address register" format="hex0x"
                id="SDIF@BUFADDR"
                offset="0x98"
                size="4">
         <field description="Host Buffer Address Pointer." format="hex0x" id="SDIF@BUFADDR@HBA"
                offset="[31:0]"/>
      </register>
      <register description="Card Threshold Control" format="hex0x" id="SDIF@CARDTHRCTL"
                offset="0x100"
                size="4">
         <field description="Card Read Threshold Enable." format="hex0x"
                id="SDIF@CARDTHRCTL@CARDRDTHREN"
                offset="[0]"/>
         <field description="Busy Clear Interrupt Enable." format="hex0x"
                id="SDIF@CARDTHRCTL@BSYCLRINTEN"
                offset="[1]"/>
         <field description="Card Threshold size." format="hex0x"
                id="SDIF@CARDTHRCTL@CARDTHRESHOLD"
                offset="[23:16]"/>
      </register>
      <register description="Power control" format="hex0x" id="SDIF@BACKENDPWR" offset="0x104"
                size="4">
         <field description="Back-end Power control for card application." format="hex0x"
                id="SDIF@BACKENDPWR@BACKENDPWR"
                offset="[0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO0" offset="0x200" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO0@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO1" offset="0x204" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO1@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO2" offset="0x208" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO2@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO3" offset="0x20c" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO3@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO4" offset="0x210" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO4@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO5" offset="0x214" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO5@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO6" offset="0x218" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO6@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO7" offset="0x21c" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO7@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO8" offset="0x220" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO8@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO9" offset="0x224" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO9@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO10" offset="0x228" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO10@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO11" offset="0x22c" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO11@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO12" offset="0x230" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO12@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO13" offset="0x234" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO13@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO14" offset="0x238" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO14@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO15" offset="0x23c" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO15@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO16" offset="0x240" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO16@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO17" offset="0x244" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO17@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO18" offset="0x248" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO18@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO19" offset="0x24c" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO19@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO20" offset="0x250" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO20@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO21" offset="0x254" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO21@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO22" offset="0x258" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO22@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO23" offset="0x25c" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO23@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO24" offset="0x260" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO24@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO25" offset="0x264" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO25@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO26" offset="0x268" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO26@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO27" offset="0x26c" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO27@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO28" offset="0x270" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO28@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO29" offset="0x274" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO29@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO30" offset="0x278" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO30@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO31" offset="0x27c" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO31@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO32" offset="0x280" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO32@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO33" offset="0x284" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO33@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO34" offset="0x288" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO34@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO35" offset="0x28c" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO35@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO36" offset="0x290" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO36@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO37" offset="0x294" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO37@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO38" offset="0x298" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO38@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO39" offset="0x29c" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO39@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO40" offset="0x2a0" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO40@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO41" offset="0x2a4" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO41@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO42" offset="0x2a8" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO42@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO43" offset="0x2ac" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO43@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO44" offset="0x2b0" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO44@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO45" offset="0x2b4" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO45@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO46" offset="0x2b8" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO46@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO47" offset="0x2bc" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO47@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO48" offset="0x2c0" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO48@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO49" offset="0x2c4" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO49@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO50" offset="0x2c8" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO50@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO51" offset="0x2cc" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO51@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO52" offset="0x2d0" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO52@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO53" offset="0x2d4" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO53@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO54" offset="0x2d8" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO54@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO55" offset="0x2dc" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO55@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO56" offset="0x2e0" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO56@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO57" offset="0x2e4" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO57@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO58" offset="0x2e8" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO58@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO59" offset="0x2ec" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO59@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO60" offset="0x2f0" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO60@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO61" offset="0x2f4" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO61@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO62" offset="0x2f8" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO62@DATA" offset="[31:0]"/>
      </register>
      <register description="SDIF FIFO" format="hex0x" id="SDIF@FIFO63" offset="0x2fc" size="4">
         <field description="SDIF FIFO." format="hex0x" id="SDIF@FIFO63@DATA" offset="[31:0]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4"
               description="LPC54S60x/LPC5460x Controller Area Network Flexible Data"
               id="CAN0"
               size="0x604">
      <register description="Data Bit Timing Prescaler Register" format="hex0x" id="CAN0@DBTP"
                offset="0xc"
                size="4">
         <field description="Data (re)synchronization jump width." format="hex0x"
                id="CAN0@DBTP@DSJW"
                offset="[3:0]"/>
         <field description="Data time segment after sample point." format="hex0x"
                id="CAN0@DBTP@DTSEG2"
                offset="[7:4]"/>
         <field description="Data time segment before sample point." format="hex0x"
                id="CAN0@DBTP@DTSEG1"
                offset="[12:8]"/>
         <field description="Data bit rate prescaler." format="hex0x" id="CAN0@DBTP@DBRP"
                offset="[20:16]"/>
         <field description="Transmitter delay compensation." format="hex0x" id="CAN0@DBTP@TDC"
                offset="[23]"/>
      </register>
      <register description="Test Register" format="hex0x" id="CAN0@TEST" offset="0x10"
                size="4">
         <field description="Loop back mode." format="hex0x" id="CAN0@TEST@LBCK" offset="[4]"/>
         <field description="Control of transmit pin." format="hex0x" id="CAN0@TEST@TX"
                offset="[6:5]"/>
         <field description="Monitors the actual value of the CAN_RXD." format="hex0x"
                id="CAN0@TEST@RX"
                offset="[7]"/>
      </register>
      <register description="CC Control Register" format="hex0x" id="CAN0@CCCR" offset="0x18"
                size="4">
         <field description="Initialization." format="hex0x" id="CAN0@CCCR@INIT" offset="[0]"/>
         <field description="Configuration change enable." format="hex0x" id="CAN0@CCCR@CCE"
                offset="[1]"/>
         <field description="Restricted operational mode." format="hex0x" id="CAN0@CCCR@ASM"
                offset="[2]"/>
         <field description="Clock Stop Acknowledge." format="hex0x" id="CAN0@CCCR@CSA"
                offset="[3]"/>
         <field description="Clock Stop Request." format="hex0x" id="CAN0@CCCR@CSR"
                offset="[4]"/>
         <field description="Bus monitoring mode." format="hex0x" id="CAN0@CCCR@MON"
                offset="[5]"/>
         <field description="Disable automatic retransmission." format="hex0x"
                id="CAN0@CCCR@DAR"
                offset="[6]"/>
         <field description="Test mode enable." format="hex0x" id="CAN0@CCCR@TEST" offset="[7]"/>
         <field description="CAN FD operation enable." format="hex0x" id="CAN0@CCCR@FDOE"
                offset="[8]"/>
         <field description="When CAN FD operation is disabled, this bit is not evaluated."
                format="hex0x"
                id="CAN0@CCCR@BRSE"
                offset="[9]"/>
         <field description="Protocol exception handling disable." format="hex0x"
                id="CAN0@CCCR@PXHD"
                offset="[12]"/>
         <field description="Edge filtering during bus integration." format="hex0x"
                id="CAN0@CCCR@EFBI"
                offset="[13]"/>
         <field description="Transmit pause." format="hex0x" id="CAN0@CCCR@TXP" offset="[14]"/>
         <field description="Non ISO operation." format="hex0x" id="CAN0@CCCR@NISO"
                offset="[15]"/>
      </register>
      <register description="Nominal Bit Timing and Prescaler Register" format="hex0x"
                id="CAN0@NBTP"
                offset="0x1c"
                size="4">
         <field description="Nominal time segment after sample point." format="hex0x"
                id="CAN0@NBTP@NTSEG2"
                offset="[6:0]"/>
         <field description="Nominal time segment before sample point." format="hex0x"
                id="CAN0@NBTP@NTSEG1"
                offset="[15:8]"/>
         <field description="Nominal bit rate prescaler." format="hex0x" id="CAN0@NBTP@NBRP"
                offset="[24:16]"/>
         <field description="Nominal (re)synchronization jump width." format="hex0x"
                id="CAN0@NBTP@NSJW"
                offset="[31:25]"/>
      </register>
      <register description="Timestamp Counter Configuration" format="hex0x" id="CAN0@TSCC"
                offset="0x20"
                size="4">
         <field description="Timestamp select." format="hex0x" id="CAN0@TSCC@TSS"
                offset="[1:0]"/>
         <field description="Timestamp counter prescaler Configures the timestamp and timeout counters time unit in multiple of CAN bit times."
                format="hex0x"
                id="CAN0@TSCC@TCP"
                offset="[19:16]"/>
      </register>
      <register description="Timestamp Counter Value" format="hex0x" id="CAN0@TSCV"
                offset="0x24"
                size="4">
         <field description="Timestamp counter." format="hex0x" id="CAN0@TSCV@TSC"
                offset="[15:0]"/>
      </register>
      <register description="Timeout Counter Configuration" format="hex0x" id="CAN0@TOCC"
                offset="0x28"
                size="4">
         <field description="Enable timeout counter." format="hex0x" id="CAN0@TOCC@ETOC"
                offset="[0]"/>
         <field description="Timeout select." format="hex0x" id="CAN0@TOCC@TOS" offset="[2:1]"/>
         <field description="Timeout period." format="hex0x" id="CAN0@TOCC@TOP"
                offset="[31:16]"/>
      </register>
      <register description="Timeout Counter Value" format="hex0x" id="CAN0@TOCV" offset="0x2c"
                readOnly="true"
                size="4">
         <field description="Timeout counter." format="hex0x" id="CAN0@TOCV@TOC"
                offset="[15:0]"/>
      </register>
      <register description="Error Counter Register" format="hex0x" id="CAN0@ECR" offset="0x40"
                readOnly="true"
                size="4">
         <field description="Transmit error counter." format="hex0x" id="CAN0@ECR@TEC"
                offset="[7:0]"/>
         <field description="Receive error counter." format="hex0x" id="CAN0@ECR@REC"
                offset="[14:8]"/>
         <field description="Receive error passive." format="hex0x" id="CAN0@ECR@RP"
                offset="[15]"/>
         <field description="CAN error logging." format="hex0x" id="CAN0@ECR@CEL"
                offset="[23:16]"/>
      </register>
      <register description="Protocol Status Register" format="hex0x" id="CAN0@PSR"
                offset="0x44"
                readOnly="true"
                size="4">
         <field description="Last error code." format="hex0x" id="CAN0@PSR@LEC" offset="[2:0]"/>
         <field description="Activity." format="hex0x" id="CAN0@PSR@ACT" offset="[4:3]"/>
         <field description="Error Passive." format="hex0x" id="CAN0@PSR@EP" offset="[5]"/>
         <field description="Warning status." format="hex0x" id="CAN0@PSR@EW" offset="[6]"/>
         <field description="Bus Off Status." format="hex0x" id="CAN0@PSR@BO" offset="[7]"/>
         <field description="Data phase last error code." format="hex0x" id="CAN0@PSR@DLEC"
                offset="[10:8]"/>
         <field description="ESI flag of the last received CAN FD message." format="hex0x"
                id="CAN0@PSR@RESI"
                offset="[11]"/>
         <field description="BRS flag of last received CAN FD message." format="hex0x"
                id="CAN0@PSR@RBRS"
                offset="[12]"/>
         <field description="Received a CAN FD message." format="hex0x" id="CAN0@PSR@RFDF"
                offset="[13]"/>
         <field description="Protocol exception event." format="hex0x" id="CAN0@PSR@PXE"
                offset="[14]"/>
         <field description="Transmitter delay compensation value." format="hex0x"
                id="CAN0@PSR@TDCV"
                offset="[22:16]"/>
      </register>
      <register description="Transmitter Delay Compensator Register" format="hex0x"
                id="CAN0@TDCR"
                offset="0x48"
                size="4">
         <field description="Transmitter delay compensation filter window length."
                format="hex0x"
                id="CAN0@TDCR@TDCF"
                offset="[6:0]"/>
         <field description="Transmitter delay compensation offset." format="hex0x"
                id="CAN0@TDCR@TDCO"
                offset="[14:8]"/>
      </register>
      <register description="Interrupt Register" format="hex0x" id="CAN0@IR" offset="0x50"
                size="4">
         <field description="Rx FIFO 0 new message." format="hex0x" id="CAN0@IR@RF0N"
                offset="[0]"/>
         <field description="Rx FIFO 0 watermark reached." format="hex0x" id="CAN0@IR@RF0W"
                offset="[1]"/>
         <field description="Rx FIFO 0 full." format="hex0x" id="CAN0@IR@RF0F" offset="[2]"/>
         <field description="Rx FIFO 0 message lost." format="hex0x" id="CAN0@IR@RF0L"
                offset="[3]"/>
         <field description="Rx FIFO 1 new message." format="hex0x" id="CAN0@IR@RF1N"
                offset="[4]"/>
         <field description="Rx FIFO 1 watermark reached." format="hex0x" id="CAN0@IR@RF1W"
                offset="[5]"/>
         <field description="Rx FIFO 1 full." format="hex0x" id="CAN0@IR@RF1F" offset="[6]"/>
         <field description="Rx FIFO 1 message lost." format="hex0x" id="CAN0@IR@RF1L"
                offset="[7]"/>
         <field description="High priority message." format="hex0x" id="CAN0@IR@HPM"
                offset="[8]"/>
         <field description="Transmission completed." format="hex0x" id="CAN0@IR@TC"
                offset="[9]"/>
         <field description="Transmission cancellation finished." format="hex0x"
                id="CAN0@IR@TCF"
                offset="[10]"/>
         <field description="Tx FIFO empty." format="hex0x" id="CAN0@IR@TFE" offset="[11]"/>
         <field description="Tx event FIFO new entry." format="hex0x" id="CAN0@IR@TEFN"
                offset="[12]"/>
         <field description="Tx event FIFO watermark reached." format="hex0x" id="CAN0@IR@TEFW"
                offset="[13]"/>
         <field description="Tx event FIFO full." format="hex0x" id="CAN0@IR@TEFF"
                offset="[14]"/>
         <field description="Tx event FIFO element lost." format="hex0x" id="CAN0@IR@TEFL"
                offset="[15]"/>
         <field description="Timestamp wraparound." format="hex0x" id="CAN0@IR@TSW"
                offset="[16]"/>
         <field description="Message RAM access failure." format="hex0x" id="CAN0@IR@MRAF"
                offset="[17]"/>
         <field description="Timeout occurred." format="hex0x" id="CAN0@IR@TOO" offset="[18]"/>
         <field description="Message stored in dedicated Rx buffer." format="hex0x"
                id="CAN0@IR@DRX"
                offset="[19]"/>
         <field description="Bit error corrected." format="hex0x" id="CAN0@IR@BEC"
                offset="[20]"/>
         <field description="Bit error uncorrected." format="hex0x" id="CAN0@IR@BEU"
                offset="[21]"/>
         <field description="Error logging overflow." format="hex0x" id="CAN0@IR@ELO"
                offset="[22]"/>
         <field description="Error passive." format="hex0x" id="CAN0@IR@EP" offset="[23]"/>
         <field description="Warning status." format="hex0x" id="CAN0@IR@EW" offset="[24]"/>
         <field description="Bus_Off Status." format="hex0x" id="CAN0@IR@BO" offset="[25]"/>
         <field description="Watchdog interrupt." format="hex0x" id="CAN0@IR@WDI" offset="[26]"/>
         <field description="Protocol error in arbitration phase." format="hex0x"
                id="CAN0@IR@PEA"
                offset="[27]"/>
         <field description="Protocol error in data phase." format="hex0x" id="CAN0@IR@PED"
                offset="[28]"/>
         <field description="Access to reserved address." format="hex0x" id="CAN0@IR@ARA"
                offset="[29]"/>
      </register>
      <register description="Interrupt Enable" format="hex0x" id="CAN0@IE" offset="0x54"
                size="4">
         <field description="Rx FIFO 0 new message interrupt enable." format="hex0x"
                id="CAN0@IE@RF0NE"
                offset="[0]"/>
         <field description="Rx FIFO 0 watermark reached interrupt enable." format="hex0x"
                id="CAN0@IE@RF0WE"
                offset="[1]"/>
         <field description="Rx FIFO 0 full interrupt enable." format="hex0x"
                id="CAN0@IE@RF0FE"
                offset="[2]"/>
         <field description="Rx FIFO 0 message lost interrupt enable." format="hex0x"
                id="CAN0@IE@RF0LE"
                offset="[3]"/>
         <field description="Rx FIFO 1 new message interrupt enable." format="hex0x"
                id="CAN0@IE@RF1NE"
                offset="[4]"/>
         <field description="Rx FIFO 1 watermark reached interrupt enable." format="hex0x"
                id="CAN0@IE@RF1WE"
                offset="[5]"/>
         <field description="Rx FIFO 1 full interrupt enable." format="hex0x"
                id="CAN0@IE@RF1FE"
                offset="[6]"/>
         <field description="Rx FIFO 1 message lost interrupt enable." format="hex0x"
                id="CAN0@IE@RF1LE"
                offset="[7]"/>
         <field description="High priority message interrupt enable." format="hex0x"
                id="CAN0@IE@HPME"
                offset="[8]"/>
         <field description="Transmission completed interrupt enable." format="hex0x"
                id="CAN0@IE@TCE"
                offset="[9]"/>
         <field description="Transmission cancellation finished interrupt enable."
                format="hex0x"
                id="CAN0@IE@TCFE"
                offset="[10]"/>
         <field description="Tx FIFO empty interrupt enable." format="hex0x" id="CAN0@IE@TFEE"
                offset="[11]"/>
         <field description="Tx event FIFO new entry interrupt enable." format="hex0x"
                id="CAN0@IE@TEFNE"
                offset="[12]"/>
         <field description="Tx event FIFO watermark reached interrupt enable." format="hex0x"
                id="CAN0@IE@TEFWE"
                offset="[13]"/>
         <field description="Tx event FIFO full interrupt enable." format="hex0x"
                id="CAN0@IE@TEFFE"
                offset="[14]"/>
         <field description="Tx event FIFO element lost interrupt enable." format="hex0x"
                id="CAN0@IE@TEFLE"
                offset="[15]"/>
         <field description="Timestamp wraparound interrupt enable." format="hex0x"
                id="CAN0@IE@TSWE"
                offset="[16]"/>
         <field description="Message RAM access failure interrupt enable." format="hex0x"
                id="CAN0@IE@MRAFE"
                offset="[17]"/>
         <field description="Timeout occurred interrupt enable." format="hex0x"
                id="CAN0@IE@TOOE"
                offset="[18]"/>
         <field description="Message stored in dedicated Rx buffer interrupt enable."
                format="hex0x"
                id="CAN0@IE@DRXE"
                offset="[19]"/>
         <field description="Bit error corrected interrupt enable." format="hex0x"
                id="CAN0@IE@BECE"
                offset="[20]"/>
         <field description="Bit error uncorrected interrupt enable." format="hex0x"
                id="CAN0@IE@BEUE"
                offset="[21]"/>
         <field description="Error logging overflow interrupt enable." format="hex0x"
                id="CAN0@IE@ELOE"
                offset="[22]"/>
         <field description="Error passive interrupt enable." format="hex0x" id="CAN0@IE@EPE"
                offset="[23]"/>
         <field description="Warning status interrupt enable." format="hex0x" id="CAN0@IE@EWE"
                offset="[24]"/>
         <field description="Bus_Off Status interrupt enable." format="hex0x" id="CAN0@IE@BOE"
                offset="[25]"/>
         <field description="Watchdog interrupt enable." format="hex0x" id="CAN0@IE@WDIE"
                offset="[26]"/>
         <field description="Protocol error in arbitration phase interrupt enable."
                format="hex0x"
                id="CAN0@IE@PEAE"
                offset="[27]"/>
         <field description="Protocol error in data phase interrupt enable." format="hex0x"
                id="CAN0@IE@PEDE"
                offset="[28]"/>
         <field description="Access to reserved address interrupt enable." format="hex0x"
                id="CAN0@IE@ARAE"
                offset="[29]"/>
      </register>
      <register description="Interrupt Line Select" format="hex0x" id="CAN0@ILS" offset="0x58"
                size="4">
         <field description="Rx FIFO 0 new message interrupt line." format="hex0x"
                id="CAN0@ILS@RF0NL"
                offset="[0]"/>
         <field description="Rx FIFO 0 watermark reached interrupt line." format="hex0x"
                id="CAN0@ILS@RF0WL"
                offset="[1]"/>
         <field description="Rx FIFO 0 full interrupt line." format="hex0x" id="CAN0@ILS@RF0FL"
                offset="[2]"/>
         <field description="Rx FIFO 0 message lost interrupt line." format="hex0x"
                id="CAN0@ILS@RF0LL"
                offset="[3]"/>
         <field description="Rx FIFO 1 new message interrupt line." format="hex0x"
                id="CAN0@ILS@RF1NL"
                offset="[4]"/>
         <field description="Rx FIFO 1 watermark reached interrupt line." format="hex0x"
                id="CAN0@ILS@RF1WL"
                offset="[5]"/>
         <field description="Rx FIFO 1 full interrupt line." format="hex0x" id="CAN0@ILS@RF1FL"
                offset="[6]"/>
         <field description="Rx FIFO 1 message lost interrupt line." format="hex0x"
                id="CAN0@ILS@RF1LL"
                offset="[7]"/>
         <field description="High priority message interrupt line." format="hex0x"
                id="CAN0@ILS@HPML"
                offset="[8]"/>
         <field description="Transmission completed interrupt line." format="hex0x"
                id="CAN0@ILS@TCL"
                offset="[9]"/>
         <field description="Transmission cancellation finished interrupt line." format="hex0x"
                id="CAN0@ILS@TCFL"
                offset="[10]"/>
         <field description="Tx FIFO empty interrupt line." format="hex0x" id="CAN0@ILS@TFEL"
                offset="[11]"/>
         <field description="Tx event FIFO new entry interrupt line." format="hex0x"
                id="CAN0@ILS@TEFNL"
                offset="[12]"/>
         <field description="Tx event FIFO watermark reached interrupt line." format="hex0x"
                id="CAN0@ILS@TEFWL"
                offset="[13]"/>
         <field description="Tx event FIFO full interrupt line." format="hex0x"
                id="CAN0@ILS@TEFFL"
                offset="[14]"/>
         <field description="Tx event FIFO element lost interrupt line." format="hex0x"
                id="CAN0@ILS@TEFLL"
                offset="[15]"/>
         <field description="Timestamp wraparound interrupt line." format="hex0x"
                id="CAN0@ILS@TSWL"
                offset="[16]"/>
         <field description="Message RAM access failure interrupt line." format="hex0x"
                id="CAN0@ILS@MRAFL"
                offset="[17]"/>
         <field description="Timeout occurred interrupt line." format="hex0x"
                id="CAN0@ILS@TOOL"
                offset="[18]"/>
         <field description="Message stored in dedicated Rx buffer interrupt line."
                format="hex0x"
                id="CAN0@ILS@DRXL"
                offset="[19]"/>
         <field description="Bit error corrected interrupt line." format="hex0x"
                id="CAN0@ILS@BECL"
                offset="[20]"/>
         <field description="Bit error uncorrected interrupt line." format="hex0x"
                id="CAN0@ILS@BEUL"
                offset="[21]"/>
         <field description="Error logging overflow interrupt line." format="hex0x"
                id="CAN0@ILS@ELOL"
                offset="[22]"/>
         <field description="Error passive interrupt line." format="hex0x" id="CAN0@ILS@EPL"
                offset="[23]"/>
         <field description="Warning status interrupt line." format="hex0x" id="CAN0@ILS@EWL"
                offset="[24]"/>
         <field description="Bus_Off Status interrupt line." format="hex0x" id="CAN0@ILS@BOL"
                offset="[25]"/>
         <field description="Watchdog interrupt line." format="hex0x" id="CAN0@ILS@WDIL"
                offset="[26]"/>
         <field description="Protocol error in arbitration phase interrupt line."
                format="hex0x"
                id="CAN0@ILS@PEAL"
                offset="[27]"/>
         <field description="Protocol error in data phase interrupt line." format="hex0x"
                id="CAN0@ILS@PEDL"
                offset="[28]"/>
         <field description="Access to reserved address interrupt line." format="hex0x"
                id="CAN0@ILS@ARAL"
                offset="[29]"/>
      </register>
      <register description="Interrupt Line Enable" format="hex0x" id="CAN0@ILE" offset="0x5c"
                size="4">
         <field description="Enable interrupt line 0." format="hex0x" id="CAN0@ILE@EINT0"
                offset="[0]"/>
         <field description="Enable interrupt line 1." format="hex0x" id="CAN0@ILE@EINT1"
                offset="[1]"/>
      </register>
      <register description="Global Filter Configuration" format="hex0x" id="CAN0@GFC"
                offset="0x80"
                size="4">
         <field description="Reject remote frames extended." format="hex0x" id="CAN0@GFC@RRFE"
                offset="[0]"/>
         <field description="Reject remote frames standard." format="hex0x" id="CAN0@GFC@RRFS"
                offset="[1]"/>
         <field description="Accept non-matching frames extended." format="hex0x"
                id="CAN0@GFC@ANFE"
                offset="[3:2]"/>
         <field description="Accept non-matching frames standard." format="hex0x"
                id="CAN0@GFC@ANFS"
                offset="[5:4]"/>
      </register>
      <register description="Standard ID Filter Configuration" format="hex0x" id="CAN0@SIDFC"
                offset="0x84"
                size="4">
         <field description="Filter list standard start address." format="hex0x"
                id="CAN0@SIDFC@FLSSA"
                offset="[15:2]"/>
         <field description="List size standard 0 = No standard message ID filter."
                format="hex0x"
                id="CAN0@SIDFC@LSS"
                offset="[23:16]"/>
      </register>
      <register description="Extended ID Filter Configuration" format="hex0x" id="CAN0@XIDFC"
                offset="0x88"
                size="4">
         <field description="Filter list extended start address." format="hex0x"
                id="CAN0@XIDFC@FLESA"
                offset="[15:2]"/>
         <field description="List size extended 0 = No extended message ID filter."
                format="hex0x"
                id="CAN0@XIDFC@LSE"
                offset="[23:16]"/>
      </register>
      <register description="Extended ID AND Mask" format="hex0x" id="CAN0@XIDAM" offset="0x90"
                size="4">
         <field description="Extended ID mask." format="hex0x" id="CAN0@XIDAM@EIDM"
                offset="[28:0]"/>
      </register>
      <register description="High Priority Message Status" format="hex0x" id="CAN0@HPMS"
                offset="0x94"
                readOnly="true"
                size="4">
         <field description="Buffer index." format="hex0x" id="CAN0@HPMS@BIDX" offset="[5:0]"/>
         <field description="Message storage indicator." format="hex0x" id="CAN0@HPMS@MSI"
                offset="[7:6]"/>
         <field description="Filter index." format="hex0x" id="CAN0@HPMS@FIDX" offset="[14:8]"/>
         <field description="Filter list." format="hex0x" id="CAN0@HPMS@FLST" offset="[15]"/>
      </register>
      <register description="New Data 1" format="hex0x" id="CAN0@NDAT1" offset="0x98" size="4">
         <field description="New Data." format="hex0x" id="CAN0@NDAT1@ND" offset="[31:0]"/>
      </register>
      <register description="New Data 2" format="hex0x" id="CAN0@NDAT2" offset="0x9c" size="4">
         <field description="New Data." format="hex0x" id="CAN0@NDAT2@ND" offset="[31:0]"/>
      </register>
      <register description="Rx FIFO 0 Configuration" format="hex0x" id="CAN0@RXF0C"
                offset="0xa0"
                size="4">
         <field description="Rx FIFO 0 start address." format="hex0x" id="CAN0@RXF0C@F0SA"
                offset="[15:2]"/>
         <field description="Rx FIFO 0 size." format="hex0x" id="CAN0@RXF0C@F0S"
                offset="[22:16]"/>
         <field description="Rx FIFO 0 watermark 0 = Watermark interrupt disabled."
                format="hex0x"
                id="CAN0@RXF0C@F0WM"
                offset="[30:24]"/>
         <field description="FIFO 0 operation mode." format="hex0x" id="CAN0@RXF0C@F0OM"
                offset="[31]"/>
      </register>
      <register description="Rx FIFO 0 Status" format="hex0x" id="CAN0@RXF0S" offset="0xa4"
                size="4">
         <field description="Rx FIFO 0 fill level." format="hex0x" id="CAN0@RXF0S@F0FL"
                offset="[6:0]"/>
         <field description="Rx FIFO 0 get index." format="hex0x" id="CAN0@RXF0S@F0GI"
                offset="[13:8]"/>
         <field description="Rx FIFO 0 put index." format="hex0x" id="CAN0@RXF0S@F0PI"
                offset="[21:16]"/>
         <field description="Rx FIFO 0 full." format="hex0x" id="CAN0@RXF0S@F0F" offset="[24]"/>
         <field description="Rx FIFO 0 message lost." format="hex0x" id="CAN0@RXF0S@RF0L"
                offset="[25]"/>
      </register>
      <register description="Rx FIFO 0 Acknowledge" format="hex0x" id="CAN0@RXF0A"
                offset="0xa8"
                size="4">
         <field description="Rx FIFO 0 acknowledge index." format="hex0x" id="CAN0@RXF0A@F0AI"
                offset="[5:0]"/>
      </register>
      <register description="Rx Buffer Configuration" format="hex0x" id="CAN0@RXBC"
                offset="0xac"
                size="4">
         <field description="Rx buffer start address." format="hex0x" id="CAN0@RXBC@RBSA"
                offset="[15:2]"/>
      </register>
      <register description="Rx FIFO 1 Configuration" format="hex0x" id="CAN0@RXF1C"
                offset="0xb0"
                size="4">
         <field description="Rx FIFO 1 start address." format="hex0x" id="CAN0@RXF1C@F1SA"
                offset="[15:2]"/>
         <field description="Rx FIFO 1 size 0 = No Rx FIFO 1." format="hex0x"
                id="CAN0@RXF1C@F1S"
                offset="[22:16]"/>
         <field description="Rx FIFO 1 watermark 0 = Watermark interrupt disabled."
                format="hex0x"
                id="CAN0@RXF1C@F1WM"
                offset="[30:24]"/>
         <field description="FIFO 1 operation mode." format="hex0x" id="CAN0@RXF1C@F1OM"
                offset="[31]"/>
      </register>
      <register description="Rx FIFO 1 Status" format="hex0x" id="CAN0@RXF1S" offset="0xb4"
                readOnly="true"
                size="4">
         <field description="Rx FIFO 1 fill level." format="hex0x" id="CAN0@RXF1S@F1FL"
                offset="[6:0]"/>
         <field description="Rx FIFO 1 get index." format="hex0x" id="CAN0@RXF1S@F1GI"
                offset="[13:8]"/>
         <field description="Rx FIFO 1 put index." format="hex0x" id="CAN0@RXF1S@F1PI"
                offset="[21:16]"/>
         <field description="Rx FIFO 1 full." format="hex0x" id="CAN0@RXF1S@F1F" offset="[24]"/>
         <field description="Rx FIFO 1 message lost." format="hex0x" id="CAN0@RXF1S@RF1L"
                offset="[25]"/>
      </register>
      <register description="Rx FIFO 1 Acknowledge" format="hex0x" id="CAN0@RXF1A"
                offset="0xb8"
                size="4">
         <field description="Rx FIFO 1 acknowledge index." format="hex0x" id="CAN0@RXF1A@F1AI"
                offset="[5:0]"/>
      </register>
      <register description="Rx Buffer and FIFO Element Size Configuration" format="hex0x"
                id="CAN0@RXESC"
                offset="0xbc"
                size="4">
         <field description="Rx FIFO 0 data field size." format="hex0x" id="CAN0@RXESC@F0DS"
                offset="[2:0]"/>
         <field description="Rx FIFO 1 data field size." format="hex0x" id="CAN0@RXESC@F1DS"
                offset="[6:4]"/>
         <field description="." format="hex0x" id="CAN0@RXESC@RBDS" offset="[10:8]"/>
      </register>
      <register description="Tx Buffer Configuration" format="hex0x" id="CAN0@TXBC"
                offset="0xc0"
                size="4">
         <field description="Tx buffers start address." format="hex0x" id="CAN0@TXBC@TBSA"
                offset="[15:2]"/>
         <field description="Number of dedicated transmit buffers 0 = No dedicated Tx buffers."
                format="hex0x"
                id="CAN0@TXBC@NDTB"
                offset="[21:16]"/>
         <field description="Transmit FIFO/queue size 0 = No tx FIFO/Queue." format="hex0x"
                id="CAN0@TXBC@TFQS"
                offset="[29:24]"/>
         <field description="Tx FIFO/queue mode." format="hex0x" id="CAN0@TXBC@TFQM"
                offset="[30]"/>
      </register>
      <register description="Tx FIFO/Queue Status" format="hex0x" id="CAN0@TXFQS" offset="0xc4"
                size="4">
         <field description="Tx FIFO get index." format="hex0x" id="CAN0@TXFQS@TFGI"
                offset="[12:8]"/>
         <field description="Tx FIFO/queue put index." format="hex0x" id="CAN0@TXFQS@TFQPI"
                offset="[20:16]"/>
         <field description="Tx FIFO/queue full." format="hex0x" id="CAN0@TXFQS@TFQF"
                offset="[21]"/>
      </register>
      <register description="Tx Buffer Element Size Configuration" format="hex0x"
                id="CAN0@TXESC"
                offset="0xc8"
                size="4">
         <field description="Tx buffer data field size." format="hex0x" id="CAN0@TXESC@TBDS"
                offset="[2:0]"/>
      </register>
      <register description="Tx Buffer Request Pending" format="hex0x" id="CAN0@TXBRP"
                offset="0xcc"
                size="4">
         <field description="Transmission request pending." format="hex0x" id="CAN0@TXBRP@TRP"
                offset="[31:0]"/>
      </register>
      <register description="Tx Buffer Add Request" format="hex0x" id="CAN0@TXBAR"
                offset="0xd0"
                size="4">
         <field description="Add request." format="hex0x" id="CAN0@TXBAR@AR" offset="[31:0]"/>
      </register>
      <register description="Tx Buffer Cancellation Request" format="hex0x" id="CAN0@TXBCR"
                offset="0xd4"
                size="4">
         <field description="Cancellation request." format="hex0x" id="CAN0@TXBCR@CR"
                offset="[31:0]"/>
      </register>
      <register description="Tx Buffer Transmission Occurred" format="hex0x" id="CAN0@TXBTO"
                offset="0xd8"
                size="4">
         <field description="Transmission occurred." format="hex0x" id="CAN0@TXBTO@TO"
                offset="[31:0]"/>
      </register>
      <register description="Tx Buffer Cancellation Finished" format="hex0x" id="CAN0@TXBCF"
                offset="0xdc"
                size="4">
         <field description="Cancellation finished." format="hex0x" id="CAN0@TXBCF@TO"
                offset="[31:0]"/>
      </register>
      <register description="Tx Buffer Transmission Interrupt Enable" format="hex0x"
                id="CAN0@TXBTIE"
                offset="0xe0"
                size="4">
         <field description="Transmission interrupt enable." format="hex0x"
                id="CAN0@TXBTIE@TIE"
                offset="[31:0]"/>
      </register>
      <register description="Tx Buffer Cancellation Finished Interrupt Enable" format="hex0x"
                id="CAN0@TXBCIE"
                offset="0xe4"
                size="4">
         <field description="Cancellation finished interrupt enable." format="hex0x"
                id="CAN0@TXBCIE@CFIE"
                offset="[31:0]"/>
      </register>
      <register description="Tx Event FIFO Configuration" format="hex0x" id="CAN0@TXEFC"
                offset="0xf0"
                size="4">
         <field description="Event FIFO start address." format="hex0x" id="CAN0@TXEFC@EFSA"
                offset="[15:2]"/>
         <field description="Event FIFO size 0 = Tx event FIFO disabled." format="hex0x"
                id="CAN0@TXEFC@EFS"
                offset="[21:16]"/>
         <field description="Event FIFO watermark 0 = Watermark interrupt disabled."
                format="hex0x"
                id="CAN0@TXEFC@EFWM"
                offset="[29:24]"/>
      </register>
      <register description="Tx Event FIFO Status" format="hex0x" id="CAN0@TXEFS" offset="0xf4"
                readOnly="true"
                size="4">
         <field description="Event FIFO fill level." format="hex0x" id="CAN0@TXEFS@EFFL"
                offset="[5:0]"/>
         <field description="Event FIFO get index." format="hex0x" id="CAN0@TXEFS@EFGI"
                offset="[12:8]"/>
         <field description="Event FIFO put index." format="hex0x" id="CAN0@TXEFS@EFPI"
                offset="[21:16]"/>
         <field description="Event FIFO full." format="hex0x" id="CAN0@TXEFS@EFF" offset="[24]"/>
         <field description="Tx event FIFO element lost." format="hex0x" id="CAN0@TXEFS@TEFL"
                offset="[25]"/>
      </register>
      <register description="Tx Event FIFO Acknowledge" format="hex0x" id="CAN0@TXEFA"
                offset="0xf8"
                size="4">
         <field description="Event FIFO acknowledge index." format="hex0x" id="CAN0@TXEFA@EFAI"
                offset="[4:0]"/>
      </register>
      <register description="CAN Message RAM Base Address" format="hex0x" id="CAN0@MRBA"
                offset="0x200"
                size="4">
         <field description="Base address for the message RAM in the chip memory map."
                format="hex0x"
                id="CAN0@MRBA@BA"
                offset="[31:16]"/>
      </register>
      <register description="External Timestamp Counter Configuration" format="hex0x"
                id="CAN0@ETSCC"
                offset="0x400"
                size="4">
         <field description="External timestamp prescaler value." format="hex0x"
                id="CAN0@ETSCC@ETCP"
                offset="[10:0]"/>
         <field description="External timestamp counter enable." format="hex0x"
                id="CAN0@ETSCC@ETCE"
                offset="[31]"/>
      </register>
      <register description="External Timestamp Counter Value" format="hex0x" id="CAN0@ETSCV"
                offset="0x600"
                size="4">
         <field description="External timestamp counter." format="hex0x" id="CAN0@ETSCV@ETSC"
                offset="[15:0]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4"
               description="LPC54S60x/LPC5460x Controller Area Network Flexible Data"
               id="CAN1"
               size="0x604">
      <register description="Data Bit Timing Prescaler Register" format="hex0x" id="CAN0@DBTP"
                offset="0xc"
                size="4">
         <field description="Data (re)synchronization jump width." format="hex0x"
                id="CAN0@DBTP@DSJW"
                offset="[3:0]"/>
         <field description="Data time segment after sample point." format="hex0x"
                id="CAN0@DBTP@DTSEG2"
                offset="[7:4]"/>
         <field description="Data time segment before sample point." format="hex0x"
                id="CAN0@DBTP@DTSEG1"
                offset="[12:8]"/>
         <field description="Data bit rate prescaler." format="hex0x" id="CAN0@DBTP@DBRP"
                offset="[20:16]"/>
         <field description="Transmitter delay compensation." format="hex0x" id="CAN0@DBTP@TDC"
                offset="[23]"/>
      </register>
      <register description="Test Register" format="hex0x" id="CAN0@TEST" offset="0x10"
                size="4">
         <field description="Loop back mode." format="hex0x" id="CAN0@TEST@LBCK" offset="[4]"/>
         <field description="Control of transmit pin." format="hex0x" id="CAN0@TEST@TX"
                offset="[6:5]"/>
         <field description="Monitors the actual value of the CAN_RXD." format="hex0x"
                id="CAN0@TEST@RX"
                offset="[7]"/>
      </register>
      <register description="CC Control Register" format="hex0x" id="CAN0@CCCR" offset="0x18"
                size="4">
         <field description="Initialization." format="hex0x" id="CAN0@CCCR@INIT" offset="[0]"/>
         <field description="Configuration change enable." format="hex0x" id="CAN0@CCCR@CCE"
                offset="[1]"/>
         <field description="Restricted operational mode." format="hex0x" id="CAN0@CCCR@ASM"
                offset="[2]"/>
         <field description="Clock Stop Acknowledge." format="hex0x" id="CAN0@CCCR@CSA"
                offset="[3]"/>
         <field description="Clock Stop Request." format="hex0x" id="CAN0@CCCR@CSR"
                offset="[4]"/>
         <field description="Bus monitoring mode." format="hex0x" id="CAN0@CCCR@MON"
                offset="[5]"/>
         <field description="Disable automatic retransmission." format="hex0x"
                id="CAN0@CCCR@DAR"
                offset="[6]"/>
         <field description="Test mode enable." format="hex0x" id="CAN0@CCCR@TEST" offset="[7]"/>
         <field description="CAN FD operation enable." format="hex0x" id="CAN0@CCCR@FDOE"
                offset="[8]"/>
         <field description="When CAN FD operation is disabled, this bit is not evaluated."
                format="hex0x"
                id="CAN0@CCCR@BRSE"
                offset="[9]"/>
         <field description="Protocol exception handling disable." format="hex0x"
                id="CAN0@CCCR@PXHD"
                offset="[12]"/>
         <field description="Edge filtering during bus integration." format="hex0x"
                id="CAN0@CCCR@EFBI"
                offset="[13]"/>
         <field description="Transmit pause." format="hex0x" id="CAN0@CCCR@TXP" offset="[14]"/>
         <field description="Non ISO operation." format="hex0x" id="CAN0@CCCR@NISO"
                offset="[15]"/>
      </register>
      <register description="Nominal Bit Timing and Prescaler Register" format="hex0x"
                id="CAN0@NBTP"
                offset="0x1c"
                size="4">
         <field description="Nominal time segment after sample point." format="hex0x"
                id="CAN0@NBTP@NTSEG2"
                offset="[6:0]"/>
         <field description="Nominal time segment before sample point." format="hex0x"
                id="CAN0@NBTP@NTSEG1"
                offset="[15:8]"/>
         <field description="Nominal bit rate prescaler." format="hex0x" id="CAN0@NBTP@NBRP"
                offset="[24:16]"/>
         <field description="Nominal (re)synchronization jump width." format="hex0x"
                id="CAN0@NBTP@NSJW"
                offset="[31:25]"/>
      </register>
      <register description="Timestamp Counter Configuration" format="hex0x" id="CAN0@TSCC"
                offset="0x20"
                size="4">
         <field description="Timestamp select." format="hex0x" id="CAN0@TSCC@TSS"
                offset="[1:0]"/>
         <field description="Timestamp counter prescaler Configures the timestamp and timeout counters time unit in multiple of CAN bit times."
                format="hex0x"
                id="CAN0@TSCC@TCP"
                offset="[19:16]"/>
      </register>
      <register description="Timestamp Counter Value" format="hex0x" id="CAN0@TSCV"
                offset="0x24"
                size="4">
         <field description="Timestamp counter." format="hex0x" id="CAN0@TSCV@TSC"
                offset="[15:0]"/>
      </register>
      <register description="Timeout Counter Configuration" format="hex0x" id="CAN0@TOCC"
                offset="0x28"
                size="4">
         <field description="Enable timeout counter." format="hex0x" id="CAN0@TOCC@ETOC"
                offset="[0]"/>
         <field description="Timeout select." format="hex0x" id="CAN0@TOCC@TOS" offset="[2:1]"/>
         <field description="Timeout period." format="hex0x" id="CAN0@TOCC@TOP"
                offset="[31:16]"/>
      </register>
      <register description="Timeout Counter Value" format="hex0x" id="CAN0@TOCV" offset="0x2c"
                readOnly="true"
                size="4">
         <field description="Timeout counter." format="hex0x" id="CAN0@TOCV@TOC"
                offset="[15:0]"/>
      </register>
      <register description="Error Counter Register" format="hex0x" id="CAN0@ECR" offset="0x40"
                readOnly="true"
                size="4">
         <field description="Transmit error counter." format="hex0x" id="CAN0@ECR@TEC"
                offset="[7:0]"/>
         <field description="Receive error counter." format="hex0x" id="CAN0@ECR@REC"
                offset="[14:8]"/>
         <field description="Receive error passive." format="hex0x" id="CAN0@ECR@RP"
                offset="[15]"/>
         <field description="CAN error logging." format="hex0x" id="CAN0@ECR@CEL"
                offset="[23:16]"/>
      </register>
      <register description="Protocol Status Register" format="hex0x" id="CAN0@PSR"
                offset="0x44"
                readOnly="true"
                size="4">
         <field description="Last error code." format="hex0x" id="CAN0@PSR@LEC" offset="[2:0]"/>
         <field description="Activity." format="hex0x" id="CAN0@PSR@ACT" offset="[4:3]"/>
         <field description="Error Passive." format="hex0x" id="CAN0@PSR@EP" offset="[5]"/>
         <field description="Warning status." format="hex0x" id="CAN0@PSR@EW" offset="[6]"/>
         <field description="Bus Off Status." format="hex0x" id="CAN0@PSR@BO" offset="[7]"/>
         <field description="Data phase last error code." format="hex0x" id="CAN0@PSR@DLEC"
                offset="[10:8]"/>
         <field description="ESI flag of the last received CAN FD message." format="hex0x"
                id="CAN0@PSR@RESI"
                offset="[11]"/>
         <field description="BRS flag of last received CAN FD message." format="hex0x"
                id="CAN0@PSR@RBRS"
                offset="[12]"/>
         <field description="Received a CAN FD message." format="hex0x" id="CAN0@PSR@RFDF"
                offset="[13]"/>
         <field description="Protocol exception event." format="hex0x" id="CAN0@PSR@PXE"
                offset="[14]"/>
         <field description="Transmitter delay compensation value." format="hex0x"
                id="CAN0@PSR@TDCV"
                offset="[22:16]"/>
      </register>
      <register description="Transmitter Delay Compensator Register" format="hex0x"
                id="CAN0@TDCR"
                offset="0x48"
                size="4">
         <field description="Transmitter delay compensation filter window length."
                format="hex0x"
                id="CAN0@TDCR@TDCF"
                offset="[6:0]"/>
         <field description="Transmitter delay compensation offset." format="hex0x"
                id="CAN0@TDCR@TDCO"
                offset="[14:8]"/>
      </register>
      <register description="Interrupt Register" format="hex0x" id="CAN0@IR" offset="0x50"
                size="4">
         <field description="Rx FIFO 0 new message." format="hex0x" id="CAN0@IR@RF0N"
                offset="[0]"/>
         <field description="Rx FIFO 0 watermark reached." format="hex0x" id="CAN0@IR@RF0W"
                offset="[1]"/>
         <field description="Rx FIFO 0 full." format="hex0x" id="CAN0@IR@RF0F" offset="[2]"/>
         <field description="Rx FIFO 0 message lost." format="hex0x" id="CAN0@IR@RF0L"
                offset="[3]"/>
         <field description="Rx FIFO 1 new message." format="hex0x" id="CAN0@IR@RF1N"
                offset="[4]"/>
         <field description="Rx FIFO 1 watermark reached." format="hex0x" id="CAN0@IR@RF1W"
                offset="[5]"/>
         <field description="Rx FIFO 1 full." format="hex0x" id="CAN0@IR@RF1F" offset="[6]"/>
         <field description="Rx FIFO 1 message lost." format="hex0x" id="CAN0@IR@RF1L"
                offset="[7]"/>
         <field description="High priority message." format="hex0x" id="CAN0@IR@HPM"
                offset="[8]"/>
         <field description="Transmission completed." format="hex0x" id="CAN0@IR@TC"
                offset="[9]"/>
         <field description="Transmission cancellation finished." format="hex0x"
                id="CAN0@IR@TCF"
                offset="[10]"/>
         <field description="Tx FIFO empty." format="hex0x" id="CAN0@IR@TFE" offset="[11]"/>
         <field description="Tx event FIFO new entry." format="hex0x" id="CAN0@IR@TEFN"
                offset="[12]"/>
         <field description="Tx event FIFO watermark reached." format="hex0x" id="CAN0@IR@TEFW"
                offset="[13]"/>
         <field description="Tx event FIFO full." format="hex0x" id="CAN0@IR@TEFF"
                offset="[14]"/>
         <field description="Tx event FIFO element lost." format="hex0x" id="CAN0@IR@TEFL"
                offset="[15]"/>
         <field description="Timestamp wraparound." format="hex0x" id="CAN0@IR@TSW"
                offset="[16]"/>
         <field description="Message RAM access failure." format="hex0x" id="CAN0@IR@MRAF"
                offset="[17]"/>
         <field description="Timeout occurred." format="hex0x" id="CAN0@IR@TOO" offset="[18]"/>
         <field description="Message stored in dedicated Rx buffer." format="hex0x"
                id="CAN0@IR@DRX"
                offset="[19]"/>
         <field description="Bit error corrected." format="hex0x" id="CAN0@IR@BEC"
                offset="[20]"/>
         <field description="Bit error uncorrected." format="hex0x" id="CAN0@IR@BEU"
                offset="[21]"/>
         <field description="Error logging overflow." format="hex0x" id="CAN0@IR@ELO"
                offset="[22]"/>
         <field description="Error passive." format="hex0x" id="CAN0@IR@EP" offset="[23]"/>
         <field description="Warning status." format="hex0x" id="CAN0@IR@EW" offset="[24]"/>
         <field description="Bus_Off Status." format="hex0x" id="CAN0@IR@BO" offset="[25]"/>
         <field description="Watchdog interrupt." format="hex0x" id="CAN0@IR@WDI" offset="[26]"/>
         <field description="Protocol error in arbitration phase." format="hex0x"
                id="CAN0@IR@PEA"
                offset="[27]"/>
         <field description="Protocol error in data phase." format="hex0x" id="CAN0@IR@PED"
                offset="[28]"/>
         <field description="Access to reserved address." format="hex0x" id="CAN0@IR@ARA"
                offset="[29]"/>
      </register>
      <register description="Interrupt Enable" format="hex0x" id="CAN0@IE" offset="0x54"
                size="4">
         <field description="Rx FIFO 0 new message interrupt enable." format="hex0x"
                id="CAN0@IE@RF0NE"
                offset="[0]"/>
         <field description="Rx FIFO 0 watermark reached interrupt enable." format="hex0x"
                id="CAN0@IE@RF0WE"
                offset="[1]"/>
         <field description="Rx FIFO 0 full interrupt enable." format="hex0x"
                id="CAN0@IE@RF0FE"
                offset="[2]"/>
         <field description="Rx FIFO 0 message lost interrupt enable." format="hex0x"
                id="CAN0@IE@RF0LE"
                offset="[3]"/>
         <field description="Rx FIFO 1 new message interrupt enable." format="hex0x"
                id="CAN0@IE@RF1NE"
                offset="[4]"/>
         <field description="Rx FIFO 1 watermark reached interrupt enable." format="hex0x"
                id="CAN0@IE@RF1WE"
                offset="[5]"/>
         <field description="Rx FIFO 1 full interrupt enable." format="hex0x"
                id="CAN0@IE@RF1FE"
                offset="[6]"/>
         <field description="Rx FIFO 1 message lost interrupt enable." format="hex0x"
                id="CAN0@IE@RF1LE"
                offset="[7]"/>
         <field description="High priority message interrupt enable." format="hex0x"
                id="CAN0@IE@HPME"
                offset="[8]"/>
         <field description="Transmission completed interrupt enable." format="hex0x"
                id="CAN0@IE@TCE"
                offset="[9]"/>
         <field description="Transmission cancellation finished interrupt enable."
                format="hex0x"
                id="CAN0@IE@TCFE"
                offset="[10]"/>
         <field description="Tx FIFO empty interrupt enable." format="hex0x" id="CAN0@IE@TFEE"
                offset="[11]"/>
         <field description="Tx event FIFO new entry interrupt enable." format="hex0x"
                id="CAN0@IE@TEFNE"
                offset="[12]"/>
         <field description="Tx event FIFO watermark reached interrupt enable." format="hex0x"
                id="CAN0@IE@TEFWE"
                offset="[13]"/>
         <field description="Tx event FIFO full interrupt enable." format="hex0x"
                id="CAN0@IE@TEFFE"
                offset="[14]"/>
         <field description="Tx event FIFO element lost interrupt enable." format="hex0x"
                id="CAN0@IE@TEFLE"
                offset="[15]"/>
         <field description="Timestamp wraparound interrupt enable." format="hex0x"
                id="CAN0@IE@TSWE"
                offset="[16]"/>
         <field description="Message RAM access failure interrupt enable." format="hex0x"
                id="CAN0@IE@MRAFE"
                offset="[17]"/>
         <field description="Timeout occurred interrupt enable." format="hex0x"
                id="CAN0@IE@TOOE"
                offset="[18]"/>
         <field description="Message stored in dedicated Rx buffer interrupt enable."
                format="hex0x"
                id="CAN0@IE@DRXE"
                offset="[19]"/>
         <field description="Bit error corrected interrupt enable." format="hex0x"
                id="CAN0@IE@BECE"
                offset="[20]"/>
         <field description="Bit error uncorrected interrupt enable." format="hex0x"
                id="CAN0@IE@BEUE"
                offset="[21]"/>
         <field description="Error logging overflow interrupt enable." format="hex0x"
                id="CAN0@IE@ELOE"
                offset="[22]"/>
         <field description="Error passive interrupt enable." format="hex0x" id="CAN0@IE@EPE"
                offset="[23]"/>
         <field description="Warning status interrupt enable." format="hex0x" id="CAN0@IE@EWE"
                offset="[24]"/>
         <field description="Bus_Off Status interrupt enable." format="hex0x" id="CAN0@IE@BOE"
                offset="[25]"/>
         <field description="Watchdog interrupt enable." format="hex0x" id="CAN0@IE@WDIE"
                offset="[26]"/>
         <field description="Protocol error in arbitration phase interrupt enable."
                format="hex0x"
                id="CAN0@IE@PEAE"
                offset="[27]"/>
         <field description="Protocol error in data phase interrupt enable." format="hex0x"
                id="CAN0@IE@PEDE"
                offset="[28]"/>
         <field description="Access to reserved address interrupt enable." format="hex0x"
                id="CAN0@IE@ARAE"
                offset="[29]"/>
      </register>
      <register description="Interrupt Line Select" format="hex0x" id="CAN0@ILS" offset="0x58"
                size="4">
         <field description="Rx FIFO 0 new message interrupt line." format="hex0x"
                id="CAN0@ILS@RF0NL"
                offset="[0]"/>
         <field description="Rx FIFO 0 watermark reached interrupt line." format="hex0x"
                id="CAN0@ILS@RF0WL"
                offset="[1]"/>
         <field description="Rx FIFO 0 full interrupt line." format="hex0x" id="CAN0@ILS@RF0FL"
                offset="[2]"/>
         <field description="Rx FIFO 0 message lost interrupt line." format="hex0x"
                id="CAN0@ILS@RF0LL"
                offset="[3]"/>
         <field description="Rx FIFO 1 new message interrupt line." format="hex0x"
                id="CAN0@ILS@RF1NL"
                offset="[4]"/>
         <field description="Rx FIFO 1 watermark reached interrupt line." format="hex0x"
                id="CAN0@ILS@RF1WL"
                offset="[5]"/>
         <field description="Rx FIFO 1 full interrupt line." format="hex0x" id="CAN0@ILS@RF1FL"
                offset="[6]"/>
         <field description="Rx FIFO 1 message lost interrupt line." format="hex0x"
                id="CAN0@ILS@RF1LL"
                offset="[7]"/>
         <field description="High priority message interrupt line." format="hex0x"
                id="CAN0@ILS@HPML"
                offset="[8]"/>
         <field description="Transmission completed interrupt line." format="hex0x"
                id="CAN0@ILS@TCL"
                offset="[9]"/>
         <field description="Transmission cancellation finished interrupt line." format="hex0x"
                id="CAN0@ILS@TCFL"
                offset="[10]"/>
         <field description="Tx FIFO empty interrupt line." format="hex0x" id="CAN0@ILS@TFEL"
                offset="[11]"/>
         <field description="Tx event FIFO new entry interrupt line." format="hex0x"
                id="CAN0@ILS@TEFNL"
                offset="[12]"/>
         <field description="Tx event FIFO watermark reached interrupt line." format="hex0x"
                id="CAN0@ILS@TEFWL"
                offset="[13]"/>
         <field description="Tx event FIFO full interrupt line." format="hex0x"
                id="CAN0@ILS@TEFFL"
                offset="[14]"/>
         <field description="Tx event FIFO element lost interrupt line." format="hex0x"
                id="CAN0@ILS@TEFLL"
                offset="[15]"/>
         <field description="Timestamp wraparound interrupt line." format="hex0x"
                id="CAN0@ILS@TSWL"
                offset="[16]"/>
         <field description="Message RAM access failure interrupt line." format="hex0x"
                id="CAN0@ILS@MRAFL"
                offset="[17]"/>
         <field description="Timeout occurred interrupt line." format="hex0x"
                id="CAN0@ILS@TOOL"
                offset="[18]"/>
         <field description="Message stored in dedicated Rx buffer interrupt line."
                format="hex0x"
                id="CAN0@ILS@DRXL"
                offset="[19]"/>
         <field description="Bit error corrected interrupt line." format="hex0x"
                id="CAN0@ILS@BECL"
                offset="[20]"/>
         <field description="Bit error uncorrected interrupt line." format="hex0x"
                id="CAN0@ILS@BEUL"
                offset="[21]"/>
         <field description="Error logging overflow interrupt line." format="hex0x"
                id="CAN0@ILS@ELOL"
                offset="[22]"/>
         <field description="Error passive interrupt line." format="hex0x" id="CAN0@ILS@EPL"
                offset="[23]"/>
         <field description="Warning status interrupt line." format="hex0x" id="CAN0@ILS@EWL"
                offset="[24]"/>
         <field description="Bus_Off Status interrupt line." format="hex0x" id="CAN0@ILS@BOL"
                offset="[25]"/>
         <field description="Watchdog interrupt line." format="hex0x" id="CAN0@ILS@WDIL"
                offset="[26]"/>
         <field description="Protocol error in arbitration phase interrupt line."
                format="hex0x"
                id="CAN0@ILS@PEAL"
                offset="[27]"/>
         <field description="Protocol error in data phase interrupt line." format="hex0x"
                id="CAN0@ILS@PEDL"
                offset="[28]"/>
         <field description="Access to reserved address interrupt line." format="hex0x"
                id="CAN0@ILS@ARAL"
                offset="[29]"/>
      </register>
      <register description="Interrupt Line Enable" format="hex0x" id="CAN0@ILE" offset="0x5c"
                size="4">
         <field description="Enable interrupt line 0." format="hex0x" id="CAN0@ILE@EINT0"
                offset="[0]"/>
         <field description="Enable interrupt line 1." format="hex0x" id="CAN0@ILE@EINT1"
                offset="[1]"/>
      </register>
      <register description="Global Filter Configuration" format="hex0x" id="CAN0@GFC"
                offset="0x80"
                size="4">
         <field description="Reject remote frames extended." format="hex0x" id="CAN0@GFC@RRFE"
                offset="[0]"/>
         <field description="Reject remote frames standard." format="hex0x" id="CAN0@GFC@RRFS"
                offset="[1]"/>
         <field description="Accept non-matching frames extended." format="hex0x"
                id="CAN0@GFC@ANFE"
                offset="[3:2]"/>
         <field description="Accept non-matching frames standard." format="hex0x"
                id="CAN0@GFC@ANFS"
                offset="[5:4]"/>
      </register>
      <register description="Standard ID Filter Configuration" format="hex0x" id="CAN0@SIDFC"
                offset="0x84"
                size="4">
         <field description="Filter list standard start address." format="hex0x"
                id="CAN0@SIDFC@FLSSA"
                offset="[15:2]"/>
         <field description="List size standard 0 = No standard message ID filter."
                format="hex0x"
                id="CAN0@SIDFC@LSS"
                offset="[23:16]"/>
      </register>
      <register description="Extended ID Filter Configuration" format="hex0x" id="CAN0@XIDFC"
                offset="0x88"
                size="4">
         <field description="Filter list extended start address." format="hex0x"
                id="CAN0@XIDFC@FLESA"
                offset="[15:2]"/>
         <field description="List size extended 0 = No extended message ID filter."
                format="hex0x"
                id="CAN0@XIDFC@LSE"
                offset="[23:16]"/>
      </register>
      <register description="Extended ID AND Mask" format="hex0x" id="CAN0@XIDAM" offset="0x90"
                size="4">
         <field description="Extended ID mask." format="hex0x" id="CAN0@XIDAM@EIDM"
                offset="[28:0]"/>
      </register>
      <register description="High Priority Message Status" format="hex0x" id="CAN0@HPMS"
                offset="0x94"
                readOnly="true"
                size="4">
         <field description="Buffer index." format="hex0x" id="CAN0@HPMS@BIDX" offset="[5:0]"/>
         <field description="Message storage indicator." format="hex0x" id="CAN0@HPMS@MSI"
                offset="[7:6]"/>
         <field description="Filter index." format="hex0x" id="CAN0@HPMS@FIDX" offset="[14:8]"/>
         <field description="Filter list." format="hex0x" id="CAN0@HPMS@FLST" offset="[15]"/>
      </register>
      <register description="New Data 1" format="hex0x" id="CAN0@NDAT1" offset="0x98" size="4">
         <field description="New Data." format="hex0x" id="CAN0@NDAT1@ND" offset="[31:0]"/>
      </register>
      <register description="New Data 2" format="hex0x" id="CAN0@NDAT2" offset="0x9c" size="4">
         <field description="New Data." format="hex0x" id="CAN0@NDAT2@ND" offset="[31:0]"/>
      </register>
      <register description="Rx FIFO 0 Configuration" format="hex0x" id="CAN0@RXF0C"
                offset="0xa0"
                size="4">
         <field description="Rx FIFO 0 start address." format="hex0x" id="CAN0@RXF0C@F0SA"
                offset="[15:2]"/>
         <field description="Rx FIFO 0 size." format="hex0x" id="CAN0@RXF0C@F0S"
                offset="[22:16]"/>
         <field description="Rx FIFO 0 watermark 0 = Watermark interrupt disabled."
                format="hex0x"
                id="CAN0@RXF0C@F0WM"
                offset="[30:24]"/>
         <field description="FIFO 0 operation mode." format="hex0x" id="CAN0@RXF0C@F0OM"
                offset="[31]"/>
      </register>
      <register description="Rx FIFO 0 Status" format="hex0x" id="CAN0@RXF0S" offset="0xa4"
                size="4">
         <field description="Rx FIFO 0 fill level." format="hex0x" id="CAN0@RXF0S@F0FL"
                offset="[6:0]"/>
         <field description="Rx FIFO 0 get index." format="hex0x" id="CAN0@RXF0S@F0GI"
                offset="[13:8]"/>
         <field description="Rx FIFO 0 put index." format="hex0x" id="CAN0@RXF0S@F0PI"
                offset="[21:16]"/>
         <field description="Rx FIFO 0 full." format="hex0x" id="CAN0@RXF0S@F0F" offset="[24]"/>
         <field description="Rx FIFO 0 message lost." format="hex0x" id="CAN0@RXF0S@RF0L"
                offset="[25]"/>
      </register>
      <register description="Rx FIFO 0 Acknowledge" format="hex0x" id="CAN0@RXF0A"
                offset="0xa8"
                size="4">
         <field description="Rx FIFO 0 acknowledge index." format="hex0x" id="CAN0@RXF0A@F0AI"
                offset="[5:0]"/>
      </register>
      <register description="Rx Buffer Configuration" format="hex0x" id="CAN0@RXBC"
                offset="0xac"
                size="4">
         <field description="Rx buffer start address." format="hex0x" id="CAN0@RXBC@RBSA"
                offset="[15:2]"/>
      </register>
      <register description="Rx FIFO 1 Configuration" format="hex0x" id="CAN0@RXF1C"
                offset="0xb0"
                size="4">
         <field description="Rx FIFO 1 start address." format="hex0x" id="CAN0@RXF1C@F1SA"
                offset="[15:2]"/>
         <field description="Rx FIFO 1 size 0 = No Rx FIFO 1." format="hex0x"
                id="CAN0@RXF1C@F1S"
                offset="[22:16]"/>
         <field description="Rx FIFO 1 watermark 0 = Watermark interrupt disabled."
                format="hex0x"
                id="CAN0@RXF1C@F1WM"
                offset="[30:24]"/>
         <field description="FIFO 1 operation mode." format="hex0x" id="CAN0@RXF1C@F1OM"
                offset="[31]"/>
      </register>
      <register description="Rx FIFO 1 Status" format="hex0x" id="CAN0@RXF1S" offset="0xb4"
                readOnly="true"
                size="4">
         <field description="Rx FIFO 1 fill level." format="hex0x" id="CAN0@RXF1S@F1FL"
                offset="[6:0]"/>
         <field description="Rx FIFO 1 get index." format="hex0x" id="CAN0@RXF1S@F1GI"
                offset="[13:8]"/>
         <field description="Rx FIFO 1 put index." format="hex0x" id="CAN0@RXF1S@F1PI"
                offset="[21:16]"/>
         <field description="Rx FIFO 1 full." format="hex0x" id="CAN0@RXF1S@F1F" offset="[24]"/>
         <field description="Rx FIFO 1 message lost." format="hex0x" id="CAN0@RXF1S@RF1L"
                offset="[25]"/>
      </register>
      <register description="Rx FIFO 1 Acknowledge" format="hex0x" id="CAN0@RXF1A"
                offset="0xb8"
                size="4">
         <field description="Rx FIFO 1 acknowledge index." format="hex0x" id="CAN0@RXF1A@F1AI"
                offset="[5:0]"/>
      </register>
      <register description="Rx Buffer and FIFO Element Size Configuration" format="hex0x"
                id="CAN0@RXESC"
                offset="0xbc"
                size="4">
         <field description="Rx FIFO 0 data field size." format="hex0x" id="CAN0@RXESC@F0DS"
                offset="[2:0]"/>
         <field description="Rx FIFO 1 data field size." format="hex0x" id="CAN0@RXESC@F1DS"
                offset="[6:4]"/>
         <field description="." format="hex0x" id="CAN0@RXESC@RBDS" offset="[10:8]"/>
      </register>
      <register description="Tx Buffer Configuration" format="hex0x" id="CAN0@TXBC"
                offset="0xc0"
                size="4">
         <field description="Tx buffers start address." format="hex0x" id="CAN0@TXBC@TBSA"
                offset="[15:2]"/>
         <field description="Number of dedicated transmit buffers 0 = No dedicated Tx buffers."
                format="hex0x"
                id="CAN0@TXBC@NDTB"
                offset="[21:16]"/>
         <field description="Transmit FIFO/queue size 0 = No tx FIFO/Queue." format="hex0x"
                id="CAN0@TXBC@TFQS"
                offset="[29:24]"/>
         <field description="Tx FIFO/queue mode." format="hex0x" id="CAN0@TXBC@TFQM"
                offset="[30]"/>
      </register>
      <register description="Tx FIFO/Queue Status" format="hex0x" id="CAN0@TXFQS" offset="0xc4"
                size="4">
         <field description="Tx FIFO get index." format="hex0x" id="CAN0@TXFQS@TFGI"
                offset="[12:8]"/>
         <field description="Tx FIFO/queue put index." format="hex0x" id="CAN0@TXFQS@TFQPI"
                offset="[20:16]"/>
         <field description="Tx FIFO/queue full." format="hex0x" id="CAN0@TXFQS@TFQF"
                offset="[21]"/>
      </register>
      <register description="Tx Buffer Element Size Configuration" format="hex0x"
                id="CAN0@TXESC"
                offset="0xc8"
                size="4">
         <field description="Tx buffer data field size." format="hex0x" id="CAN0@TXESC@TBDS"
                offset="[2:0]"/>
      </register>
      <register description="Tx Buffer Request Pending" format="hex0x" id="CAN0@TXBRP"
                offset="0xcc"
                size="4">
         <field description="Transmission request pending." format="hex0x" id="CAN0@TXBRP@TRP"
                offset="[31:0]"/>
      </register>
      <register description="Tx Buffer Add Request" format="hex0x" id="CAN0@TXBAR"
                offset="0xd0"
                size="4">
         <field description="Add request." format="hex0x" id="CAN0@TXBAR@AR" offset="[31:0]"/>
      </register>
      <register description="Tx Buffer Cancellation Request" format="hex0x" id="CAN0@TXBCR"
                offset="0xd4"
                size="4">
         <field description="Cancellation request." format="hex0x" id="CAN0@TXBCR@CR"
                offset="[31:0]"/>
      </register>
      <register description="Tx Buffer Transmission Occurred" format="hex0x" id="CAN0@TXBTO"
                offset="0xd8"
                size="4">
         <field description="Transmission occurred." format="hex0x" id="CAN0@TXBTO@TO"
                offset="[31:0]"/>
      </register>
      <register description="Tx Buffer Cancellation Finished" format="hex0x" id="CAN0@TXBCF"
                offset="0xdc"
                size="4">
         <field description="Cancellation finished." format="hex0x" id="CAN0@TXBCF@TO"
                offset="[31:0]"/>
      </register>
      <register description="Tx Buffer Transmission Interrupt Enable" format="hex0x"
                id="CAN0@TXBTIE"
                offset="0xe0"
                size="4">
         <field description="Transmission interrupt enable." format="hex0x"
                id="CAN0@TXBTIE@TIE"
                offset="[31:0]"/>
      </register>
      <register description="Tx Buffer Cancellation Finished Interrupt Enable" format="hex0x"
                id="CAN0@TXBCIE"
                offset="0xe4"
                size="4">
         <field description="Cancellation finished interrupt enable." format="hex0x"
                id="CAN0@TXBCIE@CFIE"
                offset="[31:0]"/>
      </register>
      <register description="Tx Event FIFO Configuration" format="hex0x" id="CAN0@TXEFC"
                offset="0xf0"
                size="4">
         <field description="Event FIFO start address." format="hex0x" id="CAN0@TXEFC@EFSA"
                offset="[15:2]"/>
         <field description="Event FIFO size 0 = Tx event FIFO disabled." format="hex0x"
                id="CAN0@TXEFC@EFS"
                offset="[21:16]"/>
         <field description="Event FIFO watermark 0 = Watermark interrupt disabled."
                format="hex0x"
                id="CAN0@TXEFC@EFWM"
                offset="[29:24]"/>
      </register>
      <register description="Tx Event FIFO Status" format="hex0x" id="CAN0@TXEFS" offset="0xf4"
                readOnly="true"
                size="4">
         <field description="Event FIFO fill level." format="hex0x" id="CAN0@TXEFS@EFFL"
                offset="[5:0]"/>
         <field description="Event FIFO get index." format="hex0x" id="CAN0@TXEFS@EFGI"
                offset="[12:8]"/>
         <field description="Event FIFO put index." format="hex0x" id="CAN0@TXEFS@EFPI"
                offset="[21:16]"/>
         <field description="Event FIFO full." format="hex0x" id="CAN0@TXEFS@EFF" offset="[24]"/>
         <field description="Tx event FIFO element lost." format="hex0x" id="CAN0@TXEFS@TEFL"
                offset="[25]"/>
      </register>
      <register description="Tx Event FIFO Acknowledge" format="hex0x" id="CAN0@TXEFA"
                offset="0xf8"
                size="4">
         <field description="Event FIFO acknowledge index." format="hex0x" id="CAN0@TXEFA@EFAI"
                offset="[4:0]"/>
      </register>
      <register description="CAN Message RAM Base Address" format="hex0x" id="CAN0@MRBA"
                offset="0x200"
                size="4">
         <field description="Base address for the message RAM in the chip memory map."
                format="hex0x"
                id="CAN0@MRBA@BA"
                offset="[31:16]"/>
      </register>
      <register description="External Timestamp Counter Configuration" format="hex0x"
                id="CAN0@ETSCC"
                offset="0x400"
                size="4">
         <field description="External timestamp prescaler value." format="hex0x"
                id="CAN0@ETSCC@ETCP"
                offset="[10:0]"/>
         <field description="External timestamp counter enable." format="hex0x"
                id="CAN0@ETSCC@ETCE"
                offset="[31]"/>
      </register>
      <register description="External Timestamp Counter Value" format="hex0x" id="CAN0@ETSCV"
                offset="0x600"
                size="4">
         <field description="External timestamp counter." format="hex0x" id="CAN0@ETSCV@ETSC"
                offset="[15:0]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC5411x 12-bit ADC controller (ADC)" id="ADC0"
               size="0x74">
      <register description="ADC Control register. Contains the clock divide value, resolution selection, sampling time selection, and mode controls."
                format="hex0x"
                id="ADC0@CTRL"
                offset="0x0"
                size="4">
         <field description="In synchronous mode only, the system clock is divided by this value plus one to produce the clock for the ADC converter, which should be less than or equal to 72 MHz. Typically, software should program the smallest value in this field that yields this maximum clock rate or slightly less, but in certain cases (such as a high-impedance analog source) a slower clock may be desirable. This field is ignored in the asynchronous operating mode."
                format="hex0x"
                id="ADC0@CTRL@CLKDIV"
                offset="[7:0]"/>
         <field description="Select clock mode." format="enum" enum="d1e163342"
                id="ADC0@CTRL@ASYNMODE"
                offset="[8]"/>
         <field description="The number of bits of ADC resolution. Accuracy can be reduced to achieve higher conversion rates. A single conversion (including one conversion in a burst or sequence) requires the selected number of bits of resolution plus 3 ADC clocks. This field must only be altered when the ADC is fully idle. Changing it during any kind of ADC operation may have unpredictable results. ADC clock frequencies for various resolutions must not exceed: - 5x the system clock rate for 12-bit resolution - 4.3x the system clock rate for 10-bit resolution - 3.6x the system clock for 8-bit resolution - 3x the bus clock rate for 6-bit resolution"
                format="enum"
                enum="d1e163388"
                id="ADC0@CTRL@RESOL"
                offset="[10:9]"/>
         <field description="Bypass Calibration. This bit may be set to avoid the need to calibrate if offset error is not a concern in the application."
                format="enum"
                enum="d1e163458"
                id="ADC0@CTRL@BYPASSCAL"
                offset="[11]"/>
         <field description="Sample Time. The default sampling period (TSAMP = '000') at the start of each conversion is 2.5 ADC clock periods. Depending on a variety of factors, including operating conditions and the output impedance of the analog source, longer sampling times may be required. See Section 28.7.10. The TSAMP field specifies the number of additional ADC clock cycles, from zero to seven, by which the sample period will be extended. The total conversion time will increase by the same number of clocks. 000 - The sample period will be the default 2.5 ADC clocks. A complete conversion with 12-bits of accuracy will require 15 clocks. 001- The sample period will be extended by one ADC clock to a total of 3.5 clock periods. A complete 12-bit conversion will require 16 clocks. 010 - The sample period will be extended by two clocks to 4.5 ADC clock cycles. A complete 12-bit conversion will require 17 ADC clocks. 111 - The sample period will be extended by seven clocks to 9.5 ADC clock cycles. A complete 12-bit conversion will require 22 ADC clocks."
                format="hex0x"
                id="ADC0@CTRL@TSAMP"
                offset="[14:12]"/>
      </register>
      <register description="Input Select. Allows selection of the temperature sensor as an alternate input to ADC channel 0."
                format="hex0x"
                id="ADC0@INSEL"
                offset="0x4"
                size="4">
         <field description="Selects the input source for channel 0. All other values are reserved."
                format="enum"
                enum="d1e163550"
                id="ADC0@INSEL@SEL"
                offset="[1:0]"/>
      </register>
      <register description="ADC Conversion Sequence-n control register: Controls triggering and channel selection for conversion sequence-n. Also specifies interrupt mode for sequence-n."
                format="hex0x"
                id="ADC0@SEQ-CTRLA"
                offset="0x8"
                size="4">
         <field description="Selects which one or more of the ADC channels will be sampled and converted when this sequence is launched. A 1 in any bit of this field will cause the corresponding channel to be included in the conversion sequence, where bit 0 corresponds to channel 0, bit 1 to channel 1 and so forth. When this conversion sequence is triggered, either by a hardware trigger or via software command, ADC conversions will be performed on each enabled channel, in sequence, beginning with the lowest-ordered channel. This field can ONLY be changed while SEQA_ENA (bit 31) is LOW. It is allowed to change this field and set bit 31 in the same write."
                format="hex0x"
                id="ADC0@SEQ-CTRLA@CHANNELS"
                offset="[11:0]"/>
         <field description="Selects which of the available hardware trigger sources will cause this conversion sequence to be initiated. Program the trigger input number in this field. See Table 476. In order to avoid generating a spurious trigger, it is recommended writing to this field only when SEQA_ENA (bit 31) is low. It is safe to change this field and set bit 31 in the same write."
                format="hex0x"
                id="ADC0@SEQ-CTRLA@TRIGGER"
                offset="[17:12]"/>
         <field description="Select the polarity of the selected input trigger for this conversion sequence. In order to avoid generating a spurious trigger, it is recommended writing to this field only when SEQA_ENA (bit 31) is low. It is safe to change this field and set bit 31 in the same write."
                format="enum"
                enum="d1e163669"
                id="ADC0@SEQ-CTRLA@TRIGPOL"
                offset="[18]"/>
         <field description="Setting this bit allows the hardware trigger input to bypass synchronization flip-flop stages and therefore shorten the time between the trigger input signal and the start of a conversion. There are slightly different criteria for whether or not this bit can be set depending on the clock operating mode: Synchronous mode (the ASYNMODE in the CTRL register = 0): Synchronization may be bypassed (this bit may be set) if the selected trigger source is already synchronous with the main system clock (eg. coming from an on-chip, system-clock-based timer). Whether this bit is set or not, a trigger pulse must be maintained for at least one system clock period. Asynchronous mode (the ASYNMODE in the CTRL register = 1): Synchronization may be bypassed (this bit may be set) if it is certain that the duration of a trigger input pulse will be at least one cycle of the ADC clock (regardless of whether the trigger comes from and on-chip or off-chip source). If this bit is NOT set, the trigger pulse must at least be maintained for one system clock period."
                format="enum"
                enum="d1e163715"
                id="ADC0@SEQ-CTRLA@SYNCBYPASS"
                offset="[19]"/>
         <field description="Writing a 1 to this field will launch one pass through this conversion sequence. The behavior will be identical to a sequence triggered by a hardware trigger. Do not write 1 to this bit if the BURST bit is set. This bit is only set to a 1 momentarily when written to launch a conversion sequence. It will consequently always read back as a zero."
                format="hex0x"
                id="ADC0@SEQ-CTRLA@START"
                offset="[26]"/>
         <field description="Writing a 1 to this bit will cause this conversion sequence to be continuously cycled through. Other sequence A triggers will be ignored while this bit is set. Repeated conversions can be halted by clearing this bit. The sequence currently in progress will be completed before conversions are terminated. Note that a new sequence could begin just before BURST is cleared."
                format="hex0x"
                id="ADC0@SEQ-CTRLA@BURST"
                offset="[27]"/>
         <field description="When this bit is set, a hardware trigger or a write to the START bit will launch a single conversion on the next channel in the sequence instead of the default response of launching an entire sequence of conversions. Once all of the channels comprising a sequence have been converted, a subsequent trigger will repeat the sequence beginning with the first enabled channel. Interrupt generation will still occur either after each individual conversion or at the end of the entire sequence, depending on the state of the MODE bit."
                format="hex0x"
                id="ADC0@SEQ-CTRLA@SINGLESTEP"
                offset="[28]"/>
         <field description="Set priority for sequence A." format="enum" enum="d1e163816"
                id="ADC0@SEQ-CTRLA@LOWPRIO"
                offset="[29]"/>
         <field description="Indicates whether the primary method for retrieving conversion results for this sequence will be accomplished via reading the global data register (SEQA_GDAT) at the end of each conversion, or the individual channel result registers at the end of the entire sequence. Impacts when conversion-complete interrupt/DMA trigger for sequence-A will be generated and which overrun conditions contribute to an overrun interrupt as described below."
                format="enum"
                enum="d1e163862"
                id="ADC0@SEQ-CTRLA@MODE"
                offset="[30]"/>
         <field description="Sequence Enable. In order to avoid spuriously triggering the sequence, care should be taken to only set the SEQn_ENA bit when the selected trigger input is in its INACTIVE state (as defined by the TRIGPOL bit). If this condition is not met, the sequence will be triggered immediately upon being enabled. In order to avoid spuriously triggering the sequence, care should be taken to only set the SEQn_ENA bit when the selected trigger input is in its INACTIVE state (as defined by the TRIGPOL bit). If this condition is not met, the sequence will be triggered immediately upon being enabled."
                format="enum"
                enum="d1e163908"
                id="ADC0@SEQ-CTRLA@SEQ-ENA"
                offset="[31]"/>
      </register>
      <register description="ADC Conversion Sequence-n control register: Controls triggering and channel selection for conversion sequence-n. Also specifies interrupt mode for sequence-n."
                format="hex0x"
                id="ADC0@SEQ-CTRLB"
                offset="0xc"
                size="4">
         <field description="Selects which one or more of the ADC channels will be sampled and converted when this sequence is launched. A 1 in any bit of this field will cause the corresponding channel to be included in the conversion sequence, where bit 0 corresponds to channel 0, bit 1 to channel 1 and so forth. When this conversion sequence is triggered, either by a hardware trigger or via software command, ADC conversions will be performed on each enabled channel, in sequence, beginning with the lowest-ordered channel. This field can ONLY be changed while SEQA_ENA (bit 31) is LOW. It is allowed to change this field and set bit 31 in the same write."
                format="hex0x"
                id="ADC0@SEQ-CTRLB@CHANNELS"
                offset="[11:0]"/>
         <field description="Selects which of the available hardware trigger sources will cause this conversion sequence to be initiated. Program the trigger input number in this field. See Table 476. In order to avoid generating a spurious trigger, it is recommended writing to this field only when SEQA_ENA (bit 31) is low. It is safe to change this field and set bit 31 in the same write."
                format="hex0x"
                id="ADC0@SEQ-CTRLB@TRIGGER"
                offset="[17:12]"/>
         <field description="Select the polarity of the selected input trigger for this conversion sequence. In order to avoid generating a spurious trigger, it is recommended writing to this field only when SEQA_ENA (bit 31) is low. It is safe to change this field and set bit 31 in the same write."
                format="enum"
                enum="d1e163669"
                id="ADC0@SEQ-CTRLB@TRIGPOL"
                offset="[18]"/>
         <field description="Setting this bit allows the hardware trigger input to bypass synchronization flip-flop stages and therefore shorten the time between the trigger input signal and the start of a conversion. There are slightly different criteria for whether or not this bit can be set depending on the clock operating mode: Synchronous mode (the ASYNMODE in the CTRL register = 0): Synchronization may be bypassed (this bit may be set) if the selected trigger source is already synchronous with the main system clock (eg. coming from an on-chip, system-clock-based timer). Whether this bit is set or not, a trigger pulse must be maintained for at least one system clock period. Asynchronous mode (the ASYNMODE in the CTRL register = 1): Synchronization may be bypassed (this bit may be set) if it is certain that the duration of a trigger input pulse will be at least one cycle of the ADC clock (regardless of whether the trigger comes from and on-chip or off-chip source). If this bit is NOT set, the trigger pulse must at least be maintained for one system clock period."
                format="enum"
                enum="d1e163715"
                id="ADC0@SEQ-CTRLB@SYNCBYPASS"
                offset="[19]"/>
         <field description="Writing a 1 to this field will launch one pass through this conversion sequence. The behavior will be identical to a sequence triggered by a hardware trigger. Do not write 1 to this bit if the BURST bit is set. This bit is only set to a 1 momentarily when written to launch a conversion sequence. It will consequently always read back as a zero."
                format="hex0x"
                id="ADC0@SEQ-CTRLB@START"
                offset="[26]"/>
         <field description="Writing a 1 to this bit will cause this conversion sequence to be continuously cycled through. Other sequence A triggers will be ignored while this bit is set. Repeated conversions can be halted by clearing this bit. The sequence currently in progress will be completed before conversions are terminated. Note that a new sequence could begin just before BURST is cleared."
                format="hex0x"
                id="ADC0@SEQ-CTRLB@BURST"
                offset="[27]"/>
         <field description="When this bit is set, a hardware trigger or a write to the START bit will launch a single conversion on the next channel in the sequence instead of the default response of launching an entire sequence of conversions. Once all of the channels comprising a sequence have been converted, a subsequent trigger will repeat the sequence beginning with the first enabled channel. Interrupt generation will still occur either after each individual conversion or at the end of the entire sequence, depending on the state of the MODE bit."
                format="hex0x"
                id="ADC0@SEQ-CTRLB@SINGLESTEP"
                offset="[28]"/>
         <field description="Set priority for sequence A." format="enum" enum="d1e163816"
                id="ADC0@SEQ-CTRLB@LOWPRIO"
                offset="[29]"/>
         <field description="Indicates whether the primary method for retrieving conversion results for this sequence will be accomplished via reading the global data register (SEQA_GDAT) at the end of each conversion, or the individual channel result registers at the end of the entire sequence. Impacts when conversion-complete interrupt/DMA trigger for sequence-A will be generated and which overrun conditions contribute to an overrun interrupt as described below."
                format="enum"
                enum="d1e163862"
                id="ADC0@SEQ-CTRLB@MODE"
                offset="[30]"/>
         <field description="Sequence Enable. In order to avoid spuriously triggering the sequence, care should be taken to only set the SEQn_ENA bit when the selected trigger input is in its INACTIVE state (as defined by the TRIGPOL bit). If this condition is not met, the sequence will be triggered immediately upon being enabled. In order to avoid spuriously triggering the sequence, care should be taken to only set the SEQn_ENA bit when the selected trigger input is in its INACTIVE state (as defined by the TRIGPOL bit). If this condition is not met, the sequence will be triggered immediately upon being enabled."
                format="enum"
                enum="d1e163908"
                id="ADC0@SEQ-CTRLB@SEQ-ENA"
                offset="[31]"/>
      </register>
      <register description="ADC Sequence-n Global Data register. This register contains the result of the most recent ADC conversion performed under sequence-n."
                format="hex0x"
                id="ADC0@SEQ-GDATA"
                offset="0x10"
                readOnly="true"
                size="4">
         <field description="This field contains the 12-bit ADC conversion result from the most recent conversion performed under conversion sequence associated with this register. The result is a binary fraction representing the voltage on the currently-selected input channel as it falls within the range of VREFP to VREFN. Zero in the field indicates that the voltage on the input pin was less than, equal to, or close to that on VREFN, while 0xFFF indicates that the voltage on the input was close to, equal to, or greater than that on VREFP. DATAVALID = 1 indicates that this result has not yet been read."
                format="hex0x"
                id="ADC0@SEQ-GDATA@RESULT"
                offset="[15:4]"/>
         <field description="Indicates whether the result of the last conversion performed was above, below or within the range established by the designated threshold comparison registers (THRn_LOW and THRn_HIGH)."
                format="hex0x"
                id="ADC0@SEQ-GDATA@THCMPRANGE"
                offset="[17:16]"/>
         <field description="Indicates whether the result of the last conversion performed represented a crossing of the threshold level established by the designated LOW threshold comparison register (THRn_LOW) and, if so, in what direction the crossing occurred."
                format="hex0x"
                id="ADC0@SEQ-GDATA@THCMPCROSS"
                offset="[19:18]"/>
         <field description="These bits contain the channel from which the RESULT bits were converted (e.g. 0000 identifies channel 0, 0001 channel 1, etc.)."
                format="hex0x"
                id="ADC0@SEQ-GDATA@CHN"
                offset="[29:26]"/>
         <field description="This bit is set if a new conversion result is loaded into the RESULT field before a previous result has been read - i.e. while the DATAVALID bit is set. This bit is cleared, along with the DATAVALID bit, whenever this register is read. This bit will contribute to an overrun interrupt/DMA trigger if the MODE bit (in SEQAA_CTRL) for the corresponding sequence is set to '0' (and if the overrun interrupt is enabled)."
                format="hex0x"
                id="ADC0@SEQ-GDATA@OVERRUN"
                offset="[30]"/>
         <field description="This bit is set to '1' at the end of each conversion when a new result is loaded into the RESULT field. It is cleared whenever this register is read. This bit will cause a conversion-complete interrupt for the corresponding sequence if the MODE bit (in SEQA_CTRL) for that sequence is set to 0 (and if the interrupt is enabled)."
                format="hex0x"
                id="ADC0@SEQ-GDATA@DATAVALID"
                offset="[31]"/>
      </register>
      <register description="ADC Sequence-n Global Data register. This register contains the result of the most recent ADC conversion performed under sequence-n."
                format="hex0x"
                id="ADC0@SEQ-GDATB"
                offset="0x14"
                readOnly="true"
                size="4">
         <field description="This field contains the 12-bit ADC conversion result from the most recent conversion performed under conversion sequence associated with this register. The result is a binary fraction representing the voltage on the currently-selected input channel as it falls within the range of VREFP to VREFN. Zero in the field indicates that the voltage on the input pin was less than, equal to, or close to that on VREFN, while 0xFFF indicates that the voltage on the input was close to, equal to, or greater than that on VREFP. DATAVALID = 1 indicates that this result has not yet been read."
                format="hex0x"
                id="ADC0@SEQ-GDATB@RESULT"
                offset="[15:4]"/>
         <field description="Indicates whether the result of the last conversion performed was above, below or within the range established by the designated threshold comparison registers (THRn_LOW and THRn_HIGH)."
                format="hex0x"
                id="ADC0@SEQ-GDATB@THCMPRANGE"
                offset="[17:16]"/>
         <field description="Indicates whether the result of the last conversion performed represented a crossing of the threshold level established by the designated LOW threshold comparison register (THRn_LOW) and, if so, in what direction the crossing occurred."
                format="hex0x"
                id="ADC0@SEQ-GDATB@THCMPCROSS"
                offset="[19:18]"/>
         <field description="These bits contain the channel from which the RESULT bits were converted (e.g. 0000 identifies channel 0, 0001 channel 1, etc.)."
                format="hex0x"
                id="ADC0@SEQ-GDATB@CHN"
                offset="[29:26]"/>
         <field description="This bit is set if a new conversion result is loaded into the RESULT field before a previous result has been read - i.e. while the DATAVALID bit is set. This bit is cleared, along with the DATAVALID bit, whenever this register is read. This bit will contribute to an overrun interrupt/DMA trigger if the MODE bit (in SEQAA_CTRL) for the corresponding sequence is set to '0' (and if the overrun interrupt is enabled)."
                format="hex0x"
                id="ADC0@SEQ-GDATB@OVERRUN"
                offset="[30]"/>
         <field description="This bit is set to '1' at the end of each conversion when a new result is loaded into the RESULT field. It is cleared whenever this register is read. This bit will cause a conversion-complete interrupt for the corresponding sequence if the MODE bit (in SEQA_CTRL) for that sequence is set to 0 (and if the interrupt is enabled)."
                format="hex0x"
                id="ADC0@SEQ-GDATB@DATAVALID"
                offset="[31]"/>
      </register>
      <register description="ADC Channel 0 Data register. This register contains the result of the most recent conversion completed on channel 0."
                format="hex0x"
                id="ADC0@DAT0"
                offset="0x20"
                readOnly="true"
                size="4">
         <field description="This field contains the 12-bit ADC conversion result from the last conversion performed on this channel. This will be a binary fraction representing the voltage on the AD0[n] pin, as it falls within the range of VREFP to VREFN. Zero in the field indicates that the voltage on the input pin was less than, equal to, or close to that on VREFN, while 0xFFF indicates that the voltage on the input was close to, equal to, or greater than that on VREFP."
                format="hex0x"
                id="ADC0@DAT0@RESULT"
                offset="[15:4]"/>
         <field description="Threshold Range Comparison result. 0x0 = In Range: The last completed conversion was greater than or equal to the value programmed into the designated LOW threshold register (THRn_LOW) but less than or equal to the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x1 = Below Range: The last completed conversion on was less than the value programmed into the designated LOW threshold register (THRn_LOW). 0x2 = Above Range: The last completed conversion was greater than the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x3 = Reserved."
                format="hex0x"
                id="ADC0@DAT0@THCMPRANGE"
                offset="[17:16]"/>
         <field description="Threshold Crossing Comparison result. 0x0 = No threshold Crossing detected: The most recent completed conversion on this channel had the same relationship (above or below) to the threshold value established by the designated LOW threshold register (THRn_LOW) as did the previous conversion on this channel. 0x1 = Reserved. 0x2 = Downward Threshold Crossing Detected. Indicates that a threshold crossing in the downward direction has occurred - i.e. the previous sample on this channel was above the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is below that threshold. 0x3 = Upward Threshold Crossing Detected. Indicates that a threshold crossing in the upward direction has occurred - i.e. the previous sample on this channel was below the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is above that threshold."
                format="hex0x"
                id="ADC0@DAT0@THCMPCROSS"
                offset="[19:18]"/>
         <field description="This field is hard-coded to contain the channel number that this particular register relates to (i.e. this field will contain 0b0000 for the DAT0 register, 0b0001 for the DAT1 register, etc)"
                format="hex0x"
                id="ADC0@DAT0@CHANNEL"
                offset="[29:26]"/>
         <field description="This bit will be set to a 1 if a new conversion on this channel completes and overwrites the previous contents of the RESULT field before it has been read - i.e. while the DONE bit is set. This bit is cleared, along with the DONE bit, whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. This bit (in any of the 12 registers) will cause an overrun interrupt/DMA trigger to be asserted if the overrun interrupt is enabled. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled."
                format="hex0x"
                id="ADC0@DAT0@OVERRUN"
                offset="[30]"/>
         <field description="This bit is set to 1 when an ADC conversion on this channel completes. This bit is cleared whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled."
                format="hex0x"
                id="ADC0@DAT0@DATAVALID"
                offset="[31]"/>
      </register>
      <register description="ADC Channel 0 Data register. This register contains the result of the most recent conversion completed on channel 0."
                format="hex0x"
                id="ADC0@DAT1"
                offset="0x24"
                readOnly="true"
                size="4">
         <field description="This field contains the 12-bit ADC conversion result from the last conversion performed on this channel. This will be a binary fraction representing the voltage on the AD0[n] pin, as it falls within the range of VREFP to VREFN. Zero in the field indicates that the voltage on the input pin was less than, equal to, or close to that on VREFN, while 0xFFF indicates that the voltage on the input was close to, equal to, or greater than that on VREFP."
                format="hex0x"
                id="ADC0@DAT1@RESULT"
                offset="[15:4]"/>
         <field description="Threshold Range Comparison result. 0x0 = In Range: The last completed conversion was greater than or equal to the value programmed into the designated LOW threshold register (THRn_LOW) but less than or equal to the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x1 = Below Range: The last completed conversion on was less than the value programmed into the designated LOW threshold register (THRn_LOW). 0x2 = Above Range: The last completed conversion was greater than the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x3 = Reserved."
                format="hex0x"
                id="ADC0@DAT1@THCMPRANGE"
                offset="[17:16]"/>
         <field description="Threshold Crossing Comparison result. 0x0 = No threshold Crossing detected: The most recent completed conversion on this channel had the same relationship (above or below) to the threshold value established by the designated LOW threshold register (THRn_LOW) as did the previous conversion on this channel. 0x1 = Reserved. 0x2 = Downward Threshold Crossing Detected. Indicates that a threshold crossing in the downward direction has occurred - i.e. the previous sample on this channel was above the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is below that threshold. 0x3 = Upward Threshold Crossing Detected. Indicates that a threshold crossing in the upward direction has occurred - i.e. the previous sample on this channel was below the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is above that threshold."
                format="hex0x"
                id="ADC0@DAT1@THCMPCROSS"
                offset="[19:18]"/>
         <field description="This field is hard-coded to contain the channel number that this particular register relates to (i.e. this field will contain 0b0000 for the DAT0 register, 0b0001 for the DAT1 register, etc)"
                format="hex0x"
                id="ADC0@DAT1@CHANNEL"
                offset="[29:26]"/>
         <field description="This bit will be set to a 1 if a new conversion on this channel completes and overwrites the previous contents of the RESULT field before it has been read - i.e. while the DONE bit is set. This bit is cleared, along with the DONE bit, whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. This bit (in any of the 12 registers) will cause an overrun interrupt/DMA trigger to be asserted if the overrun interrupt is enabled. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled."
                format="hex0x"
                id="ADC0@DAT1@OVERRUN"
                offset="[30]"/>
         <field description="This bit is set to 1 when an ADC conversion on this channel completes. This bit is cleared whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled."
                format="hex0x"
                id="ADC0@DAT1@DATAVALID"
                offset="[31]"/>
      </register>
      <register description="ADC Channel 0 Data register. This register contains the result of the most recent conversion completed on channel 0."
                format="hex0x"
                id="ADC0@DAT2"
                offset="0x28"
                readOnly="true"
                size="4">
         <field description="This field contains the 12-bit ADC conversion result from the last conversion performed on this channel. This will be a binary fraction representing the voltage on the AD0[n] pin, as it falls within the range of VREFP to VREFN. Zero in the field indicates that the voltage on the input pin was less than, equal to, or close to that on VREFN, while 0xFFF indicates that the voltage on the input was close to, equal to, or greater than that on VREFP."
                format="hex0x"
                id="ADC0@DAT2@RESULT"
                offset="[15:4]"/>
         <field description="Threshold Range Comparison result. 0x0 = In Range: The last completed conversion was greater than or equal to the value programmed into the designated LOW threshold register (THRn_LOW) but less than or equal to the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x1 = Below Range: The last completed conversion on was less than the value programmed into the designated LOW threshold register (THRn_LOW). 0x2 = Above Range: The last completed conversion was greater than the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x3 = Reserved."
                format="hex0x"
                id="ADC0@DAT2@THCMPRANGE"
                offset="[17:16]"/>
         <field description="Threshold Crossing Comparison result. 0x0 = No threshold Crossing detected: The most recent completed conversion on this channel had the same relationship (above or below) to the threshold value established by the designated LOW threshold register (THRn_LOW) as did the previous conversion on this channel. 0x1 = Reserved. 0x2 = Downward Threshold Crossing Detected. Indicates that a threshold crossing in the downward direction has occurred - i.e. the previous sample on this channel was above the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is below that threshold. 0x3 = Upward Threshold Crossing Detected. Indicates that a threshold crossing in the upward direction has occurred - i.e. the previous sample on this channel was below the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is above that threshold."
                format="hex0x"
                id="ADC0@DAT2@THCMPCROSS"
                offset="[19:18]"/>
         <field description="This field is hard-coded to contain the channel number that this particular register relates to (i.e. this field will contain 0b0000 for the DAT0 register, 0b0001 for the DAT1 register, etc)"
                format="hex0x"
                id="ADC0@DAT2@CHANNEL"
                offset="[29:26]"/>
         <field description="This bit will be set to a 1 if a new conversion on this channel completes and overwrites the previous contents of the RESULT field before it has been read - i.e. while the DONE bit is set. This bit is cleared, along with the DONE bit, whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. This bit (in any of the 12 registers) will cause an overrun interrupt/DMA trigger to be asserted if the overrun interrupt is enabled. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled."
                format="hex0x"
                id="ADC0@DAT2@OVERRUN"
                offset="[30]"/>
         <field description="This bit is set to 1 when an ADC conversion on this channel completes. This bit is cleared whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled."
                format="hex0x"
                id="ADC0@DAT2@DATAVALID"
                offset="[31]"/>
      </register>
      <register description="ADC Channel 0 Data register. This register contains the result of the most recent conversion completed on channel 0."
                format="hex0x"
                id="ADC0@DAT3"
                offset="0x2c"
                readOnly="true"
                size="4">
         <field description="This field contains the 12-bit ADC conversion result from the last conversion performed on this channel. This will be a binary fraction representing the voltage on the AD0[n] pin, as it falls within the range of VREFP to VREFN. Zero in the field indicates that the voltage on the input pin was less than, equal to, or close to that on VREFN, while 0xFFF indicates that the voltage on the input was close to, equal to, or greater than that on VREFP."
                format="hex0x"
                id="ADC0@DAT3@RESULT"
                offset="[15:4]"/>
         <field description="Threshold Range Comparison result. 0x0 = In Range: The last completed conversion was greater than or equal to the value programmed into the designated LOW threshold register (THRn_LOW) but less than or equal to the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x1 = Below Range: The last completed conversion on was less than the value programmed into the designated LOW threshold register (THRn_LOW). 0x2 = Above Range: The last completed conversion was greater than the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x3 = Reserved."
                format="hex0x"
                id="ADC0@DAT3@THCMPRANGE"
                offset="[17:16]"/>
         <field description="Threshold Crossing Comparison result. 0x0 = No threshold Crossing detected: The most recent completed conversion on this channel had the same relationship (above or below) to the threshold value established by the designated LOW threshold register (THRn_LOW) as did the previous conversion on this channel. 0x1 = Reserved. 0x2 = Downward Threshold Crossing Detected. Indicates that a threshold crossing in the downward direction has occurred - i.e. the previous sample on this channel was above the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is below that threshold. 0x3 = Upward Threshold Crossing Detected. Indicates that a threshold crossing in the upward direction has occurred - i.e. the previous sample on this channel was below the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is above that threshold."
                format="hex0x"
                id="ADC0@DAT3@THCMPCROSS"
                offset="[19:18]"/>
         <field description="This field is hard-coded to contain the channel number that this particular register relates to (i.e. this field will contain 0b0000 for the DAT0 register, 0b0001 for the DAT1 register, etc)"
                format="hex0x"
                id="ADC0@DAT3@CHANNEL"
                offset="[29:26]"/>
         <field description="This bit will be set to a 1 if a new conversion on this channel completes and overwrites the previous contents of the RESULT field before it has been read - i.e. while the DONE bit is set. This bit is cleared, along with the DONE bit, whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. This bit (in any of the 12 registers) will cause an overrun interrupt/DMA trigger to be asserted if the overrun interrupt is enabled. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled."
                format="hex0x"
                id="ADC0@DAT3@OVERRUN"
                offset="[30]"/>
         <field description="This bit is set to 1 when an ADC conversion on this channel completes. This bit is cleared whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled."
                format="hex0x"
                id="ADC0@DAT3@DATAVALID"
                offset="[31]"/>
      </register>
      <register description="ADC Channel 0 Data register. This register contains the result of the most recent conversion completed on channel 0."
                format="hex0x"
                id="ADC0@DAT4"
                offset="0x30"
                readOnly="true"
                size="4">
         <field description="This field contains the 12-bit ADC conversion result from the last conversion performed on this channel. This will be a binary fraction representing the voltage on the AD0[n] pin, as it falls within the range of VREFP to VREFN. Zero in the field indicates that the voltage on the input pin was less than, equal to, or close to that on VREFN, while 0xFFF indicates that the voltage on the input was close to, equal to, or greater than that on VREFP."
                format="hex0x"
                id="ADC0@DAT4@RESULT"
                offset="[15:4]"/>
         <field description="Threshold Range Comparison result. 0x0 = In Range: The last completed conversion was greater than or equal to the value programmed into the designated LOW threshold register (THRn_LOW) but less than or equal to the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x1 = Below Range: The last completed conversion on was less than the value programmed into the designated LOW threshold register (THRn_LOW). 0x2 = Above Range: The last completed conversion was greater than the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x3 = Reserved."
                format="hex0x"
                id="ADC0@DAT4@THCMPRANGE"
                offset="[17:16]"/>
         <field description="Threshold Crossing Comparison result. 0x0 = No threshold Crossing detected: The most recent completed conversion on this channel had the same relationship (above or below) to the threshold value established by the designated LOW threshold register (THRn_LOW) as did the previous conversion on this channel. 0x1 = Reserved. 0x2 = Downward Threshold Crossing Detected. Indicates that a threshold crossing in the downward direction has occurred - i.e. the previous sample on this channel was above the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is below that threshold. 0x3 = Upward Threshold Crossing Detected. Indicates that a threshold crossing in the upward direction has occurred - i.e. the previous sample on this channel was below the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is above that threshold."
                format="hex0x"
                id="ADC0@DAT4@THCMPCROSS"
                offset="[19:18]"/>
         <field description="This field is hard-coded to contain the channel number that this particular register relates to (i.e. this field will contain 0b0000 for the DAT0 register, 0b0001 for the DAT1 register, etc)"
                format="hex0x"
                id="ADC0@DAT4@CHANNEL"
                offset="[29:26]"/>
         <field description="This bit will be set to a 1 if a new conversion on this channel completes and overwrites the previous contents of the RESULT field before it has been read - i.e. while the DONE bit is set. This bit is cleared, along with the DONE bit, whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. This bit (in any of the 12 registers) will cause an overrun interrupt/DMA trigger to be asserted if the overrun interrupt is enabled. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled."
                format="hex0x"
                id="ADC0@DAT4@OVERRUN"
                offset="[30]"/>
         <field description="This bit is set to 1 when an ADC conversion on this channel completes. This bit is cleared whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled."
                format="hex0x"
                id="ADC0@DAT4@DATAVALID"
                offset="[31]"/>
      </register>
      <register description="ADC Channel 0 Data register. This register contains the result of the most recent conversion completed on channel 0."
                format="hex0x"
                id="ADC0@DAT5"
                offset="0x34"
                readOnly="true"
                size="4">
         <field description="This field contains the 12-bit ADC conversion result from the last conversion performed on this channel. This will be a binary fraction representing the voltage on the AD0[n] pin, as it falls within the range of VREFP to VREFN. Zero in the field indicates that the voltage on the input pin was less than, equal to, or close to that on VREFN, while 0xFFF indicates that the voltage on the input was close to, equal to, or greater than that on VREFP."
                format="hex0x"
                id="ADC0@DAT5@RESULT"
                offset="[15:4]"/>
         <field description="Threshold Range Comparison result. 0x0 = In Range: The last completed conversion was greater than or equal to the value programmed into the designated LOW threshold register (THRn_LOW) but less than or equal to the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x1 = Below Range: The last completed conversion on was less than the value programmed into the designated LOW threshold register (THRn_LOW). 0x2 = Above Range: The last completed conversion was greater than the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x3 = Reserved."
                format="hex0x"
                id="ADC0@DAT5@THCMPRANGE"
                offset="[17:16]"/>
         <field description="Threshold Crossing Comparison result. 0x0 = No threshold Crossing detected: The most recent completed conversion on this channel had the same relationship (above or below) to the threshold value established by the designated LOW threshold register (THRn_LOW) as did the previous conversion on this channel. 0x1 = Reserved. 0x2 = Downward Threshold Crossing Detected. Indicates that a threshold crossing in the downward direction has occurred - i.e. the previous sample on this channel was above the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is below that threshold. 0x3 = Upward Threshold Crossing Detected. Indicates that a threshold crossing in the upward direction has occurred - i.e. the previous sample on this channel was below the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is above that threshold."
                format="hex0x"
                id="ADC0@DAT5@THCMPCROSS"
                offset="[19:18]"/>
         <field description="This field is hard-coded to contain the channel number that this particular register relates to (i.e. this field will contain 0b0000 for the DAT0 register, 0b0001 for the DAT1 register, etc)"
                format="hex0x"
                id="ADC0@DAT5@CHANNEL"
                offset="[29:26]"/>
         <field description="This bit will be set to a 1 if a new conversion on this channel completes and overwrites the previous contents of the RESULT field before it has been read - i.e. while the DONE bit is set. This bit is cleared, along with the DONE bit, whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. This bit (in any of the 12 registers) will cause an overrun interrupt/DMA trigger to be asserted if the overrun interrupt is enabled. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled."
                format="hex0x"
                id="ADC0@DAT5@OVERRUN"
                offset="[30]"/>
         <field description="This bit is set to 1 when an ADC conversion on this channel completes. This bit is cleared whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled."
                format="hex0x"
                id="ADC0@DAT5@DATAVALID"
                offset="[31]"/>
      </register>
      <register description="ADC Channel 0 Data register. This register contains the result of the most recent conversion completed on channel 0."
                format="hex0x"
                id="ADC0@DAT6"
                offset="0x38"
                readOnly="true"
                size="4">
         <field description="This field contains the 12-bit ADC conversion result from the last conversion performed on this channel. This will be a binary fraction representing the voltage on the AD0[n] pin, as it falls within the range of VREFP to VREFN. Zero in the field indicates that the voltage on the input pin was less than, equal to, or close to that on VREFN, while 0xFFF indicates that the voltage on the input was close to, equal to, or greater than that on VREFP."
                format="hex0x"
                id="ADC0@DAT6@RESULT"
                offset="[15:4]"/>
         <field description="Threshold Range Comparison result. 0x0 = In Range: The last completed conversion was greater than or equal to the value programmed into the designated LOW threshold register (THRn_LOW) but less than or equal to the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x1 = Below Range: The last completed conversion on was less than the value programmed into the designated LOW threshold register (THRn_LOW). 0x2 = Above Range: The last completed conversion was greater than the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x3 = Reserved."
                format="hex0x"
                id="ADC0@DAT6@THCMPRANGE"
                offset="[17:16]"/>
         <field description="Threshold Crossing Comparison result. 0x0 = No threshold Crossing detected: The most recent completed conversion on this channel had the same relationship (above or below) to the threshold value established by the designated LOW threshold register (THRn_LOW) as did the previous conversion on this channel. 0x1 = Reserved. 0x2 = Downward Threshold Crossing Detected. Indicates that a threshold crossing in the downward direction has occurred - i.e. the previous sample on this channel was above the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is below that threshold. 0x3 = Upward Threshold Crossing Detected. Indicates that a threshold crossing in the upward direction has occurred - i.e. the previous sample on this channel was below the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is above that threshold."
                format="hex0x"
                id="ADC0@DAT6@THCMPCROSS"
                offset="[19:18]"/>
         <field description="This field is hard-coded to contain the channel number that this particular register relates to (i.e. this field will contain 0b0000 for the DAT0 register, 0b0001 for the DAT1 register, etc)"
                format="hex0x"
                id="ADC0@DAT6@CHANNEL"
                offset="[29:26]"/>
         <field description="This bit will be set to a 1 if a new conversion on this channel completes and overwrites the previous contents of the RESULT field before it has been read - i.e. while the DONE bit is set. This bit is cleared, along with the DONE bit, whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. This bit (in any of the 12 registers) will cause an overrun interrupt/DMA trigger to be asserted if the overrun interrupt is enabled. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled."
                format="hex0x"
                id="ADC0@DAT6@OVERRUN"
                offset="[30]"/>
         <field description="This bit is set to 1 when an ADC conversion on this channel completes. This bit is cleared whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled."
                format="hex0x"
                id="ADC0@DAT6@DATAVALID"
                offset="[31]"/>
      </register>
      <register description="ADC Channel 0 Data register. This register contains the result of the most recent conversion completed on channel 0."
                format="hex0x"
                id="ADC0@DAT7"
                offset="0x3c"
                readOnly="true"
                size="4">
         <field description="This field contains the 12-bit ADC conversion result from the last conversion performed on this channel. This will be a binary fraction representing the voltage on the AD0[n] pin, as it falls within the range of VREFP to VREFN. Zero in the field indicates that the voltage on the input pin was less than, equal to, or close to that on VREFN, while 0xFFF indicates that the voltage on the input was close to, equal to, or greater than that on VREFP."
                format="hex0x"
                id="ADC0@DAT7@RESULT"
                offset="[15:4]"/>
         <field description="Threshold Range Comparison result. 0x0 = In Range: The last completed conversion was greater than or equal to the value programmed into the designated LOW threshold register (THRn_LOW) but less than or equal to the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x1 = Below Range: The last completed conversion on was less than the value programmed into the designated LOW threshold register (THRn_LOW). 0x2 = Above Range: The last completed conversion was greater than the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x3 = Reserved."
                format="hex0x"
                id="ADC0@DAT7@THCMPRANGE"
                offset="[17:16]"/>
         <field description="Threshold Crossing Comparison result. 0x0 = No threshold Crossing detected: The most recent completed conversion on this channel had the same relationship (above or below) to the threshold value established by the designated LOW threshold register (THRn_LOW) as did the previous conversion on this channel. 0x1 = Reserved. 0x2 = Downward Threshold Crossing Detected. Indicates that a threshold crossing in the downward direction has occurred - i.e. the previous sample on this channel was above the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is below that threshold. 0x3 = Upward Threshold Crossing Detected. Indicates that a threshold crossing in the upward direction has occurred - i.e. the previous sample on this channel was below the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is above that threshold."
                format="hex0x"
                id="ADC0@DAT7@THCMPCROSS"
                offset="[19:18]"/>
         <field description="This field is hard-coded to contain the channel number that this particular register relates to (i.e. this field will contain 0b0000 for the DAT0 register, 0b0001 for the DAT1 register, etc)"
                format="hex0x"
                id="ADC0@DAT7@CHANNEL"
                offset="[29:26]"/>
         <field description="This bit will be set to a 1 if a new conversion on this channel completes and overwrites the previous contents of the RESULT field before it has been read - i.e. while the DONE bit is set. This bit is cleared, along with the DONE bit, whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. This bit (in any of the 12 registers) will cause an overrun interrupt/DMA trigger to be asserted if the overrun interrupt is enabled. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled."
                format="hex0x"
                id="ADC0@DAT7@OVERRUN"
                offset="[30]"/>
         <field description="This bit is set to 1 when an ADC conversion on this channel completes. This bit is cleared whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled."
                format="hex0x"
                id="ADC0@DAT7@DATAVALID"
                offset="[31]"/>
      </register>
      <register description="ADC Channel 0 Data register. This register contains the result of the most recent conversion completed on channel 0."
                format="hex0x"
                id="ADC0@DAT8"
                offset="0x40"
                readOnly="true"
                size="4">
         <field description="This field contains the 12-bit ADC conversion result from the last conversion performed on this channel. This will be a binary fraction representing the voltage on the AD0[n] pin, as it falls within the range of VREFP to VREFN. Zero in the field indicates that the voltage on the input pin was less than, equal to, or close to that on VREFN, while 0xFFF indicates that the voltage on the input was close to, equal to, or greater than that on VREFP."
                format="hex0x"
                id="ADC0@DAT8@RESULT"
                offset="[15:4]"/>
         <field description="Threshold Range Comparison result. 0x0 = In Range: The last completed conversion was greater than or equal to the value programmed into the designated LOW threshold register (THRn_LOW) but less than or equal to the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x1 = Below Range: The last completed conversion on was less than the value programmed into the designated LOW threshold register (THRn_LOW). 0x2 = Above Range: The last completed conversion was greater than the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x3 = Reserved."
                format="hex0x"
                id="ADC0@DAT8@THCMPRANGE"
                offset="[17:16]"/>
         <field description="Threshold Crossing Comparison result. 0x0 = No threshold Crossing detected: The most recent completed conversion on this channel had the same relationship (above or below) to the threshold value established by the designated LOW threshold register (THRn_LOW) as did the previous conversion on this channel. 0x1 = Reserved. 0x2 = Downward Threshold Crossing Detected. Indicates that a threshold crossing in the downward direction has occurred - i.e. the previous sample on this channel was above the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is below that threshold. 0x3 = Upward Threshold Crossing Detected. Indicates that a threshold crossing in the upward direction has occurred - i.e. the previous sample on this channel was below the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is above that threshold."
                format="hex0x"
                id="ADC0@DAT8@THCMPCROSS"
                offset="[19:18]"/>
         <field description="This field is hard-coded to contain the channel number that this particular register relates to (i.e. this field will contain 0b0000 for the DAT0 register, 0b0001 for the DAT1 register, etc)"
                format="hex0x"
                id="ADC0@DAT8@CHANNEL"
                offset="[29:26]"/>
         <field description="This bit will be set to a 1 if a new conversion on this channel completes and overwrites the previous contents of the RESULT field before it has been read - i.e. while the DONE bit is set. This bit is cleared, along with the DONE bit, whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. This bit (in any of the 12 registers) will cause an overrun interrupt/DMA trigger to be asserted if the overrun interrupt is enabled. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled."
                format="hex0x"
                id="ADC0@DAT8@OVERRUN"
                offset="[30]"/>
         <field description="This bit is set to 1 when an ADC conversion on this channel completes. This bit is cleared whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled."
                format="hex0x"
                id="ADC0@DAT8@DATAVALID"
                offset="[31]"/>
      </register>
      <register description="ADC Channel 0 Data register. This register contains the result of the most recent conversion completed on channel 0."
                format="hex0x"
                id="ADC0@DAT9"
                offset="0x44"
                readOnly="true"
                size="4">
         <field description="This field contains the 12-bit ADC conversion result from the last conversion performed on this channel. This will be a binary fraction representing the voltage on the AD0[n] pin, as it falls within the range of VREFP to VREFN. Zero in the field indicates that the voltage on the input pin was less than, equal to, or close to that on VREFN, while 0xFFF indicates that the voltage on the input was close to, equal to, or greater than that on VREFP."
                format="hex0x"
                id="ADC0@DAT9@RESULT"
                offset="[15:4]"/>
         <field description="Threshold Range Comparison result. 0x0 = In Range: The last completed conversion was greater than or equal to the value programmed into the designated LOW threshold register (THRn_LOW) but less than or equal to the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x1 = Below Range: The last completed conversion on was less than the value programmed into the designated LOW threshold register (THRn_LOW). 0x2 = Above Range: The last completed conversion was greater than the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x3 = Reserved."
                format="hex0x"
                id="ADC0@DAT9@THCMPRANGE"
                offset="[17:16]"/>
         <field description="Threshold Crossing Comparison result. 0x0 = No threshold Crossing detected: The most recent completed conversion on this channel had the same relationship (above or below) to the threshold value established by the designated LOW threshold register (THRn_LOW) as did the previous conversion on this channel. 0x1 = Reserved. 0x2 = Downward Threshold Crossing Detected. Indicates that a threshold crossing in the downward direction has occurred - i.e. the previous sample on this channel was above the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is below that threshold. 0x3 = Upward Threshold Crossing Detected. Indicates that a threshold crossing in the upward direction has occurred - i.e. the previous sample on this channel was below the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is above that threshold."
                format="hex0x"
                id="ADC0@DAT9@THCMPCROSS"
                offset="[19:18]"/>
         <field description="This field is hard-coded to contain the channel number that this particular register relates to (i.e. this field will contain 0b0000 for the DAT0 register, 0b0001 for the DAT1 register, etc)"
                format="hex0x"
                id="ADC0@DAT9@CHANNEL"
                offset="[29:26]"/>
         <field description="This bit will be set to a 1 if a new conversion on this channel completes and overwrites the previous contents of the RESULT field before it has been read - i.e. while the DONE bit is set. This bit is cleared, along with the DONE bit, whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. This bit (in any of the 12 registers) will cause an overrun interrupt/DMA trigger to be asserted if the overrun interrupt is enabled. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled."
                format="hex0x"
                id="ADC0@DAT9@OVERRUN"
                offset="[30]"/>
         <field description="This bit is set to 1 when an ADC conversion on this channel completes. This bit is cleared whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled."
                format="hex0x"
                id="ADC0@DAT9@DATAVALID"
                offset="[31]"/>
      </register>
      <register description="ADC Channel 0 Data register. This register contains the result of the most recent conversion completed on channel 0."
                format="hex0x"
                id="ADC0@DAT10"
                offset="0x48"
                readOnly="true"
                size="4">
         <field description="This field contains the 12-bit ADC conversion result from the last conversion performed on this channel. This will be a binary fraction representing the voltage on the AD0[n] pin, as it falls within the range of VREFP to VREFN. Zero in the field indicates that the voltage on the input pin was less than, equal to, or close to that on VREFN, while 0xFFF indicates that the voltage on the input was close to, equal to, or greater than that on VREFP."
                format="hex0x"
                id="ADC0@DAT10@RESULT"
                offset="[15:4]"/>
         <field description="Threshold Range Comparison result. 0x0 = In Range: The last completed conversion was greater than or equal to the value programmed into the designated LOW threshold register (THRn_LOW) but less than or equal to the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x1 = Below Range: The last completed conversion on was less than the value programmed into the designated LOW threshold register (THRn_LOW). 0x2 = Above Range: The last completed conversion was greater than the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x3 = Reserved."
                format="hex0x"
                id="ADC0@DAT10@THCMPRANGE"
                offset="[17:16]"/>
         <field description="Threshold Crossing Comparison result. 0x0 = No threshold Crossing detected: The most recent completed conversion on this channel had the same relationship (above or below) to the threshold value established by the designated LOW threshold register (THRn_LOW) as did the previous conversion on this channel. 0x1 = Reserved. 0x2 = Downward Threshold Crossing Detected. Indicates that a threshold crossing in the downward direction has occurred - i.e. the previous sample on this channel was above the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is below that threshold. 0x3 = Upward Threshold Crossing Detected. Indicates that a threshold crossing in the upward direction has occurred - i.e. the previous sample on this channel was below the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is above that threshold."
                format="hex0x"
                id="ADC0@DAT10@THCMPCROSS"
                offset="[19:18]"/>
         <field description="This field is hard-coded to contain the channel number that this particular register relates to (i.e. this field will contain 0b0000 for the DAT0 register, 0b0001 for the DAT1 register, etc)"
                format="hex0x"
                id="ADC0@DAT10@CHANNEL"
                offset="[29:26]"/>
         <field description="This bit will be set to a 1 if a new conversion on this channel completes and overwrites the previous contents of the RESULT field before it has been read - i.e. while the DONE bit is set. This bit is cleared, along with the DONE bit, whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. This bit (in any of the 12 registers) will cause an overrun interrupt/DMA trigger to be asserted if the overrun interrupt is enabled. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled."
                format="hex0x"
                id="ADC0@DAT10@OVERRUN"
                offset="[30]"/>
         <field description="This bit is set to 1 when an ADC conversion on this channel completes. This bit is cleared whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled."
                format="hex0x"
                id="ADC0@DAT10@DATAVALID"
                offset="[31]"/>
      </register>
      <register description="ADC Channel 0 Data register. This register contains the result of the most recent conversion completed on channel 0."
                format="hex0x"
                id="ADC0@DAT11"
                offset="0x4c"
                readOnly="true"
                size="4">
         <field description="This field contains the 12-bit ADC conversion result from the last conversion performed on this channel. This will be a binary fraction representing the voltage on the AD0[n] pin, as it falls within the range of VREFP to VREFN. Zero in the field indicates that the voltage on the input pin was less than, equal to, or close to that on VREFN, while 0xFFF indicates that the voltage on the input was close to, equal to, or greater than that on VREFP."
                format="hex0x"
                id="ADC0@DAT11@RESULT"
                offset="[15:4]"/>
         <field description="Threshold Range Comparison result. 0x0 = In Range: The last completed conversion was greater than or equal to the value programmed into the designated LOW threshold register (THRn_LOW) but less than or equal to the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x1 = Below Range: The last completed conversion on was less than the value programmed into the designated LOW threshold register (THRn_LOW). 0x2 = Above Range: The last completed conversion was greater than the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x3 = Reserved."
                format="hex0x"
                id="ADC0@DAT11@THCMPRANGE"
                offset="[17:16]"/>
         <field description="Threshold Crossing Comparison result. 0x0 = No threshold Crossing detected: The most recent completed conversion on this channel had the same relationship (above or below) to the threshold value established by the designated LOW threshold register (THRn_LOW) as did the previous conversion on this channel. 0x1 = Reserved. 0x2 = Downward Threshold Crossing Detected. Indicates that a threshold crossing in the downward direction has occurred - i.e. the previous sample on this channel was above the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is below that threshold. 0x3 = Upward Threshold Crossing Detected. Indicates that a threshold crossing in the upward direction has occurred - i.e. the previous sample on this channel was below the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is above that threshold."
                format="hex0x"
                id="ADC0@DAT11@THCMPCROSS"
                offset="[19:18]"/>
         <field description="This field is hard-coded to contain the channel number that this particular register relates to (i.e. this field will contain 0b0000 for the DAT0 register, 0b0001 for the DAT1 register, etc)"
                format="hex0x"
                id="ADC0@DAT11@CHANNEL"
                offset="[29:26]"/>
         <field description="This bit will be set to a 1 if a new conversion on this channel completes and overwrites the previous contents of the RESULT field before it has been read - i.e. while the DONE bit is set. This bit is cleared, along with the DONE bit, whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. This bit (in any of the 12 registers) will cause an overrun interrupt/DMA trigger to be asserted if the overrun interrupt is enabled. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled."
                format="hex0x"
                id="ADC0@DAT11@OVERRUN"
                offset="[30]"/>
         <field description="This bit is set to 1 when an ADC conversion on this channel completes. This bit is cleared whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled."
                format="hex0x"
                id="ADC0@DAT11@DATAVALID"
                offset="[31]"/>
      </register>
      <register description="ADC Low Compare Threshold register 0: Contains the lower threshold level for automatic threshold comparison for any channels linked to threshold pair 0."
                format="hex0x"
                id="ADC0@THR0-LOW"
                offset="0x50"
                size="4">
         <field description="Low threshold value against which ADC results will be compared"
                format="hex0x"
                id="ADC0@THR0-LOW@THRLOW"
                offset="[15:4]"/>
      </register>
      <register description="ADC Low Compare Threshold register 1: Contains the lower threshold level for automatic threshold comparison for any channels linked to threshold pair 1."
                format="hex0x"
                id="ADC0@THR1-LOW"
                offset="0x54"
                size="4">
         <field description="Low threshold value against which ADC results will be compared"
                format="hex0x"
                id="ADC0@THR1-LOW@THRLOW"
                offset="[15:4]"/>
      </register>
      <register description="ADC High Compare Threshold register 0: Contains the upper threshold level for automatic threshold comparison for any channels linked to threshold pair 0."
                format="hex0x"
                id="ADC0@THR0-HIGH"
                offset="0x58"
                size="4">
         <field description="High threshold value against which ADC results will be compared"
                format="hex0x"
                id="ADC0@THR0-HIGH@THRHIGH"
                offset="[15:4]"/>
      </register>
      <register description="ADC High Compare Threshold register 1: Contains the upper threshold level for automatic threshold comparison for any channels linked to threshold pair 1."
                format="hex0x"
                id="ADC0@THR1-HIGH"
                offset="0x5c"
                size="4">
         <field description="High threshold value against which ADC results will be compared"
                format="hex0x"
                id="ADC0@THR1-HIGH@THRHIGH"
                offset="[15:4]"/>
      </register>
      <register description="ADC Channel-Threshold Select register. Specifies which set of threshold compare registers are to be used for each channel"
                format="hex0x"
                id="ADC0@CHAN-THRSEL"
                offset="0x60"
                size="4">
         <field description="Threshold select for channel 0." format="enum" enum="d1e164456"
                id="ADC0@CHAN-THRSEL@CH0-THRSEL"
                offset="[0]"/>
         <field description="Threshold select for channel 1. See description for channel 0."
                format="hex0x"
                id="ADC0@CHAN-THRSEL@CH1-THRSEL"
                offset="[1]"/>
         <field description="Threshold select for channel 2. See description for channel 0."
                format="hex0x"
                id="ADC0@CHAN-THRSEL@CH2-THRSEL"
                offset="[2]"/>
         <field description="Threshold select for channel 3. See description for channel 0."
                format="hex0x"
                id="ADC0@CHAN-THRSEL@CH3-THRSEL"
                offset="[3]"/>
         <field description="Threshold select for channel 4. See description for channel 0."
                format="hex0x"
                id="ADC0@CHAN-THRSEL@CH4-THRSEL"
                offset="[4]"/>
         <field description="Threshold select for channel 5. See description for channel 0."
                format="hex0x"
                id="ADC0@CHAN-THRSEL@CH5-THRSEL"
                offset="[5]"/>
         <field description="Threshold select for channel 6. See description for channel 0."
                format="hex0x"
                id="ADC0@CHAN-THRSEL@CH6-THRSEL"
                offset="[6]"/>
         <field description="Threshold select for channel 7. See description for channel 0."
                format="hex0x"
                id="ADC0@CHAN-THRSEL@CH7-THRSEL"
                offset="[7]"/>
         <field description="Threshold select for channel 8. See description for channel 0."
                format="hex0x"
                id="ADC0@CHAN-THRSEL@CH8-THRSEL"
                offset="[8]"/>
         <field description="Threshold select for channel 9. See description for channel 0."
                format="hex0x"
                id="ADC0@CHAN-THRSEL@CH9-THRSEL"
                offset="[9]"/>
         <field description="Threshold select for channel 10. See description for channel 0."
                format="hex0x"
                id="ADC0@CHAN-THRSEL@CH10-THRSEL"
                offset="[10]"/>
         <field description="Threshold select for channel 11. See description for channel 0."
                format="hex0x"
                id="ADC0@CHAN-THRSEL@CH11-THRSEL"
                offset="[11]"/>
      </register>
      <register description="ADC Interrupt Enable register. This register contains enable bits that enable the sequence-A, sequence-B, threshold compare and data overrun interrupts to be generated."
                format="hex0x"
                id="ADC0@INTEN"
                offset="0x64"
                size="4">
         <field description="Sequence A interrupt enable." format="enum" enum="d1e164730"
                id="ADC0@INTEN@SEQA-INTEN"
                offset="[0]"/>
         <field description="Sequence B interrupt enable." format="enum" enum="d1e164776"
                id="ADC0@INTEN@SEQB-INTEN"
                offset="[1]"/>
         <field description="Overrun interrupt enable." format="enum" enum="d1e164822"
                id="ADC0@INTEN@OVR-INTEN"
                offset="[2]"/>
         <field description="Threshold comparison interrupt enable for channel 0."
                format="enum"
                enum="d1e164868"
                id="ADC0@INTEN@ADCMPINTEN0"
                offset="[4:3]"/>
         <field description="Channel 1 threshold comparison interrupt enable. See description for channel 0."
                format="hex0x"
                id="ADC0@INTEN@ADCMPINTEN1"
                offset="[6:5]"/>
         <field description="Channel 2 threshold comparison interrupt enable. See description for channel 0."
                format="hex0x"
                id="ADC0@INTEN@ADCMPINTEN2"
                offset="[8:7]"/>
         <field description="Channel 3 threshold comparison interrupt enable. See description for channel 0."
                format="hex0x"
                id="ADC0@INTEN@ADCMPINTEN3"
                offset="[10:9]"/>
         <field description="Channel 4 threshold comparison interrupt enable. See description for channel 0."
                format="hex0x"
                id="ADC0@INTEN@ADCMPINTEN4"
                offset="[12:11]"/>
         <field description="Channel 5 threshold comparison interrupt enable. See description for channel 0."
                format="hex0x"
                id="ADC0@INTEN@ADCMPINTEN5"
                offset="[14:13]"/>
         <field description="Channel 6 threshold comparison interrupt enable. See description for channel 0."
                format="hex0x"
                id="ADC0@INTEN@ADCMPINTEN6"
                offset="[16:15]"/>
         <field description="Channel 7 threshold comparison interrupt enable. See description for channel 0."
                format="hex0x"
                id="ADC0@INTEN@ADCMPINTEN7"
                offset="[18:17]"/>
         <field description="Channel 8 threshold comparison interrupt enable. See description for channel 0."
                format="hex0x"
                id="ADC0@INTEN@ADCMPINTEN8"
                offset="[20:19]"/>
         <field description="Channel 9 threshold comparison interrupt enable. See description for channel 0."
                format="hex0x"
                id="ADC0@INTEN@ADCMPINTEN9"
                offset="[22:21]"/>
         <field description="Channel 10 threshold comparison interrupt enable. See description for channel 0."
                format="hex0x"
                id="ADC0@INTEN@ADCMPINTEN10"
                offset="[24:23]"/>
         <field description="Channel 21 threshold comparison interrupt enable. See description for channel 0."
                format="hex0x"
                id="ADC0@INTEN@ADCMPINTEN11"
                offset="[26:25]"/>
      </register>
      <register description="ADC Flags register. Contains the four interrupt/DMA trigger flags and the individual component overrun and threshold-compare flags. (The overrun bits replicate information stored in the result registers)."
                format="hex0x"
                id="ADC0@FLAGS"
                offset="0x68"
                size="4">
         <field description="Threshold comparison event on Channel 0. Set to 1 upon either an out-of-range result or a threshold-crossing result if enabled to do so in the INTEN register. This bit is cleared by writing a 1."
                format="hex0x"
                id="ADC0@FLAGS@THCMP0"
                offset="[0]"/>
         <field description="Threshold comparison event on Channel 1. See description for channel 0."
                format="hex0x"
                id="ADC0@FLAGS@THCMP1"
                offset="[1]"/>
         <field description="Threshold comparison event on Channel 2. See description for channel 0."
                format="hex0x"
                id="ADC0@FLAGS@THCMP2"
                offset="[2]"/>
         <field description="Threshold comparison event on Channel 3. See description for channel 0."
                format="hex0x"
                id="ADC0@FLAGS@THCMP3"
                offset="[3]"/>
         <field description="Threshold comparison event on Channel 4. See description for channel 0."
                format="hex0x"
                id="ADC0@FLAGS@THCMP4"
                offset="[4]"/>
         <field description="Threshold comparison event on Channel 5. See description for channel 0."
                format="hex0x"
                id="ADC0@FLAGS@THCMP5"
                offset="[5]"/>
         <field description="Threshold comparison event on Channel 6. See description for channel 0."
                format="hex0x"
                id="ADC0@FLAGS@THCMP6"
                offset="[6]"/>
         <field description="Threshold comparison event on Channel 7. See description for channel 0."
                format="hex0x"
                id="ADC0@FLAGS@THCMP7"
                offset="[7]"/>
         <field description="Threshold comparison event on Channel 8. See description for channel 0."
                format="hex0x"
                id="ADC0@FLAGS@THCMP8"
                offset="[8]"/>
         <field description="Threshold comparison event on Channel 9. See description for channel 0."
                format="hex0x"
                id="ADC0@FLAGS@THCMP9"
                offset="[9]"/>
         <field description="Threshold comparison event on Channel 10. See description for channel 0."
                format="hex0x"
                id="ADC0@FLAGS@THCMP10"
                offset="[10]"/>
         <field description="Threshold comparison event on Channel 11. See description for channel 0."
                format="hex0x"
                id="ADC0@FLAGS@THCMP11"
                offset="[11]"/>
         <field description="Mirrors the OVERRRUN status flag from the result register for ADC channel 0"
                format="hex0x"
                id="ADC0@FLAGS@OVERRUN0"
                offset="[12]"/>
         <field description="Mirrors the OVERRRUN status flag from the result register for ADC channel 1"
                format="hex0x"
                id="ADC0@FLAGS@OVERRUN1"
                offset="[13]"/>
         <field description="Mirrors the OVERRRUN status flag from the result register for ADC channel 2"
                format="hex0x"
                id="ADC0@FLAGS@OVERRUN2"
                offset="[14]"/>
         <field description="Mirrors the OVERRRUN status flag from the result register for ADC channel 3"
                format="hex0x"
                id="ADC0@FLAGS@OVERRUN3"
                offset="[15]"/>
         <field description="Mirrors the OVERRRUN status flag from the result register for ADC channel 4"
                format="hex0x"
                id="ADC0@FLAGS@OVERRUN4"
                offset="[16]"/>
         <field description="Mirrors the OVERRRUN status flag from the result register for ADC channel 5"
                format="hex0x"
                id="ADC0@FLAGS@OVERRUN5"
                offset="[17]"/>
         <field description="Mirrors the OVERRRUN status flag from the result register for ADC channel 6"
                format="hex0x"
                id="ADC0@FLAGS@OVERRUN6"
                offset="[18]"/>
         <field description="Mirrors the OVERRRUN status flag from the result register for ADC channel 7"
                format="hex0x"
                id="ADC0@FLAGS@OVERRUN7"
                offset="[19]"/>
         <field description="Mirrors the OVERRRUN status flag from the result register for ADC channel 8"
                format="hex0x"
                id="ADC0@FLAGS@OVERRUN8"
                offset="[20]"/>
         <field description="Mirrors the OVERRRUN status flag from the result register for ADC channel 9"
                format="hex0x"
                id="ADC0@FLAGS@OVERRUN9"
                offset="[21]"/>
         <field description="Mirrors the OVERRRUN status flag from the result register for ADC channel 10"
                format="hex0x"
                id="ADC0@FLAGS@OVERRUN10"
                offset="[22]"/>
         <field description="Mirrors the OVERRRUN status flag from the result register for ADC channel 11"
                format="hex0x"
                id="ADC0@FLAGS@OVERRUN11"
                offset="[23]"/>
         <field description="Mirrors the global OVERRUN status flag in the SEQA_GDAT register"
                format="hex0x"
                id="ADC0@FLAGS@SEQA-OVR"
                offset="[24]"/>
         <field description="Mirrors the global OVERRUN status flag in the SEQB_GDAT register"
                format="hex0x"
                id="ADC0@FLAGS@SEQB-OVR"
                offset="[25]"/>
         <field description="Sequence A interrupt/DMA trigger. If the MODE bit in the SEQA_CTRL register is 0, this flag will mirror the DATAVALID bit in the sequence A global data register (SEQA_GDAT), which is set at the end of every ADC conversion performed as part of sequence A. It will be cleared automatically when the SEQA_GDAT register is read. If the MODE bit in the SEQA_CTRL register is 1, this flag will be set upon completion of an entire A sequence. In this case it must be cleared by writing a 1 to this SEQA_INT bit. This interrupt must be enabled in the INTEN register."
                format="hex0x"
                id="ADC0@FLAGS@SEQA-INT"
                offset="[28]"/>
         <field description="Sequence A interrupt/DMA trigger. If the MODE bit in the SEQB_CTRL register is 0, this flag will mirror the DATAVALID bit in the sequence A global data register (SEQB_GDAT), which is set at the end of every ADC conversion performed as part of sequence B. It will be cleared automatically when the SEQB_GDAT register is read. If the MODE bit in the SEQB_CTRL register is 1, this flag will be set upon completion of an entire B sequence. In this case it must be cleared by writing a 1 to this SEQB_INT bit. This interrupt must be enabled in the INTEN register."
                format="hex0x"
                id="ADC0@FLAGS@SEQB-INT"
                offset="[29]"/>
         <field description="Threshold Comparison Interrupt. This bit will be set if any of the THCMP flags in the lower bits of this register are set to 1 (due to an enabled out-of-range or threshold-crossing event on any channel). Each type of threshold comparison interrupt on each channel must be individually enabled in the INTEN register to cause this interrupt. This bit will be cleared when all of the individual threshold flags are cleared via writing 1s to those bits."
                format="hex0x"
                id="ADC0@FLAGS@THCMP-INT"
                offset="[30]"/>
         <field description="Overrun Interrupt flag. Any overrun bit in any of the individual channel data registers will cause this interrupt. In addition, if the MODE bit in either of the SEQn_CTRL registers is 0 then the OVERRUN bit in the corresponding SEQn_GDAT register will also cause this interrupt. This interrupt must be enabled in the INTEN register. This bit will be cleared when all of the individual overrun bits have been cleared via reading the corresponding data registers."
                format="hex0x"
                id="ADC0@FLAGS@OVR-INT"
                offset="[31]"/>
      </register>
      <register description="ADC Startup register." format="hex0x" id="ADC0@STARTUP"
                offset="0x6c"
                size="4">
         <field description="ADC Enable bit. This bit can only be set to a 1 by software. It is cleared automatically whenever the ADC is powered down. This bit must not be set until at least 10 microseconds after the ADC is powered up (typically by altering a system-level ADC power control bit)."
                format="hex0x"
                id="ADC0@STARTUP@ADC-ENA"
                offset="[0]"/>
         <field description="ADC Initialization. After enabling the ADC (setting the ADC_ENA bit), the API routine will EITHER set this bit or the CALIB bit in the CALIB register, depending on whether or not calibration is required. Setting this bit will launch the 'dummy' conversion cycle that is required if a calibration is not performed. It will also reload the stored calibration value from a previous calibration unless the BYPASSCAL bit is set. This bit should only be set AFTER the ADC_ENA bit is set and after the CALIREQD bit is tested to determine whether a calibration or an ADC dummy conversion cycle is required. It should not be set during the same write that sets the ADC_ENA bit. This bit can only be set to a '1' by software. It is cleared automatically when the 'dummy' conversion cycle completes."
                format="hex0x"
                id="ADC0@STARTUP@ADC-INIT"
                offset="[1]"/>
      </register>
      <register description="ADC Calibration register." format="hex0x" id="ADC0@CALIB"
                offset="0x70"
                size="4">
         <field description="Calibration request. Setting this bit will launch an ADC calibration cycle. This bit can only be set to a '1' by software. It is cleared automatically when the calibration cycle completes."
                format="hex0x"
                id="ADC0@CALIB@CALIB"
                offset="[0]"/>
         <field description="Calibration required. This read-only bit indicates if calibration is required when enabling the ADC. CALREQD will be '1' if no calibration has been run since the chip was powered-up and if the BYPASSCAL bit in the CTRL register is low. Software will test this bit to determine whether to initiate a calibration cycle or whether to set the ADC_INIT bit (in the STARTUP register) to launch the ADC initialization process which includes a 'dummy' conversion cycle. Note: A 'dummy' conversion cycle requires approximately 6 ADC clocks as opposed to 81 clocks required for calibration."
                format="hex0x"
                id="ADC0@CALIB@CALREQD"
                offset="[1]"/>
         <field description="Calibration Value. This read-only field displays the calibration value established during last calibration cycle. This value is not typically of any use to the user."
                format="hex0x"
                id="ADC0@CALIB@CALVALUE"
                offset="[8:2]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC54S60x/LPC5460x USB0 Full-speed Host controller"
               id="USBFSH"
               size="0x60">
      <register description="BCD representation of the version of the HCI specification that is implemented by the Host Controller (HC)"
                format="hex0x"
                id="USBFSH@HCREVISION"
                offset="0x0"
                readOnly="true"
                size="4">
         <field description="Revision." format="hex0x" id="USBFSH@HCREVISION@REV"
                offset="[7:0]"/>
      </register>
      <register description="Defines the operating modes of the HC" format="hex0x"
                id="USBFSH@HCCONTROL"
                offset="0x4"
                size="4">
         <field description="ControlBulkServiceRatio." format="hex0x"
                id="USBFSH@HCCONTROL@CBSR"
                offset="[1:0]"/>
         <field description="PeriodicListEnable." format="hex0x" id="USBFSH@HCCONTROL@PLE"
                offset="[2]"/>
         <field description="IsochronousEnable." format="hex0x" id="USBFSH@HCCONTROL@IE"
                offset="[3]"/>
         <field description="ControlListEnable." format="hex0x" id="USBFSH@HCCONTROL@CLE"
                offset="[4]"/>
         <field description="BulkListEnable This bit is set to enable the processing of the Bulk list in the next Frame."
                format="hex0x"
                id="USBFSH@HCCONTROL@BLE"
                offset="[5]"/>
         <field description="HostControllerFunctionalState for USB 00b: USBRESET 01b: USBRESUME 10b: USBOPERATIONAL 11b: USBSUSPEND A transition to USBOPERATIONAL from another state causes SOFgeneration to begin 1 ms later."
                format="hex0x"
                id="USBFSH@HCCONTROL@HCFS"
                offset="[7:6]"/>
         <field description="InterruptRouting This bit determines the routing of interrupts generated by events registered in HcInterruptStatus."
                format="hex0x"
                id="USBFSH@HCCONTROL@IR"
                offset="[8]"/>
         <field description="RemoteWakeupConnected This bit indicates whether HC supports remote wake-up signaling."
                format="hex0x"
                id="USBFSH@HCCONTROL@RWC"
                offset="[9]"/>
         <field description="RemoteWakeupEnable This bit is used by HCD to enable or disable the remote wake-up feature upon the detection of upstream resume signaling."
                format="hex0x"
                id="USBFSH@HCCONTROL@RWE"
                offset="[10]"/>
      </register>
      <register description="This register is used to receive the commands from the Host Controller Driver (HCD)"
                format="hex0x"
                id="USBFSH@HCCOMMANDSTATUS"
                offset="0x8"
                size="4">
         <field description="HostControllerReset This bit is set by HCD to initiate a software reset of HC."
                format="hex0x"
                id="USBFSH@HCCOMMANDSTATUS@HCR"
                offset="[0]"/>
         <field description="ControlListFilled This bit is used to indicate whether there are any TDs on the Control list."
                format="hex0x"
                id="USBFSH@HCCOMMANDSTATUS@CLF"
                offset="[1]"/>
         <field description="BulkListFilled This bit is used to indicate whether there are any TDs on the Bulk list."
                format="hex0x"
                id="USBFSH@HCCOMMANDSTATUS@BLF"
                offset="[2]"/>
         <field description="OwnershipChangeRequest This bit is set by an OS HCD to request a change of control of the HC."
                format="hex0x"
                id="USBFSH@HCCOMMANDSTATUS@OCR"
                offset="[3]"/>
         <field description="SchedulingOverrunCount These bits are incremented on each scheduling overrun error."
                format="hex0x"
                id="USBFSH@HCCOMMANDSTATUS@SOC"
                offset="[7:6]"/>
      </register>
      <register description="Indicates the status on various events that cause hardware interrupts by setting the appropriate bits"
                format="hex0x"
                id="USBFSH@HCINTERRUPTSTATUS"
                offset="0xc"
                size="4">
         <field description="SchedulingOverrun This bit is set when the USB schedule for the current Frame overruns and after the update of HccaFrameNumber."
                format="hex0x"
                id="USBFSH@HCINTERRUPTSTATUS@SO"
                offset="[0]"/>
         <field description="WritebackDoneHead This bit is set immediately after HC has written HcDoneHead to HccaDoneHead."
                format="hex0x"
                id="USBFSH@HCINTERRUPTSTATUS@WDH"
                offset="[1]"/>
         <field description="StartofFrame This bit is set by HC at each start of a frame and after the update of HccaFrameNumber."
                format="hex0x"
                id="USBFSH@HCINTERRUPTSTATUS@SF"
                offset="[2]"/>
         <field description="ResumeDetected This bit is set when HC detects that a device on the USB is asserting resume signaling."
                format="hex0x"
                id="USBFSH@HCINTERRUPTSTATUS@RD"
                offset="[3]"/>
         <field description="UnrecoverableError This bit is set when HC detects a system error not related to USB."
                format="hex0x"
                id="USBFSH@HCINTERRUPTSTATUS@UE"
                offset="[4]"/>
         <field description="FrameNumberOverflow This bit is set when the MSb of HcFmNumber (bit 15) changes value, from 0 to 1 or from 1 to 0, and after HccaFrameNumber has been updated."
                format="hex0x"
                id="USBFSH@HCINTERRUPTSTATUS@FNO"
                offset="[5]"/>
         <field description="RootHubStatusChange This bit is set when the content of HcRhStatus or the content of any of HcRhPortStatus[NumberofDownstreamPort] has changed."
                format="hex0x"
                id="USBFSH@HCINTERRUPTSTATUS@RHSC"
                offset="[6]"/>
         <field description="OwnershipChange This bit is set by HC when HCD sets the OwnershipChangeRequest field in HcCommandStatus."
                format="hex0x"
                id="USBFSH@HCINTERRUPTSTATUS@OC"
                offset="[31:10]"/>
      </register>
      <register description="Controls the bits in the HcInterruptStatus register and indicates which events will generate a hardware interrupt"
                format="hex0x"
                id="USBFSH@HCINTERRUPTENABLE"
                offset="0x10"
                size="4">
         <field description="Scheduling Overrun interrupt." format="hex0x"
                id="USBFSH@HCINTERRUPTENABLE@SO"
                offset="[0]"/>
         <field description="HcDoneHead Writeback interrupt." format="hex0x"
                id="USBFSH@HCINTERRUPTENABLE@WDH"
                offset="[1]"/>
         <field description="Start of Frame interrupt." format="hex0x"
                id="USBFSH@HCINTERRUPTENABLE@SF"
                offset="[2]"/>
         <field description="Resume Detect interrupt." format="hex0x"
                id="USBFSH@HCINTERRUPTENABLE@RD"
                offset="[3]"/>
         <field description="Unrecoverable Error interrupt." format="hex0x"
                id="USBFSH@HCINTERRUPTENABLE@UE"
                offset="[4]"/>
         <field description="Frame Number Overflow interrupt." format="hex0x"
                id="USBFSH@HCINTERRUPTENABLE@FNO"
                offset="[5]"/>
         <field description="Root Hub Status Change interrupt." format="hex0x"
                id="USBFSH@HCINTERRUPTENABLE@RHSC"
                offset="[6]"/>
         <field description="Ownership Change interrupt." format="hex0x"
                id="USBFSH@HCINTERRUPTENABLE@OC"
                offset="[30]"/>
         <field description="Master Interrupt Enable." format="hex0x"
                id="USBFSH@HCINTERRUPTENABLE@MIE"
                offset="[31]"/>
      </register>
      <register description="The bits in this register are used to disable corresponding bits in the HCInterruptStatus register and in turn disable that event leading to hardware interrupt"
                format="hex0x"
                id="USBFSH@HCINTERRUPTDISABLE"
                offset="0x14"
                size="4">
         <field description="Scheduling Overrun interrupt." format="hex0x"
                id="USBFSH@HCINTERRUPTDISABLE@SO"
                offset="[0]"/>
         <field description="HcDoneHead Writeback interrupt." format="hex0x"
                id="USBFSH@HCINTERRUPTDISABLE@WDH"
                offset="[1]"/>
         <field description="Start of Frame interrupt." format="hex0x"
                id="USBFSH@HCINTERRUPTDISABLE@SF"
                offset="[2]"/>
         <field description="Resume Detect interrupt." format="hex0x"
                id="USBFSH@HCINTERRUPTDISABLE@RD"
                offset="[3]"/>
         <field description="Unrecoverable Error interrupt." format="hex0x"
                id="USBFSH@HCINTERRUPTDISABLE@UE"
                offset="[4]"/>
         <field description="Frame Number Overflow interrupt." format="hex0x"
                id="USBFSH@HCINTERRUPTDISABLE@FNO"
                offset="[5]"/>
         <field description="Root Hub Status Change interrupt." format="hex0x"
                id="USBFSH@HCINTERRUPTDISABLE@RHSC"
                offset="[6]"/>
         <field description="Ownership Change interrupt." format="hex0x"
                id="USBFSH@HCINTERRUPTDISABLE@OC"
                offset="[30]"/>
         <field description="A 0 written to this field is ignored by HC." format="hex0x"
                id="USBFSH@HCINTERRUPTDISABLE@MIE"
                offset="[31]"/>
      </register>
      <register description="Contains the physical address of the host controller communication area"
                format="hex0x"
                id="USBFSH@HCHCCA"
                offset="0x18"
                size="4">
         <field description="Base address of the Host Controller Communication Area."
                format="hex0x"
                id="USBFSH@HCHCCA@HCCA"
                offset="[31:8]"/>
      </register>
      <register description="Contains the physical address of the current isochronous or interrupt endpoint descriptor"
                format="hex0x"
                id="USBFSH@HCPERIODCURRENTED"
                offset="0x1c"
                size="4">
         <field description="The content of this register is updated by HC after a periodic ED is processed."
                format="hex0x"
                id="USBFSH@HCPERIODCURRENTED@PCED"
                offset="[31:4]"/>
      </register>
      <register description="Contains the physical address of the first endpoint descriptor of the control list"
                format="hex0x"
                id="USBFSH@HCCONTROLHEADED"
                offset="0x20"
                size="4">
         <field description="HC traverses the Control list starting with the HcControlHeadED pointer."
                format="hex0x"
                id="USBFSH@HCCONTROLHEADED@CHED"
                offset="[31:4]"/>
      </register>
      <register description="Contains the physical address of the current endpoint descriptor of the control list"
                format="hex0x"
                id="USBFSH@HCCONTROLCURRENTED"
                offset="0x24"
                size="4">
         <field description="ControlCurrentED." format="hex0x"
                id="USBFSH@HCCONTROLCURRENTED@CCED"
                offset="[31:4]"/>
      </register>
      <register description="Contains the physical address of the first endpoint descriptor of the bulk list"
                format="hex0x"
                id="USBFSH@HCBULKHEADED"
                offset="0x28"
                size="4">
         <field description="BulkHeadED HC traverses the bulk list starting with the HcBulkHeadED pointer."
                format="hex0x"
                id="USBFSH@HCBULKHEADED@BHED"
                offset="[31:4]"/>
      </register>
      <register description="Contains the physical address of the current endpoint descriptor of the bulk list"
                format="hex0x"
                id="USBFSH@HCBULKCURRENTED"
                offset="0x2c"
                size="4">
         <field description="BulkCurrentED This is advanced to the next ED after the HC has served the current one."
                format="hex0x"
                id="USBFSH@HCBULKCURRENTED@BCED"
                offset="[31:4]"/>
      </register>
      <register description="Contains the physical address of the last transfer descriptor added to the 'Done' queue"
                format="hex0x"
                id="USBFSH@HCDONEHEAD"
                offset="0x30"
                size="4">
         <field description="DoneHead When a TD is completed, HC writes the content of HcDoneHead to the NextTD field of the TD."
                format="hex0x"
                id="USBFSH@HCDONEHEAD@DH"
                offset="[31:4]"/>
      </register>
      <register description="Defines the bit time interval in a frame and the full speed maximum packet size which would not cause an overrun"
                format="hex0x"
                id="USBFSH@HCFMINTERVAL"
                offset="0x34"
                size="4">
         <field description="FrameInterval This specifies the interval between two consecutive SOFs in bit times."
                format="hex0x"
                id="USBFSH@HCFMINTERVAL@FI"
                offset="[13:0]"/>
         <field description="FSLargestDataPacket This field specifies a value which is loaded into the Largest Data Packet Counter at the beginning of each frame."
                format="hex0x"
                id="USBFSH@HCFMINTERVAL@FSMPS"
                offset="[30:16]"/>
         <field description="FrameIntervalToggle HCD toggles this bit whenever it loads a new value to FrameInterval."
                format="hex0x"
                id="USBFSH@HCFMINTERVAL@FIT"
                offset="[31]"/>
      </register>
      <register description="A 14-bit counter showing the bit time remaining in the current frame"
                format="hex0x"
                id="USBFSH@HCFMREMAINING"
                offset="0x38"
                size="4">
         <field description="FrameRemaining This counter is decremented at each bit time."
                format="hex0x"
                id="USBFSH@HCFMREMAINING@FR"
                offset="[13:0]"/>
         <field description="FrameRemainingToggle This bit is loaded from the FrameIntervalToggle field of HcFmInterval whenever FrameRemaining reaches 0."
                format="hex0x"
                id="USBFSH@HCFMREMAINING@FRT"
                offset="[31]"/>
      </register>
      <register description="Contains a 16-bit counter and provides the timing reference among events happening in the HC and the HCD"
                format="hex0x"
                id="USBFSH@HCFMNUMBER"
                offset="0x3c"
                size="4">
         <field description="FrameNumber This is incremented when HcFmRemaining is re-loaded."
                format="hex0x"
                id="USBFSH@HCFMNUMBER@FN"
                offset="[15:0]"/>
      </register>
      <register description="Contains a programmable 14-bit value which determines the earliest time HC should start processing a periodic list"
                format="hex0x"
                id="USBFSH@HCPERIODICSTART"
                offset="0x40"
                size="4">
         <field description="PeriodicStart After a hardware reset, this field is cleared and then set by HCD during the HC initialization."
                format="hex0x"
                id="USBFSH@HCPERIODICSTART@PS"
                offset="[13:0]"/>
      </register>
      <register description="Contains 11-bit value which is used by the HC to determine whether to commit to transfer a maximum of 8-byte LS packet before EOF"
                format="hex0x"
                id="USBFSH@HCLSTHRESHOLD"
                offset="0x44"
                size="4">
         <field description="LSThreshold This field contains a value which is compared to the FrameRemaining field prior to initiating a Low Speed transaction."
                format="hex0x"
                id="USBFSH@HCLSTHRESHOLD@LST"
                offset="[11:0]"/>
      </register>
      <register description="First of the two registers which describes the characteristics of the root hub"
                format="hex0x"
                id="USBFSH@HCRHDESCRIPTORA"
                offset="0x48"
                size="4">
         <field description="NumberDownstreamPorts These bits specify the number of downstream ports supported by the root hub."
                format="hex0x"
                id="USBFSH@HCRHDESCRIPTORA@NDP"
                offset="[7:0]"/>
         <field description="PowerSwitchingMode This bit is used to specify how the power switching of the root hub ports is controlled."
                format="hex0x"
                id="USBFSH@HCRHDESCRIPTORA@PSM"
                offset="[8]"/>
         <field description="NoPowerSwitching These bits are used to specify whether power switching is supported or port are always powered."
                format="hex0x"
                id="USBFSH@HCRHDESCRIPTORA@NPS"
                offset="[9]"/>
         <field description="DeviceType This bit specifies that the root hub is not a compound device."
                format="hex0x"
                id="USBFSH@HCRHDESCRIPTORA@DT"
                offset="[10]"/>
         <field description="OverCurrentProtectionMode This bit describes how the overcurrent status for the root hub ports are reported."
                format="hex0x"
                id="USBFSH@HCRHDESCRIPTORA@OCPM"
                offset="[11]"/>
         <field description="NoOverCurrentProtection This bit describes how the overcurrent status for the root hub ports are reported."
                format="hex0x"
                id="USBFSH@HCRHDESCRIPTORA@NOCP"
                offset="[12]"/>
         <field description="PowerOnToPowerGoodTime This byte specifies the duration the HCD has to wait before accessing a powered-on port of the root hub."
                format="hex0x"
                id="USBFSH@HCRHDESCRIPTORA@POTPGT"
                offset="[31:24]"/>
      </register>
      <register description="Second of the two registers which describes the characteristics of the Root Hub"
                format="hex0x"
                id="USBFSH@HCRHDESCRIPTORB"
                offset="0x4c"
                size="4">
         <field description="DeviceRemovable Each bit is dedicated to a port of the Root Hub."
                format="hex0x"
                id="USBFSH@HCRHDESCRIPTORB@DR"
                offset="[15:0]"/>
         <field description="PortPowerControlMask Each bit indicates if a port is affected by a global power control command when PowerSwitchingMode is set."
                format="hex0x"
                id="USBFSH@HCRHDESCRIPTORB@PPCM"
                offset="[31:16]"/>
      </register>
      <register description="This register is divided into two parts" format="hex0x"
                id="USBFSH@HCRHSTATUS"
                offset="0x50"
                size="4">
         <field description="(read) LocalPowerStatus The Root Hub does not support the local power status feature; thus, this bit is always read as 0."
                format="hex0x"
                id="USBFSH@HCRHSTATUS@LPS"
                offset="[0]"/>
         <field description="OverCurrentIndicator This bit reports overcurrent conditions when the global reporting is implemented."
                format="hex0x"
                id="USBFSH@HCRHSTATUS@OCI"
                offset="[1]"/>
         <field description="(read) DeviceRemoteWakeupEnable This bit enables a ConnectStatusChange bit as a resume event, causing a USBSUSPEND to USBRESUME state transition and setting the ResumeDetected interrupt."
                format="hex0x"
                id="USBFSH@HCRHSTATUS@DRWE"
                offset="[15]"/>
         <field description="(read) LocalPowerStatusChange The root hub does not support the local power status feature."
                format="hex0x"
                id="USBFSH@HCRHSTATUS@LPSC"
                offset="[16]"/>
         <field description="OverCurrentIndicatorChange This bit is set by hardware when a change has occurred to the OCI field of this register."
                format="hex0x"
                id="USBFSH@HCRHSTATUS@OCIC"
                offset="[17]"/>
         <field description="(write) ClearRemoteWakeupEnable Writing a 1 clears DeviceRemoveWakeupEnable."
                format="hex0x"
                id="USBFSH@HCRHSTATUS@CRWE"
                offset="[31]"/>
      </register>
      <register description="Controls and reports the port events on a per-port basis"
                format="hex0x"
                id="USBFSH@HCRHPORTSTATUS"
                offset="0x54"
                size="4">
         <field description="(read) CurrentConnectStatus This bit reflects the current state of the downstream port."
                format="hex0x"
                id="USBFSH@HCRHPORTSTATUS@CCS"
                offset="[0]"/>
         <field description="(read) PortEnableStatus This bit indicates whether the port is enabled or disabled."
                format="hex0x"
                id="USBFSH@HCRHPORTSTATUS@PES"
                offset="[1]"/>
         <field description="(read) PortSuspendStatus This bit indicates the port is suspended or in the resume sequence."
                format="hex0x"
                id="USBFSH@HCRHPORTSTATUS@PSS"
                offset="[2]"/>
         <field description="(read) PortOverCurrentIndicator This bit is only valid when the Root Hub is configured in such a way that overcurrent conditions are reported on a per-port basis."
                format="hex0x"
                id="USBFSH@HCRHPORTSTATUS@POCI"
                offset="[3]"/>
         <field description="(read) PortResetStatus When this bit is set by a write to SetPortReset, port reset signaling is asserted."
                format="hex0x"
                id="USBFSH@HCRHPORTSTATUS@PRS"
                offset="[4]"/>
         <field description="(read) PortPowerStatus This bit reflects the porta's power status, regardless of the type of power switching implemented."
                format="hex0x"
                id="USBFSH@HCRHPORTSTATUS@PPS"
                offset="[8]"/>
         <field description="(read) LowSpeedDeviceAttached This bit indicates the speed of the device attached to this port."
                format="hex0x"
                id="USBFSH@HCRHPORTSTATUS@LSDA"
                offset="[9]"/>
         <field description="ConnectStatusChange This bit is set whenever a connect or disconnect event occurs."
                format="hex0x"
                id="USBFSH@HCRHPORTSTATUS@CSC"
                offset="[16]"/>
         <field description="PortEnableStatusChange This bit is set when hardware events cause the PortEnableStatus bit to be cleared."
                format="hex0x"
                id="USBFSH@HCRHPORTSTATUS@PESC"
                offset="[17]"/>
         <field description="PortSuspendStatusChange This bit is set when the full resume sequence is completed."
                format="hex0x"
                id="USBFSH@HCRHPORTSTATUS@PSSC"
                offset="[18]"/>
         <field description="PortOverCurrentIndicatorChange This bit is valid only if overcurrent conditions are reported on a per-port basis."
                format="hex0x"
                id="USBFSH@HCRHPORTSTATUS@OCIC"
                offset="[19]"/>
         <field description="PortResetStatusChange This bit is set at the end of the 10 ms port reset signal."
                format="hex0x"
                id="USBFSH@HCRHPORTSTATUS@PRSC"
                offset="[20]"/>
      </register>
      <register description="Controls the port if it is attached to the host block or the device block"
                format="hex0x"
                id="USBFSH@PORTMODE"
                offset="0x5c"
                size="4">
         <field description="Port ID pin value." format="hex0x" id="USBFSH@PORTMODE@ID"
                offset="[0]"/>
         <field description="Port ID pin pull-up enable." format="hex0x"
                id="USBFSH@PORTMODE@ID-EN"
                offset="[8]"/>
         <field description="1: device 0: host." format="hex0x" id="USBFSH@PORTMODE@DEV-ENABLE"
                offset="[16]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="LPC54S60x/LPC5460x USB1 High-speed Host Controller"
               id="USBHSH"
               size="0x54">
      <register description="This register contains the offset value towards the start of the operational register space and the version number of the IP block"
                format="hex0x"
                id="USBHSH@CAPLENGTH-CHIPID"
                offset="0x0"
                readOnly="true"
                size="4">
         <field description="Capability Length: This is used as an offset." format="hex0x"
                id="USBHSH@CAPLENGTH-CHIPID@CAPLENGTH"
                offset="[7:0]"/>
         <field description="Chip identification: indicates major and minor revision of the IP: [31:24] = Major revision [23:16] = Minor revision Major revisions used: 0x01: USB2."
                format="hex0x"
                id="USBHSH@CAPLENGTH-CHIPID@CHIPID"
                offset="[31:16]"/>
      </register>
      <register description="Host Controller Structural Parameters" format="hex0x"
                id="USBHSH@HCSPARAMS"
                offset="0x4"
                readOnly="true"
                size="4">
         <field description="This register specifies the number of physical downstream ports implemented on this host controller."
                format="hex0x"
                id="USBHSH@HCSPARAMS@N-PORTS"
                offset="[3:0]"/>
         <field description="This field indicates whether the host controller implementation includes port power control."
                format="hex0x"
                id="USBHSH@HCSPARAMS@PPC"
                offset="[4]"/>
         <field description="This bit indicates whether the ports support port indicator control."
                format="hex0x"
                id="USBHSH@HCSPARAMS@P-INDICATOR"
                offset="[16]"/>
      </register>
      <register description="Host Controller Capability Parameters" format="hex0x"
                id="USBHSH@HCCPARAMS"
                offset="0x8"
                readOnly="true"
                size="4">
         <field description="Link Power Management Capability." format="hex0x"
                id="USBHSH@HCCPARAMS@LPMC"
                offset="[17]"/>
      </register>
      <register description="Frame Length Adjustment" format="hex0x" id="USBHSH@FLADJ-FRINDEX"
                offset="0xc"
                size="4">
         <field description="Frame Length Timing Value." format="hex0x"
                id="USBHSH@FLADJ-FRINDEX@FLADJ"
                offset="[5:0]"/>
         <field description="Frame Index: Bits 29 to16 in this register are used for the frame number field in the SOF packet."
                format="hex0x"
                id="USBHSH@FLADJ-FRINDEX@FRINDEX"
                offset="[29:16]"/>
      </register>
      <register description="Memory base address where ATL PTD0 is stored" format="hex0x"
                id="USBHSH@ATL-PTD-BASE-ADDR"
                offset="0x10"
                size="4">
         <field description="This indicates the current PTD that is used by the hardware when it is processing the ATL list."
                format="hex0x"
                id="USBHSH@ATL-PTD-BASE-ADDR@ATL-CUR"
                offset="[8:4]"/>
         <field description="Base address to be used by the hardware to find the start of the ATL list."
                format="hex0x"
                id="USBHSH@ATL-PTD-BASE-ADDR@ATL-BASE"
                offset="[31:9]"/>
      </register>
      <register description="Memory base address where ISO PTD0 is stored" format="hex0x"
                id="USBHSH@ISO-PTD-BASE-ADDR"
                offset="0x14"
                size="4">
         <field description="This indicates the first PTD that is used by the hardware when it is processing the ISO list."
                format="hex0x"
                id="USBHSH@ISO-PTD-BASE-ADDR@ISO-FIRST"
                offset="[9:5]"/>
         <field description="Base address to be used by the hardware to find the start of the ISO list."
                format="hex0x"
                id="USBHSH@ISO-PTD-BASE-ADDR@ISO-BASE"
                offset="[31:10]"/>
      </register>
      <register description="Memory base address where INT PTD0 is stored" format="hex0x"
                id="USBHSH@INT-PTD-BASE-ADDR"
                offset="0x18"
                size="4">
         <field description="This indicates the first PTD that is used by the hardware when it is processing the INT list."
                format="hex0x"
                id="USBHSH@INT-PTD-BASE-ADDR@INT-FIRST"
                offset="[9:5]"/>
         <field description="Base address to be used by the hardware to find the start of the INT list."
                format="hex0x"
                id="USBHSH@INT-PTD-BASE-ADDR@INT-BASE"
                offset="[31:10]"/>
      </register>
      <register description="Memory base address that indicates the start of the data payload buffers"
                format="hex0x"
                id="USBHSH@DATA-PAYLOAD-BASE-ADDR"
                offset="0x1c"
                size="4">
         <field description="Base address to be used by the hardware to find the start of the data payload section."
                format="hex0x"
                id="USBHSH@DATA-PAYLOAD-BASE-ADDR@DAT-BASE"
                offset="[31:16]"/>
      </register>
      <register description="USB Command register" format="hex0x" id="USBHSH@USBCMD"
                offset="0x20"
                size="4">
         <field description="Run/Stop: 1b = Run." format="hex0x" id="USBHSH@USBCMD@RS"
                offset="[0]"/>
         <field description="Host Controller Reset: This control bit is used by the software to reset the host controller."
                format="hex0x"
                id="USBHSH@USBCMD@HCRESET"
                offset="[1]"/>
         <field description="Frame List Size: This field specifies the size of the frame list."
                format="hex0x"
                id="USBHSH@USBCMD@FLS"
                offset="[3:2]"/>
         <field description="Light Host Controller Reset: This bit allows the driver software to reset the host controller without affecting the state of the ports."
                format="hex0x"
                id="USBHSH@USBCMD@LHCR"
                offset="[7]"/>
         <field description="ATL List enabled." format="hex0x" id="USBHSH@USBCMD@ATL-EN"
                offset="[8]"/>
         <field description="ISO List enabled." format="hex0x" id="USBHSH@USBCMD@ISO-EN"
                offset="[9]"/>
         <field description="INT List enabled." format="hex0x" id="USBHSH@USBCMD@INT-EN"
                offset="[10]"/>
         <field description="Host-Initiated Resume Duration." format="hex0x"
                id="USBHSH@USBCMD@HIRD"
                offset="[27:24]"/>
         <field description="bRemoteWake field." format="hex0x" id="USBHSH@USBCMD@LPM-RWU"
                offset="[28]"/>
      </register>
      <register description="USB Interrupt Status register" format="hex0x" id="USBHSH@USBSTS"
                offset="0x24"
                size="4">
         <field description="Port Change Detect: The host controller sets this bit to logic 1 when any port has a change bit transition from a 0 to a one or a Force Port Resume bit transition from a 0 to a 1 as a result of a J-K transition detected on a suspended port."
                format="hex0x"
                id="USBHSH@USBSTS@PCD"
                offset="[2]"/>
         <field description="Frame List Rollover: The host controller sets this bit to logic 1 when the frame list index rolls over its maximum value to 0."
                format="hex0x"
                id="USBHSH@USBSTS@FLR"
                offset="[3]"/>
         <field description="ATL IRQ: Indicates that an ATL PTD (with I-bit set) was completed."
                format="hex0x"
                id="USBHSH@USBSTS@ATL-IRQ"
                offset="[16]"/>
         <field description="ISO IRQ: Indicates that an ISO PTD (with I-bit set) was completed."
                format="hex0x"
                id="USBHSH@USBSTS@ISO-IRQ"
                offset="[17]"/>
         <field description="INT IRQ: Indicates that an INT PTD (with I-bit set) was completed."
                format="hex0x"
                id="USBHSH@USBSTS@INT-IRQ"
                offset="[18]"/>
         <field description="SOF interrupt: Every time when the host sends a Start of Frame token on the USB bus, this bit is set."
                format="hex0x"
                id="USBHSH@USBSTS@SOF-IRQ"
                offset="[19]"/>
      </register>
      <register description="USB Interrupt Enable register" format="hex0x" id="USBHSH@USBINTR"
                offset="0x28"
                size="4">
         <field description="Port Change Detect Interrupt Enable: 1: enable 0: disable."
                format="hex0x"
                id="USBHSH@USBINTR@PCDE"
                offset="[2]"/>
         <field description="Frame List Rollover Interrupt Enable: 1: enable 0: disable."
                format="hex0x"
                id="USBHSH@USBINTR@FLRE"
                offset="[3]"/>
         <field description="ATL IRQ Enable bit: 1: enable 0: disable." format="hex0x"
                id="USBHSH@USBINTR@ATL-IRQ-E"
                offset="[16]"/>
         <field description="ISO IRQ Enable bit: 1: enable 0: disable." format="hex0x"
                id="USBHSH@USBINTR@ISO-IRQ-E"
                offset="[17]"/>
         <field description="INT IRQ Enable bit: 1: enable 0: disable." format="hex0x"
                id="USBHSH@USBINTR@INT-IRQ-E"
                offset="[18]"/>
         <field description="SOF Interrupt Enable bit: 1: enable 0: disable." format="hex0x"
                id="USBHSH@USBINTR@SOF-E"
                offset="[19]"/>
      </register>
      <register description="Port Status and Control register" format="hex0x"
                id="USBHSH@PORTSC1"
                offset="0x2c"
                size="4">
         <field description="Current Connect Status: Logic 1 indicates a device is present on the port."
                format="hex0x"
                id="USBHSH@PORTSC1@CCS"
                offset="[0]"/>
         <field description="Connect Status Change: Logic 1 means that the value of CCS has changed."
                format="hex0x"
                id="USBHSH@PORTSC1@CSC"
                offset="[1]"/>
         <field description="Port Enabled/Disabled." format="hex0x" id="USBHSH@PORTSC1@PED"
                offset="[2]"/>
         <field description="Port Enabled/Disabled Change: Logic 1 means that the value of PED has changed."
                format="hex0x"
                id="USBHSH@PORTSC1@PEDC"
                offset="[3]"/>
         <field description="Over-current active: Logic 1 means that this port has an over-current condition."
                format="hex0x"
                id="USBHSH@PORTSC1@OCA"
                offset="[4]"/>
         <field description="Over-current change: Logic 1 means that the value of OCA has changed."
                format="hex0x"
                id="USBHSH@PORTSC1@OCC"
                offset="[5]"/>
         <field description="Force Port Resume: Logic 1 means resume (K-state) detected or driven on the port."
                format="hex0x"
                id="USBHSH@PORTSC1@FPR"
                offset="[6]"/>
         <field description="Suspend: Logic 1 means port is in the suspend state."
                format="hex0x"
                id="USBHSH@PORTSC1@SUSP"
                offset="[7]"/>
         <field description="Port Reset: Logic 1 means the port is in the reset state."
                format="hex0x"
                id="USBHSH@PORTSC1@PR"
                offset="[8]"/>
         <field description="Suspend using L1 0b = Suspend using L2 1b = Suspend using L1 When this bit is set to a 1 and a non-zero value is specified in the Device Address field, the host controller will generate an LPM Token to enter the L1 state whenever software writes a one to the Suspend bit, as well as L1 exit timing during any device or host-initiated resume."
                format="hex0x"
                id="USBHSH@PORTSC1@SUS-L1"
                offset="[9]"/>
         <field description="Line Status: This field reflects the current logical levels of the DP (bit 11) and DM (bit 10) signal lines."
                format="hex0x"
                id="USBHSH@PORTSC1@LS"
                offset="[11:10]"/>
         <field description="Port Power: The function of this bit depends on the value of the Port Power Control (PPC) bit in the HCSPARAMS register."
                format="hex0x"
                id="USBHSH@PORTSC1@PP"
                offset="[12]"/>
         <field description="Port Indicator Control : Writing to this field has no effect if the P_INDICATOR bit in the HCSPARAMS register is logic 0."
                format="hex0x"
                id="USBHSH@PORTSC1@PIC"
                offset="[15:14]"/>
         <field description="Port Test Control: A non-zero value indicates that the port is operating in the test mode as indicated by the value."
                format="hex0x"
                id="USBHSH@PORTSC1@PTC"
                offset="[19:16]"/>
         <field description="Port Speed: 00b: Low-speed 01b: Full-speed 10b: High-speed 11b: Reserved."
                format="hex0x"
                id="USBHSH@PORTSC1@PSPD"
                offset="[21:20]"/>
         <field description="Wake on overcurrent enable: Writing this bit to a one enables the port to be sensitive to overcurrent conditions as wake-up events."
                format="hex0x"
                id="USBHSH@PORTSC1@WOO"
                offset="[22]"/>
         <field description="These two bits are used by software to determine whether the most recent L1 suspend request was successful: 00b: Success-state transition was successful (ACK) 01b: Not Yet - Device was unable to enter the L1 state at this time (NYET) 10b: Not supported - Device does not support the L1 state (STALL) 11b: Timeout/Error - Device failed to respond or an error occurred."
                format="hex0x"
                id="USBHSH@PORTSC1@SUS-STAT"
                offset="[24:23]"/>
         <field description="Device Address for LPM tokens." format="hex0x"
                id="USBHSH@PORTSC1@DEV-ADD"
                offset="[31:25]"/>
      </register>
      <register description="Done map for each ATL PTD" format="hex0x"
                id="USBHSH@ATL-PTD-DONE-MAP"
                offset="0x30"
                size="4">
         <field description="The bit corresponding to a certain PTD will be set to logic 1 as soon as that PTD execution is completed."
                format="hex0x"
                id="USBHSH@ATL-PTD-DONE-MAP@ATL-DONE"
                offset="[31:0]"/>
      </register>
      <register description="Skip map for each ATL PTD" format="hex0x"
                id="USBHSH@ATL-PTD-SKIP-MAP"
                offset="0x34"
                size="4">
         <field description="When a bit in the PTD Skip Map is set to logic 1, the corresponding PTD will be skipped, independent of the V bit setting."
                format="hex0x"
                id="USBHSH@ATL-PTD-SKIP-MAP@ATL-SKIP"
                offset="[31:0]"/>
      </register>
      <register description="Done map for each ISO PTD" format="hex0x"
                id="USBHSH@ISO-PTD-DONE-MAP"
                offset="0x38"
                size="4">
         <field description="The bit corresponding to a certain PTD will be set to logic 1 as soon as that PTD execution is completed."
                format="hex0x"
                id="USBHSH@ISO-PTD-DONE-MAP@ISO-DONE"
                offset="[31:0]"/>
      </register>
      <register description="Skip map for each ISO PTD" format="hex0x"
                id="USBHSH@ISO-PTD-SKIP-MAP"
                offset="0x3c"
                size="4">
         <field description="The bit corresponding to a certain PTD will be set to logic 1 as soon as that PTD execution is completed."
                format="hex0x"
                id="USBHSH@ISO-PTD-SKIP-MAP@ISO-SKIP"
                offset="[31:0]"/>
      </register>
      <register description="Done map for each INT PTD" format="hex0x"
                id="USBHSH@INT-PTD-DONE-MAP"
                offset="0x40"
                size="4">
         <field description="The bit corresponding to a certain PTD will be set to logic 1 as soon as that PTD execution is completed."
                format="hex0x"
                id="USBHSH@INT-PTD-DONE-MAP@INT-DONE"
                offset="[31:0]"/>
      </register>
      <register description="Skip map for each INT PTD" format="hex0x"
                id="USBHSH@INT-PTD-SKIP-MAP"
                offset="0x44"
                size="4">
         <field description="When a bit in the PTD Skip Map is set to logic 1, the corresponding PTD will be skipped, independent of the V bit setting."
                format="hex0x"
                id="USBHSH@INT-PTD-SKIP-MAP@INT-SKIP"
                offset="[31:0]"/>
      </register>
      <register description="Marks the last PTD in the list for ISO, INT and ATL"
                format="hex0x"
                id="USBHSH@LAST-PTD-INUSE"
                offset="0x48"
                size="4">
         <field description="If hardware has reached this PTD and the J bit is not set, it will go to PTD0 as the next PTD to be processed."
                format="hex0x"
                id="USBHSH@LAST-PTD-INUSE@ATL-LAST"
                offset="[4:0]"/>
         <field description="This indicates the last PTD in the ISO list." format="hex0x"
                id="USBHSH@LAST-PTD-INUSE@ISO-LAST"
                offset="[12:8]"/>
         <field description="This indicates the last PTD in the INT list." format="hex0x"
                id="USBHSH@LAST-PTD-INUSE@INT-LAST"
                offset="[20:16]"/>
      </register>
      <register description="Register to read/write registers in the attached USB PHY"
                format="hex0x"
                id="USBHSH@UTMIPLUS-ULPI-DEBUG"
                offset="0x4c"
                size="4">
         <field description="UTMI+ mode: Bits 3:0 are used to control VControl signal on Vendor Interface of UTMI+ ULPI mode: Bits 7:0 are used as the address when doing a register access over the ULPI interface."
                format="hex0x"
                id="USBHSH@UTMIPLUS-ULPI-DEBUG@PHY-ADDR"
                offset="[7:0]"/>
         <field description="UTMI+ mode: Reserved." format="hex0x"
                id="USBHSH@UTMIPLUS-ULPI-DEBUG@PHY-WDATA"
                offset="[15:8]"/>
         <field description="UTMI+ mode: Bits 7:0 contains the value returned by the VStatus signal on Vendor Interface of UTMI+ ULPI mode: Bits 7:0 are used for the read data when reading a value to a ULPI PHY register."
                format="hex0x"
                id="USBHSH@UTMIPLUS-ULPI-DEBUG@PHY-RDATA"
                offset="[23:16]"/>
         <field description="UTMI+ mode: Reserved." format="hex0x"
                id="USBHSH@UTMIPLUS-ULPI-DEBUG@PHY-RW"
                offset="[24]"/>
         <field description="Software writes this bit to one to start a read or write operation."
                format="hex0x"
                id="USBHSH@UTMIPLUS-ULPI-DEBUG@PHY-ACCESS"
                offset="[25]"/>
         <field description="This bit indicates if the interface between the controller is UTMI+ or ULPI 0b: UTMI+ 1b: ULPI If the hardware supports both modes, this bit is RW by SW."
                format="hex0x"
                id="USBHSH@UTMIPLUS-ULPI-DEBUG@PHY-MODE"
                offset="[31]"/>
      </register>
      <register description="Controls the port if it is attached to the host block or the device block"
                format="hex0x"
                id="USBHSH@PORTMODE"
                offset="0x50"
                size="4">
         <field description="Port 0 ID pin value." format="hex0x" id="USBHSH@PORTMODE@ID0"
                offset="[0]"/>
         <field description="Port 0 ID pin pull-up enable." format="hex0x"
                id="USBHSH@PORTMODE@ID0-EN"
                offset="[8]"/>
         <field description="If this bit is set to one, one of the ports will behave as a USB device."
                format="hex0x"
                id="USBHSH@PORTMODE@DEV-ENABLE"
                offset="[16]"/>
         <field description="This bit indicates if the PHY power-down input is controlled by software or by hardware."
                format="hex0x"
                id="USBHSH@PORTMODE@SW-CTRL-PDCOM"
                offset="[18]"/>
         <field description="This bit is only used when SW_CTRL_PDCOM is set to 1b."
                format="hex0x"
                id="USBHSH@PORTMODE@SW-PDCOM"
                offset="[19]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="SHA" id="SHA0" size="0x60">
      <register description="Control register" format="hex0x" id="SHA0@CTRL" offset="0x0"
                size="4">
         <field description="This field is used to select the operational mode of SHA block."
                format="hex0x"
                id="SHA0@CTRL@MODE"
                offset="[1:0]"/>
         <field description="When this bit is set, a new hash operation is started."
                format="hex0x"
                id="SHA0@CTRL@NEW"
                offset="[4]"/>
         <field description="When this bit is set, the DMA is used to fill INDATA."
                format="hex0x"
                id="SHA0@CTRL@DMA"
                offset="[8]"/>
      </register>
      <register description="Status register" format="hex0x" id="SHA0@STATUS" offset="0x4"
                size="4">
         <field description="This field indicates if the block is waiting for more data to process."
                format="hex0x"
                id="SHA0@STATUS@WAITING"
                offset="[0]"/>
         <field description="This field indicates if a DIGEST is ready and waiting and there is no active next block that has already started."
                format="hex0x"
                id="SHA0@STATUS@DIGEST"
                offset="[1]"/>
         <field description="This field indicates if an error has occurred." format="hex0x"
                id="SHA0@STATUS@ERROR"
                offset="[2]"/>
      </register>
      <register description="Interrupt Enable register" format="hex0x" id="SHA0@INTENSET"
                offset="0x8"
                size="4">
         <field description="This field indicates if interrupt should be enabled when waiting for input data."
                format="hex0x"
                id="SHA0@INTENSET@WAITING"
                offset="[0]"/>
         <field description="This field indicates if interrupt is generated when Digest is ready (completed a Hash or completed a full sequence)."
                format="hex0x"
                id="SHA0@INTENSET@DIGEST"
                offset="[1]"/>
         <field description="This field indicates if interrupt is generated on an ERROR (as defined in STAT register)."
                format="hex0x"
                id="SHA0@INTENSET@ERROR"
                offset="[2]"/>
      </register>
      <register description="Interrupt Clear register" format="hex0x" id="SHA0@INTENCLR"
                offset="0xc"
                size="4">
         <field description="Writing a 1 clears the interrupt enabled by the INTENSET register."
                format="hex0x"
                id="SHA0@INTENCLR@WAITING"
                offset="[0]"/>
         <field description="Writing a 1 clears the interrupt enabled by the INTENSET register."
                format="hex0x"
                id="SHA0@INTENCLR@DIGEST"
                offset="[1]"/>
         <field description="Writing a 1 clears the interrupt enabled by the INTENSET register."
                format="hex0x"
                id="SHA0@INTENCLR@ERROR"
                offset="[2]"/>
      </register>
      <register description="Memory Control register" format="hex0x" id="SHA0@MEMCTRL"
                offset="0x10"
                size="4">
         <field description="This field is used to enable SHA block as AHB bus master."
                format="hex0x"
                id="SHA0@MEMCTRL@MASTER"
                offset="[0]"/>
         <field description="This field indicates the number of 512-bit blocks to copy starting at MEMADDR."
                format="hex0x"
                id="SHA0@MEMCTRL@COUNT"
                offset="[26:16]"/>
      </register>
      <register description="Memory Address register" format="hex0x" id="SHA0@MEMADDR"
                offset="0x14"
                size="4">
         <field description="This field indicates the base address in Internal Flash, SRAM0, SRAMX, or SPIFI to start copying from."
                format="hex0x"
                id="SHA0@MEMADDR@BASEADDR"
                offset="[31:0]"/>
      </register>
      <register description="Input Data register" format="hex0x" id="SHA0@INDATA" offset="0x20"
                size="4">
         <field description="In this field the next word is written in little-endian format."
                format="hex0x"
                id="SHA0@INDATA@DATA"
                offset="[31:0]"/>
      </register>
      <register description="Alias register" format="hex0x" id="SHA0@ALIAS0" offset="0x24"
                size="4">
         <field description="In this field the next word is written in little-endian format."
                format="hex0x"
                id="SHA0@ALIAS0@DATA"
                offset="[31:0]"/>
      </register>
      <register description="Alias register" format="hex0x" id="SHA0@ALIAS1" offset="0x28"
                size="4">
         <field description="In this field the next word is written in little-endian format."
                format="hex0x"
                id="SHA0@ALIAS1@DATA"
                offset="[31:0]"/>
      </register>
      <register description="Alias register" format="hex0x" id="SHA0@ALIAS2" offset="0x2c"
                size="4">
         <field description="In this field the next word is written in little-endian format."
                format="hex0x"
                id="SHA0@ALIAS2@DATA"
                offset="[31:0]"/>
      </register>
      <register description="Alias register" format="hex0x" id="SHA0@ALIAS3" offset="0x30"
                size="4">
         <field description="In this field the next word is written in little-endian format."
                format="hex0x"
                id="SHA0@ALIAS3@DATA"
                offset="[31:0]"/>
      </register>
      <register description="Alias register" format="hex0x" id="SHA0@ALIAS4" offset="0x34"
                size="4">
         <field description="In this field the next word is written in little-endian format."
                format="hex0x"
                id="SHA0@ALIAS4@DATA"
                offset="[31:0]"/>
      </register>
      <register description="Alias register" format="hex0x" id="SHA0@ALIAS5" offset="0x38"
                size="4">
         <field description="In this field the next word is written in little-endian format."
                format="hex0x"
                id="SHA0@ALIAS5@DATA"
                offset="[31:0]"/>
      </register>
      <register description="Alias register" format="hex0x" id="SHA0@ALIAS6" offset="0x3c"
                size="4">
         <field description="In this field the next word is written in little-endian format."
                format="hex0x"
                id="SHA0@ALIAS6@DATA"
                offset="[31:0]"/>
      </register>
      <register description="Digest register" format="hex0x" id="SHA0@DIGEST0" offset="0x40"
                readOnly="true"
                size="4">
         <field description="This field contains one word of the Digest." format="hex0x"
                id="SHA0@DIGEST0@DIGEST"
                offset="[31:0]"/>
      </register>
      <register description="Digest register" format="hex0x" id="SHA0@DIGEST1" offset="0x44"
                readOnly="true"
                size="4">
         <field description="This field contains one word of the Digest." format="hex0x"
                id="SHA0@DIGEST1@DIGEST"
                offset="[31:0]"/>
      </register>
      <register description="Digest register" format="hex0x" id="SHA0@DIGEST2" offset="0x48"
                readOnly="true"
                size="4">
         <field description="This field contains one word of the Digest." format="hex0x"
                id="SHA0@DIGEST2@DIGEST"
                offset="[31:0]"/>
      </register>
      <register description="Digest register" format="hex0x" id="SHA0@DIGEST3" offset="0x4c"
                readOnly="true"
                size="4">
         <field description="This field contains one word of the Digest." format="hex0x"
                id="SHA0@DIGEST3@DIGEST"
                offset="[31:0]"/>
      </register>
      <register description="Digest register" format="hex0x" id="SHA0@DIGEST4" offset="0x50"
                readOnly="true"
                size="4">
         <field description="This field contains one word of the Digest." format="hex0x"
                id="SHA0@DIGEST4@DIGEST"
                offset="[31:0]"/>
      </register>
      <register description="Digest register" format="hex0x" id="SHA0@DIGEST5" offset="0x54"
                readOnly="true"
                size="4">
         <field description="This field contains one word of the Digest." format="hex0x"
                id="SHA0@DIGEST5@DIGEST"
                offset="[31:0]"/>
      </register>
      <register description="Digest register" format="hex0x" id="SHA0@DIGEST6" offset="0x58"
                readOnly="true"
                size="4">
         <field description="This field contains one word of the Digest." format="hex0x"
                id="SHA0@DIGEST6@DIGEST"
                offset="[31:0]"/>
      </register>
      <register description="Digest register" format="hex0x" id="SHA0@DIGEST7" offset="0x5c"
                readOnly="true"
                size="4">
         <field description="This field contains one word of the Digest." format="hex0x"
                id="SHA0@DIGEST7@DIGEST"
                offset="[31:0]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="Instrumentation Trace Macrocell Registers" id="ITM"
               size="0x1000">
      <register description="Stimulus Port Register 0 (for reading)" format="hex0x"
                id="ITM@ITM-STIM0-READ"
                offset="0x0"
                size="4">
         <field description="no description available" format="hex0x"
                id="ITM@ITM-STIM0-READ@FIFOREADY"
                offset="[0]"/>
      </register>
      <register description="Stimulus Port Register 0 (for writing)" format="hex0x"
                id="ITM@ITM-STIM0-WRITE"
                offset="0x0"
                size="4">
         <field description="Data write to the stimulus port FIFO, for forwarding as a software event packet."
                format="hex0x"
                id="ITM@ITM-STIM0-WRITE@STIMULUS"
                offset="[31:0]"/>
      </register>
      <register description="Stimulus Port Register 1 (for reading)" format="hex0x"
                id="ITM@ITM-STIM1-READ"
                offset="0x4"
                size="4">
         <field description="no description available" format="hex0x"
                id="ITM@ITM-STIM1-READ@FIFOREADY"
                offset="[0]"/>
      </register>
      <register description="Stimulus Port Register 1 (for writing)" format="hex0x"
                id="ITM@ITM-STIM1-WRITE"
                offset="0x4"
                size="4">
         <field description="Data write to the stimulus port FIFO, for forwarding as a software event packet."
                format="hex0x"
                id="ITM@ITM-STIM1-WRITE@STIMULUS"
                offset="[31:0]"/>
      </register>
      <register description="Stimulus Port Register 2 (for reading)" format="hex0x"
                id="ITM@ITM-STIM2-READ"
                offset="0x8"
                size="4">
         <field description="no description available" format="hex0x"
                id="ITM@ITM-STIM2-READ@FIFOREADY"
                offset="[0]"/>
      </register>
      <register description="Stimulus Port Register 2 (for writing)" format="hex0x"
                id="ITM@ITM-STIM2-WRITE"
                offset="0x8"
                size="4">
         <field description="Data write to the stimulus port FIFO, for forwarding as a software event packet."
                format="hex0x"
                id="ITM@ITM-STIM2-WRITE@STIMULUS"
                offset="[31:0]"/>
      </register>
      <register description="Stimulus Port Register 3 (for reading)" format="hex0x"
                id="ITM@ITM-STIM3-READ"
                offset="0xc"
                size="4">
         <field description="no description available" format="hex0x"
                id="ITM@ITM-STIM3-READ@FIFOREADY"
                offset="[0]"/>
      </register>
      <register description="Stimulus Port Register 3 (for writing)" format="hex0x"
                id="ITM@ITM-STIM3-WRITE"
                offset="0xc"
                size="4">
         <field description="Data write to the stimulus port FIFO, for forwarding as a software event packet."
                format="hex0x"
                id="ITM@ITM-STIM3-WRITE@STIMULUS"
                offset="[31:0]"/>
      </register>
      <register description="Stimulus Port Register 4 (for reading)" format="hex0x"
                id="ITM@ITM-STIM4-READ"
                offset="0x10"
                size="4">
         <field description="no description available" format="hex0x"
                id="ITM@ITM-STIM4-READ@FIFOREADY"
                offset="[0]"/>
      </register>
      <register description="Stimulus Port Register 4 (for writing)" format="hex0x"
                id="ITM@ITM-STIM4-WRITE"
                offset="0x10"
                size="4">
         <field description="Data write to the stimulus port FIFO, for forwarding as a software event packet."
                format="hex0x"
                id="ITM@ITM-STIM4-WRITE@STIMULUS"
                offset="[31:0]"/>
      </register>
      <register description="Stimulus Port Register 5 (for reading)" format="hex0x"
                id="ITM@ITM-STIM5-READ"
                offset="0x14"
                size="4">
         <field description="no description available" format="hex0x"
                id="ITM@ITM-STIM5-READ@FIFOREADY"
                offset="[0]"/>
      </register>
      <register description="Stimulus Port Register 5 (for writing)" format="hex0x"
                id="ITM@ITM-STIM5-WRITE"
                offset="0x14"
                size="4">
         <field description="Data write to the stimulus port FIFO, for forwarding as a software event packet."
                format="hex0x"
                id="ITM@ITM-STIM5-WRITE@STIMULUS"
                offset="[31:0]"/>
      </register>
      <register description="Stimulus Port Register 6 (for reading)" format="hex0x"
                id="ITM@ITM-STIM6-READ"
                offset="0x18"
                size="4">
         <field description="no description available" format="hex0x"
                id="ITM@ITM-STIM6-READ@FIFOREADY"
                offset="[0]"/>
      </register>
      <register description="Stimulus Port Register 6 (for writing)" format="hex0x"
                id="ITM@ITM-STIM6-WRITE"
                offset="0x18"
                size="4">
         <field description="Data write to the stimulus port FIFO, for forwarding as a software event packet."
                format="hex0x"
                id="ITM@ITM-STIM6-WRITE@STIMULUS"
                offset="[31:0]"/>
      </register>
      <register description="Stimulus Port Register 7 (for reading)" format="hex0x"
                id="ITM@ITM-STIM7-READ"
                offset="0x1c"
                size="4">
         <field description="no description available" format="hex0x"
                id="ITM@ITM-STIM7-READ@FIFOREADY"
                offset="[0]"/>
      </register>
      <register description="Stimulus Port Register 7 (for writing)" format="hex0x"
                id="ITM@ITM-STIM7-WRITE"
                offset="0x1c"
                size="4">
         <field description="Data write to the stimulus port FIFO, for forwarding as a software event packet."
                format="hex0x"
                id="ITM@ITM-STIM7-WRITE@STIMULUS"
                offset="[31:0]"/>
      </register>
      <register description="Stimulus Port Register 8 (for reading)" format="hex0x"
                id="ITM@ITM-STIM8-READ"
                offset="0x20"
                size="4">
         <field description="no description available" format="hex0x"
                id="ITM@ITM-STIM8-READ@FIFOREADY"
                offset="[0]"/>
      </register>
      <register description="Stimulus Port Register 8 (for writing)" format="hex0x"
                id="ITM@ITM-STIM8-WRITE"
                offset="0x20"
                size="4">
         <field description="Data write to the stimulus port FIFO, for forwarding as a software event packet."
                format="hex0x"
                id="ITM@ITM-STIM8-WRITE@STIMULUS"
                offset="[31:0]"/>
      </register>
      <register description="Stimulus Port Register 9 (for reading)" format="hex0x"
                id="ITM@ITM-STIM9-READ"
                offset="0x24"
                size="4">
         <field description="no description available" format="hex0x"
                id="ITM@ITM-STIM9-READ@FIFOREADY"
                offset="[0]"/>
      </register>
      <register description="Stimulus Port Register 9 (for writing)" format="hex0x"
                id="ITM@ITM-STIM9-WRITE"
                offset="0x24"
                size="4">
         <field description="Data write to the stimulus port FIFO, for forwarding as a software event packet."
                format="hex0x"
                id="ITM@ITM-STIM9-WRITE@STIMULUS"
                offset="[31:0]"/>
      </register>
      <register description="Stimulus Port Register 10 (for reading)" format="hex0x"
                id="ITM@ITM-STIM10-READ"
                offset="0x28"
                size="4">
         <field description="no description available" format="hex0x"
                id="ITM@ITM-STIM10-READ@FIFOREADY"
                offset="[0]"/>
      </register>
      <register description="Stimulus Port Register 10 (for writing)" format="hex0x"
                id="ITM@ITM-STIM10-WRITE"
                offset="0x28"
                size="4">
         <field description="Data write to the stimulus port FIFO, for forwarding as a software event packet."
                format="hex0x"
                id="ITM@ITM-STIM10-WRITE@STIMULUS"
                offset="[31:0]"/>
      </register>
      <register description="Stimulus Port Register 11 (for reading)" format="hex0x"
                id="ITM@ITM-STIM11-READ"
                offset="0x2c"
                size="4">
         <field description="no description available" format="hex0x"
                id="ITM@ITM-STIM11-READ@FIFOREADY"
                offset="[0]"/>
      </register>
      <register description="Stimulus Port Register 11 (for writing)" format="hex0x"
                id="ITM@ITM-STIM11-WRITE"
                offset="0x2c"
                size="4">
         <field description="Data write to the stimulus port FIFO, for forwarding as a software event packet."
                format="hex0x"
                id="ITM@ITM-STIM11-WRITE@STIMULUS"
                offset="[31:0]"/>
      </register>
      <register description="Stimulus Port Register 12 (for reading)" format="hex0x"
                id="ITM@ITM-STIM12-READ"
                offset="0x30"
                size="4">
         <field description="no description available" format="hex0x"
                id="ITM@ITM-STIM12-READ@FIFOREADY"
                offset="[0]"/>
      </register>
      <register description="Stimulus Port Register 12 (for writing)" format="hex0x"
                id="ITM@ITM-STIM12-WRITE"
                offset="0x30"
                size="4">
         <field description="Data write to the stimulus port FIFO, for forwarding as a software event packet."
                format="hex0x"
                id="ITM@ITM-STIM12-WRITE@STIMULUS"
                offset="[31:0]"/>
      </register>
      <register description="Stimulus Port Register 13 (for reading)" format="hex0x"
                id="ITM@ITM-STIM13-READ"
                offset="0x34"
                size="4">
         <field description="no description available" format="hex0x"
                id="ITM@ITM-STIM13-READ@FIFOREADY"
                offset="[0]"/>
      </register>
      <register description="Stimulus Port Register 13 (for writing)" format="hex0x"
                id="ITM@ITM-STIM13-WRITE"
                offset="0x34"
                size="4">
         <field description="Data write to the stimulus port FIFO, for forwarding as a software event packet."
                format="hex0x"
                id="ITM@ITM-STIM13-WRITE@STIMULUS"
                offset="[31:0]"/>
      </register>
      <register description="Stimulus Port Register 14 (for reading)" format="hex0x"
                id="ITM@ITM-STIM14-READ"
                offset="0x38"
                size="4">
         <field description="no description available" format="hex0x"
                id="ITM@ITM-STIM14-READ@FIFOREADY"
                offset="[0]"/>
      </register>
      <register description="Stimulus Port Register 14 (for writing)" format="hex0x"
                id="ITM@ITM-STIM14-WRITE"
                offset="0x38"
                size="4">
         <field description="Data write to the stimulus port FIFO, for forwarding as a software event packet."
                format="hex0x"
                id="ITM@ITM-STIM14-WRITE@STIMULUS"
                offset="[31:0]"/>
      </register>
      <register description="Stimulus Port Register 15 (for reading)" format="hex0x"
                id="ITM@ITM-STIM15-READ"
                offset="0x3c"
                size="4">
         <field description="no description available" format="hex0x"
                id="ITM@ITM-STIM15-READ@FIFOREADY"
                offset="[0]"/>
      </register>
      <register description="Stimulus Port Register 15 (for writing)" format="hex0x"
                id="ITM@ITM-STIM15-WRITE"
                offset="0x3c"
                size="4">
         <field description="Data write to the stimulus port FIFO, for forwarding as a software event packet."
                format="hex0x"
                id="ITM@ITM-STIM15-WRITE@STIMULUS"
                offset="[31:0]"/>
      </register>
      <register description="Stimulus Port Register 16 (for reading)" format="hex0x"
                id="ITM@ITM-STIM16-READ"
                offset="0x40"
                size="4">
         <field description="no description available" format="hex0x"
                id="ITM@ITM-STIM16-READ@FIFOREADY"
                offset="[0]"/>
      </register>
      <register description="Stimulus Port Register 16 (for writing)" format="hex0x"
                id="ITM@ITM-STIM16-WRITE"
                offset="0x40"
                size="4">
         <field description="Data write to the stimulus port FIFO, for forwarding as a software event packet."
                format="hex0x"
                id="ITM@ITM-STIM16-WRITE@STIMULUS"
                offset="[31:0]"/>
      </register>
      <register description="Stimulus Port Register 17 (for reading)" format="hex0x"
                id="ITM@ITM-STIM17-READ"
                offset="0x44"
                size="4">
         <field description="no description available" format="hex0x"
                id="ITM@ITM-STIM17-READ@FIFOREADY"
                offset="[0]"/>
      </register>
      <register description="Stimulus Port Register 17 (for writing)" format="hex0x"
                id="ITM@ITM-STIM17-WRITE"
                offset="0x44"
                size="4">
         <field description="Data write to the stimulus port FIFO, for forwarding as a software event packet."
                format="hex0x"
                id="ITM@ITM-STIM17-WRITE@STIMULUS"
                offset="[31:0]"/>
      </register>
      <register description="Stimulus Port Register 18 (for reading)" format="hex0x"
                id="ITM@ITM-STIM18-READ"
                offset="0x48"
                size="4">
         <field description="no description available" format="hex0x"
                id="ITM@ITM-STIM18-READ@FIFOREADY"
                offset="[0]"/>
      </register>
      <register description="Stimulus Port Register 18 (for writing)" format="hex0x"
                id="ITM@ITM-STIM18-WRITE"
                offset="0x48"
                size="4">
         <field description="Data write to the stimulus port FIFO, for forwarding as a software event packet."
                format="hex0x"
                id="ITM@ITM-STIM18-WRITE@STIMULUS"
                offset="[31:0]"/>
      </register>
      <register description="Stimulus Port Register 19 (for reading)" format="hex0x"
                id="ITM@ITM-STIM19-READ"
                offset="0x4c"
                size="4">
         <field description="no description available" format="hex0x"
                id="ITM@ITM-STIM19-READ@FIFOREADY"
                offset="[0]"/>
      </register>
      <register description="Stimulus Port Register 19 (for writing)" format="hex0x"
                id="ITM@ITM-STIM19-WRITE"
                offset="0x4c"
                size="4">
         <field description="Data write to the stimulus port FIFO, for forwarding as a software event packet."
                format="hex0x"
                id="ITM@ITM-STIM19-WRITE@STIMULUS"
                offset="[31:0]"/>
      </register>
      <register description="Stimulus Port Register 20 (for reading)" format="hex0x"
                id="ITM@ITM-STIM20-READ"
                offset="0x50"
                size="4">
         <field description="no description available" format="hex0x"
                id="ITM@ITM-STIM20-READ@FIFOREADY"
                offset="[0]"/>
      </register>
      <register description="Stimulus Port Register 20 (for writing)" format="hex0x"
                id="ITM@ITM-STIM20-WRITE"
                offset="0x50"
                size="4">
         <field description="Data write to the stimulus port FIFO, for forwarding as a software event packet."
                format="hex0x"
                id="ITM@ITM-STIM20-WRITE@STIMULUS"
                offset="[31:0]"/>
      </register>
      <register description="Stimulus Port Register 21 (for reading)" format="hex0x"
                id="ITM@ITM-STIM21-READ"
                offset="0x54"
                size="4">
         <field description="no description available" format="hex0x"
                id="ITM@ITM-STIM21-READ@FIFOREADY"
                offset="[0]"/>
      </register>
      <register description="Stimulus Port Register 21 (for writing)" format="hex0x"
                id="ITM@ITM-STIM21-WRITE"
                offset="0x54"
                size="4">
         <field description="Data write to the stimulus port FIFO, for forwarding as a software event packet."
                format="hex0x"
                id="ITM@ITM-STIM21-WRITE@STIMULUS"
                offset="[31:0]"/>
      </register>
      <register description="Stimulus Port Register 22 (for reading)" format="hex0x"
                id="ITM@ITM-STIM22-READ"
                offset="0x58"
                size="4">
         <field description="no description available" format="hex0x"
                id="ITM@ITM-STIM22-READ@FIFOREADY"
                offset="[0]"/>
      </register>
      <register description="Stimulus Port Register 22 (for writing)" format="hex0x"
                id="ITM@ITM-STIM22-WRITE"
                offset="0x58"
                size="4">
         <field description="Data write to the stimulus port FIFO, for forwarding as a software event packet."
                format="hex0x"
                id="ITM@ITM-STIM22-WRITE@STIMULUS"
                offset="[31:0]"/>
      </register>
      <register description="Stimulus Port Register 23 (for reading)" format="hex0x"
                id="ITM@ITM-STIM23-READ"
                offset="0x5c"
                size="4">
         <field description="no description available" format="hex0x"
                id="ITM@ITM-STIM23-READ@FIFOREADY"
                offset="[0]"/>
      </register>
      <register description="Stimulus Port Register 23 (for writing)" format="hex0x"
                id="ITM@ITM-STIM23-WRITE"
                offset="0x5c"
                size="4">
         <field description="Data write to the stimulus port FIFO, for forwarding as a software event packet."
                format="hex0x"
                id="ITM@ITM-STIM23-WRITE@STIMULUS"
                offset="[31:0]"/>
      </register>
      <register description="Stimulus Port Register 24 (for reading)" format="hex0x"
                id="ITM@ITM-STIM24-READ"
                offset="0x60"
                size="4">
         <field description="no description available" format="hex0x"
                id="ITM@ITM-STIM24-READ@FIFOREADY"
                offset="[0]"/>
      </register>
      <register description="Stimulus Port Register 24 (for writing)" format="hex0x"
                id="ITM@ITM-STIM24-WRITE"
                offset="0x60"
                size="4">
         <field description="Data write to the stimulus port FIFO, for forwarding as a software event packet."
                format="hex0x"
                id="ITM@ITM-STIM24-WRITE@STIMULUS"
                offset="[31:0]"/>
      </register>
      <register description="Stimulus Port Register 25 (for reading)" format="hex0x"
                id="ITM@ITM-STIM25-READ"
                offset="0x64"
                size="4">
         <field description="no description available" format="hex0x"
                id="ITM@ITM-STIM25-READ@FIFOREADY"
                offset="[0]"/>
      </register>
      <register description="Stimulus Port Register 25 (for writing)" format="hex0x"
                id="ITM@ITM-STIM25-WRITE"
                offset="0x64"
                size="4">
         <field description="Data write to the stimulus port FIFO, for forwarding as a software event packet."
                format="hex0x"
                id="ITM@ITM-STIM25-WRITE@STIMULUS"
                offset="[31:0]"/>
      </register>
      <register description="Stimulus Port Register 26 (for reading)" format="hex0x"
                id="ITM@ITM-STIM26-READ"
                offset="0x68"
                size="4">
         <field description="no description available" format="hex0x"
                id="ITM@ITM-STIM26-READ@FIFOREADY"
                offset="[0]"/>
      </register>
      <register description="Stimulus Port Register 26 (for writing)" format="hex0x"
                id="ITM@ITM-STIM26-WRITE"
                offset="0x68"
                size="4">
         <field description="Data write to the stimulus port FIFO, for forwarding as a software event packet."
                format="hex0x"
                id="ITM@ITM-STIM26-WRITE@STIMULUS"
                offset="[31:0]"/>
      </register>
      <register description="Stimulus Port Register 27 (for reading)" format="hex0x"
                id="ITM@ITM-STIM27-READ"
                offset="0x6c"
                size="4">
         <field description="no description available" format="hex0x"
                id="ITM@ITM-STIM27-READ@FIFOREADY"
                offset="[0]"/>
      </register>
      <register description="Stimulus Port Register 27 (for writing)" format="hex0x"
                id="ITM@ITM-STIM27-WRITE"
                offset="0x6c"
                size="4">
         <field description="Data write to the stimulus port FIFO, for forwarding as a software event packet."
                format="hex0x"
                id="ITM@ITM-STIM27-WRITE@STIMULUS"
                offset="[31:0]"/>
      </register>
      <register description="Stimulus Port Register 28 (for reading)" format="hex0x"
                id="ITM@ITM-STIM28-READ"
                offset="0x70"
                size="4">
         <field description="no description available" format="hex0x"
                id="ITM@ITM-STIM28-READ@FIFOREADY"
                offset="[0]"/>
      </register>
      <register description="Stimulus Port Register 28 (for writing)" format="hex0x"
                id="ITM@ITM-STIM28-WRITE"
                offset="0x70"
                size="4">
         <field description="Data write to the stimulus port FIFO, for forwarding as a software event packet."
                format="hex0x"
                id="ITM@ITM-STIM28-WRITE@STIMULUS"
                offset="[31:0]"/>
      </register>
      <register description="Stimulus Port Register 29 (for reading)" format="hex0x"
                id="ITM@ITM-STIM29-READ"
                offset="0x74"
                size="4">
         <field description="no description available" format="hex0x"
                id="ITM@ITM-STIM29-READ@FIFOREADY"
                offset="[0]"/>
      </register>
      <register description="Stimulus Port Register 29 (for writing)" format="hex0x"
                id="ITM@ITM-STIM29-WRITE"
                offset="0x74"
                size="4">
         <field description="Data write to the stimulus port FIFO, for forwarding as a software event packet."
                format="hex0x"
                id="ITM@ITM-STIM29-WRITE@STIMULUS"
                offset="[31:0]"/>
      </register>
      <register description="Stimulus Port Register 30 (for reading)" format="hex0x"
                id="ITM@ITM-STIM30-READ"
                offset="0x78"
                size="4">
         <field description="no description available" format="hex0x"
                id="ITM@ITM-STIM30-READ@FIFOREADY"
                offset="[0]"/>
      </register>
      <register description="Stimulus Port Register 30 (for writing)" format="hex0x"
                id="ITM@ITM-STIM30-WRITE"
                offset="0x78"
                size="4">
         <field description="Data write to the stimulus port FIFO, for forwarding as a software event packet."
                format="hex0x"
                id="ITM@ITM-STIM30-WRITE@STIMULUS"
                offset="[31:0]"/>
      </register>
      <register description="Stimulus Port Register 31 (for reading)" format="hex0x"
                id="ITM@ITM-STIM31-READ"
                offset="0x7c"
                size="4">
         <field description="no description available" format="hex0x"
                id="ITM@ITM-STIM31-READ@FIFOREADY"
                offset="[0]"/>
      </register>
      <register description="Stimulus Port Register 31 (for writing)" format="hex0x"
                id="ITM@ITM-STIM31-WRITE"
                offset="0x7c"
                size="4">
         <field description="Data write to the stimulus port FIFO, for forwarding as a software event packet."
                format="hex0x"
                id="ITM@ITM-STIM31-WRITE@STIMULUS"
                offset="[31:0]"/>
      </register>
      <register description="Trace Enable Register" format="hex0x" id="ITM@ITM-TER"
                offset="0xe00"
                size="4">
         <field description="For bit STIMENA[n], in register ITM_TERx: 0 = Stimulus port (32x + n) disabled 1 = Stimulus port (32x + n) enabled"
                format="hex0x"
                id="ITM@ITM-TER@STIMENA"
                offset="[31:0]"/>
      </register>
      <register description="Trace Privilege Register" format="hex0x" id="ITM@ITM-TPR"
                offset="0xe40"
                size="4">
         <field description="Bit mask to enable tracing on ITM stimulus ports: Bit [0] = stimulus port [7:0] Bit [1] = stimulus port [15:8] Bit [2] = stimulus port [23:16] Bit [3] = stimulus port [31:24]"
                format="hex0x"
                id="ITM@ITM-TPR@PRIVMASK"
                offset="[3:0]"/>
      </register>
      <register description="Trace Control Register" format="hex0x" id="ITM@ITM-TCR"
                offset="0xe80"
                size="4">
         <field description="no description available" format="enum" enum="d1e173998"
                id="ITM@ITM-TCR@ITMENA"
                offset="[0]"/>
         <field description="no description available" format="enum" enum="d1e174044"
                id="ITM@ITM-TCR@TSENA"
                offset="[1]"/>
         <field description="no description available" format="enum" enum="d1e174090"
                id="ITM@ITM-TCR@SYNCENA"
                offset="[2]"/>
         <field description="no description available" format="enum" enum="d1e174136"
                id="ITM@ITM-TCR@TXENA"
                offset="[3]"/>
         <field description="no description available" format="enum" enum="d1e174182"
                id="ITM@ITM-TCR@SWOENA"
                offset="[4]"/>
         <field description="Local timestamp prescaler, used with the trace packet reference clock."
                format="enum"
                enum="d1e174229"
                id="ITM@ITM-TCR@TSPrescale"
                offset="[9:8]"/>
         <field description="Global timestamp frequency. Defines how often the ITM generates a global timestamp, based on the global timestamp clock frequency, or disables generation of global timestamps."
                format="enum"
                enum="d1e174299"
                id="ITM@ITM-TCR@GTSFREQ"
                offset="[11:10]"/>
         <field description="Identifier for multi-source trace stream formatting. If multi-source trace is in use, the debugger must write a non-zero value to this field."
                format="hex0x"
                id="ITM@ITM-TCR@TraceBusID"
                offset="[22:16]"/>
         <field description="Indicates whether the ITM is currently processing events: 0: ITM is not processing any events. 1: ITM events present and being drained."
                format="enum"
                enum="d1e174387"
                id="ITM@ITM-TCR@BUSY"
                offset="[23]"/>
      </register>
      <register description="Lock Access Register" format="hex0x" id="ITM@ITM-LAR"
                offset="0xfb0"
                size="4">
         <field description="Write Access Code. A write of 0xC5ACCE55 enables further write access to this device. An invalid write will have the affect of removing write access."
                format="hex0x"
                id="ITM@ITM-LAR@WriteAccessCode"
                offset="[31:0]"/>
      </register>
      <register description="Lock Status Register" format="hex0x" id="ITM@ITM-LSR"
                offset="0xfb4"
                readOnly="true"
                size="4">
         <field description="Lock mechanism is implemented. This bit always reads 1."
                format="hex0x"
                id="ITM@ITM-LSR@IMP"
                offset="[0]"/>
         <field description="Lock Status. This bit is HIGH when the device is locked, and LOW when unlocked."
                format="hex0x"
                id="ITM@ITM-LSR@STATUS"
                offset="[1]"/>
         <field description="Access Lock Register size. This bit reads 0 to indicate a 32-bit register is present."
                format="hex0x"
                id="ITM@ITM-LSR@s8BIT"
                offset="[2]"/>
      </register>
      <register description="Peripheral Identification Register 4." format="hex0x"
                id="ITM@ITM-PID4"
                offset="0xfd0"
                readOnly="true"
                size="4">
         <field description="JEP106 continuation code." format="hex0x" id="ITM@ITM-PID4@JEP106"
                offset="[3:0]"/>
         <field description="4KB Count" format="hex0x" id="ITM@ITM-PID4@c4KB" offset="[7:4]"/>
      </register>
      <register description="Peripheral Identification Register 5." format="hex0x"
                id="ITM@ITM-PID5"
                offset="0xfd4"
                readOnly="true"
                size="4"/>
      <register description="Peripheral Identification Register 6." format="hex0x"
                id="ITM@ITM-PID6"
                offset="0xfd8"
                readOnly="true"
                size="4"/>
      <register description="Peripheral Identification Register 7." format="hex0x"
                id="ITM@ITM-PID7"
                offset="0xfdc"
                readOnly="true"
                size="4"/>
      <register description="Peripheral Identification Register 0." format="hex0x"
                id="ITM@ITM-PID0"
                offset="0xfe0"
                readOnly="true"
                size="4">
         <field description="Part Number [7:0]" format="hex0x" id="ITM@ITM-PID0@PartNumber"
                offset="[7:0]"/>
      </register>
      <register description="Peripheral Identification Register 1." format="hex0x"
                id="ITM@ITM-PID1"
                offset="0xfe4"
                readOnly="true"
                size="4">
         <field description="Part Number [11:8]" format="hex0x" id="ITM@ITM-PID1@PartNumber"
                offset="[3:0]"/>
         <field description="JEP106 identity code [3:0]" format="hex0x"
                id="ITM@ITM-PID1@JEP106-identity-code"
                offset="[7:4]"/>
      </register>
      <register description="Peripheral Identification Register 2." format="hex0x"
                id="ITM@ITM-PID2"
                offset="0xfe8"
                readOnly="true"
                size="4">
         <field description="JEP106 identity code [6:4]" format="hex0x"
                id="ITM@ITM-PID2@JEP106-identity-code"
                offset="[2:0]"/>
         <field description="Revision" format="hex0x" id="ITM@ITM-PID2@Revision" offset="[7:4]"/>
      </register>
      <register description="Peripheral Identification Register 3." format="hex0x"
                id="ITM@ITM-PID3"
                offset="0xfec"
                readOnly="true"
                size="4">
         <field description="Customer Modified." format="hex0x"
                id="ITM@ITM-PID3@CustomerModified"
                offset="[3:0]"/>
         <field description="RevAnd" format="hex0x" id="ITM@ITM-PID3@RevAnd" offset="[7:4]"/>
      </register>
      <register description="Component Identification Register 0." format="hex0x"
                id="ITM@ITM-CID0"
                offset="0xff0"
                readOnly="true"
                size="4">
         <field description="Preamble" format="hex0x" id="ITM@ITM-CID0@Preamble" offset="[7:0]"/>
      </register>
      <register description="Component Identification Register 1." format="hex0x"
                id="ITM@ITM-CID1"
                offset="0xff4"
                readOnly="true"
                size="4">
         <field description="Preamble" format="hex0x" id="ITM@ITM-CID1@Preamble" offset="[3:0]"/>
         <field description="Component class" format="enum" enum="d1e175032"
                id="ITM@ITM-CID1@ComponentClass"
                offset="[7:4]"/>
      </register>
      <register description="Component Identification Register 2." format="hex0x"
                id="ITM@ITM-CID2"
                offset="0xff8"
                readOnly="true"
                size="4">
         <field description="Preamble" format="hex0x" id="ITM@ITM-CID2@Preamble" offset="[7:0]"/>
      </register>
      <register description="Component Identification Register 3." format="hex0x"
                id="ITM@ITM-CID3"
                offset="0xffc"
                readOnly="true"
                size="4">
         <field description="Preamble" format="hex0x" id="ITM@ITM-CID3@Preamble" offset="[7:0]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="System Control Block" id="SystemControl"
               size="0xf40">
      <register description="Auxiliary Control Register," format="hex0x"
                id="SystemControl@SCB-ACTLR"
                offset="0x8"
                size="4">
         <field description="Disables interruption of multi-cycle instructions." format="hex0x"
                id="SystemControl@SCB-ACTLR@DISMCYCINT"
                offset="[0]"/>
         <field description="Disables write buffer use during default memory map accesses."
                format="hex0x"
                id="SystemControl@SCB-ACTLR@DISDEFWBUF"
                offset="[1]"/>
         <field description="Disables folding of IT instructions." format="hex0x"
                id="SystemControl@SCB-ACTLR@DISFOLD"
                offset="[2]"/>
      </register>
      <register description="CPUID Base Register" format="hex0x" id="SystemControl@SCB-CPUID"
                offset="0xd00"
                readOnly="true"
                size="4">
         <field description="Indicates patch release: 0x0 = Patch 0" format="hex0x"
                id="SystemControl@SCB-CPUID@REVISION"
                offset="[3:0]"/>
         <field description="Indicates part number" format="hex0x"
                id="SystemControl@SCB-CPUID@PARTNO"
                offset="[15:4]"/>
         <field description="Indicates processor revision: 0x2 = Revision 2" format="hex0x"
                id="SystemControl@SCB-CPUID@VARIANT"
                offset="[23:20]"/>
         <field description="Implementer code" format="hex0x"
                id="SystemControl@SCB-CPUID@IMPLEMENTER"
                offset="[31:24]"/>
      </register>
      <register description="Interrupt Control and State Register" format="hex0x"
                id="SystemControl@SCB-ICSR"
                offset="0xd04"
                size="4">
         <field description="Active exception number" format="hex0x"
                id="SystemControl@SCB-ICSR@VECTACTIVE"
                offset="[8:0]"/>
         <field description="no description available" format="enum" enum="d1e175445"
                id="SystemControl@SCB-ICSR@RETTOBASE"
                offset="[11]"/>
         <field description="Exception number of the highest priority pending enabled exception"
                format="hex0x"
                id="SystemControl@SCB-ICSR@VECTPENDING"
                offset="[17:12]"/>
         <field description="no description available" format="hex0x"
                id="SystemControl@SCB-ICSR@ISRPENDING"
                offset="[22]"/>
         <field description="no description available" format="enum" enum="d1e175527"
                id="SystemControl@SCB-ICSR@ISRPREEMPT"
                offset="[23]"/>
         <field description="no description available" format="enum" enum="d1e175574"
                id="SystemControl@SCB-ICSR@PENDSTCLR"
                offset="[25]"/>
         <field description="no description available" format="enum" enum="d1e175620"
                id="SystemControl@SCB-ICSR@PENDSTSET"
                offset="[26]"/>
         <field description="no description available" format="enum" enum="d1e175666"
                id="SystemControl@SCB-ICSR@PENDSVCLR"
                offset="[27]"/>
         <field description="no description available" format="enum" enum="d1e175712"
                id="SystemControl@SCB-ICSR@PENDSVSET"
                offset="[28]"/>
         <field description="no description available" format="enum" enum="d1e175758"
                id="SystemControl@SCB-ICSR@NMIPENDSET"
                offset="[31]"/>
      </register>
      <register description="Vector Table Offset Register" format="hex0x"
                id="SystemControl@SCB-VTOR"
                offset="0xd08"
                size="4">
         <field description="Vector table base offset" format="hex0x"
                id="SystemControl@SCB-VTOR@TBLOFF"
                offset="[31:7]"/>
      </register>
      <register description="Application Interrupt and Reset Control Register" format="hex0x"
                id="SystemControl@SCB-AIRCR"
                offset="0xd0c"
                size="4">
         <field description="no description available" format="hex0x"
                id="SystemControl@SCB-AIRCR@VECTRESET"
                offset="[0]"/>
         <field description="no description available" format="hex0x"
                id="SystemControl@SCB-AIRCR@VECTCLRACTIVE"
                offset="[1]"/>
         <field description="no description available" format="enum" enum="d1e175914"
                id="SystemControl@SCB-AIRCR@SYSRESETREQ"
                offset="[2]"/>
         <field description="Interrupt priority grouping field. This field determines the split of group priority from subpriority."
                format="hex0x"
                id="SystemControl@SCB-AIRCR@PRIGROUP"
                offset="[10:8]"/>
         <field description="no description available" format="enum" enum="d1e175978"
                id="SystemControl@SCB-AIRCR@ENDIANNESS"
                offset="[15]"/>
         <field description="Register key" format="hex0x" id="SystemControl@SCB-AIRCR@VECTKEY"
                offset="[31:16]"/>
      </register>
      <register description="System Control Register" format="hex0x" id="SystemControl@SCB-SCR"
                offset="0xd10"
                size="4">
         <field description="no description available" format="enum" enum="d1e176072"
                id="SystemControl@SCB-SCR@SLEEPONEXIT"
                offset="[1]"/>
         <field description="no description available" format="enum" enum="d1e176118"
                id="SystemControl@SCB-SCR@SLEEPDEEP"
                offset="[2]"/>
         <field description="no description available" format="enum" enum="d1e176164"
                id="SystemControl@SCB-SCR@SEVONPEND"
                offset="[4]"/>
      </register>
      <register description="Configuration and Control Register" format="hex0x"
                id="SystemControl@SCB-CCR"
                offset="0xd14"
                size="4">
         <field description="no description available" format="enum" enum="d1e176238"
                id="SystemControl@SCB-CCR@NONBASETHRDENA"
                offset="[0]"/>
         <field description="Enables unprivileged software access to the STIR" format="enum"
                enum="d1e176284"
                id="SystemControl@SCB-CCR@USERSETMPEND"
                offset="[1]"/>
         <field description="Enables unaligned access traps" format="enum" enum="d1e176330"
                id="SystemControl@SCB-CCR@UNALIGN-TRP"
                offset="[3]"/>
         <field description="Enables faulting or halting when the processor executes an SDIV or UDIV instruction with a divisor of 0"
                format="enum"
                enum="d1e176376"
                id="SystemControl@SCB-CCR@DIV-0-TRP"
                offset="[4]"/>
         <field description="Enables handlers with priority -1 or -2 to ignore data BusFaults caused by load and store instructions."
                format="enum"
                enum="d1e176422"
                id="SystemControl@SCB-CCR@BFHFNMIGN"
                offset="[8]"/>
         <field description="Indicates stack alignment on exception entry" format="enum"
                enum="d1e176469"
                id="SystemControl@SCB-CCR@STKALIGN"
                offset="[9]"/>
      </register>
      <register description="System Handler Priority Register 1" format="hex0x"
                id="SystemControl@SCB-SHPR1"
                offset="0xd18"
                size="4">
         <field description="Priority of system handler 4, MemManage" format="hex0x"
                id="SystemControl@SCB-SHPR1@PRI-4"
                offset="[7:0]"/>
         <field description="Priority of system handler 5, BusFault" format="hex0x"
                id="SystemControl@SCB-SHPR1@PRI-5"
                offset="[15:8]"/>
         <field description="Priority of system handler 6, UsageFault" format="hex0x"
                id="SystemControl@SCB-SHPR1@PRI-6"
                offset="[23:16]"/>
      </register>
      <register description="System Handler Priority Register 2" format="hex0x"
                id="SystemControl@SCB-SHPR2"
                offset="0xd1c"
                size="4">
         <field description="Priority of system handler 11, SVCall" format="hex0x"
                id="SystemControl@SCB-SHPR2@PRI-11"
                offset="[31:24]"/>
      </register>
      <register description="System Handler Priority Register 3" format="hex0x"
                id="SystemControl@SCB-SHPR3"
                offset="0xd20"
                size="4">
         <field description="Priority of system handler 14, PendSV" format="hex0x"
                id="SystemControl@SCB-SHPR3@PRI-14"
                offset="[23:16]"/>
         <field description="Priority of system handler 15, SysTick exception" format="hex0x"
                id="SystemControl@SCB-SHPR3@PRI-15"
                offset="[31:24]"/>
      </register>
      <register description="System Handler Control and State Register" format="hex0x"
                id="SystemControl@SCB-SHCSR"
                offset="0xd24"
                size="4">
         <field description="no description available" format="enum" enum="d1e176735"
                id="SystemControl@SCB-SHCSR@MEMFAULTACT"
                offset="[0]"/>
         <field description="no description available" format="enum" enum="d1e176781"
                id="SystemControl@SCB-SHCSR@BUSFAULTACT"
                offset="[1]"/>
         <field description="no description available" format="enum" enum="d1e176827"
                id="SystemControl@SCB-SHCSR@USGFAULTACT"
                offset="[3]"/>
         <field description="no description available" format="enum" enum="d1e176873"
                id="SystemControl@SCB-SHCSR@SVCALLACT"
                offset="[7]"/>
         <field description="no description available" format="enum" enum="d1e176919"
                id="SystemControl@SCB-SHCSR@MONITORACT"
                offset="[8]"/>
         <field description="no description available" format="enum" enum="d1e176966"
                id="SystemControl@SCB-SHCSR@PENDSVACT"
                offset="[10]"/>
         <field description="no description available" format="enum" enum="d1e177012"
                id="SystemControl@SCB-SHCSR@SYSTICKACT"
                offset="[11]"/>
         <field description="no description available" format="enum" enum="d1e177058"
                id="SystemControl@SCB-SHCSR@USGFAULTPENDED"
                offset="[12]"/>
         <field description="no description available" format="enum" enum="d1e177104"
                id="SystemControl@SCB-SHCSR@MEMFAULTPENDED"
                offset="[13]"/>
         <field description="no description available" format="enum" enum="d1e177150"
                id="SystemControl@SCB-SHCSR@BUSFAULTPENDED"
                offset="[14]"/>
         <field description="no description available" format="enum" enum="d1e177196"
                id="SystemControl@SCB-SHCSR@SVCALLPENDED"
                offset="[15]"/>
         <field description="no description available" format="enum" enum="d1e177243"
                id="SystemControl@SCB-SHCSR@MEMFAULTENA"
                offset="[16]"/>
         <field description="no description available" format="enum" enum="d1e177289"
                id="SystemControl@SCB-SHCSR@BUSFAULTENA"
                offset="[17]"/>
         <field description="no description available" format="enum" enum="d1e177335"
                id="SystemControl@SCB-SHCSR@USGFAULTENA"
                offset="[18]"/>
      </register>
      <register description="Configurable Fault Status Registers" format="hex0x"
                id="SystemControl@SCB-CFSR"
                offset="0xd28"
                size="4">
         <field description="no description available" format="enum" enum="d1e177410"
                id="SystemControl@SCB-CFSR@IACCVIOL"
                offset="[0]"/>
         <field description="no description available" format="enum" enum="d1e177456"
                id="SystemControl@SCB-CFSR@DACCVIOL"
                offset="[1]"/>
         <field description="no description available" format="enum" enum="d1e177502"
                id="SystemControl@SCB-CFSR@MUNSTKERR"
                offset="[3]"/>
         <field description="no description available" format="enum" enum="d1e177548"
                id="SystemControl@SCB-CFSR@MSTKERR"
                offset="[4]"/>
         <field description="no description available" format="enum" enum="d1e177594"
                id="SystemControl@SCB-CFSR@MLSPERR"
                offset="[5]"/>
         <field description="no description available" format="enum" enum="d1e177641"
                id="SystemControl@SCB-CFSR@MMARVALID"
                offset="[7]"/>
         <field description="no description available" format="enum" enum="d1e177687"
                id="SystemControl@SCB-CFSR@IBUSERR"
                offset="[8]"/>
         <field description="no description available" format="enum" enum="d1e177733"
                id="SystemControl@SCB-CFSR@PRECISERR"
                offset="[9]"/>
         <field description="no description available" format="enum" enum="d1e177779"
                id="SystemControl@SCB-CFSR@IMPRECISERR"
                offset="[10]"/>
         <field description="no description available" format="enum" enum="d1e177825"
                id="SystemControl@SCB-CFSR@UNSTKERR"
                offset="[11]"/>
         <field description="no description available" format="enum" enum="d1e177871"
                id="SystemControl@SCB-CFSR@STKERR"
                offset="[12]"/>
         <field description="no description available" format="enum" enum="d1e177918"
                id="SystemControl@SCB-CFSR@LSPERR"
                offset="[13]"/>
         <field description="no description available" format="enum" enum="d1e177964"
                id="SystemControl@SCB-CFSR@BFARVALID"
                offset="[15]"/>
         <field description="no description available" format="enum" enum="d1e178010"
                id="SystemControl@SCB-CFSR@UNDEFINSTR"
                offset="[16]"/>
         <field description="no description available" format="enum" enum="d1e178056"
                id="SystemControl@SCB-CFSR@INVSTATE"
                offset="[17]"/>
         <field description="no description available" format="enum" enum="d1e178102"
                id="SystemControl@SCB-CFSR@INVPC"
                offset="[18]"/>
         <field description="no description available" format="enum" enum="d1e178148"
                id="SystemControl@SCB-CFSR@NOCP"
                offset="[19]"/>
         <field description="no description available" format="enum" enum="d1e178195"
                id="SystemControl@SCB-CFSR@UNALIGNED"
                offset="[24]"/>
         <field description="no description available" format="enum" enum="d1e178241"
                id="SystemControl@SCB-CFSR@DIVBYZERO"
                offset="[25]"/>
      </register>
      <register description="HardFault Status register" format="hex0x"
                id="SystemControl@SCB-HFSR"
                offset="0xd2c"
                size="4">
         <field description="no description available" format="enum" enum="d1e178315"
                id="SystemControl@SCB-HFSR@VECTTBL"
                offset="[1]"/>
         <field description="no description available" format="enum" enum="d1e178361"
                id="SystemControl@SCB-HFSR@FORCED"
                offset="[30]"/>
         <field description="no description available" format="hex0x"
                id="SystemControl@SCB-HFSR@DEBUGEVT"
                offset="[31]"/>
      </register>
      <register description="Debug Fault Status Register" format="hex0x"
                id="SystemControl@SCB-DFSR"
                offset="0xd30"
                size="4">
         <field description="no description available" format="enum" enum="d1e178453"
                id="SystemControl@SCB-DFSR@HALTED"
                offset="[0]"/>
         <field description="no description available" format="enum" enum="d1e178499"
                id="SystemControl@SCB-DFSR@BKPT"
                offset="[1]"/>
         <field description="no description available" format="enum" enum="d1e178545"
                id="SystemControl@SCB-DFSR@DWTTRAP"
                offset="[2]"/>
         <field description="no description available" format="enum" enum="d1e178591"
                id="SystemControl@SCB-DFSR@VCATCH"
                offset="[3]"/>
         <field description="no description available" format="enum" enum="d1e178637"
                id="SystemControl@SCB-DFSR@EXTERNAL"
                offset="[4]"/>
      </register>
      <register description="MemManage Address Register" format="hex0x"
                id="SystemControl@SCB-MMFAR"
                offset="0xd34"
                size="4">
         <field description="Address of MemManage fault location" format="hex0x"
                id="SystemControl@SCB-MMFAR@ADDRESS"
                offset="[31:0]"/>
      </register>
      <register description="BusFault Address Register" format="hex0x"
                id="SystemControl@SCB-BFAR"
                offset="0xd38"
                size="4">
         <field description="Address of the BusFault location" format="hex0x"
                id="SystemControl@SCB-BFAR@ADDRESS"
                offset="[31:0]"/>
      </register>
      <register description="Auxiliary Fault Status Register" format="hex0x"
                id="SystemControl@SCB-AFSR"
                offset="0xd3c"
                size="4">
         <field description="Latched version of the AUXFAULT inputs" format="hex0x"
                id="SystemControl@SCB-AFSR@AUXFAULT"
                offset="[31:0]"/>
      </register>
      <register description="Coprocessor Access Control Register" format="hex0x"
                id="SystemControl@SCB-CPACR"
                offset="0xd88"
                size="4">
         <field description="Access privileges for coprocessor 10." format="enum"
                enum="d1e178850"
                id="SystemControl@SCB-CPACR@CP10"
                offset="[21:20]"/>
         <field description="Access privileges for coprocessor 11." format="enum"
                enum="d1e178908"
                id="SystemControl@SCB-CPACR@CP11"
                offset="[23:22]"/>
      </register>
      <register description="Floating-point Context Control Register" format="hex0x"
                id="SystemControl@SCB-FPCCR"
                offset="0xf34"
                size="4">
         <field description="Lazy state preservation." format="enum" enum="d1e178994"
                id="SystemControl@SCB-FPCCR@LSPACT"
                offset="[0]"/>
         <field description="Privilege level when the floating-point stack frame was allocated."
                format="enum"
                enum="d1e179040"
                id="SystemControl@SCB-FPCCR@USER"
                offset="[1]"/>
         <field description="Mode when the floating-point stack frame was allocated."
                format="enum"
                enum="d1e179086"
                id="SystemControl@SCB-FPCCR@THREAD"
                offset="[3]"/>
         <field description="Permission to set the HardFault handler to the pending state when the floating-point stack frame was allocated."
                format="enum"
                enum="d1e179132"
                id="SystemControl@SCB-FPCCR@HFRDY"
                offset="[4]"/>
         <field description="Permission to set the MemManage handler to the pending state when the floating-point stack frame was allocated."
                format="enum"
                enum="d1e179178"
                id="SystemControl@SCB-FPCCR@MMRDY"
                offset="[5]"/>
         <field description="Permission to set the BusFault handler to the pending state when the floating-point stack frame was allocated."
                format="enum"
                enum="d1e179225"
                id="SystemControl@SCB-FPCCR@BFRDY"
                offset="[6]"/>
         <field description="Permission to set the MON_PEND when the floating-point stack frame was allocated."
                format="enum"
                enum="d1e179271"
                id="SystemControl@SCB-FPCCR@MONRDY"
                offset="[8]"/>
         <field description="Lazy state preservation for floating-point context." format="enum"
                enum="d1e179317"
                id="SystemControl@SCB-FPCCR@LSPEN"
                offset="[30]"/>
         <field description="Enables CONTROL2 setting on execution of a floating-point instruction. This results in automatic hardware state preservation and restoration, for floating-point context, on exception entry and exit."
                format="enum"
                enum="d1e179363"
                id="SystemControl@SCB-FPCCR@ASPEN"
                offset="[31]"/>
      </register>
      <register description="Floating-point Context Address Register" format="hex0x"
                id="SystemControl@SCB-FPCAR"
                offset="0xf38"
                size="4">
         <field description="The location of the unpopulated floating-point register space allocated on an exception stack frame."
                format="hex0x"
                id="SystemControl@SCB-FPCAR@ADDRESS"
                offset="[31:3]"/>
      </register>
      <register description="Floating-point Default Status Control Register" format="hex0x"
                id="SystemControl@SCB-FPDSCR"
                offset="0xf3c"
                size="4">
         <field description="Default value for FPSCR.RMode (Rounding Mode control field)."
                format="enum"
                enum="d1e179483"
                id="SystemControl@SCB-FPDSCR@RMode"
                offset="[23:22]"/>
         <field description="Default value for FPSCR.FZ (Flush-to-zero mode control bit)."
                format="enum"
                enum="d1e179553"
                id="SystemControl@SCB-FPDSCR@FZ"
                offset="[24]"/>
         <field description="Default value for FPSCR.DN (Default NaN mode control bit)."
                format="enum"
                enum="d1e179599"
                id="SystemControl@SCB-FPDSCR@DN"
                offset="[25]"/>
         <field description="Default value for FPSCR.AHP (Alternative half-precision control bit)."
                format="enum"
                enum="d1e179645"
                id="SystemControl@SCB-FPDSCR@AHP"
                offset="[26]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="System timer" id="SysTick" size="0x10">
      <register description="SysTick Control and Status Register" format="hex0x"
                id="SysTick@SYST-CSR"
                offset="0x0"
                size="4">
         <field description="no description available" format="enum" enum="d1e179753"
                id="SysTick@SYST-CSR@ENABLE"
                offset="[0]"/>
         <field description="no description available" format="enum" enum="d1e179799"
                id="SysTick@SYST-CSR@TICKINT"
                offset="[1]"/>
         <field description="no description available" format="enum" enum="d1e179845"
                id="SysTick@SYST-CSR@CLKSOURCE"
                offset="[2]"/>
         <field description="no description available" format="hex0x"
                id="SysTick@SYST-CSR@COUNTFLAG"
                offset="[16]"/>
      </register>
      <register description="SysTick Reload Value Register" format="hex0x"
                id="SysTick@SYST-RVR"
                offset="0x4"
                size="4">
         <field description="Value to load into the SysTick Current Value Register when the counter reaches 0"
                format="hex0x"
                id="SysTick@SYST-RVR@RELOAD"
                offset="[23:0]"/>
      </register>
      <register description="SysTick Current Value Register" format="hex0x"
                id="SysTick@SYST-CVR"
                offset="0x8"
                size="4">
         <field description="Current value at the time the register is accessed" format="hex0x"
                id="SysTick@SYST-CVR@CURRENT"
                offset="[23:0]"/>
      </register>
      <register description="SysTick Calibration Value Register" format="hex0x"
                id="SysTick@SYST-CALIB"
                offset="0xc"
                readOnly="true"
                size="4">
         <field description="Reload value to use for 10ms timing" format="hex0x"
                id="SysTick@SYST-CALIB@TENMS"
                offset="[23:0]"/>
         <field description="no description available" format="enum" enum="d1e180047"
                id="SysTick@SYST-CALIB@SKEW"
                offset="[30]"/>
         <field description="no description available" format="enum" enum="d1e180093"
                id="SysTick@SYST-CALIB@NOREF"
                offset="[31]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="Nested Vectored Interrupt Controller" id="NVIC"
               size="0xe04">
      <register description="Interrupt Set Enable Register n" format="hex0x"
                id="NVIC@NVICISER0"
                offset="0x0"
                size="4">
         <field description="Interrupt set enable bits" format="hex0x"
                id="NVIC@NVICISER0@SETENA"
                offset="[31:0]"/>
      </register>
      <register description="Interrupt Set Enable Register n" format="hex0x"
                id="NVIC@NVICISER1"
                offset="0x4"
                size="4">
         <field description="Interrupt set enable bits" format="hex0x"
                id="NVIC@NVICISER1@SETENA"
                offset="[31:0]"/>
      </register>
      <register description="Interrupt Set Enable Register n" format="hex0x"
                id="NVIC@NVICISER2"
                offset="0x8"
                size="4">
         <field description="Interrupt set enable bits" format="hex0x"
                id="NVIC@NVICISER2@SETENA"
                offset="[31:0]"/>
      </register>
      <register description="Interrupt Set Enable Register n" format="hex0x"
                id="NVIC@NVICISER3"
                offset="0xc"
                size="4">
         <field description="Interrupt set enable bits" format="hex0x"
                id="NVIC@NVICISER3@SETENA"
                offset="[31:0]"/>
      </register>
      <register description="Interrupt Clear Enable Register n" format="hex0x"
                id="NVIC@NVICICER0"
                offset="0x80"
                size="4">
         <field description="Interrupt clear-enable bits" format="hex0x"
                id="NVIC@NVICICER0@CLRENA"
                offset="[31:0]"/>
      </register>
      <register description="Interrupt Clear Enable Register n" format="hex0x"
                id="NVIC@NVICICER1"
                offset="0x84"
                size="4">
         <field description="Interrupt clear-enable bits" format="hex0x"
                id="NVIC@NVICICER1@CLRENA"
                offset="[31:0]"/>
      </register>
      <register description="Interrupt Clear Enable Register n" format="hex0x"
                id="NVIC@NVICICER2"
                offset="0x88"
                size="4">
         <field description="Interrupt clear-enable bits" format="hex0x"
                id="NVIC@NVICICER2@CLRENA"
                offset="[31:0]"/>
      </register>
      <register description="Interrupt Clear Enable Register n" format="hex0x"
                id="NVIC@NVICICER3"
                offset="0x8c"
                size="4">
         <field description="Interrupt clear-enable bits" format="hex0x"
                id="NVIC@NVICICER3@CLRENA"
                offset="[31:0]"/>
      </register>
      <register description="Interrupt Set Pending Register n" format="hex0x"
                id="NVIC@NVICISPR0"
                offset="0x100"
                size="4">
         <field description="Interrupt set-pending bits" format="hex0x"
                id="NVIC@NVICISPR0@SETPEND"
                offset="[31:0]"/>
      </register>
      <register description="Interrupt Set Pending Register n" format="hex0x"
                id="NVIC@NVICISPR1"
                offset="0x104"
                size="4">
         <field description="Interrupt set-pending bits" format="hex0x"
                id="NVIC@NVICISPR1@SETPEND"
                offset="[31:0]"/>
      </register>
      <register description="Interrupt Set Pending Register n" format="hex0x"
                id="NVIC@NVICISPR2"
                offset="0x108"
                size="4">
         <field description="Interrupt set-pending bits" format="hex0x"
                id="NVIC@NVICISPR2@SETPEND"
                offset="[31:0]"/>
      </register>
      <register description="Interrupt Set Pending Register n" format="hex0x"
                id="NVIC@NVICISPR3"
                offset="0x10c"
                size="4">
         <field description="Interrupt set-pending bits" format="hex0x"
                id="NVIC@NVICISPR3@SETPEND"
                offset="[31:0]"/>
      </register>
      <register description="Interrupt Clear Pending Register n" format="hex0x"
                id="NVIC@NVICICPR0"
                offset="0x180"
                size="4">
         <field description="Interrupt clear-pending bits" format="hex0x"
                id="NVIC@NVICICPR0@CLRPEND"
                offset="[31:0]"/>
      </register>
      <register description="Interrupt Clear Pending Register n" format="hex0x"
                id="NVIC@NVICICPR1"
                offset="0x184"
                size="4">
         <field description="Interrupt clear-pending bits" format="hex0x"
                id="NVIC@NVICICPR1@CLRPEND"
                offset="[31:0]"/>
      </register>
      <register description="Interrupt Clear Pending Register n" format="hex0x"
                id="NVIC@NVICICPR2"
                offset="0x188"
                size="4">
         <field description="Interrupt clear-pending bits" format="hex0x"
                id="NVIC@NVICICPR2@CLRPEND"
                offset="[31:0]"/>
      </register>
      <register description="Interrupt Clear Pending Register n" format="hex0x"
                id="NVIC@NVICICPR3"
                offset="0x18c"
                size="4">
         <field description="Interrupt clear-pending bits" format="hex0x"
                id="NVIC@NVICICPR3@CLRPEND"
                offset="[31:0]"/>
      </register>
      <register description="Interrupt Active bit Register n" format="hex0x"
                id="NVIC@NVICIABR0"
                offset="0x200"
                size="4">
         <field description="Interrupt active flags" format="hex0x" id="NVIC@NVICIABR0@ACTIVE"
                offset="[31:0]"/>
      </register>
      <register description="Interrupt Active bit Register n" format="hex0x"
                id="NVIC@NVICIABR1"
                offset="0x204"
                size="4">
         <field description="Interrupt active flags" format="hex0x" id="NVIC@NVICIABR1@ACTIVE"
                offset="[31:0]"/>
      </register>
      <register description="Interrupt Active bit Register n" format="hex0x"
                id="NVIC@NVICIABR2"
                offset="0x208"
                size="4">
         <field description="Interrupt active flags" format="hex0x" id="NVIC@NVICIABR2@ACTIVE"
                offset="[31:0]"/>
      </register>
      <register description="Interrupt Active bit Register n" format="hex0x"
                id="NVIC@NVICIABR3"
                offset="0x20c"
                size="4">
         <field description="Interrupt active flags" format="hex0x" id="NVIC@NVICIABR3@ACTIVE"
                offset="[31:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP0"
                offset="0x300"
                size="1">
         <field description="Priority of interrupt 0" format="hex0x" id="NVIC@NVICIP0@PRI0"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP1"
                offset="0x301"
                size="1">
         <field description="Priority of interrupt 1" format="hex0x" id="NVIC@NVICIP1@PRI1"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP2"
                offset="0x302"
                size="1">
         <field description="Priority of interrupt 2" format="hex0x" id="NVIC@NVICIP2@PRI2"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP3"
                offset="0x303"
                size="1">
         <field description="Priority of interrupt 3" format="hex0x" id="NVIC@NVICIP3@PRI3"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP4"
                offset="0x304"
                size="1">
         <field description="Priority of interrupt 4" format="hex0x" id="NVIC@NVICIP4@PRI4"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP5"
                offset="0x305"
                size="1">
         <field description="Priority of interrupt 5" format="hex0x" id="NVIC@NVICIP5@PRI5"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP6"
                offset="0x306"
                size="1">
         <field description="Priority of interrupt 6" format="hex0x" id="NVIC@NVICIP6@PRI6"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP7"
                offset="0x307"
                size="1">
         <field description="Priority of interrupt 7" format="hex0x" id="NVIC@NVICIP7@PRI7"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP8"
                offset="0x308"
                size="1">
         <field description="Priority of interrupt 8" format="hex0x" id="NVIC@NVICIP8@PRI8"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP9"
                offset="0x309"
                size="1">
         <field description="Priority of interrupt 9" format="hex0x" id="NVIC@NVICIP9@PRI9"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP10"
                offset="0x30a"
                size="1">
         <field description="Priority of interrupt 10" format="hex0x" id="NVIC@NVICIP10@PRI10"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP11"
                offset="0x30b"
                size="1">
         <field description="Priority of interrupt 11" format="hex0x" id="NVIC@NVICIP11@PRI11"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP12"
                offset="0x30c"
                size="1">
         <field description="Priority of interrupt 12" format="hex0x" id="NVIC@NVICIP12@PRI12"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP13"
                offset="0x30d"
                size="1">
         <field description="Priority of interrupt 13" format="hex0x" id="NVIC@NVICIP13@PRI13"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP14"
                offset="0x30e"
                size="1">
         <field description="Priority of interrupt 14" format="hex0x" id="NVIC@NVICIP14@PRI14"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP15"
                offset="0x30f"
                size="1">
         <field description="Priority of interrupt 15" format="hex0x" id="NVIC@NVICIP15@PRI15"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP16"
                offset="0x310"
                size="1">
         <field description="Priority of interrupt 16" format="hex0x" id="NVIC@NVICIP16@PRI16"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP17"
                offset="0x311"
                size="1">
         <field description="Priority of interrupt 17" format="hex0x" id="NVIC@NVICIP17@PRI17"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP18"
                offset="0x312"
                size="1">
         <field description="Priority of interrupt 18" format="hex0x" id="NVIC@NVICIP18@PRI18"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP19"
                offset="0x313"
                size="1">
         <field description="Priority of interrupt 19" format="hex0x" id="NVIC@NVICIP19@PRI19"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP20"
                offset="0x314"
                size="1">
         <field description="Priority of interrupt 20" format="hex0x" id="NVIC@NVICIP20@PRI20"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP21"
                offset="0x315"
                size="1">
         <field description="Priority of interrupt 21" format="hex0x" id="NVIC@NVICIP21@PRI21"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP22"
                offset="0x316"
                size="1">
         <field description="Priority of interrupt 22" format="hex0x" id="NVIC@NVICIP22@PRI22"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP23"
                offset="0x317"
                size="1">
         <field description="Priority of interrupt 23" format="hex0x" id="NVIC@NVICIP23@PRI23"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP24"
                offset="0x318"
                size="1">
         <field description="Priority of interrupt 24" format="hex0x" id="NVIC@NVICIP24@PRI24"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP25"
                offset="0x319"
                size="1">
         <field description="Priority of interrupt 25" format="hex0x" id="NVIC@NVICIP25@PRI25"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP26"
                offset="0x31a"
                size="1">
         <field description="Priority of interrupt 26" format="hex0x" id="NVIC@NVICIP26@PRI26"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP27"
                offset="0x31b"
                size="1">
         <field description="Priority of interrupt 27" format="hex0x" id="NVIC@NVICIP27@PRI27"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP28"
                offset="0x31c"
                size="1">
         <field description="Priority of interrupt 28" format="hex0x" id="NVIC@NVICIP28@PRI28"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP29"
                offset="0x31d"
                size="1">
         <field description="Priority of interrupt 29" format="hex0x" id="NVIC@NVICIP29@PRI29"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP30"
                offset="0x31e"
                size="1">
         <field description="Priority of interrupt 30" format="hex0x" id="NVIC@NVICIP30@PRI30"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP31"
                offset="0x31f"
                size="1">
         <field description="Priority of interrupt 31" format="hex0x" id="NVIC@NVICIP31@PRI31"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP32"
                offset="0x320"
                size="1">
         <field description="Priority of interrupt 32" format="hex0x" id="NVIC@NVICIP32@PRI32"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP33"
                offset="0x321"
                size="1">
         <field description="Priority of interrupt 33" format="hex0x" id="NVIC@NVICIP33@PRI33"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP34"
                offset="0x322"
                size="1">
         <field description="Priority of interrupt 34" format="hex0x" id="NVIC@NVICIP34@PRI34"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP35"
                offset="0x323"
                size="1">
         <field description="Priority of interrupt 35" format="hex0x" id="NVIC@NVICIP35@PRI35"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP36"
                offset="0x324"
                size="1">
         <field description="Priority of interrupt 36" format="hex0x" id="NVIC@NVICIP36@PRI36"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP37"
                offset="0x325"
                size="1">
         <field description="Priority of interrupt 37" format="hex0x" id="NVIC@NVICIP37@PRI37"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP38"
                offset="0x326"
                size="1">
         <field description="Priority of interrupt 38" format="hex0x" id="NVIC@NVICIP38@PRI38"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP39"
                offset="0x327"
                size="1">
         <field description="Priority of interrupt 39" format="hex0x" id="NVIC@NVICIP39@PRI39"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP40"
                offset="0x328"
                size="1">
         <field description="Priority of interrupt 40" format="hex0x" id="NVIC@NVICIP40@PRI40"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP41"
                offset="0x329"
                size="1">
         <field description="Priority of interrupt 41" format="hex0x" id="NVIC@NVICIP41@PRI41"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP42"
                offset="0x32a"
                size="1">
         <field description="Priority of interrupt 42" format="hex0x" id="NVIC@NVICIP42@PRI42"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP43"
                offset="0x32b"
                size="1">
         <field description="Priority of interrupt 43" format="hex0x" id="NVIC@NVICIP43@PRI43"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP44"
                offset="0x32c"
                size="1">
         <field description="Priority of interrupt 44" format="hex0x" id="NVIC@NVICIP44@PRI44"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP45"
                offset="0x32d"
                size="1">
         <field description="Priority of interrupt 45" format="hex0x" id="NVIC@NVICIP45@PRI45"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP46"
                offset="0x32e"
                size="1">
         <field description="Priority of interrupt 46" format="hex0x" id="NVIC@NVICIP46@PRI46"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP47"
                offset="0x32f"
                size="1">
         <field description="Priority of interrupt 47" format="hex0x" id="NVIC@NVICIP47@PRI47"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP48"
                offset="0x330"
                size="1">
         <field description="Priority of interrupt 48" format="hex0x" id="NVIC@NVICIP48@PRI48"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP49"
                offset="0x331"
                size="1">
         <field description="Priority of interrupt 49" format="hex0x" id="NVIC@NVICIP49@PRI49"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP50"
                offset="0x332"
                size="1">
         <field description="Priority of interrupt 50" format="hex0x" id="NVIC@NVICIP50@PRI50"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP51"
                offset="0x333"
                size="1">
         <field description="Priority of interrupt 51" format="hex0x" id="NVIC@NVICIP51@PRI51"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP52"
                offset="0x334"
                size="1">
         <field description="Priority of interrupt 52" format="hex0x" id="NVIC@NVICIP52@PRI52"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP53"
                offset="0x335"
                size="1">
         <field description="Priority of interrupt 53" format="hex0x" id="NVIC@NVICIP53@PRI53"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP54"
                offset="0x336"
                size="1">
         <field description="Priority of interrupt 54" format="hex0x" id="NVIC@NVICIP54@PRI54"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP55"
                offset="0x337"
                size="1">
         <field description="Priority of interrupt 55" format="hex0x" id="NVIC@NVICIP55@PRI55"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP56"
                offset="0x338"
                size="1">
         <field description="Priority of interrupt 56" format="hex0x" id="NVIC@NVICIP56@PRI56"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP57"
                offset="0x339"
                size="1">
         <field description="Priority of interrupt 57" format="hex0x" id="NVIC@NVICIP57@PRI57"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP58"
                offset="0x33a"
                size="1">
         <field description="Priority of interrupt 58" format="hex0x" id="NVIC@NVICIP58@PRI58"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP59"
                offset="0x33b"
                size="1">
         <field description="Priority of interrupt 59" format="hex0x" id="NVIC@NVICIP59@PRI59"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP60"
                offset="0x33c"
                size="1">
         <field description="Priority of interrupt 60" format="hex0x" id="NVIC@NVICIP60@PRI60"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP61"
                offset="0x33d"
                size="1">
         <field description="Priority of interrupt 61" format="hex0x" id="NVIC@NVICIP61@PRI61"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP62"
                offset="0x33e"
                size="1">
         <field description="Priority of interrupt 62" format="hex0x" id="NVIC@NVICIP62@PRI62"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP63"
                offset="0x33f"
                size="1">
         <field description="Priority of interrupt 63" format="hex0x" id="NVIC@NVICIP63@PRI63"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP64"
                offset="0x340"
                size="1">
         <field description="Priority of interrupt 64" format="hex0x" id="NVIC@NVICIP64@PRI64"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP65"
                offset="0x341"
                size="1">
         <field description="Priority of interrupt 65" format="hex0x" id="NVIC@NVICIP65@PRI65"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP66"
                offset="0x342"
                size="1">
         <field description="Priority of interrupt 66" format="hex0x" id="NVIC@NVICIP66@PRI66"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP67"
                offset="0x343"
                size="1">
         <field description="Priority of interrupt 67" format="hex0x" id="NVIC@NVICIP67@PRI67"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP68"
                offset="0x344"
                size="1">
         <field description="Priority of interrupt 68" format="hex0x" id="NVIC@NVICIP68@PRI68"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP69"
                offset="0x345"
                size="1">
         <field description="Priority of interrupt 69" format="hex0x" id="NVIC@NVICIP69@PRI69"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP70"
                offset="0x346"
                size="1">
         <field description="Priority of interrupt 70" format="hex0x" id="NVIC@NVICIP70@PRI70"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP71"
                offset="0x347"
                size="1">
         <field description="Priority of interrupt 71" format="hex0x" id="NVIC@NVICIP71@PRI71"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP72"
                offset="0x348"
                size="1">
         <field description="Priority of interrupt 72" format="hex0x" id="NVIC@NVICIP72@PRI72"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP73"
                offset="0x349"
                size="1">
         <field description="Priority of interrupt 73" format="hex0x" id="NVIC@NVICIP73@PRI73"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP74"
                offset="0x34a"
                size="1">
         <field description="Priority of interrupt 74" format="hex0x" id="NVIC@NVICIP74@PRI74"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP75"
                offset="0x34b"
                size="1">
         <field description="Priority of interrupt 75" format="hex0x" id="NVIC@NVICIP75@PRI75"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP76"
                offset="0x34c"
                size="1">
         <field description="Priority of interrupt 76" format="hex0x" id="NVIC@NVICIP76@PRI76"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP77"
                offset="0x34d"
                size="1">
         <field description="Priority of interrupt 77" format="hex0x" id="NVIC@NVICIP77@PRI77"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP78"
                offset="0x34e"
                size="1">
         <field description="Priority of interrupt 78" format="hex0x" id="NVIC@NVICIP78@PRI78"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP79"
                offset="0x34f"
                size="1">
         <field description="Priority of interrupt 79" format="hex0x" id="NVIC@NVICIP79@PRI79"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP80"
                offset="0x350"
                size="1">
         <field description="Priority of interrupt 80" format="hex0x" id="NVIC@NVICIP80@PRI80"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP81"
                offset="0x351"
                size="1">
         <field description="Priority of interrupt 81" format="hex0x" id="NVIC@NVICIP81@PRI81"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP82"
                offset="0x352"
                size="1">
         <field description="Priority of interrupt 82" format="hex0x" id="NVIC@NVICIP82@PRI82"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP83"
                offset="0x353"
                size="1">
         <field description="Priority of interrupt 83" format="hex0x" id="NVIC@NVICIP83@PRI83"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP84"
                offset="0x354"
                size="1">
         <field description="Priority of interrupt 84" format="hex0x" id="NVIC@NVICIP84@PRI84"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP85"
                offset="0x355"
                size="1">
         <field description="Priority of interrupt 85" format="hex0x" id="NVIC@NVICIP85@PRI85"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP86"
                offset="0x356"
                size="1">
         <field description="Priority of interrupt 86" format="hex0x" id="NVIC@NVICIP86@PRI86"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP87"
                offset="0x357"
                size="1">
         <field description="Priority of interrupt 87" format="hex0x" id="NVIC@NVICIP87@PRI87"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP88"
                offset="0x358"
                size="1">
         <field description="Priority of interrupt 88" format="hex0x" id="NVIC@NVICIP88@PRI88"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP89"
                offset="0x359"
                size="1">
         <field description="Priority of interrupt 89" format="hex0x" id="NVIC@NVICIP89@PRI89"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP90"
                offset="0x35a"
                size="1">
         <field description="Priority of interrupt 90" format="hex0x" id="NVIC@NVICIP90@PRI90"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP91"
                offset="0x35b"
                size="1">
         <field description="Priority of interrupt 91" format="hex0x" id="NVIC@NVICIP91@PRI91"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP92"
                offset="0x35c"
                size="1">
         <field description="Priority of interrupt 92" format="hex0x" id="NVIC@NVICIP92@PRI92"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP93"
                offset="0x35d"
                size="1">
         <field description="Priority of interrupt 93" format="hex0x" id="NVIC@NVICIP93@PRI93"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP94"
                offset="0x35e"
                size="1">
         <field description="Priority of interrupt 94" format="hex0x" id="NVIC@NVICIP94@PRI94"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP95"
                offset="0x35f"
                size="1">
         <field description="Priority of interrupt 95" format="hex0x" id="NVIC@NVICIP95@PRI95"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP96"
                offset="0x360"
                size="1">
         <field description="Priority of interrupt 96" format="hex0x" id="NVIC@NVICIP96@PRI96"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP97"
                offset="0x361"
                size="1">
         <field description="Priority of interrupt 97" format="hex0x" id="NVIC@NVICIP97@PRI97"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP98"
                offset="0x362"
                size="1">
         <field description="Priority of interrupt 98" format="hex0x" id="NVIC@NVICIP98@PRI98"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP99"
                offset="0x363"
                size="1">
         <field description="Priority of interrupt 99" format="hex0x" id="NVIC@NVICIP99@PRI99"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP100"
                offset="0x364"
                size="1">
         <field description="Priority of interrupt 100" format="hex0x"
                id="NVIC@NVICIP100@PRI100"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP101"
                offset="0x365"
                size="1">
         <field description="Priority of interrupt 101" format="hex0x"
                id="NVIC@NVICIP101@PRI101"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP102"
                offset="0x366"
                size="1">
         <field description="Priority of interrupt 102" format="hex0x"
                id="NVIC@NVICIP102@PRI102"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP103"
                offset="0x367"
                size="1">
         <field description="Priority of interrupt 103" format="hex0x"
                id="NVIC@NVICIP103@PRI103"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP104"
                offset="0x368"
                size="1">
         <field description="Priority of interrupt 104" format="hex0x"
                id="NVIC@NVICIP104@PRI104"
                offset="[7:0]"/>
      </register>
      <register description="Interrupt Priority Register n" format="hex0x" id="NVIC@NVICIP105"
                offset="0x369"
                size="1">
         <field description="Priority of interrupt 105" format="hex0x"
                id="NVIC@NVICIP105@PRI105"
                offset="[7:0]"/>
      </register>
      <register description="Software Trigger Interrupt Register" format="hex0x"
                id="NVIC@NVICSTIR"
                offset="0xe00"
                size="4">
         <field description="Interrupt ID of the interrupt to trigger, in the range 0-239. For example, a value of 0x03 specifies interrupt IRQ3."
                format="hex0x"
                id="NVIC@NVICSTIR@INTID"
                offset="[8:0]"/>
      </register>
   </peripheral>
   <peripheral defRegSize="4" description="Embedded Trace Macrocell Registers" id="ETM"
               size="0x1000">
      <register description="Main Control Register" format="hex0x" id="ETM@ETMCR" offset="0x0"
                size="4">
         <field description="ETM power down. This bit can be used by an implementation to control if the ETM is in a low power state. This bit must be cleared by the trace software tools at the beginning of a debug session. When this bit is set to 1, writes to some registers and fields might be ignored."
                format="hex0x"
                id="ETM@ETMCR@ETMPD"
                offset="[0]"/>
         <field description="Port size. The ETM-M4 has no influence over the external pins used for trace. These bits are implemented but not used. On an ETM reset these bits reset to 0b001."
                format="hex0x"
                id="ETM@ETMCR@PS"
                offset="[6:4]"/>
         <field description="Stall processor. The FIFOFULL output can be used to stall the processor to prevent overflow. The FIFOFULL output is only enabled when the stall processor bit is set to 1. When the bit is 0 the FIFOFULL output remains LOW at all times and the FIFO overflows if there are too many trace packets. Trace resumes without corruption once the FIFO has drained, if overflow does occur. An ETM reset sets this bit to 0."
                format="hex0x"
                id="ETM@ETMCR@SP"
                offset="[7]"/>
         <field description="Branch output. When set to 1 all branch addresses are output, even if the branch was because of a direct branch instruction. Setting this bit enables reconstruction of the program flow without having access to the memory image of the code being executed. When this bit is set to 1, more trace data is generated, and this may affect the performance of the trace system. Information about the execution of a branch is traced regardless of the state of this bit. An ETM reset sets this bit to 0."
                format="hex0x"
                id="ETM@ETMCR@BO"
                offset="[8]"/>
         <field description="Debug request control. When set to 1 and the trigger event occurs, the DBGRQ output is asserted until DBGACK is observed. This enables the ARM processor to be forced into Debug state. An ETM reset sets this bit to 0."
                format="hex0x"
                id="ETM@ETMCR@DRC"
                offset="[9]"/>
         <field description="ETM programming. This bit must be set to 1 at the start of the ETM programming sequence. Tracing is prevented while this bit is set to 1. On an ETM reset this bit is set to b1."
                format="hex0x"
                id="ETM@ETMCR@ETMP"
                offset="[10]"/>
         <field description="ETM port selection. This bit can be used to control other trace components in an implementation. This bit must be set by the trace software tools to ensure that trace output is enabled from this ETM. An ETM reset sets this bit to 0."
                format="enum"
                enum="d1e186204"
                id="ETM@ETMCR@ETMPS"
                offset="[11]"/>
         <field description="This bit is implemented but has no function. An ETM reset sets this bit to 0."
                format="hex0x"
                id="ETM@ETMCR@PM2"
                offset="[13]"/>
         <field description="These bits are implemented but have no function. An ETM reset sets these bits to 0."
                format="hex0x"
                id="ETM@ETMCR@PM"
                offset="[17:16]"/>
         <field description="This bit is implemented but has no function. An ETM reset sets this bit to 0."
                format="hex0x"
                id="ETM@ETMCR@PS3"
                offset="[21]"/>
         <field description="When set, this bit enables timestamping. An ETM reset sets this bit to 0."
                format="hex0x"
                id="ETM@ETMCR@TE"
                offset="[28]"/>
      </register>
      <register description="Configuration Code Register" format="hex0x" id="ETM@ETMCCR"
                offset="0x4"
                readOnly="true"
                size="4">
         <field description="Number of address comparator pairs. The value of these bits is b0000, indicating that address comparator pairs are not implemented."
                format="hex0x"
                id="ETM@ETMCCR@NumberOfAddressComparatorPairs"
                offset="[3:0]"/>
         <field description="Number of data value comparators. The value of these bits is b0000, indicating that data value comparators are not implemented."
                format="hex0x"
                id="ETM@ETMCCR@NDVC"
                offset="[7:4]"/>
         <field description="Number of memory map decoders. The value of these bits is b00000, indicating that memory map decoder inputs are not implemented."
                format="hex0x"
                id="ETM@ETMCCR@NMMD"
                offset="[12:8]"/>
         <field description="Number of counters. The value of these bits is b001, indicating that one counter is implemented."
                format="hex0x"
                id="ETM@ETMCCR@NC"
                offset="[15:13]"/>
         <field description="Sequencer present. The value of this bit is 0, indicating that the sequencer is not implemented."
                format="hex0x"
                id="ETM@ETMCCR@SP"
                offset="[16]"/>
         <field description="Number of external inputs. The value of these bits is between b000 and b010, indicating the number of external inputs, from 0 to 2, implemented in the system."
                format="hex0x"
                id="ETM@ETMCCR@NEI"
                offset="[19:17]"/>
         <field description="Number of external outputs. The value of these bits is b000, indicating that no external outputs are supported."
                format="hex0x"
                id="ETM@ETMCCR@NEO"
                offset="[22:20]"/>
         <field description="FIFOFULL logic present. The value of this bit is 1, indicating that FIFOFULL logic is present in the ETM. To use FIFOFULL the system must also support the function, as indicated by bit [8] of ETMSCR."
                format="hex0x"
                id="ETM@ETMCCR@FFLP"
                offset="[23]"/>
         <field description="Number of Context ID comparators. The value of these bits is b00, indicating that Context ID comparators are not implemented."
                format="hex0x"
                id="ETM@ETMCCR@NCIDC"
                offset="[25:24]"/>
         <field description="Trace start/stop block present. The value of this bit is 1, indicating that the Trace start/stop block is present."
                format="hex0x"
                id="ETM@ETMCCR@TSSBP"
                offset="[26]"/>
         <field description="Coprocessor and memory access. The value of this bit is 1, indicating that memory-mapped access to registers is supported."
                format="hex0x"
                id="ETM@ETMCCR@CMA"
                offset="[27]"/>
         <field description="The value of this bit is 1, indicating that the ETMIDR, register 0x79, is present and defines the ETM architecture version in use."
                format="hex0x"
                id="ETM@ETMCCR@ETMIDRP"
                offset="[31]"/>
      </register>
      <register description="Trigger Event Register" format="hex0x" id="ETM@ETMTRIGGER"
                offset="0x8"
                size="4">
         <field description="Trigger event" format="hex0x" id="ETM@ETMTRIGGER@TriggerEvent"
                offset="[16:0]"/>
      </register>
      <register description="ETM Status Register" format="hex0x" id="ETM@ETMSR" offset="0x10"
                size="4">
         <field description="Untraced overflow flag. If set to 1, there is an overflow that has not yet been traced. This bit is cleared to 0 when either: - trace is restarted - the ETM Power Down bit, bit [0] of the ETM Control Register, 0x00, is set to 1. Note: Setting or clearing the ETM programming bit does not cause this bit to be cleared to 0."
                format="hex0x"
                id="ETM@ETMSR@UOF"
                offset="[0]"/>
         <field description="ETM programming bit value (Progbit). The current effective value of the ETM Programming bit (ETM Control Register bit [10]). Tou must wait for this bit to go to 1 before you start to program the ETM."
                format="hex0x"
                id="ETM@ETMSR@Progbit"
                offset="[1]"/>
         <field description="Holds the current status of the trace start/stop resource. If set to 1, it indicates that a trace on address has been matched, without a corresponding trace off address match."
                format="hex0x"
                id="ETM@ETMSR@Status"
                offset="[2]"/>
         <field description="Trigger bit. Set when the trigger occurs, and prevents the trigger from being output until the ETM is next programmed."
                format="hex0x"
                id="ETM@ETMSR@Trigger"
                offset="[3]"/>
      </register>
      <register description="System Configuration Register" format="hex0x" id="ETM@ETMSCR"
                offset="0x14"
                readOnly="true"
                size="4">
         <field description="Maximum ETM port size bits [2:0]. These bits are used in conjunction with bit [9]. The value of these bits is b001."
                format="hex0x"
                id="ETM@ETMSCR@MaximumPortSize"
                offset="[2:0]"/>
         <field description="FIFOFULL supported. The value of this bit is 1, indicating that FIFOFULL is supported. This bit is used in conjunction with bit [23] of the ETMCCR."
                format="hex0x"
                id="ETM@ETMSCR@FIFOFULLsupported"
                offset="[8]"/>
         <field description="Maximum ETM port size bit [3]. This bit is used in conjunction with bits [2:0]. Its value is 0. This has no effect on the TPIU trace port."
                format="hex0x"
                id="ETM@ETMSCR@MaximumPortSize3"
                offset="[9]"/>
         <field description="Port size supported. This bit reads as 1 if the currently selected port size is supported. This has no effect on the TPIU trace port."
                format="hex0x"
                id="ETM@ETMSCR@PortSizeSupported"
                offset="[10]"/>
         <field description="Port mode supported. This bit reads as 1 if the currently selected port mode is supported. This has no effect on the TPIU trace port."
                format="hex0x"
                id="ETM@ETMSCR@PortModeSupported"
                offset="[11]"/>
         <field description="These bits give the number of supported processors minus 1. The value of these bits is b000, indicating that there is only one processor connected."
                format="hex0x"
                id="ETM@ETMSCR@N"
                offset="[14:12]"/>
         <field description="No Fetch comparisons. The value of this bit is 1, indicating that fetch comparisons are not implemented."
                format="hex0x"
                id="ETM@ETMSCR@NoFetchComparisons"
                offset="[17]"/>
      </register>
      <register description="Trace Enable Event Register" format="hex0x" id="ETM@ETMEEVR"
                offset="0x20"
                size="4">
         <field description="Trace Enable event." format="hex0x"
                id="ETM@ETMEEVR@TraceEnableEvent"
                offset="[16:0]"/>
      </register>
      <register description="Trace Enable Control 1 Register" format="hex0x" id="ETM@ETMTECR1"
                offset="0x24"
                size="4">
         <field description="Trace start/stop enable. The trace start/stop resource, resource 0x5F, is unaffected by the value of this bit."
                format="enum"
                enum="d1e186944"
                id="ETM@ETMTECR1@TraceControlEnable"
                offset="[25]"/>
      </register>
      <register description="FIFOFULL Level Register" format="hex0x" id="ETM@ETMFFLR"
                offset="0x28"
                size="4">
         <field description="FIFO full level. The number of bytes left in FIFO, below which the FIFOFULL or SupressData signal is asserted. For example, setting this value to 15 causes data trace suppression or processor stalling, if enabled, when there are less than 15 free bytes in the FIFO."
                format="hex0x"
                id="ETM@ETMFFLR@FIFOFullLevel"
                offset="[7:0]"/>
      </register>
      <register description="Free-running counter reload value" format="hex0x"
                id="ETM@ETMCNTRLDVR1"
                offset="0x140"
                size="4">
         <field description="Initial count." format="hex0x" id="ETM@ETMCNTRLDVR1@IntitialCount"
                offset="[15:0]"/>
      </register>
      <register description="Synchronization Frequency Register" format="hex0x"
                id="ETM@ETMSYNCFR"
                offset="0x1e0"
                readOnly="true"
                size="4">
         <field description="Synchronization frequency. Default value is 1024." format="hex0x"
                id="ETM@ETMSYNCFR@SyncFrequency"
                offset="[11:0]"/>
      </register>
      <register description="ID Register" format="hex0x" id="ETM@ETMIDR" offset="0x1e4"
                readOnly="true"
                size="4">
         <field description="Implementation revision. The value of these bits is b0000, indicating implementation revision, 0."
                format="hex0x"
                id="ETM@ETMIDR@ImplementationRevision"
                offset="[3:0]"/>
         <field description="Minor ETM architecture version. The value of these bits is 0b0101, indicating minor architecture version number 5."
                format="hex0x"
                id="ETM@ETMIDR@MinorETMarchitectureVersion"
                offset="[7:4]"/>
         <field description="Major ETM architecture version. The value of these bits is 0b0010, indicating major architecture version number 3, ETMv3."
                format="hex0x"
                id="ETM@ETMIDR@MajorETMarchitectureVersion"
                offset="[11:8]"/>
         <field description="Processor family. The value of these bits is 0b1111, indicating that the processor family is not identified in this register."
                format="hex0x"
                id="ETM@ETMIDR@ProcessorFamily"
                offset="[15:12]"/>
         <field description="Load PC first. The value of this bit is 0, indicating that data tracing is not supported."
                format="hex0x"
                id="ETM@ETMIDR@LoadPCfirst"
                offset="[16]"/>
         <field description="32-bit Thumb instruction tracing. The value of this bit is 1, indicating that a 32-bit Thumb instruction is traced as a single instruction."
                format="enum"
                enum="d1e187247"
                id="ETM@ETMIDR@ThumbInstructionTracing"
                offset="[18]"/>
         <field description="Security Extensions support. The value of this bit is 0, indicating that the ETM behaves as if the processor is in Secure state at all times."
                format="enum"
                enum="d1e187293"
                id="ETM@ETMIDR@SecurityExtensionSupport"
                offset="[19]"/>
         <field description="Branch packet encoding. The value of this bit is 1, indicating that alternative branch packet encoding is implemented."
                format="enum"
                enum="d1e187339"
                id="ETM@ETMIDR@BranchPacketEncoding"
                offset="[20]"/>
         <field description="Implementor code. These bits identify ARM as the implementor of the processor. The value of these bits is 01000001."
                format="hex0x"
                id="ETM@ETMIDR@ImplementorCode"
                offset="[31:24]"/>
      </register>
      <register description="Configuration Code Extension Register" format="hex0x"
                id="ETM@ETMCCER"
                offset="0x1e8"
                readOnly="true"
                size="4">
         <field description="Extended external input selectors. The value of these bits is 0, indicating that extended external input selectors are not implemented."
                format="hex0x"
                id="ETM@ETMCCER@ExtendedExternalInputSelectors"
                offset="[2:0]"/>
         <field description="Extended external input bus. The value of these bits is 0, indicating that the extended external input bus is not implemented."
                format="hex0x"
                id="ETM@ETMCCER@ExtendedExternalInputBus"
                offset="[10:3]"/>
         <field description="Readable registers. The value of this bit is 1, indicating that all registers are readable."
                format="hex0x"
                id="ETM@ETMCCER@ReadableRegisters"
                offset="[11]"/>
         <field description="Data address comparisons. The value of this bit is 1, indicating that data address comparisons are not supported."
                format="hex0x"
                id="ETM@ETMCCER@DataAddressComparisons"
                offset="[12]"/>
         <field description="Instrumentation resources. The value of these bits is 0b000, indicating that no Instrumentation resources are supported."
                format="hex0x"
                id="ETM@ETMCCER@InstrumentationResources"
                offset="[15:13]"/>
         <field description="EmbeddedICE watchpoint inputs. The value of these bits is 0b0100, indicating that the number of EmbeddedICE watchpoint inputs implemented is four. These inputs come from the DWT."
                format="hex0x"
                id="ETM@ETMCCER@EmbeddedICEwatchpointInputs"
                offset="[19:16]"/>
         <field description="Trace Start/Stop block uses EmbeddedICE watchpoint inputs. The value of this bit is 1, indicating that the Trace Start/Stop block uses the EmbeddedICE watchpoint inputs."
                format="hex0x"
                id="ETM@ETMCCER@TraceStartStopBlockUsesEmbeddedICEwatchpointInputs"
                offset="[20]"/>
         <field description="EmbeddedICE behavior control implemented. The value of this bit is 0, indicating that the ETMEIBCR is not implemented."
                format="hex0x"
                id="ETM@ETMCCER@EmbeddedICEbehaviorControlImplemented"
                offset="[21]"/>
         <field description="Timestamping implemented. This bit is set to 1, indicating that timestamping is implemented."
                format="hex0x"
                id="ETM@ETMCCER@TimestampingImplemented"
                offset="[22]"/>
         <field description="Reduced function counter. Set to 1 to indicate that Counter 1 is a reduced function counter."
                format="hex0x"
                id="ETM@ETMCCER@ReducedFunctionCounter"
                offset="[27]"/>
         <field description="Timestamp encoding. Set to 1 to indicate that the timestamp is encoded as a natural binary number."
                format="hex0x"
                id="ETM@ETMCCER@TimestampEncoding"
                offset="[28]"/>
         <field description="Timestamp size. Set to 0 to indicate a size of 48 bits."
                format="hex0x"
                id="ETM@ETMCCER@TimestampSize"
                offset="[29]"/>
      </register>
      <register description="TraceEnable Start/Stop EmbeddedICE Control Register"
                format="hex0x"
                id="ETM@ETMTESSEICR"
                offset="0x1f0"
                size="4">
         <field description="Start resource selection. Setting any of these bits to 1 selects the corresponding EmbeddedICE watchpoint input as a TraceEnable start resource. Bit [0] corresponds to input 1, bit [1] corresponds to input 2, bit [2] corresponds to input 3, and bit [3] corresponds to input 4."
                format="hex0x"
                id="ETM@ETMTESSEICR@StartResourceSelection"
                offset="[3:0]"/>
         <field description="Stop resource selection. Setting any of these bits to 1 selects the corresponding EmbeddedICE watchpoint input as a TraceEnable stop resource. Bit [16] corresponds to input 1, bit [17] corresponds to input 2, bit [18] corresponds to input 3, and bit [19] corresponds to input 4."
                format="hex0x"
                id="ETM@ETMTESSEICR@StopResourceSelection"
                offset="[19:16]"/>
      </register>
      <register description="Timestamp Event Register" format="hex0x" id="ETM@ETMTSEVR"
                offset="0x1f8"
                size="4">
         <field description="Timestamp event." format="hex0x" id="ETM@ETMTSEVR@TimestampEvent"
                offset="[11:0]"/>
      </register>
      <register description="CoreSight Trace ID Register" format="hex0x" id="ETM@ETMTRACEIDR"
                offset="0x200"
                size="4">
         <field description="Trace ID to output onto the trace bus. On an ETM reset this field is cleared to 0x00."
                format="hex0x"
                id="ETM@ETMTRACEIDR@TraceID"
                offset="[6:0]"/>
      </register>
      <register description="ETM ID Register 2" format="hex0x" id="ETM@ETMIDR2" offset="0x208"
                readOnly="true"
                size="4"/>
      <register description="Device Power-Down Status Register" format="hex0x" id="ETM@ETMPDSR"
                offset="0x314"
                readOnly="true"
                size="4">
         <field description="The value of this bit indicates whether you can access the ETM Trace Registers. The value of this bit is always 1, indicating that the ETM Trace Registers can be accessed."
                format="hex0x"
                id="ETM@ETMPDSR@ETMpoweredup"
                offset="[0]"/>
      </register>
      <register description="Integration Test Miscelaneous Inputs Register" format="hex0x"
                id="ETM@ETM-ITMISCIN"
                offset="0xee0"
                readOnly="true"
                size="4">
         <field description="A read of these bits returns the value of the EXTIN[1:0] input pins."
                format="hex0x"
                id="ETM@ETM-ITMISCIN@EXTIN"
                offset="[1:0]"/>
         <field description="A read of this bit returns the value of the COREHALT input pin."
                format="hex0x"
                id="ETM@ETM-ITMISCIN@COREHALT"
                offset="[4]"/>
      </register>
      <register description="Integration Test Trigger Out Register" format="hex0x"
                id="ETM@ETM-ITTRIGOUT"
                offset="0xee8"
                size="4">
         <field description="A write to this bit sets the TRIGGER output." format="hex0x"
                id="ETM@ETM-ITTRIGOUT@TRIGGER"
                offset="[0]"/>
      </register>
      <register description="ETM Integration Test ATB Control 2 Register" format="hex0x"
                id="ETM@ETM-ITATBCTR2"
                offset="0xef0"
                readOnly="true"
                size="4">
         <field description="A read of this bit returns the value of the ETM ATREADY input."
                format="hex0x"
                id="ETM@ETM-ITATBCTR2@ATREADY"
                offset="[0]"/>
      </register>
      <register description="ETM Integration Test ATB Control 0 Register" format="hex0x"
                id="ETM@ETM-ITATBCTR0"
                offset="0xef8"
                size="4">
         <field description="A write to this bit sets the value of the ETM ATVALID output."
                format="hex0x"
                id="ETM@ETM-ITATBCTR0@ATVALID"
                offset="[0]"/>
      </register>
      <register description="Integration Mode Control Register" format="hex0x"
                id="ETM@ETMITCTRL"
                offset="0xf00"
                size="4">
         <field description="Enable integration mode. When this bit is set to 1, the device enters integration mode to enable Topology Detection or Integration Testing to be checked. On an ETM reset this bit is cleared to 0."
                format="hex0x"
                id="ETM@ETMITCTRL@Mode"
                offset="[0]"/>
      </register>
      <register description="Claim Tag Set Register" format="hex0x" id="ETM@ETMCLAIMSET"
                offset="0xfa0"
                size="4">
         <field description="A bit programmable register bank which sets the Claim Tag Value. Write 1 to set the bit in the claim tag. A read will return a logic 1 for all implemented locations."
                format="hex0x"
                id="ETM@ETMCLAIMSET@CLAIMSET"
                offset="[3:0]"/>
      </register>
      <register description="Claim Tag Clear Register" format="hex0x" id="ETM@ETMCLAIMCLR"
                offset="0xfa4"
                size="4">
         <field description="A bit programmable register bank that is zero at reset. Write 1 to clear the bit in the claim tag. On reads, returns the current setting of the claim tag."
                format="hex0x"
                id="ETM@ETMCLAIMCLR@CLAIMCLR"
                offset="[3:0]"/>
      </register>
      <register description="Lock Access Register" format="hex0x" id="ETM@ETMLAR"
                offset="0xfb0"
                size="4">
         <field description="Write Access Code. A write of 0xC5ACCE55 enables further write access to this device. An invalid write will have the affect of removing write access."
                format="hex0x"
                id="ETM@ETMLAR@WriteAccessCode"
                offset="[31:0]"/>
      </register>
      <register description="Lock Status Register" format="hex0x" id="ETM@ETMLSR"
                offset="0xfb4"
                readOnly="true"
                size="4">
         <field description="Lock mechanism is implemented. This bit always reads 1."
                format="hex0x"
                id="ETM@ETMLSR@IMP"
                offset="[0]"/>
         <field description="Lock Status. This bit is HIGH when the device is locked, and LOW when unlocked."
                format="enum"
                enum="d1e188311"
                id="ETM@ETMLSR@STATUS"
                offset="[1]"/>
         <field description="Access Lock Register size. This bit reads 0 to indicate a 32-bit register is present."
                format="hex0x"
                id="ETM@ETMLSR@s8BIT"
                offset="[2]"/>
      </register>
      <register description="Authentication Status Register" format="hex0x"
                id="ETM@ETMAUTHSTATUS"
                offset="0xfb8"
                readOnly="true"
                size="4">
         <field description="Reads as b00, Non-secure invasive debug not supported by the ETM."
                format="hex0x"
                id="ETM@ETMAUTHSTATUS@NSID"
                offset="[1:0]"/>
         <field description="Permission for Non-secure non-invasive debug." format="enum"
                enum="d1e188421"
                id="ETM@ETMAUTHSTATUS@NSNID"
                offset="[3:2]"/>
         <field description="Reads as b00, Secure invasive debug not supported by the ETM."
                format="hex0x"
                id="ETM@ETMAUTHSTATUS@SID"
                offset="[5:4]"/>
         <field description="Permission for Secure non-invasive debug." format="hex0x"
                id="ETM@ETMAUTHSTATUS@SNID"
                offset="[7:6]"/>
      </register>
      <register description="CoreSight Device Type Register" format="hex0x" id="ETM@ETMDEVTYPE"
                offset="0xfcc"
                readOnly="true"
                size="4">
         <field description="Major Type and Class" format="enum" enum="d1e188531"
                id="ETM@ETMDEVTYPE@MajorType"
                offset="[3:0]"/>
         <field description="Sub Type" format="enum" enum="d1e188565"
                id="ETM@ETMDEVTYPE@SubType"
                offset="[7:4]"/>
      </register>
      <register description="Peripheral Identification Register 4" format="hex0x"
                id="ETM@ETMPIDR4"
                offset="0xfd0"
                readOnly="true"
                size="4">
         <field description="JEP106 continuation code." format="hex0x" id="ETM@ETMPIDR4@JEP106"
                offset="[3:0]"/>
         <field description="4KB Count" format="hex0x" id="ETM@ETMPIDR4@c4KB" offset="[7:4]"/>
      </register>
      <register description="Peripheral Identification Register 5" format="hex0x"
                id="ETM@ETMPIDR5"
                offset="0xfd4"
                readOnly="true"
                size="4"/>
      <register description="Peripheral Identification Register 6" format="hex0x"
                id="ETM@ETMPIDR6"
                offset="0xfd8"
                readOnly="true"
                size="4"/>
      <register description="Peripheral Identification Register 7" format="hex0x"
                id="ETM@ETMPIDR7"
                offset="0xfdc"
                readOnly="true"
                size="4"/>
      <register description="Peripheral Identification Register 0" format="hex0x"
                id="ETM@ETMPIDR0"
                offset="0xfe0"
                readOnly="true"
                size="4">
         <field description="Part Number [7:0]" format="hex0x" id="ETM@ETMPIDR0@PartNumber"
                offset="[7:0]"/>
      </register>
      <register description="Peripheral Identification Register 1" format="hex0x"
                id="ETM@ETMPIDR1"
                offset="0xfe4"
                readOnly="true"
                size="4">
         <field description="Part Number [11:8]" format="hex0x" id="ETM@ETMPIDR1@PartNumber"
                offset="[3:0]"/>
         <field description="JEP106 identity code [3:0]" format="hex0x"
                id="ETM@ETMPIDR1@JEP106-identity-code"
                offset="[7:4]"/>
      </register>
      <register description="Peripheral Identification Register 2" format="hex0x"
                id="ETM@ETMPIDR2"
                offset="0xfe8"
                readOnly="true"
                size="4">
         <field description="JEP106 identity code [6:4]" format="hex0x"
                id="ETM@ETMPIDR2@JEP106-identity-code"
                offset="[2:0]"/>
         <field description="Revision" format="hex0x" id="ETM@ETMPIDR2@Revision" offset="[7:4]"/>
      </register>
      <register description="Peripheral Identification Register 3" format="hex0x"
                id="ETM@ETMPIDR3"
                offset="0xfec"
                readOnly="true"
                size="4">
         <field description="Customer Modified." format="hex0x"
                id="ETM@ETMPIDR3@CustomerModified"
                offset="[3:0]"/>
         <field description="RevAnd" format="hex0x" id="ETM@ETMPIDR3@RevAnd" offset="[7:4]"/>
      </register>
      <register description="Component Identification Register 0" format="hex0x"
                id="ETM@ETMCIDR0"
                offset="0xff0"
                readOnly="true"
                size="4">
         <field description="Preamble" format="hex0x" id="ETM@ETMCIDR0@Preamble" offset="[7:0]"/>
      </register>
      <register description="Component Identification Register 1" format="hex0x"
                id="ETM@ETMCIDR1"
                offset="0xff4"
                readOnly="true"
                size="4">
         <field description="Preamble" format="hex0x" id="ETM@ETMCIDR1@Preamble" offset="[3:0]"/>
         <field description="Component class" format="enum" enum="d1e189070"
                id="ETM@ETMCIDR1@ComponentClass"
                offset="[7:4]"/>
      </register>
      <register description="Component Identification Register 2" format="hex0x"
                id="ETM@ETMCIDR2"
                offset="0xff8"
                readOnly="true"
                size="4">
         <field description="Preamble" format="hex0x" id="ETM@ETMCIDR2@Preamble" offset="[7:0]"/>
      </register>
      <register description="Component Identification Register 3" format="hex0x"
                id="ETM@ETMCIDR3"
                offset="0xffc"
                readOnly="true"
                size="4">
         <field description="Preamble" format="hex0x" id="ETM@ETMCIDR3@Preamble" offset="[7:0]"/>
      </register>
   </peripheral>
</System>